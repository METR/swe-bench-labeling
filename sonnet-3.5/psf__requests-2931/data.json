{"instance_id": "psf__requests-2931", "score": "I", "diff": "diff --git a/requests/models.py b/requests/models.py\nindex 9c624d3c..8bce13cd 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -80,8 +80,10 @@ class RequestEncodingMixin(object):\n         if parameters are supplied as a dict.\n         \"\"\"\n \n-        if isinstance(data, (str, bytes)):\n+        if isinstance(data, str):\n             return to_native_string(data)\n+        elif isinstance(data, bytes):\n+            return data\n         elif hasattr(data, 'read'):\n             return data\n         elif hasattr(data, '__iter__'):\n", "gold_standard_diff": "From fc8fa1aa265bb14d59c68eb68a179bce17953967 Mon Sep 17 00:00:00 2001\nFrom: Cory Benfield <lukasaoz@gmail.com>\nDate: Wed, 16 Dec 2015 14:56:13 +0000\nSubject: [PATCH] Fix regression from #2844 regarding binary bodies.\n\n---\n requests/models.py | 5 ++++-\n test_requests.py   | 5 +++++\n 2 files changed, 9 insertions(+), 1 deletion(-)\n\ndiff --git a/requests/models.py b/requests/models.py\nindex 9c624d3c11..4bcbc5484a 100644\n--- a/requests/models.py\n+++ b/requests/models.py\n@@ -81,7 +81,7 @@ def _encode_params(data):\n         \"\"\"\n \n         if isinstance(data, (str, bytes)):\n-            return to_native_string(data)\n+            return data\n         elif hasattr(data, 'read'):\n             return data\n         elif hasattr(data, '__iter__'):\n@@ -385,6 +385,9 @@ def prepare_url(self, url, params):\n             if isinstance(fragment, str):\n                 fragment = fragment.encode('utf-8')\n \n+        if isinstance(params, (str, bytes)):\n+            params = to_native_string(params)\n+\n         enc_params = self._encode_params(params)\n         if enc_params:\n             if query:\ndiff --git a/test_requests.py b/test_requests.py\nindex 137edc0864..0795241867 100755\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -157,6 +157,11 @@ def test_params_bytes_are_encoded(self):\n                                    params=b'test=foo').prepare()\n         assert request.url == 'http://example.com/?test=foo'\n \n+    def test_binary_put(self):\n+        request = requests.Request('PUT', 'http://example.com',\n+                                   data=u\"\u00f6\u00f6\u00f6\".encode(\"utf-8\")).prepare()\n+        assert isinstance(request.body, bytes)\n+\n     def test_mixed_case_scheme_acceptable(self, httpbin):\n         s = requests.Session()\n         s.proxies = getproxies()\n", "gold_standard_pr_link": "https://github.com/psf/requests/pull/2931"}