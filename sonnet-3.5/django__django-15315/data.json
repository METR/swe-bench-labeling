{"instance_id": "django__django-15315", "score": "C", "diff": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 88c9ca9f28..fcea1597ef 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -542,11 +542,7 @@ class Field(RegisterLookupMixin):\n         return NotImplemented\n \n     def __hash__(self):\n-        return hash((\n-            self.creation_counter,\n-            self.model._meta.app_label if hasattr(self, 'model') else None,\n-            self.model._meta.model_name if hasattr(self, 'model') else None,\n-        ))\n+        return hash(self.creation_counter)\n \n     def __deepcopy__(self, memodict):\n         # We don't have to deepcopy very much here, since most things are not\ndiff --git a/test_field_hash.py b/test_field_hash.py\nnew file mode 100644\nindex 0000000000..03ce858155\n--- /dev/null\n+++ b/test_field_hash.py\n@@ -0,0 +1,34 @@\n+\n+import os\n+from django.conf import settings\n+from django.db import models\n+\n+# Configure Django settings\n+settings.configure(\n+    INSTALLED_APPS=[\n+        \"django.contrib.contenttypes\",\n+        \"django.contrib.auth\",\n+    ],\n+    DATABASES={\n+        \"default\": {\n+            \"ENGINE\": \"django.db.backends.sqlite3\",\n+            \"NAME\": \":memory:\",\n+        }\n+    },\n+)\n+\n+import django\n+django.setup()\n+\n+# Test code\n+f = models.CharField(max_length=200)\n+d = {f: 1}\n+\n+class Book(models.Model):\n+    title = f\n+\n+    class Meta:\n+        app_label = 'test_app'\n+\n+assert f in d\n+print(\"Test passed successfully!\")\n\\ No newline at end of file\n", "gold_standard_diff": "From fdfa97fb166ef5065aa2b229f19cb4ce303084e5 Mon Sep 17 00:00:00 2001\nFrom: Adam Johnson <me@adamj.eu>\nDate: Thu, 13 Jan 2022 18:51:18 +0000\nSubject: [PATCH] Fixed #33441 -- Restored immutability of\n models.Field.__hash__().\n\nRegression in 502e75f9ed5476ffe8229109acf0c23999d4b533.\n---\n django/db/models/fields/__init__.py |  6 +-----\n tests/model_fields/tests.py         | 11 ++++++++---\n 2 files changed, 9 insertions(+), 8 deletions(-)\n\ndiff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 88c9ca9f2849..fcea1597efda 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -542,11 +542,7 @@ def __lt__(self, other):\n         return NotImplemented\n \n     def __hash__(self):\n-        return hash((\n-            self.creation_counter,\n-            self.model._meta.app_label if hasattr(self, 'model') else None,\n-            self.model._meta.model_name if hasattr(self, 'model') else None,\n-        ))\n+        return hash(self.creation_counter)\n \n     def __deepcopy__(self, memodict):\n         # We don't have to deepcopy very much here, since most things are not\ndiff --git a/tests/model_fields/tests.py b/tests/model_fields/tests.py\nindex 5208b40dc9d1..86365989f0c3 100644\n--- a/tests/model_fields/tests.py\n+++ b/tests/model_fields/tests.py\n@@ -128,9 +128,14 @@ class InheritAbstractModel2(AbstractModel):\n         self.assertLess(abstract_model_field, inherit2_model_field)\n         self.assertLess(inherit1_model_field, inherit2_model_field)\n \n-        self.assertNotEqual(hash(abstract_model_field), hash(inherit1_model_field))\n-        self.assertNotEqual(hash(abstract_model_field), hash(inherit2_model_field))\n-        self.assertNotEqual(hash(inherit1_model_field), hash(inherit2_model_field))\n+    def test_hash_immutability(self):\n+        field = models.IntegerField()\n+        field_hash = hash(field)\n+\n+        class MyModel(models.Model):\n+            rank = field\n+\n+        self.assertEqual(field_hash, hash(field))\n \n \n class ChoicesTests(SimpleTestCase):\n", "gold_standard_pr_link": "https://github.com/django/django/pull/15315"}