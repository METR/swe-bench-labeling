{"instance_id": "sympy__sympy-19346", "score": "C", "diff": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex c936a692c0..c4707627a5 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -38,6 +38,10 @@ def emptyPrinter(self, expr):\n             return expr\n         elif hasattr(expr, \"__srepr__\"):\n             return expr.__srepr__()\n+        elif isinstance(expr, dict):\n+            return \"{%s}\" % \", \".join(f\"{self._print(k)}: {self._print(v)}\" for k, v in expr.items())\n+        elif isinstance(expr, set):\n+            return \"{%s}\" % \", \".join(self._print(item) for item in expr)\n         elif hasattr(expr, \"args\") and hasattr(expr.args, \"__iter__\"):\n             l = []\n             for o in expr.args:\ndiff --git a/test_srepr.py b/test_srepr.py\nnew file mode 100644\nindex 0000000000..a5ec2af417\n--- /dev/null\n+++ b/test_srepr.py\n@@ -0,0 +1,13 @@\n+from sympy import srepr\n+from sympy.abc import x, y\n+\n+# Test list and tuple\n+print(srepr([x, y]))\n+print(srepr((x, y)))\n+\n+# Test dict and set\n+print(srepr({x, y}))\n+print(srepr({x: y}))\n+\n+# Test mixed types\n+print(srepr({x: [y, {x}], (x, y): {x, y}}))\n", "gold_standard_diff": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex c936a692c0cd..04cfee5c3e61 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -144,6 +144,16 @@ def _print_EmptySequence(self, expr):\n     def _print_list(self, expr):\n         return \"[%s]\" % self.reprify(expr, \", \")\n \n+    def _print_dict(self, expr):\n+        sep = \", \"\n+        dict_kvs = [\"%s: %s\" % (self.doprint(key), self.doprint(value)) for key, value in expr.items()]\n+        return \"{%s}\" % sep.join(dict_kvs)\n+\n+    def _print_set(self, expr):\n+        if not expr:\n+            return \"set()\"\n+        return \"{%s}\" % self.reprify(expr, \", \")\n+\n     def _print_MatrixBase(self, expr):\n         # special case for some empty matrices\n         if (expr.rows == 0) ^ (expr.cols == 0):\ndiff --git a/sympy/printing/tests/test_repr.py b/sympy/printing/tests/test_repr.py\nindex f749683ff743..d3298da71dfd 100644\n--- a/sympy/printing/tests/test_repr.py\n+++ b/sympy/printing/tests/test_repr.py\n@@ -318,3 +318,26 @@ def test_diffgeom():\n     assert srepr(rect) == \"CoordSystem('rect', Patch('P', Manifold('M', 2)), ('rect_0', 'rect_1'))\"\n     b = BaseScalarField(rect, 0)\n     assert srepr(b) == \"BaseScalarField(CoordSystem('rect', Patch('P', Manifold('M', 2)), ('rect_0', 'rect_1')), Integer(0))\"\n+\n+def test_dict():\n+    from sympy import srepr\n+    from sympy.abc import x, y, z\n+    d = {}\n+    assert srepr(d) == \"{}\"\n+    d = {x: y}\n+    assert srepr(d) == \"{Symbol('x'): Symbol('y')}\"\n+    d = {x: y, y: z}\n+    assert srepr(d) in (\n+        \"{Symbol('x'): Symbol('y'), Symbol('y'): Symbol('z')}\",\n+        \"{Symbol('y'): Symbol('z'), Symbol('x'): Symbol('y')}\",\n+    )\n+    d = {x: {y: z}}\n+    assert srepr(d) == \"{Symbol('x'): {Symbol('y'): Symbol('z')}}\"\n+\n+def test_set():\n+    from sympy import srepr\n+    from sympy.abc import x, y\n+    s = set()\n+    assert srepr(s) == \"set()\"\n+    s = {x, y}\n+    assert srepr(s) in (\"{Symbol('x'), Symbol('y')}\", \"{Symbol('y'), Symbol('x')}\")\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/19346"}