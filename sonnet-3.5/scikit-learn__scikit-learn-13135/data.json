{"instance_id": "scikit-learn__scikit-learn-13135", "score": "I", "diff": "diff --git a/sklearn/preprocessing/tests/test_discretization.py b/sklearn/preprocessing/tests/test_discretization.py\nindex c2e307e85..958c8ae46 100644\n--- a/sklearn/preprocessing/tests/test_discretization.py\n+++ b/sklearn/preprocessing/tests/test_discretization.py\n@@ -97,6 +97,21 @@ def test_fit_transform_n_bins_array(strategy, expected):\n     assert est.bin_edges_.shape == (n_features, )\n     for bin_edges, n_bins in zip(est.bin_edges_, est.n_bins_):\n         assert bin_edges.shape == (n_bins + 1, )\n+def test_nonuniform_strategies_with_5_bins():\n+    X = np.array([0, 0.5, 2, 3, 9, 10]).reshape(-1, 1)\n+\n+    for strategy in ('uniform', 'quantile', 'kmeans'):\n+        est = KBinsDiscretizer(n_bins=5, encode='ordinal', strategy=strategy)\n+        Xt = est.fit_transform(X)\n+        assert Xt.shape == X.shape\n+        assert Xt.max() == 4  # 5 bins, so maximum bin index is 4\n+        assert Xt.min() == 0  # minimum bin index is 0\n+\n+        # Check that bin edges are sorted\n+        assert np.all(np.diff(est.bin_edges_[0]) > 0)\n+\n+        # Check that transform doesn't raise any errors\n+        est.transform(X)\n \n \n def test_invalid_n_features():\n", "gold_standard_diff": "From 32837055a077b9e3b79183660098a57e4a858aba Mon Sep 17 00:00:00 2001\nFrom: SandroCasagrande <SandroCasagrande@users.noreply.github.com>\nDate: Mon, 11 Feb 2019 21:52:03 +0100\nSubject: [PATCH] Test and fix to ensure sorted bin_edges from kmeans strategy\n of KBinsDiscretizer\n\n---\n doc/whats_new/v0.20.rst                          |  4 ++++\n sklearn/preprocessing/_discretization.py         |  2 ++\n .../preprocessing/tests/test_discretization.py   | 16 +++++++++++-----\n 3 files changed, 17 insertions(+), 5 deletions(-)\n\ndiff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst\nindex 3483b173dcb16..4daae88572b48 100644\n--- a/doc/whats_new/v0.20.rst\n+++ b/doc/whats_new/v0.20.rst\n@@ -55,6 +55,10 @@ Changelog\n :mod:`sklearn.preprocessing`\n ............................\n \n+- |Fix| Fixed a bug in :class:`preprocessing.KBinsDiscretizer` where\n+  ``strategy='kmeans'`` fails with an error during transformation due to unsorted\n+  bin edges. :issue:`13134` by :user:`Sandro Casagrande <SandroCasagrande>`.\n+\n - |Fix| Fixed a bug in :class:`preprocessing.OneHotEncoder` where the\n   deprecation of ``categorical_features`` was handled incorrectly in\n   combination with ``handle_unknown='ignore'``.\ndiff --git a/sklearn/preprocessing/_discretization.py b/sklearn/preprocessing/_discretization.py\nindex dd969c12b2833..35d654399dc27 100644\n--- a/sklearn/preprocessing/_discretization.py\n+++ b/sklearn/preprocessing/_discretization.py\n@@ -172,6 +172,8 @@ def fit(self, X, y=None):\n                 # 1D k-means procedure\n                 km = KMeans(n_clusters=n_bins[jj], init=init, n_init=1)\n                 centers = km.fit(column[:, None]).cluster_centers_[:, 0]\n+                # Must sort, centers may be unsorted even with sorted init\n+                centers.sort()\n                 bin_edges[jj] = (centers[1:] + centers[:-1]) * 0.5\n                 bin_edges[jj] = np.r_[col_min, bin_edges[jj], col_max]\n \ndiff --git a/sklearn/preprocessing/tests/test_discretization.py b/sklearn/preprocessing/tests/test_discretization.py\nindex c2e307e85d51e..81dc6fa5668a5 100644\n--- a/sklearn/preprocessing/tests/test_discretization.py\n+++ b/sklearn/preprocessing/tests/test_discretization.py\n@@ -185,11 +185,12 @@ def test_invalid_strategy_option():\n \n \n @pytest.mark.parametrize(\n-    'strategy, expected_2bins, expected_3bins',\n-    [('uniform', [0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 2, 2]),\n-     ('kmeans', [0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 2, 2]),\n-     ('quantile', [0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 2, 2])])\n-def test_nonuniform_strategies(strategy, expected_2bins, expected_3bins):\n+    'strategy, expected_2bins, expected_3bins, expected_5bins',\n+    [('uniform', [0, 0, 0, 0, 1, 1], [0, 0, 0, 0, 2, 2], [0, 0, 1, 1, 4, 4]),\n+     ('kmeans', [0, 0, 0, 0, 1, 1], [0, 0, 1, 1, 2, 2], [0, 0, 1, 2, 3, 4]),\n+     ('quantile', [0, 0, 0, 1, 1, 1], [0, 0, 1, 1, 2, 2], [0, 1, 2, 3, 4, 4])])\n+def test_nonuniform_strategies(\n+        strategy, expected_2bins, expected_3bins, expected_5bins):\n     X = np.array([0, 0.5, 2, 3, 9, 10]).reshape(-1, 1)\n \n     # with 2 bins\n@@ -202,6 +203,11 @@ def test_nonuniform_strategies(strategy, expected_2bins, expected_3bins):\n     Xt = est.fit_transform(X)\n     assert_array_equal(expected_3bins, Xt.ravel())\n \n+    # with 5 bins\n+    est = KBinsDiscretizer(n_bins=5, strategy=strategy, encode='ordinal')\n+    Xt = est.fit_transform(X)\n+    assert_array_equal(expected_5bins, Xt.ravel())\n+\n \n @pytest.mark.parametrize('strategy', ['uniform', 'kmeans', 'quantile'])\n @pytest.mark.parametrize('encode', ['ordinal', 'onehot', 'onehot-dense'])\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/13135"}