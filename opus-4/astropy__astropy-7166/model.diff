diff --git a/astropy/utils/misc.py b/astropy/utils/misc.py
index de3fb01d18..c39c388d06 100644
--- a/astropy/utils/misc.py
+++ b/astropy/utils/misc.py
@@ -528,14 +528,23 @@ class InheritDocstrings(type):
                 not key.startswith('_'))
 
         for key, val in dct.items():
-            if (inspect.isfunction(val) and
-                is_public_member(key) and
-                val.__doc__ is None):
-                for base in cls.__mro__[1:]:
-                    super_method = getattr(base, key, None)
-                    if super_method is not None:
-                        val.__doc__ = super_method.__doc__
-                        break
+            if is_public_member(key):
+                if inspect.isfunction(val) and val.__doc__ is None:
+                    # Handle regular methods
+                    for base in cls.__mro__[1:]:
+                        super_method = getattr(base, key, None)
+                        if super_method is not None:
+                            val.__doc__ = super_method.__doc__
+                            break
+                elif isinstance(val, property) and val.__doc__ is None:
+                    # Handle properties
+                    for base in cls.__mro__[1:]:
+                        super_prop = getattr(base, key, None)
+                        if isinstance(super_prop, property) and super_prop.__doc__ is not None:
+                            # Create a new property with the inherited docstring
+                            new_prop = property(val.fget, val.fset, val.fdel, super_prop.__doc__)
+                            setattr(cls, key, new_prop)
+                            break
 
         super().__init__(name, bases, dct)
 
