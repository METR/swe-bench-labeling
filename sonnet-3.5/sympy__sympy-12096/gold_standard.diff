From 414abfcc45447787df20ae54811ca463d05b2647 Mon Sep 17 00:00:00 2001
From: arihant parsoya <parsoyaarihant@gmail.com>
Date: Tue, 7 Feb 2017 20:48:35 +0530
Subject: [PATCH] Implemented recursive calling in _eval_evalf()

Fixes #12092 .

Enabled recursive calling of the evalf() function.

Tests are added.
---
 sympy/core/function.py                 | 2 +-
 sympy/utilities/tests/test_lambdify.py | 3 +++
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/sympy/core/function.py b/sympy/core/function.py
index 1b8005e1d230..c730d8c9c869 100644
--- a/sympy/core/function.py
+++ b/sympy/core/function.py
@@ -507,7 +507,7 @@ def _eval_evalf(self, prec):
             func = getattr(mpmath, fname)
         except (AttributeError, KeyError):
             try:
-                return Float(self._imp_(*self.args), prec)
+                return Float(self._imp_(*[i.evalf(prec) for i in self.args]), prec)
             except (AttributeError, TypeError, ValueError):
                 return
 
diff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py
index d8a1a68a2207..7c8dc3dd1034 100644
--- a/sympy/utilities/tests/test_lambdify.py
+++ b/sympy/utilities/tests/test_lambdify.py
@@ -751,6 +751,9 @@ def test_issue_2790():
     assert lambdify((x, (y, (w, z))), w + x + y + z)(1, (2, (3, 4))) == 10
     assert lambdify(x, x + 1, dummify=False)(1) == 2
 
+def test_issue_12092():
+    f = implemented_function('f', lambda x: x**2)
+    assert f(f(2)).evalf() == Float(16)
 
 def test_ITE():
     assert lambdify((x, y, z), ITE(x, y, z))(True, 5, 3) == 5
