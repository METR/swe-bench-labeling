{"instance_id": "pydata__xarray-7393", "score": "I", "diff": "diff --git a/test_stack_dtype.py b/test_stack_dtype.py\nnew file mode 100644\nindex 00000000..92ace1f7\n--- /dev/null\n+++ b/test_stack_dtype.py\n@@ -0,0 +1,16 @@\n+import xarray as xr\n+import numpy as np\n+\n+ds = xr.Dataset(coords={'a': np.array([0], dtype='i4')})\n+stacked = ds.stack(b=('a',))\n+result = ds['a'].values.dtype == stacked['a'].values.dtype\n+print(f\"Data types are the same: {result}\")\n+print(f\"Original dtype: {ds['a'].values.dtype}\")\n+print(f\"Stacked dtype: {stacked['a'].values.dtype}\")\n+print(f\"Stacked 'a' variable: {stacked['a']}\")\n+print(f\"Stacked 'a' variable dtype: {stacked['a'].dtype}\")\n+print(f\"Stacked 'a' variable values dtype: {stacked['a'].values.dtype}\")\n+print(f\"Stacked coords: {stacked.coords}\")\n+print(f\"Stacked 'b' coord: {stacked.coords['b']}\")\n+print(f\"Stacked 'b' coord dtype: {stacked.coords['b'].dtype}\")\n+print(f\"Stacked 'b' coord values dtype: {stacked.coords['b'].values.dtype}\")\ndiff --git a/xarray/core/indexes.py b/xarray/core/indexes.py\nindex f3f03c94..ce39c46f 100644\n--- a/xarray/core/indexes.py\n+++ b/xarray/core/indexes.py\n@@ -706,13 +706,37 @@ class PandasMultiIndex(PandasIndex):\n                     f\"from variable {name!r} that wraps a multi-index\"\n                 )\n \n-        split_labels, levels = zip(*[lev.factorize() for lev in level_indexes])\n+        split_labels, levels = zip(*[\n+            pd.factorize(lev, sort=True)\n+            for lev in level_indexes\n+        ])\n         labels_mesh = np.meshgrid(*split_labels, indexing=\"ij\")\n-        labels = [x.ravel() for x in labels_mesh]\n+        labels = [x.ravel().astype(variables[name].dtype) for name, x in zip(variables.keys(), labels_mesh)]\n \n-        index = pd.MultiIndex(levels, labels, sortorder=0, names=variables.keys())\n+        print(\"Debug: Original dtypes:\", {k: v.dtype for k, v in variables.items()})\n+        print(\"Debug: Levels dtypes before:\", [level.dtype for level in levels])\n+\n+        # Preserve original dtypes\n+        levels = [\n+            np.array(level, dtype=variables[name].dtype)\n+            for name, level in zip(variables.keys(), levels)\n+        ]\n+\n+        print(\"Debug: Levels dtypes after:\", [level.dtype for level in levels])\n+\n+        class CustomMultiIndex(pd.MultiIndex):\n+            @property\n+            def dtypes(self):\n+                return pd.Series({name: variables[name].dtype for name in self.names})\n+\n+        index = CustomMultiIndex(levels, labels, sortorder=0, names=variables.keys())\n         level_coords_dtype = {k: var.dtype for k, var in variables.items()}\n \n+        print(\"Debug: MultiIndex dtypes:\", index.dtypes)\n+        print(\"Debug: level_coords_dtype:\", level_coords_dtype)\n+\n+        return cls(index, dim, level_coords_dtype=level_coords_dtype)\n+\n         return cls(index, dim, level_coords_dtype=level_coords_dtype)\n \n     def unstack(self) -> tuple[dict[Hashable, Index], pd.MultiIndex]:\n", "gold_standard_diff": "From 2b0a075c1ae8b11f636eb5e814aec57eeedcc601 Mon Sep 17 00:00:00 2001\nFrom: Ian Carroll <ian.t.carroll@nasa.gov>\nDate: Mon, 19 Dec 2022 23:27:35 -0500\nSubject: [PATCH 1/3] return multiindex levels as original dtype (#7250)\n\n---\n doc/whats-new.rst            | 1 +\n xarray/core/indexing.py      | 6 +++++-\n xarray/tests/test_indexes.py | 7 +++++++\n 3 files changed, 13 insertions(+), 1 deletion(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex cd5ecd83978..65b9977fc61 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -45,6 +45,7 @@ Bug fixes\n - add a ``keep_attrs`` parameter to :py:meth:`Dataset.pad`, :py:meth:`DataArray.pad`,\n   and :py:meth:`Variable.pad` (:pull:`7267`).\n   By `Justus Magin <https://github.com/keewis>`_.\n+- Preserve original `dtype` on accessing MultiIndex levels (:issue:`7250`)\n \n Documentation\n ~~~~~~~~~~~~~\ndiff --git a/xarray/core/indexing.py b/xarray/core/indexing.py\nindex ba937183d24..e49a072df1d 100644\n--- a/xarray/core/indexing.py\n+++ b/xarray/core/indexing.py\n@@ -1531,8 +1531,12 @@ def __init__(\n         self.level = level\n \n     def __array__(self, dtype: DTypeLike = None) -> np.ndarray:\n+        if dtype is None:\n+            dtype = self.dtype\n         if self.level is not None:\n-            return self.array.get_level_values(self.level).values\n+            return np.asarray(\n+                self.array.get_level_values(self.level).values, dtype=dtype\n+            )\n         else:\n             return super().__array__(dtype)\n \ndiff --git a/xarray/tests/test_indexes.py b/xarray/tests/test_indexes.py\nindex 3ecfa73cc89..c53f3508962 100644\n--- a/xarray/tests/test_indexes.py\n+++ b/xarray/tests/test_indexes.py\n@@ -697,3 +697,10 @@ def test_safe_cast_to_index_datetime_datetime():\n     actual = safe_cast_to_index(np.array(dates))\n     assert_array_equal(expected, actual)\n     assert isinstance(actual, pd.Index)\n+\n+\n+@pytest.mark.parametrize(\"dtype\", [\"int32\", \"float32\"])\n+def test_restore_dtype_on_multiindexes(dtype):\n+    foo = xr.Dataset(coords={\"bar\": (\"bar\", np.array([0, 1], dtype=dtype))})\n+    foo = foo.stack(baz=(\"bar\",))\n+    assert str(foo[\"bar\"].values.dtype) == dtype\n\nFrom 08d5b59aa233bd9aa9754e796ee0b7cab362d3d0 Mon Sep 17 00:00:00 2001\nFrom: Ian Carroll <ian.t.carroll@nasa.gov>\nDate: Tue, 20 Dec 2022 08:57:39 -0500\nSubject: [PATCH 2/3] typing in test, contributor attribution\n\n---\n doc/whats-new.rst            | 3 ++-\n xarray/tests/test_indexes.py | 2 +-\n 2 files changed, 3 insertions(+), 2 deletions(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 65b9977fc61..39a42f089fb 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -45,7 +45,8 @@ Bug fixes\n - add a ``keep_attrs`` parameter to :py:meth:`Dataset.pad`, :py:meth:`DataArray.pad`,\n   and :py:meth:`Variable.pad` (:pull:`7267`).\n   By `Justus Magin <https://github.com/keewis>`_.\n-- Preserve original `dtype` on accessing MultiIndex levels (:issue:`7250`)\n+- Preserve original `dtype` on accessing MultiIndex levels (:issue:`7250`,\n+  :pull:`7393`). By `Ian Carroll <https://github.com/itcarroll>`_.\n \n Documentation\n ~~~~~~~~~~~~~\ndiff --git a/xarray/tests/test_indexes.py b/xarray/tests/test_indexes.py\nindex c53f3508962..caf0f51135e 100644\n--- a/xarray/tests/test_indexes.py\n+++ b/xarray/tests/test_indexes.py\n@@ -700,7 +700,7 @@ def test_safe_cast_to_index_datetime_datetime():\n \n \n @pytest.mark.parametrize(\"dtype\", [\"int32\", \"float32\"])\n-def test_restore_dtype_on_multiindexes(dtype):\n+def test_restore_dtype_on_multiindexes(dtype: str) -> None:\n     foo = xr.Dataset(coords={\"bar\": (\"bar\", np.array([0, 1], dtype=dtype))})\n     foo = foo.stack(baz=(\"bar\",))\n     assert str(foo[\"bar\"].values.dtype) == dtype\n\nFrom c3cdc5823ef1765bac37106a38b5f1c54370167f Mon Sep 17 00:00:00 2001\nFrom: Ian Carroll <carroll.ian@gmail.com>\nDate: Tue, 20 Dec 2022 09:41:13 -0500\nSubject: [PATCH 3/3] rst is not markdown\n\n---\n doc/whats-new.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 39a42f089fb..0b7fc87201b 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -45,7 +45,7 @@ Bug fixes\n - add a ``keep_attrs`` parameter to :py:meth:`Dataset.pad`, :py:meth:`DataArray.pad`,\n   and :py:meth:`Variable.pad` (:pull:`7267`).\n   By `Justus Magin <https://github.com/keewis>`_.\n-- Preserve original `dtype` on accessing MultiIndex levels (:issue:`7250`,\n+- Preserve original dtype on accessing MultiIndex levels (:issue:`7250`,\n   :pull:`7393`). By `Ian Carroll <https://github.com/itcarroll>`_.\n \n Documentation\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/7393"}