{"instance_id": "pydata__xarray-4695", "score": "I", "diff": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 32b24ef1..212501b7 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -196,6 +196,11 @@ class _LocIndexer:\n             # expand the indexer so we can handle Ellipsis\n             labels = indexing.expanded_indexer(key, self.data_array.ndim)\n             key = dict(zip(self.data_array.dims, labels))\n+        \n+        # Rename 'method' key to avoid conflicts with other methods\n+        if 'method' in key and 'method' in self.data_array.dims:\n+            key['method_dim'] = key.pop('method')\n+        \n         return self.data_array.sel(**key)\n \n     def __setitem__(self, key, value) -> None:\n@@ -204,6 +209,10 @@ class _LocIndexer:\n             labels = indexing.expanded_indexer(key, self.data_array.ndim)\n             key = dict(zip(self.data_array.dims, labels))\n \n+        # Rename 'method' key to avoid conflicts with other methods\n+        if 'method' in key and 'method' in self.data_array.dims:\n+            key['method_dim'] = key.pop('method')\n+\n         pos_indexers, _ = remap_label_indexers(self.data_array, key)\n         self.data_array[pos_indexers] = value\n \n", "gold_standard_diff": "From fbc0e01d76bace4c8f6101e6d837755d9b4a2bc5 Mon Sep 17 00:00:00 2001\nFrom: Anderson Banihirwe <axbanihirwe@ualr.edu>\nDate: Mon, 14 Dec 2020 17:22:09 -0700\nSubject: [PATCH 1/4] Fixes #2840\n\n---\n xarray/core/dataarray.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 32b24ef1f39..6316afd57f5 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -196,7 +196,7 @@ def __getitem__(self, key) -> \"DataArray\":\n             # expand the indexer so we can handle Ellipsis\n             labels = indexing.expanded_indexer(key, self.data_array.ndim)\n             key = dict(zip(self.data_array.dims, labels))\n-        return self.data_array.sel(**key)\n+        return self.data_array.sel(key)\n \n     def __setitem__(self, key, value) -> None:\n         if not utils.is_dict_like(key):\n\nFrom 406c1c98d7db3cda129bbdd4ceeaec0fcb1256e6 Mon Sep 17 00:00:00 2001\nFrom: Anderson Banihirwe <axbanihirwe@ualr.edu>\nDate: Tue, 15 Dec 2020 06:47:15 -0700\nSubject: [PATCH 2/4] Add test\n\n---\n xarray/tests/test_dataarray.py | 8 ++++++++\n 1 file changed, 8 insertions(+)\n\ndiff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py\nindex a8c62a2ce15..d114467836e 100644\n--- a/xarray/tests/test_dataarray.py\n+++ b/xarray/tests/test_dataarray.py\n@@ -1170,6 +1170,14 @@ def test_loc_single_boolean(self):\n         assert data.loc[True] == 0\n         assert data.loc[False] == 1\n \n+    def test_loc_dim_name_collision_with_sel_params(self):\n+        da = xr.DataArray(\n+            [[0, 0], [1, 1]],\n+            dims=[\"dim1\", \"method\"],\n+            coords={\"dim1\": [\"x\", \"y\"], \"method\": [\"a\", \"b\"]},\n+        )\n+        assert da.loc[dict(dim1=[\"x\", \"y\"], method=[\"a\"])] == [[0], [1]]\n+\n     def test_selection_multiindex(self):\n         mindex = pd.MultiIndex.from_product(\n             [[\"a\", \"b\"], [1, 2], [-1, -2]], names=(\"one\", \"two\", \"three\")\n\nFrom 72fbedd07df54c8b8487d2233855cec5e6240c08 Mon Sep 17 00:00:00 2001\nFrom: Anderson Banihirwe <axbanihirwe@ualr.edu>\nDate: Tue, 15 Dec 2020 06:57:53 -0700\nSubject: [PATCH 3/4] Fix test\n\n---\n xarray/tests/test_dataarray.py | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py\nindex d114467836e..f9a0af452e4 100644\n--- a/xarray/tests/test_dataarray.py\n+++ b/xarray/tests/test_dataarray.py\n@@ -1176,7 +1176,9 @@ def test_loc_dim_name_collision_with_sel_params(self):\n             dims=[\"dim1\", \"method\"],\n             coords={\"dim1\": [\"x\", \"y\"], \"method\": [\"a\", \"b\"]},\n         )\n-        assert da.loc[dict(dim1=[\"x\", \"y\"], method=[\"a\"])] == [[0], [1]]\n+        np.testing.assert_array_equal(\n+            da.loc[dict(dim1=[\"x\", \"y\"], method=[\"a\"])], [[0], [1]]\n+        )\n \n     def test_selection_multiindex(self):\n         mindex = pd.MultiIndex.from_product(\n\nFrom 26499a05f814f0ed5c29b6fac35cdbf74eefaddf Mon Sep 17 00:00:00 2001\nFrom: Anderson Banihirwe <axbanihirwe@ualr.edu>\nDate: Tue, 15 Dec 2020 06:59:53 -0700\nSubject: [PATCH 4/4] Update whats-new\n\n---\n doc/whats-new.rst | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 94a38757851..c028b1e2a29 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -32,6 +32,8 @@ Bug fixes\n ~~~~~~~~~\n \n - :py:func:`merge` with ``combine_attrs='override'`` makes a copy of the attrs (:issue:`4627`).\n+- Remove dictionary unpacking when using ``.loc`` to avoid collision with ``.sel`` parameters (:pull:`4695`).\n+  By `Anderson Banihirwe <https://github.com/andersy005>`_\n \n Documentation\n ~~~~~~~~~~~~~\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/4695"}