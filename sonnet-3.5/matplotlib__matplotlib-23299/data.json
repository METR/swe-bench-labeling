{"instance_id": "matplotlib__matplotlib-23299", "score": "I", "diff": "diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex c268a56724..d2f12aafcc 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -630,11 +630,22 @@ class RcParams(MutableMapping, dict):\n             if key in _deprecated_map:\n                 version, alt_key, alt_val, inverse_alt = _deprecated_map[key]\n                 _api.warn_deprecated(\n-                    version, name=key, obj_type=\"rcparam\", alternative=alt_key)\n-                key = alt_key\n-                val = alt_val(val)\n-            elif key in _deprecated_remain_as_none and val is not None:\n+elif key == 'backend':\n+                if val is rcsetup._auto_backend_sentinel:\n+                    if 'backend' in self:\n+                        return\n+                # Store the current Gcf.figs state\n+                from matplotlib import _pylab_helpers\n+                current_figs = dict(_pylab_helpers.Gcf.figs)\n                 version, = _deprecated_remain_as_none[key]\n+                try:\n+                    cval = self.validate[key](val)\n+                except ValueError as ve:\n+                    raise ValueError(f\"Key {key}: {ve}\") from None\n+                dict.__setitem__(self, key, cval)\n+                # Restore the Gcf.figs state\n+                _pylab_helpers.Gcf.figs.update(current_figs)\n+                return\n                 _api.warn_deprecated(version, name=key, obj_type=\"rcparam\")\n             elif key in _deprecated_ignore_map:\n                 version, alt_key = _deprecated_ignore_map[key]\n", "gold_standard_diff": "From 7fce03e84b41526c55e07ce9a1c6b8298f9809b3 Mon Sep 17 00:00:00 2001\nFrom: Thomas A Caswell <tcaswell@gmail.com>\nDate: Fri, 17 Jun 2022 21:29:36 -0400\nSubject: [PATCH 1/4] FIX/API: Do not reset rcParams['backend'] in rc_context\n\nThe motivating issue is that if the backend was the auto backend sentinel and\nthe backend was first fully resolved in an `rc_context` block, then we would\nreset back to the sentinel an exit which would lead to strange behavior with\nfigures being erroneously closed.\n\nThis special cases the 'backend' key to not be reset on `__exit__`\n\nCloses #23298\n---\n doc/api/next_api_changes/behavior/23299-TAC.rst | 9 +++++++++\n lib/matplotlib/__init__.py                      | 5 ++++-\n lib/matplotlib/tests/test_rcparams.py           | 7 +++++++\n 3 files changed, 20 insertions(+), 1 deletion(-)\n create mode 100644 doc/api/next_api_changes/behavior/23299-TAC.rst\n\ndiff --git a/doc/api/next_api_changes/behavior/23299-TAC.rst b/doc/api/next_api_changes/behavior/23299-TAC.rst\nnew file mode 100644\nindex 000000000000..95116f65c553\n--- /dev/null\n+++ b/doc/api/next_api_changes/behavior/23299-TAC.rst\n@@ -0,0 +1,9 @@\n+mpl.rc_context no longer resests the `'backend'` key\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+If you want to rest :rc:`backend` after the context, you must use\n+`matplotlib.use` to change the backend.  Previously the key would be reset, but\n+it would have any of the expected side-effects because internally\n+`matplotlib.rc_context` side-steps the custom logic in the\n+`~matplotlib.RcParams` class (because we copied the values from ``rcParamms``\n+so it does not need to be re-validated.\ndiff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py\nindex c268a56724c9..528be266ffac 100644\n--- a/lib/matplotlib/__init__.py\n+++ b/lib/matplotlib/__init__.py\n@@ -1059,6 +1059,8 @@ def rc_context(rc=None, fname=None):\n     \"\"\"\n     Return a context manager for temporarily changing rcParams.\n \n+    The :rc:`backend` will not be reset by the context manager.\n+\n     Parameters\n     ----------\n     rc : dict\n@@ -1087,7 +1089,8 @@ def rc_context(rc=None, fname=None):\n              plt.plot(x, y)  # uses 'print.rc'\n \n     \"\"\"\n-    orig = rcParams.copy()\n+    orig = dict(rcParams.copy())\n+    del orig['backend']\n     try:\n         if fname:\n             rc_file(fname)\ndiff --git a/lib/matplotlib/tests/test_rcparams.py b/lib/matplotlib/tests/test_rcparams.py\nindex 99856b344255..d5f316f54595 100644\n--- a/lib/matplotlib/tests/test_rcparams.py\n+++ b/lib/matplotlib/tests/test_rcparams.py\n@@ -496,6 +496,13 @@ def test_keymaps():\n         assert isinstance(mpl.rcParams[k], list)\n \n \n+def test_no_backend_reset_rccontext():\n+    assert mpl.rcParams['backend'] != 'module://aardvark'\n+    with mpl.rc_context():\n+        mpl.rcParams['backend'] = 'module://aardvark'\n+    assert mpl.rcParams['backend'] == 'module://aardvark'\n+\n+\n def test_rcparams_reset_after_fail():\n     # There was previously a bug that meant that if rc_context failed and\n     # raised an exception due to issues in the supplied rc parameters, the\n\nFrom da15745b530daf6cc5b92e660066f48cb7b47429 Mon Sep 17 00:00:00 2001\nFrom: Thomas A Caswell <tcaswell@gmail.com>\nDate: Wed, 22 Jun 2022 14:24:13 -0400\nSubject: [PATCH 2/4] DOC: Simplify API note text\n\nCo-authored-by: Tim Hoffmann <2836374+timhoffm@users.noreply.github.com>\n---\n doc/api/next_api_changes/behavior/23299-TAC.rst | 11 ++++-------\n 1 file changed, 4 insertions(+), 7 deletions(-)\n\ndiff --git a/doc/api/next_api_changes/behavior/23299-TAC.rst b/doc/api/next_api_changes/behavior/23299-TAC.rst\nindex 95116f65c553..530912929d6f 100644\n--- a/doc/api/next_api_changes/behavior/23299-TAC.rst\n+++ b/doc/api/next_api_changes/behavior/23299-TAC.rst\n@@ -1,9 +1,6 @@\n-mpl.rc_context no longer resests the `'backend'` key\n+mpl.rc_context no longer resests the value of `rcParams['backend']`\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-If you want to rest :rc:`backend` after the context, you must use\n-`matplotlib.use` to change the backend.  Previously the key would be reset, but\n-it would have any of the expected side-effects because internally\n-`matplotlib.rc_context` side-steps the custom logic in the\n-`~matplotlib.RcParams` class (because we copied the values from ``rcParamms``\n-so it does not need to be re-validated.\n+`matplotlib.rc_context` did incorrectly reset the value of `rcParams['backend']` if backend\n+resolution was triggered in the context. This affected only the value. The actual backend\n+was not reset. Now, `matpotlib.rc_context` dose not modify `rcParams['backend']` anymore.\n\nFrom 545fff0b35a9448900802360ffb6093ef83eb2ed Mon Sep 17 00:00:00 2001\nFrom: Thomas A Caswell <tcaswell@gmail.com>\nDate: Wed, 22 Jun 2022 14:25:19 -0400\nSubject: [PATCH 3/4] DOC: minor re-wording of API note\n\n---\n doc/api/next_api_changes/behavior/23299-TAC.rst | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a/doc/api/next_api_changes/behavior/23299-TAC.rst b/doc/api/next_api_changes/behavior/23299-TAC.rst\nindex 530912929d6f..6602f15e4fc3 100644\n--- a/doc/api/next_api_changes/behavior/23299-TAC.rst\n+++ b/doc/api/next_api_changes/behavior/23299-TAC.rst\n@@ -1,6 +1,6 @@\n-mpl.rc_context no longer resests the value of `rcParams['backend']`\n-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+mpl.rc_context no longer resets the value of :rc:`backend`\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-`matplotlib.rc_context` did incorrectly reset the value of `rcParams['backend']` if backend\n+`matplotlib.rc_context` incorrectly reset the value of :rc:`backend` if backend\n resolution was triggered in the context. This affected only the value. The actual backend\n-was not reset. Now, `matpotlib.rc_context` dose not modify `rcParams['backend']` anymore.\n+was not changed. Now, `matplotlib.rc_context` does not reset  :rc:`backend` anymore.\n\nFrom 4d6bab4cfd74d8c13dfd2321cc0ad1cb3eaecd9f Mon Sep 17 00:00:00 2001\nFrom: Thomas A Caswell <tcaswell@gmail.com>\nDate: Mon, 27 Jun 2022 21:24:38 -0400\nSubject: [PATCH 4/4] DOC: make title shorter\n\n---\n doc/api/next_api_changes/behavior/23299-TAC.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/doc/api/next_api_changes/behavior/23299-TAC.rst b/doc/api/next_api_changes/behavior/23299-TAC.rst\nindex 6602f15e4fc3..745bd47d6c6b 100644\n--- a/doc/api/next_api_changes/behavior/23299-TAC.rst\n+++ b/doc/api/next_api_changes/behavior/23299-TAC.rst\n@@ -1,4 +1,4 @@\n-mpl.rc_context no longer resets the value of :rc:`backend`\n+mpl.rc_context no longer resets the value of ``'backend'``\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n `matplotlib.rc_context` incorrectly reset the value of :rc:`backend` if backend\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/23299"}