{"instance_id": "sphinx-doc__sphinx-7889", "score": "C", "diff": "diff --git a/setup.py b/setup.py\nindex 3d499983f..e07b2fd4f 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 98a3a3a96..56e3a9f27 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -70,10 +70,10 @@ class _MockObject:\n \n def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None) -> Any:\n-    attrs = {'__module__': module, '__display_name__': module + '.' + name}\n+    attrs = {'__module__': module, '__display_name__': module + '.' + str(name)}\n     attrs.update(attributes or {})\n \n-    return type(name, (superclass,), attrs)\n+    return type(str(name), (superclass,), attrs)\n \n \n class _MockModule(ModuleType):\ndiff --git a/tox.ini b/tox.ini\nindex d9f040544..bf39854b6 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ extras =\n setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From d6ca2f97beeb4864b93872f46c8f1a1e10364263 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Tue, 30 Jun 2020 01:16:38 +0900\nSubject: [PATCH] Fix #7886: autodoc: TypeError is raised on mocking\n generic-typed classes\n\n---\n CHANGES                        |  1 +\n sphinx/ext/autodoc/mock.py     |  4 ++--\n tests/test_ext_autodoc_mock.py | 12 ++++++++++++\n 3 files changed, 15 insertions(+), 2 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex e6888146c73..32ce16917bb 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -19,6 +19,7 @@ Features added\n Bugs fixed\n ----------\n \n+* #7886: autodoc: TypeError is raised on mocking generic-typed classes\n * #7839: autosummary: cannot handle umlauts in function names\n * #7865: autosummary: Failed to extract summary line when abbreviations found\n * #7866: autosummary: Failed to extract correct summary line when docstring\ndiff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex 98a3a3a96e5..40258a13577 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -52,8 +52,8 @@ def __iter__(self) -> Iterator:\n     def __mro_entries__(self, bases: Tuple) -> Tuple:\n         return (self.__class__,)\n \n-    def __getitem__(self, key: str) -> \"_MockObject\":\n-        return _make_subclass(key, self.__display_name__, self.__class__)()\n+    def __getitem__(self, key: Any) -> \"_MockObject\":\n+        return _make_subclass(str(key), self.__display_name__, self.__class__)()\n \n     def __getattr__(self, key: str) -> \"_MockObject\":\n         return _make_subclass(key, self.__display_name__, self.__class__)()\ndiff --git a/tests/test_ext_autodoc_mock.py b/tests/test_ext_autodoc_mock.py\nindex 4760493cf10..a29170f752d 100644\n--- a/tests/test_ext_autodoc_mock.py\n+++ b/tests/test_ext_autodoc_mock.py\n@@ -11,6 +11,7 @@\n import abc\n import sys\n from importlib import import_module\n+from typing import TypeVar\n \n import pytest\n \n@@ -39,6 +40,7 @@ def test_MockObject():\n     assert isinstance(mock.attr1.attr2, _MockObject)\n     assert isinstance(mock.attr1.attr2.meth(), _MockObject)\n \n+    # subclassing\n     class SubClass(mock.SomeClass):\n         \"\"\"docstring of SubClass\"\"\"\n \n@@ -51,6 +53,16 @@ def method(self):\n     assert obj.method() == \"string\"\n     assert isinstance(obj.other_method(), SubClass)\n \n+    # parametrized type\n+    T = TypeVar('T')\n+\n+    class SubClass2(mock.SomeClass[T]):\n+        \"\"\"docstring of SubClass\"\"\"\n+\n+    obj2 = SubClass2()\n+    assert SubClass2.__doc__ == \"docstring of SubClass\"\n+    assert isinstance(obj2, SubClass2)\n+\n \n def test_mock():\n     modname = 'sphinx.unknown'\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/7889"}