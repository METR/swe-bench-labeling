{"instance_id": "django__django-13195", "score": "I", "diff": "diff --git a/django/http/response.py b/django/http/response.py\nindex e00bcacefb..085c1ee2cf 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -214,9 +214,11 @@ class HttpResponseBase:\n         # Most browsers ignore the Set-Cookie header if the cookie name starts\n         # with __Host- or __Secure- and the cookie doesn't use the secure flag.\n         secure = key.startswith(('__Secure-', '__Host-'))\n+        samesite = self.cookies.get(key, {}).get('samesite')\n         self.set_cookie(\n             key, max_age=0, path=path, domain=domain, secure=secure,\n             expires='Thu, 01 Jan 1970 00:00:00 GMT',\n+            samesite=samesite,\n         )\n \n     # Common methods used by subclasses\n", "gold_standard_diff": "diff --git a/django/contrib/messages/storage/cookie.py b/django/contrib/messages/storage/cookie.py\nindex 78256ca3b253..b51e292aa07e 100644\n--- a/django/contrib/messages/storage/cookie.py\n+++ b/django/contrib/messages/storage/cookie.py\n@@ -92,7 +92,11 @@ def _update_cookie(self, encoded_data, response):\n                 samesite=settings.SESSION_COOKIE_SAMESITE,\n             )\n         else:\n-            response.delete_cookie(self.cookie_name, domain=settings.SESSION_COOKIE_DOMAIN)\n+            response.delete_cookie(\n+                self.cookie_name,\n+                domain=settings.SESSION_COOKIE_DOMAIN,\n+                samesite=settings.SESSION_COOKIE_SAMESITE,\n+            )\n \n     def _store(self, messages, response, remove_oldest=True, *args, **kwargs):\n         \"\"\"\ndiff --git a/django/contrib/sessions/middleware.py b/django/contrib/sessions/middleware.py\nindex 63013eef7a53..95ad30ce7fca 100644\n--- a/django/contrib/sessions/middleware.py\n+++ b/django/contrib/sessions/middleware.py\n@@ -42,6 +42,7 @@ def process_response(self, request, response):\n                 settings.SESSION_COOKIE_NAME,\n                 path=settings.SESSION_COOKIE_PATH,\n                 domain=settings.SESSION_COOKIE_DOMAIN,\n+                samesite=settings.SESSION_COOKIE_SAMESITE,\n             )\n             patch_vary_headers(response, ('Cookie',))\n         else:\ndiff --git a/django/http/response.py b/django/http/response.py\nindex e00bcacefb59..c0ed93c44ea3 100644\n--- a/django/http/response.py\n+++ b/django/http/response.py\n@@ -210,13 +210,18 @@ def set_signed_cookie(self, key, value, salt='', **kwargs):\n         value = signing.get_cookie_signer(salt=key + salt).sign(value)\n         return self.set_cookie(key, value, **kwargs)\n \n-    def delete_cookie(self, key, path='/', domain=None):\n-        # Most browsers ignore the Set-Cookie header if the cookie name starts\n-        # with __Host- or __Secure- and the cookie doesn't use the secure flag.\n-        secure = key.startswith(('__Secure-', '__Host-'))\n+    def delete_cookie(self, key, path='/', domain=None, samesite=None):\n+        # Browsers can ignore the Set-Cookie header if the cookie doesn't use\n+        # the secure flag and:\n+        # - the cookie name starts with \"__Host-\" or \"__Secure-\", or\n+        # - the samesite is \"none\".\n+        secure = (\n+            key.startswith(('__Secure-', '__Host-')) or\n+            (samesite and samesite.lower() == 'none')\n+        )\n         self.set_cookie(\n             key, max_age=0, path=path, domain=domain, secure=secure,\n-            expires='Thu, 01 Jan 1970 00:00:00 GMT',\n+            expires='Thu, 01 Jan 1970 00:00:00 GMT', samesite=samesite,\n         )\n \n     # Common methods used by subclasses\ndiff --git a/docs/ref/request-response.txt b/docs/ref/request-response.txt\nindex 705da1842a9a..80e3e1e6ed23 100644\n--- a/docs/ref/request-response.txt\n+++ b/docs/ref/request-response.txt\n@@ -890,7 +890,7 @@ Methods\n \n         Using ``samesite='None'`` (string) was allowed.\n \n-.. method:: HttpResponse.delete_cookie(key, path='/', domain=None)\n+.. method:: HttpResponse.delete_cookie(key, path='/', domain=None, samesite=None)\n \n     Deletes the cookie with the given key. Fails silently if the key doesn't\n     exist.\n@@ -899,6 +899,10 @@ Methods\n     values you used in ``set_cookie()`` -- otherwise the cookie may not be\n     deleted.\n \n+    .. versionchanged:: 2.2.15\n+\n+        The ``samesite`` argument was added.\n+\n .. method:: HttpResponse.close()\n \n     This method is called at the end of the request directly by the WSGI\ndiff --git a/docs/releases/2.2.15.txt b/docs/releases/2.2.15.txt\nnew file mode 100644\nindex 000000000000..9bd2246b44a0\n--- /dev/null\n+++ b/docs/releases/2.2.15.txt\n@@ -0,0 +1,17 @@\n+===========================\n+Django 2.2.15 release notes\n+===========================\n+\n+*Expected August 3, 2020*\n+\n+Django 2.2.15 fixes a bug in 2.2.14.\n+\n+Bugfixes\n+========\n+\n+* Allowed setting the ``SameSite`` cookie flag in\n+  :meth:`.HttpResponse.delete_cookie` (:ticket:`31790`).\n+\n+* Fixed setting the ``Secure`` cookie flag in\n+  :meth:`.HttpResponse.delete_cookie` for cookies that use ``samesite='none'``\n+  (:ticket:`31790`).\ndiff --git a/docs/releases/3.0.9.txt b/docs/releases/3.0.9.txt\nindex adc0f30b100b..08e16a681f4d 100644\n--- a/docs/releases/3.0.9.txt\n+++ b/docs/releases/3.0.9.txt\n@@ -9,4 +9,9 @@ Django 3.0.9 fixes several bugs in 3.0.8.\n Bugfixes\n ========\n \n-* ...\n+* Allowed setting the ``SameSite`` cookie flag in\n+  :meth:`.HttpResponse.delete_cookie` (:ticket:`31790`).\n+\n+* Fixed setting the ``Secure`` cookie flag in\n+  :meth:`.HttpResponse.delete_cookie` for cookies that use ``samesite='none'``\n+  (:ticket:`31790`).\ndiff --git a/docs/releases/index.txt b/docs/releases/index.txt\nindex e7f151790201..d37faf03c7c4 100644\n--- a/docs/releases/index.txt\n+++ b/docs/releases/index.txt\n@@ -55,6 +55,7 @@ versions of the documentation contain the release notes for any later releases.\n .. toctree::\n    :maxdepth: 1\n \n+   2.2.15\n    2.2.14\n    2.2.13\n    2.2.12\ndiff --git a/tests/messages_tests/test_cookie.py b/tests/messages_tests/test_cookie.py\nindex 5675cd15eb18..f1428fdf3236 100644\n--- a/tests/messages_tests/test_cookie.py\n+++ b/tests/messages_tests/test_cookie.py\n@@ -1,5 +1,6 @@\n import json\n \n+from django.conf import settings\n from django.contrib.messages import constants\n from django.contrib.messages.storage.base import Message\n from django.contrib.messages.storage.cookie import (\n@@ -85,6 +86,10 @@ def test_cookie_setings(self):\n         self.assertEqual(response.cookies['messages'].value, '')\n         self.assertEqual(response.cookies['messages']['domain'], '.example.com')\n         self.assertEqual(response.cookies['messages']['expires'], 'Thu, 01 Jan 1970 00:00:00 GMT')\n+        self.assertEqual(\n+            response.cookies['messages']['samesite'],\n+            settings.SESSION_COOKIE_SAMESITE,\n+        )\n \n     def test_get_bad_cookie(self):\n         request = self.get_request()\ndiff --git a/tests/responses/test_cookie.py b/tests/responses/test_cookie.py\nindex a52443eefe7e..c7c35219b27a 100644\n--- a/tests/responses/test_cookie.py\n+++ b/tests/responses/test_cookie.py\n@@ -105,6 +105,7 @@ def test_default(self):\n         self.assertEqual(cookie['path'], '/')\n         self.assertEqual(cookie['secure'], '')\n         self.assertEqual(cookie['domain'], '')\n+        self.assertEqual(cookie['samesite'], '')\n \n     def test_delete_cookie_secure_prefix(self):\n         \"\"\"\n@@ -118,3 +119,14 @@ def test_delete_cookie_secure_prefix(self):\n                 cookie_name = '__%s-c' % prefix\n                 response.delete_cookie(cookie_name)\n                 self.assertIs(response.cookies[cookie_name]['secure'], True)\n+\n+    def test_delete_cookie_secure_samesite_none(self):\n+        # delete_cookie() sets the secure flag if samesite='none'.\n+        response = HttpResponse()\n+        response.delete_cookie('c', samesite='none')\n+        self.assertIs(response.cookies['c']['secure'], True)\n+\n+    def test_delete_cookie_samesite(self):\n+        response = HttpResponse()\n+        response.delete_cookie('c', samesite='lax')\n+        self.assertEqual(response.cookies['c']['samesite'], 'lax')\ndiff --git a/tests/sessions_tests/tests.py b/tests/sessions_tests/tests.py\nindex 6c6d7dd3f2f2..248dae82aa4a 100644\n--- a/tests/sessions_tests/tests.py\n+++ b/tests/sessions_tests/tests.py\n@@ -758,8 +758,9 @@ def response_ending_session(request):\n         #  Set-Cookie: sessionid=; expires=Thu, 01 Jan 1970 00:00:00 GMT; Max-Age=0; Path=/\n         self.assertEqual(\n             'Set-Cookie: {}=\"\"; expires=Thu, 01 Jan 1970 00:00:00 GMT; '\n-            'Max-Age=0; Path=/'.format(\n+            'Max-Age=0; Path=/; SameSite={}'.format(\n                 settings.SESSION_COOKIE_NAME,\n+                settings.SESSION_COOKIE_SAMESITE,\n             ),\n             str(response.cookies[settings.SESSION_COOKIE_NAME])\n         )\n@@ -789,8 +790,9 @@ def response_ending_session(request):\n         #              Path=/example/\n         self.assertEqual(\n             'Set-Cookie: {}=\"\"; Domain=.example.local; expires=Thu, '\n-            '01 Jan 1970 00:00:00 GMT; Max-Age=0; Path=/example/'.format(\n+            '01 Jan 1970 00:00:00 GMT; Max-Age=0; Path=/example/; SameSite={}'.format(\n                 settings.SESSION_COOKIE_NAME,\n+                settings.SESSION_COOKIE_SAMESITE,\n             ),\n             str(response.cookies[settings.SESSION_COOKIE_NAME])\n         )\n", "gold_standard_pr_link": "https://github.com/django/django/pull/13195"}