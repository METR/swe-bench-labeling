{"instance_id": "django__django-16899", "score": "C", "diff": "diff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex c395b0bde2..2c90dedc31 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -771,10 +771,11 @@ class BaseModelAdminChecks:\n             except FieldDoesNotExist:\n                 return [\n                     checks.Error(\n-                        \"The value of '%s' is not a callable, an attribute of \"\n-                        \"'%s', or an attribute of '%s'.\"\n+                        \"The value of '%s' refers to '%s', which is not a callable, \"\n+                        \"an attribute of '%s', or an attribute of '%s'.\"\n                         % (\n                             label,\n+                            field_name,\n                             obj.__class__.__name__,\n                             obj.model._meta.label,\n                         ),\ndiff --git a/tests/admin_checks/tests.py b/tests/admin_checks/tests.py\nindex 4d171ed737..c2b476877e 100644\n--- a/tests/admin_checks/tests.py\n+++ b/tests/admin_checks/tests.py\n@@ -798,8 +798,8 @@ class SystemChecksTestCase(SimpleTestCase):\n         errors = SongAdmin(Song, AdminSite()).check()\n         expected = [\n             checks.Error(\n-                \"The value of 'readonly_fields[1]' is not a callable, an attribute \"\n-                \"of 'SongAdmin', or an attribute of 'admin_checks.Song'.\",\n+                \"The value of 'readonly_fields[1]' refers to 'nonexistent', which is not a callable, \"\n+                \"an attribute of 'SongAdmin', or an attribute of 'admin_checks.Song'.\",\n                 obj=SongAdmin,\n                 id=\"admin.E035\",\n             )\n@@ -814,8 +814,8 @@ class SystemChecksTestCase(SimpleTestCase):\n         errors = CityInline(State, AdminSite()).check()\n         expected = [\n             checks.Error(\n-                \"The value of 'readonly_fields[0]' is not a callable, an attribute \"\n-                \"of 'CityInline', or an attribute of 'admin_checks.City'.\",\n+                \"The value of 'readonly_fields[0]' refers to 'i_dont_exist', which is not a callable, \"\n+                \"an attribute of 'CityInline', or an attribute of 'admin_checks.City'.\",\n                 obj=CityInline,\n                 id=\"admin.E035\",\n             )\n", "gold_standard_diff": "From 9cc9049ae1db964675b0b02cc4048316dd78bc33 Mon Sep 17 00:00:00 2001\nFrom: Rick van Hattem <wolph@wol.ph>\nDate: Thu, 9 Jul 2020 10:54:58 +0200\nSubject: [PATCH] Fixed #34601 -- Added field name to readonly_fields's check\n error msg.\n\nCo-authored-by: Rick van Hattem <wolph@wol.ph>\n---\n django/contrib/admin/checks.py |  5 +++--\n docs/ref/checks.txt            |  5 +++--\n tests/admin_checks/tests.py    | 10 ++++++----\n 3 files changed, 12 insertions(+), 8 deletions(-)\n\ndiff --git a/django/contrib/admin/checks.py b/django/contrib/admin/checks.py\nindex c395b0bde2aa..2c90dedc3129 100644\n--- a/django/contrib/admin/checks.py\n+++ b/django/contrib/admin/checks.py\n@@ -771,10 +771,11 @@ def _check_readonly_fields_item(self, obj, field_name, label):\n             except FieldDoesNotExist:\n                 return [\n                     checks.Error(\n-                        \"The value of '%s' is not a callable, an attribute of \"\n-                        \"'%s', or an attribute of '%s'.\"\n+                        \"The value of '%s' refers to '%s', which is not a callable, \"\n+                        \"an attribute of '%s', or an attribute of '%s'.\"\n                         % (\n                             label,\n+                            field_name,\n                             obj.__class__.__name__,\n                             obj.model._meta.label,\n                         ),\ndiff --git a/docs/ref/checks.txt b/docs/ref/checks.txt\nindex df0adbef6344..1b2306b2af77 100644\n--- a/docs/ref/checks.txt\n+++ b/docs/ref/checks.txt\n@@ -675,8 +675,9 @@ with the admin site:\n * **admin.E033**: The value of ``ordering`` refers to ``<field name>``, which\n   is not a field of ``<model>``.\n * **admin.E034**: The value of ``readonly_fields`` must be a list or tuple.\n-* **admin.E035**: The value of ``readonly_fields[n]`` is not a callable, an\n-  attribute of ``<ModelAdmin class>``, or an attribute of ``<model>``.\n+* **admin.E035**: The value of ``readonly_fields[n]`` refers to\n+  ``<field_name>``, which is not a callable, an attribute of\n+  ``<ModelAdmin class>``, or an attribute of ``<model>``.\n * **admin.E036**: The value of ``autocomplete_fields`` must be a list or tuple.\n * **admin.E037**: The value of ``autocomplete_fields[n]`` refers to\n   ``<field name>``, which is not a field of ``<model>``.\ndiff --git a/tests/admin_checks/tests.py b/tests/admin_checks/tests.py\nindex 4d171ed737aa..417c8504ede0 100644\n--- a/tests/admin_checks/tests.py\n+++ b/tests/admin_checks/tests.py\n@@ -798,8 +798,9 @@ class SongAdmin(admin.ModelAdmin):\n         errors = SongAdmin(Song, AdminSite()).check()\n         expected = [\n             checks.Error(\n-                \"The value of 'readonly_fields[1]' is not a callable, an attribute \"\n-                \"of 'SongAdmin', or an attribute of 'admin_checks.Song'.\",\n+                \"The value of 'readonly_fields[1]' refers to 'nonexistent', which is \"\n+                \"not a callable, an attribute of 'SongAdmin', or an attribute of \"\n+                \"'admin_checks.Song'.\",\n                 obj=SongAdmin,\n                 id=\"admin.E035\",\n             )\n@@ -814,8 +815,9 @@ class CityInline(admin.TabularInline):\n         errors = CityInline(State, AdminSite()).check()\n         expected = [\n             checks.Error(\n-                \"The value of 'readonly_fields[0]' is not a callable, an attribute \"\n-                \"of 'CityInline', or an attribute of 'admin_checks.City'.\",\n+                \"The value of 'readonly_fields[0]' refers to 'i_dont_exist', which is \"\n+                \"not a callable, an attribute of 'CityInline', or an attribute of \"\n+                \"'admin_checks.City'.\",\n                 obj=CityInline,\n                 id=\"admin.E035\",\n             )\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16899"}