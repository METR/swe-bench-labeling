{"instance_id": "sympy__sympy-12096", "score": "C", "diff": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 1b8005e1d2..07c2d49e48 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -507,7 +507,11 @@ def _eval_evalf(self, prec):\n             func = getattr(mpmath, fname)\n         except (AttributeError, KeyError):\n             try:\n-                return Float(self._imp_(*self.args), prec)\n+                result = self._imp_(*self.args)\n+                if isinstance(result, (Float, Rational)):\n+                    return Float(result, prec)\n+                else:\n+                    return result.evalf(prec)\n             except (AttributeError, TypeError, ValueError):\n                 return\n \n", "gold_standard_diff": "From 414abfcc45447787df20ae54811ca463d05b2647 Mon Sep 17 00:00:00 2001\nFrom: arihant parsoya <parsoyaarihant@gmail.com>\nDate: Tue, 7 Feb 2017 20:48:35 +0530\nSubject: [PATCH] Implemented recursive calling in _eval_evalf()\n\nFixes #12092 .\n\nEnabled recursive calling of the evalf() function.\n\nTests are added.\n---\n sympy/core/function.py                 | 2 +-\n sympy/utilities/tests/test_lambdify.py | 3 +++\n 2 files changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 1b8005e1d230..c730d8c9c869 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -507,7 +507,7 @@ def _eval_evalf(self, prec):\n             func = getattr(mpmath, fname)\n         except (AttributeError, KeyError):\n             try:\n-                return Float(self._imp_(*self.args), prec)\n+                return Float(self._imp_(*[i.evalf(prec) for i in self.args]), prec)\n             except (AttributeError, TypeError, ValueError):\n                 return\n \ndiff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py\nindex d8a1a68a2207..7c8dc3dd1034 100644\n--- a/sympy/utilities/tests/test_lambdify.py\n+++ b/sympy/utilities/tests/test_lambdify.py\n@@ -751,6 +751,9 @@ def test_issue_2790():\n     assert lambdify((x, (y, (w, z))), w + x + y + z)(1, (2, (3, 4))) == 10\n     assert lambdify(x, x + 1, dummify=False)(1) == 2\n \n+def test_issue_12092():\n+    f = implemented_function('f', lambda x: x**2)\n+    assert f(f(2)).evalf() == Float(16)\n \n def test_ITE():\n     assert lambdify((x, y, z), ITE(x, y, z))(True, 5, 3) == 5\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/12096"}