{"instance_id": "django__django-15380", "score": "C", "diff": "diff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex bf9c2acd26..f1238a3504 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -824,7 +824,7 @@ class MigrationAutodetector:\n         for app_label, model_name, field_name in sorted(self.new_field_keys - self.old_field_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n             old_model_state = self.from_state.models[app_label, old_model_name]\n-            new_model_state = self.to_state.models[app_label, old_model_name]\n+            new_model_state = self.to_state.models[app_label, model_name]\n             field = new_model_state.get_field(field_name)\n             # Scan to see if this is actually a rename!\n             field_dec = self.deep_deconstruct(field)\n", "gold_standard_diff": "From 97a72744681d0993b50dee952cf32cdf9650ad9f Mon Sep 17 00:00:00 2001\nFrom: Kirill Safronov <hoskeowl@gmail.com>\nDate: Tue, 1 Feb 2022 00:29:49 +0500\nSubject: [PATCH] Fixed #33480 -- Fixed makemigrations crash when renaming\n field of renamed model.\n\nRegression in aa4acc164d1247c0de515c959f7b09648b57dc42.\n---\n django/db/migrations/autodetector.py  |  2 +-\n docs/releases/4.0.2.txt               |  3 +++\n tests/migrations/test_autodetector.py | 20 ++++++++++++++++++++\n 3 files changed, 24 insertions(+), 1 deletion(-)\n\ndiff --git a/django/db/migrations/autodetector.py b/django/db/migrations/autodetector.py\nindex bf9c2acd2602..f1238a3504b4 100644\n--- a/django/db/migrations/autodetector.py\n+++ b/django/db/migrations/autodetector.py\n@@ -824,7 +824,7 @@ def generate_renamed_fields(self):\n         for app_label, model_name, field_name in sorted(self.new_field_keys - self.old_field_keys):\n             old_model_name = self.renamed_models.get((app_label, model_name), model_name)\n             old_model_state = self.from_state.models[app_label, old_model_name]\n-            new_model_state = self.to_state.models[app_label, old_model_name]\n+            new_model_state = self.to_state.models[app_label, model_name]\n             field = new_model_state.get_field(field_name)\n             # Scan to see if this is actually a rename!\n             field_dec = self.deep_deconstruct(field)\ndiff --git a/docs/releases/4.0.2.txt b/docs/releases/4.0.2.txt\nindex e7b987962571..c5176e01fcf5 100644\n--- a/docs/releases/4.0.2.txt\n+++ b/docs/releases/4.0.2.txt\n@@ -37,3 +37,6 @@ Bugfixes\n * Fixed a bug in Django 4.0 that caused a crash of ``QuerySet.aggregate()``\n   after ``annotate()`` on an aggregate function with a\n   :ref:`default <aggregate-default>` (:ticket:`33468`).\n+\n+* Fixed a regression in Django 4.0 that caused a crash of ``makemigrations``\n+  when renaming a field of a renamed model (:ticket:`33480`).\ndiff --git a/tests/migrations/test_autodetector.py b/tests/migrations/test_autodetector.py\nindex bb37af24e38d..dddd4e0c94ac 100644\n--- a/tests/migrations/test_autodetector.py\n+++ b/tests/migrations/test_autodetector.py\n@@ -1049,6 +1049,26 @@ def test_rename_related_field_preserved_db_column(self):\n             new_name='renamed_foo',\n         )\n \n+    def test_rename_field_with_renamed_model(self):\n+        changes = self.get_changes(\n+            [self.author_name],\n+            [\n+                ModelState('testapp', 'RenamedAuthor', [\n+                    ('id', models.AutoField(primary_key=True)),\n+                    ('renamed_name', models.CharField(max_length=200)),\n+                ]),\n+            ],\n+            MigrationQuestioner({'ask_rename_model': True, 'ask_rename': True}),\n+        )\n+        self.assertNumberMigrations(changes, 'testapp', 1)\n+        self.assertOperationTypes(changes, 'testapp', 0, ['RenameModel', 'RenameField'])\n+        self.assertOperationAttributes(\n+            changes, 'testapp', 0, 0, old_name='Author', new_name='RenamedAuthor',\n+        )\n+        self.assertOperationAttributes(\n+            changes, 'testapp', 0, 1, old_name='name', new_name='renamed_name',\n+        )\n+\n     def test_rename_model(self):\n         \"\"\"Tests autodetection of renamed models.\"\"\"\n         changes = self.get_changes(\n", "gold_standard_pr_link": "https://github.com/django/django/pull/15380"}