{"instance_id": "django__django-13741", "score": "I", "diff": "", "gold_standard_diff": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py\nindex b9eb33329f31..20d892279901 100644\n--- a/django/contrib/auth/forms.py\n+++ b/django/contrib/auth/forms.py\n@@ -56,16 +56,9 @@ class ReadOnlyPasswordHashField(forms.Field):\n \n     def __init__(self, *args, **kwargs):\n         kwargs.setdefault(\"required\", False)\n+        kwargs.setdefault('disabled', True)\n         super().__init__(*args, **kwargs)\n \n-    def bound_data(self, data, initial):\n-        # Always return initial because the widget doesn't\n-        # render an input field.\n-        return initial\n-\n-    def has_changed(self, initial, data):\n-        return False\n-\n \n class UsernameField(forms.CharField):\n     def to_python(self, value):\n@@ -163,12 +156,6 @@ def __init__(self, *args, **kwargs):\n         if user_permissions:\n             user_permissions.queryset = user_permissions.queryset.select_related('content_type')\n \n-    def clean_password(self):\n-        # Regardless of what the user provides, return the initial value.\n-        # This is done here, rather than on the field, because the\n-        # field does not have access to the initial value\n-        return self.initial.get('password')\n-\n \n class AuthenticationForm(forms.Form):\n     \"\"\"\ndiff --git a/docs/releases/3.2.txt b/docs/releases/3.2.txt\nindex 7d374da0a7e9..2ab8546026f4 100644\n--- a/docs/releases/3.2.txt\n+++ b/docs/releases/3.2.txt\n@@ -625,6 +625,11 @@ Miscellaneous\n   using :option:`makemessages --locale` option, when they contain hyphens\n   (``'-'``).\n \n+* The ``django.contrib.auth.forms.ReadOnlyPasswordHashField`` form field is now\n+  :attr:`~django.forms.Field.disabled` by default. Therefore\n+  ``UserChangeForm.clean_password()`` is no longer required to return the\n+  initial value.\n+\n .. _deprecated-features-3.2:\n \n Features deprecated in 3.2\ndiff --git a/docs/topics/auth/customizing.txt b/docs/topics/auth/customizing.txt\nindex 6ab830546882..8314d9f1711c 100644\n--- a/docs/topics/auth/customizing.txt\n+++ b/docs/topics/auth/customizing.txt\n@@ -1129,7 +1129,7 @@ code would be required in the app's ``admin.py`` file::\n     class UserChangeForm(forms.ModelForm):\n         \"\"\"A form for updating users. Includes all the fields on\n         the user, but replaces the password field with admin's\n-        password hash display field.\n+        disabled password hash display field.\n         \"\"\"\n         password = ReadOnlyPasswordHashField()\n \n@@ -1137,12 +1137,6 @@ code would be required in the app's ``admin.py`` file::\n             model = MyUser\n             fields = ('email', 'password', 'date_of_birth', 'is_active', 'is_admin')\n \n-        def clean_password(self):\n-            # Regardless of what the user provides, return the initial value.\n-            # This is done here, rather than on the field, because the\n-            # field does not have access to the initial value\n-            return self.initial[\"password\"]\n-\n \n     class UserAdmin(BaseUserAdmin):\n         # The forms to add and change user instances\n@@ -1182,3 +1176,10 @@ Finally, specify the custom model as the default user model for your project\n using the :setting:`AUTH_USER_MODEL` setting in your ``settings.py``::\n \n     AUTH_USER_MODEL = 'customauth.MyUser'\n+\n+.. versionchanged:: 3.2\n+\n+    In older versions, ``ReadOnlyPasswordHashField`` is not\n+    :attr:`~django.forms.Field.disabled` by default and\n+    ``UserChangeForm.clean_password()`` is required to return the initial\n+    value, whatever the user provides.\ndiff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py\nindex 88b4b3266713..7a731bedc874 100644\n--- a/tests/auth_tests/test_forms.py\n+++ b/tests/auth_tests/test_forms.py\n@@ -1022,6 +1022,7 @@ def test_render(self):\n \n     def test_readonly_field_has_changed(self):\n         field = ReadOnlyPasswordHashField()\n+        self.assertIs(field.disabled, True)\n         self.assertFalse(field.has_changed('aaa', 'bbb'))\n \n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/13741"}