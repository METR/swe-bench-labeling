{"instance_id": "matplotlib__matplotlib-23412", "score": "C", "diff": "diff --git a/lib/matplotlib/patches.py b/lib/matplotlib/patches.py\nindex e062249589..1217c00a54 100644\n--- a/lib/matplotlib/patches.py\n+++ b/lib/matplotlib/patches.py\n@@ -588,7 +588,7 @@ class Patch(artist.Artist):\n             return\n         # Patch has traditionally ignored the dashoffset.\n         with cbook._setattr_cm(\n-                 self, _dash_pattern=(0, self._dash_pattern[1])), \\\n+                 self, _dash_pattern=self._dash_pattern), \\\n              self._bind_draw_path_function(renderer) as draw_path:\n             path = self.get_path()\n             transform = self.get_transform()\n", "gold_standard_diff": "From 43bff962d36f48a61254b7105665a24709f4e32f Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Mon, 11 Jul 2022 04:09:19 +0300\nSubject: [PATCH 1/7] Add passed offset in draw method of Patch\n\n---\n lib/matplotlib/patches.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/lib/matplotlib/patches.py b/lib/matplotlib/patches.py\nindex e062249589e2..60deb23ff205 100644\n--- a/lib/matplotlib/patches.py\n+++ b/lib/matplotlib/patches.py\n@@ -586,9 +586,9 @@ def draw(self, renderer):\n         # docstring inherited\n         if not self.get_visible():\n             return\n-        # Patch has traditionally ignored the dashoffset.\n+\n         with cbook._setattr_cm(\n-                 self, _dash_pattern=(0, self._dash_pattern[1])), \\\n+                 self, _dash_pattern=(self._dash_pattern)), \\\n              self._bind_draw_path_function(renderer) as draw_path:\n             path = self.get_path()\n             transform = self.get_transform()\n\nFrom ac4ba14d2f3f02ac1342e81ca48cb93e967ac583 Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Mon, 11 Jul 2022 22:12:10 +0300\nSubject: [PATCH 2/7] Add entry to whats new about dash offset\n\n---\n doc/users/next_whats_new/fix_dash_offset_Patch.rst | 6 ++++++\n 1 file changed, 6 insertions(+)\n create mode 100644 doc/users/next_whats_new/fix_dash_offset_Patch.rst\n\ndiff --git a/doc/users/next_whats_new/fix_dash_offset_Patch.rst b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\nnew file mode 100644\nindex 000000000000..60b91e9dc19e\n--- /dev/null\n+++ b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\n@@ -0,0 +1,6 @@\n+Fix the dash offset of the Patch class\n+--------------------------------------\n+Traditionally, when setting the linestyle on a patch object using a dash tuple the\n+offset was ignored. Now the offset is passed to the draw method of Patch as expected\n+and it can be used as it is used with Line2D objects. \n+   \n\nFrom 18bf3b1acec2c83d0fa49acaaacb87f2d15ccb6f Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Mon, 11 Jul 2022 22:19:12 +0300\nSubject: [PATCH 3/7] Remove trailing spaces\n\n---\n doc/users/next_whats_new/fix_dash_offset_Patch.rst | 3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ndiff --git a/doc/users/next_whats_new/fix_dash_offset_Patch.rst b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\nindex 60b91e9dc19e..39c6b9f3d9f8 100644\n--- a/doc/users/next_whats_new/fix_dash_offset_Patch.rst\n+++ b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\n@@ -2,5 +2,4 @@ Fix the dash offset of the Patch class\n --------------------------------------\n Traditionally, when setting the linestyle on a patch object using a dash tuple the\n offset was ignored. Now the offset is passed to the draw method of Patch as expected\n-and it can be used as it is used with Line2D objects. \n-   \n+and it can be used as it is used with Line2D objects.\n\nFrom b3cdcdfd59398b32e33ef8fcf32f45b84ff94545 Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Wed, 13 Jul 2022 14:36:36 +0300\nSubject: [PATCH 4/7] Add test for dash offset in Patch\n\n---\n lib/matplotlib/tests/test_patches.py | 34 ++++++++++++++++++++++++++++\n 1 file changed, 34 insertions(+)\n\ndiff --git a/lib/matplotlib/tests/test_patches.py b/lib/matplotlib/tests/test_patches.py\nindex 7064d0dd3b19..218e18c31350 100644\n--- a/lib/matplotlib/tests/test_patches.py\n+++ b/lib/matplotlib/tests/test_patches.py\n@@ -149,6 +149,40 @@ def test_rotate_rect_draw(fig_test, fig_ref):\n     assert rect_test.get_angle() == angle\n \n \n+@check_figures_equal(extensions=['png'])\n+def test_dash_offset_patch_draw(fig_test, fig_ref):\n+    ax_test = fig_test.add_subplot()\n+    ax_ref = fig_ref.add_subplot()\n+\n+    loc = (0, 0)\n+    width, height = (1, 1)\n+    edgecolor = 'b'\n+    linestyle = (0, [6, 6])\n+    linestyle_hacked = (0, [0, 6, 6, 0])\n+    rect_ref = Rectangle(loc, width, height, edgecolor=edgecolor,\n+                                                linestyle=linestyle)\n+    rect_ref2 = Rectangle(loc, width, height, edgecolor=edgecolor,\n+                                        linestyle=linestyle_hacked)\n+    ax_ref.add_patch(rect_ref)\n+    ax_ref.add_patch(rect_ref2)\n+\n+    assert rect_ref.get_linestyle() == linestyle\n+    assert rect_ref2.get_linestyle() == linestyle_hacked\n+\n+    # Check that the dash offset of the rect is the same if we pass it in the\n+    # init method and if we create two rects with appropriate onoff sequence\n+    # of linestyle.\n+    linestyle_test = (6, [6, 6])\n+    rect_test = Rectangle(loc, width, height, edgecolor=edgecolor,\n+                                                linestyle=linestyle)\n+    rect_test2 = Rectangle(loc, width, height, edgecolor=edgecolor,\n+                                             linestyle=linestyle_test)\n+    assert rect_test.get_linestyle() == linestyle\n+    assert rect_test2.get_linestyle() == linestyle_test\n+    ax_test.add_patch(rect_test)\n+    ax_test.add_patch(rect_test2)\n+\n+\n def test_negative_rect():\n     # These two rectangles have the same vertices, but starting from a\n     # different point.  (We also drop the last vertex, which is a duplicate.)\n\nFrom d8107945588da783143cd7886bd928f5e8e7f666 Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Fri, 5 Aug 2022 18:16:01 +0300\nSubject: [PATCH 5/7] Refactor test_dash_offset_patch_draw\n\n---\n lib/matplotlib/tests/test_patches.py | 38 ++++++++++++++--------------\n 1 file changed, 19 insertions(+), 19 deletions(-)\n\ndiff --git a/lib/matplotlib/tests/test_patches.py b/lib/matplotlib/tests/test_patches.py\nindex 218e18c31350..6e7db4eebbcf 100644\n--- a/lib/matplotlib/tests/test_patches.py\n+++ b/lib/matplotlib/tests/test_patches.py\n@@ -154,31 +154,31 @@ def test_dash_offset_patch_draw(fig_test, fig_ref):\n     ax_test = fig_test.add_subplot()\n     ax_ref = fig_ref.add_subplot()\n \n-    loc = (0, 0)\n-    width, height = (1, 1)\n-    edgecolor = 'b'\n-    linestyle = (0, [6, 6])\n-    linestyle_hacked = (0, [0, 6, 6, 0])\n-    rect_ref = Rectangle(loc, width, height, edgecolor=edgecolor,\n-                                                linestyle=linestyle)\n-    rect_ref2 = Rectangle(loc, width, height, edgecolor=edgecolor,\n-                                        linestyle=linestyle_hacked)\n+    loc = (0.1, 0.1)\n+    width, height = (0.8, 0.8)\n+    rect_ref = Rectangle(loc, width, height, linewidth=3, edgecolor='b',\n+                                                linestyle=(0, [6, 6]))\n+    # fill the line gaps using a linestyle (0, [0, 6, 6, 0]), which is\n+    # equivalent to (6, [6, 6]) but has 0 dash offset\n+    rect_ref2 = Rectangle(loc, width, height, linewidth=3, edgecolor='r',\n+                                            linestyle=(0, [0, 6, 6, 0]))\n+    assert rect_ref.get_linestyle() == (0, [6, 6])\n+    assert rect_ref2.get_linestyle() == (0, [0, 6, 6, 0])\n+\n     ax_ref.add_patch(rect_ref)\n     ax_ref.add_patch(rect_ref2)\n \n-    assert rect_ref.get_linestyle() == linestyle\n-    assert rect_ref2.get_linestyle() == linestyle_hacked\n-\n     # Check that the dash offset of the rect is the same if we pass it in the\n     # init method and if we create two rects with appropriate onoff sequence\n     # of linestyle.\n-    linestyle_test = (6, [6, 6])\n-    rect_test = Rectangle(loc, width, height, edgecolor=edgecolor,\n-                                                linestyle=linestyle)\n-    rect_test2 = Rectangle(loc, width, height, edgecolor=edgecolor,\n-                                             linestyle=linestyle_test)\n-    assert rect_test.get_linestyle() == linestyle\n-    assert rect_test2.get_linestyle() == linestyle_test\n+\n+    rect_test = Rectangle(loc, width, height, linewidth=3, edgecolor='b',\n+                                                    linestyle=(0, [6, 6]))\n+    rect_test2 = Rectangle(loc, width, height, linewidth=3, edgecolor='r',\n+                                                    linestyle=(6, [6, 6]))\n+    assert rect_test.get_linestyle() == (0, [6, 6])\n+    assert rect_test2.get_linestyle() == (6, [6, 6])\n+\n     ax_test.add_patch(rect_test)\n     ax_test.add_patch(rect_test2)\n \n\nFrom b9edc6f39dff033911e26d0195734895bc07c1ca Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Fri, 5 Aug 2022 18:21:22 +0300\nSubject: [PATCH 6/7] Correct mention of code object\n\n---\n doc/users/next_whats_new/fix_dash_offset_Patch.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/doc/users/next_whats_new/fix_dash_offset_Patch.rst b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\nindex 39c6b9f3d9f8..7be55858f70f 100644\n--- a/doc/users/next_whats_new/fix_dash_offset_Patch.rst\n+++ b/doc/users/next_whats_new/fix_dash_offset_Patch.rst\n@@ -1,5 +1,5 @@\n Fix the dash offset of the Patch class\n --------------------------------------\n-Traditionally, when setting the linestyle on a patch object using a dash tuple the\n+Traditionally, when setting the linestyle on a `.Patch` object using a dash tuple the\n offset was ignored. Now the offset is passed to the draw method of Patch as expected\n and it can be used as it is used with Line2D objects.\n\nFrom 4ebe03a8d98f8a078cbd8334dce140e2ad1e1658 Mon Sep 17 00:00:00 2001\nFrom: Anna Mastori <t8190105@aueb.gr>\nDate: Fri, 5 Aug 2022 18:41:13 +0300\nSubject: [PATCH 7/7] Fix indentation in draw method of Patch\n\n---\n lib/matplotlib/patches.py | 3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ndiff --git a/lib/matplotlib/patches.py b/lib/matplotlib/patches.py\nindex 60deb23ff205..8a8b2e2db509 100644\n--- a/lib/matplotlib/patches.py\n+++ b/lib/matplotlib/patches.py\n@@ -587,8 +587,7 @@ def draw(self, renderer):\n         if not self.get_visible():\n             return\n \n-        with cbook._setattr_cm(\n-                 self, _dash_pattern=(self._dash_pattern)), \\\n+        with cbook._setattr_cm(self, _dash_pattern=(self._dash_pattern)), \\\n              self._bind_draw_path_function(renderer) as draw_path:\n             path = self.get_path()\n             transform = self.get_transform()\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/23412"}