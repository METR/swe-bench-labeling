From f762ebc8cb0d8108162e1489aa2b46499c4a2281 Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 10:10:51 -0500
Subject: [PATCH 1/8] issue8394: test generated fixtures start with _

Tests that expose the bug for unittest setUpClass and xunit setup_class
methods.
---
 testing/test_nose.py     | 90 ++++++++++++++++++++++++++++++++++++++++
 testing/test_unittest.py | 45 ++++++++++++++++++++
 2 files changed, 135 insertions(+)

diff --git a/testing/test_nose.py b/testing/test_nose.py
index 13429afafd4..48f4e2b801c 100644
--- a/testing/test_nose.py
+++ b/testing/test_nose.py
@@ -211,6 +211,96 @@ def test_world():
     result.stdout.fnmatch_lines(["*2 passed*"])
 
 
+def test_fixtures_nose_setup_module_issue8394(pytester: Pytester) -> None:
+    pytester.makepyfile(
+        """
+        def setup_module():
+            pass
+
+        def teardown_module():
+            pass
+
+        def test_world():
+            pass
+        """        
+    )
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*"])
+
+
+def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:
+    pytester.makepyfile(
+        """
+        class Test(object):
+            def setup_method(self, meth): 
+                pass
+
+            def teardown_method(self, meth):
+                pass
+
+            def test_method_1(self): pass
+        """        
+    )
+    
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*"])
+
+
+def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:
+    pytester.makepyfile(
+        """
+        class Test(object):
+            def setup_class(cls): 
+                pass
+
+            def teardown_class(cls):
+                pass
+
+            def test_method_1(self): pass
+        """        
+    )
+    
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*"])
+
+
+def test_fixtures_nose_setup_function_issue8394(pytester: Pytester) -> None:
+    pytester.makepyfile(
+        """
+        def setup_function(func):
+            pass
+
+        def teardown_function(func):
+            pass
+
+        def test_world():
+            pass
+        """        
+    )
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*"])
+
+
 def test_nose_setup_ordering(pytester: Pytester) -> None:
     pytester.makepyfile(
         """
diff --git a/testing/test_unittest.py b/testing/test_unittest.py
index 69bafc26d61..4caccc668a1 100644
--- a/testing/test_unittest.py
+++ b/testing/test_unittest.py
@@ -301,6 +301,29 @@ def test_teareddown():
     reprec = pytester.inline_run(testpath)
     reprec.assertoutcome(passed=3)
 
+def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:
+    testpath = pytester.makepyfile(
+        """
+        import unittest
+        class MyTestCase(unittest.TestCase):
+            @classmethod
+            def setUpClass(cls):
+                pass
+            def test_func1(self):
+                pass
+            @classmethod
+            def tearDownClass(cls):
+                pass
+    """
+    )
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*"])
+
 
 def test_setup_class(pytester: Pytester) -> None:
     testpath = pytester.makepyfile(
@@ -325,6 +348,28 @@ def test_teareddown():
     reprec.assertoutcome(passed=3)
 
 
+def test_fixtures_setup(pytester: Pytester) -> None:
+    testpath = pytester.makepyfile(
+        """
+        import unittest
+        class MyTestCase(unittest.TestCase):
+            def setup_method(self, method):
+                pass
+            def test_func1(self):
+                pass
+            def teardown_method(self, method):
+                assert 0, "42"
+    """
+    )
+    result = pytester.runpytest("--fixtures")
+    assert result.ret == 0
+    result.stdout.no_fnmatch_line("*no docstring available*")
+
+    result = pytester.runpytest("--fixtures", "-v")
+    assert result.ret == 0
+    result.stdout.fnmatch_lines(["*no docstring available*", "*no docstring available*"])
+
+
 @pytest.mark.parametrize("type", ["Error", "Failure"])
 def test_testcase_adderrorandfailure_defers(pytester: Pytester, type: str) -> None:
     pytester.makepyfile(

From d228bedb606910723864a18c3188f725b4ada94e Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 10:11:16 -0500
Subject: [PATCH 2/8] closes #8394: generated fixture names start with _

---
 src/_pytest/python.py   | 8 ++++----
 src/_pytest/unittest.py | 2 +-
 2 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/_pytest/python.py b/src/_pytest/python.py
index 40116ab9c5a..c19d2ed4fb4 100644
--- a/src/_pytest/python.py
+++ b/src/_pytest/python.py
@@ -528,7 +528,7 @@ def _inject_setup_module_fixture(self) -> None:
             autouse=True,
             scope="module",
             # Use a unique name to speed up lookup.
-            name=f"xunit_setup_module_fixture_{self.obj.__name__}",
+            name=f"_xunit_setup_module_fixture_{self.obj.__name__}",
         )
         def xunit_setup_module_fixture(request) -> Generator[None, None, None]:
             if setup_module is not None:
@@ -557,7 +557,7 @@ def _inject_setup_function_fixture(self) -> None:
             autouse=True,
             scope="function",
             # Use a unique name to speed up lookup.
-            name=f"xunit_setup_function_fixture_{self.obj.__name__}",
+            name=f"_xunit_setup_function_fixture_{self.obj.__name__}",
         )
         def xunit_setup_function_fixture(request) -> Generator[None, None, None]:
             if request.instance is not None:
@@ -809,7 +809,7 @@ def _inject_setup_class_fixture(self) -> None:
             autouse=True,
             scope="class",
             # Use a unique name to speed up lookup.
-            name=f"xunit_setup_class_fixture_{self.obj.__qualname__}",
+            name=f"_xunit_setup_class_fixture_{self.obj.__qualname__}",
         )
         def xunit_setup_class_fixture(cls) -> Generator[None, None, None]:
             if setup_class is not None:
@@ -838,7 +838,7 @@ def _inject_setup_method_fixture(self) -> None:
             autouse=True,
             scope="function",
             # Use a unique name to speed up lookup.
-            name=f"xunit_setup_method_fixture_{self.obj.__qualname__}",
+            name=f"_xunit_setup_method_fixture_{self.obj.__qualname__}",
         )
         def xunit_setup_method_fixture(self, request) -> Generator[None, None, None]:
             method = request.function
diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py
index 719eb4e8823..3f88d7a9e2c 100644
--- a/src/_pytest/unittest.py
+++ b/src/_pytest/unittest.py
@@ -144,7 +144,7 @@ def cleanup(*args):
         scope=scope,
         autouse=True,
         # Use a unique name to speed up lookup.
-        name=f"unittest_{setup_name}_fixture_{obj.__qualname__}",
+        name=f"_unittest_{setup_name}_fixture_{obj.__qualname__}",
     )
     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:
         if _is_skipped(self):

From 49449c65b7932c17dfd815619d039a158ac12701 Mon Sep 17 00:00:00 2001
From: "pre-commit-ci[bot]"
 <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Date: Thu, 4 Mar 2021 17:53:36 +0000
Subject: [PATCH 3/8] [pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci
---
 testing/test_nose.py     | 16 ++++++++--------
 testing/test_unittest.py |  5 ++++-
 2 files changed, 12 insertions(+), 9 deletions(-)

diff --git a/testing/test_nose.py b/testing/test_nose.py
index 48f4e2b801c..e5676f5007d 100644
--- a/testing/test_nose.py
+++ b/testing/test_nose.py
@@ -222,7 +222,7 @@ def teardown_module():
 
         def test_world():
             pass
-        """        
+        """
     )
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
@@ -237,16 +237,16 @@ def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:
     pytester.makepyfile(
         """
         class Test(object):
-            def setup_method(self, meth): 
+            def setup_method(self, meth):
                 pass
 
             def teardown_method(self, meth):
                 pass
 
             def test_method_1(self): pass
-        """        
+        """
     )
-    
+
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
     result.stdout.no_fnmatch_line("*no docstring available*")
@@ -260,16 +260,16 @@ def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:
     pytester.makepyfile(
         """
         class Test(object):
-            def setup_class(cls): 
+            def setup_class(cls):
                 pass
 
             def teardown_class(cls):
                 pass
 
             def test_method_1(self): pass
-        """        
+        """
     )
-    
+
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
     result.stdout.no_fnmatch_line("*no docstring available*")
@@ -290,7 +290,7 @@ def teardown_function(func):
 
         def test_world():
             pass
-        """        
+        """
     )
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
diff --git a/testing/test_unittest.py b/testing/test_unittest.py
index 4caccc668a1..abb531edd49 100644
--- a/testing/test_unittest.py
+++ b/testing/test_unittest.py
@@ -301,6 +301,7 @@ def test_teareddown():
     reprec = pytester.inline_run(testpath)
     reprec.assertoutcome(passed=3)
 
+
 def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:
     testpath = pytester.makepyfile(
         """
@@ -367,7 +368,9 @@ def teardown_method(self, method):
 
     result = pytester.runpytest("--fixtures", "-v")
     assert result.ret == 0
-    result.stdout.fnmatch_lines(["*no docstring available*", "*no docstring available*"])
+    result.stdout.fnmatch_lines(
+        ["*no docstring available*", "*no docstring available*"]
+    )
 
 
 @pytest.mark.parametrize("type", ["Error", "Failure"])

From 8f97d504921777f443d84450510f4f868020fe5e Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 14:35:54 -0500
Subject: [PATCH 4/8] issue 8394: combined unit-tests & lint

---
 testing/test_nose.py     | 76 ++++++++--------------------------------
 testing/test_unittest.py | 26 +-------------
 2 files changed, 16 insertions(+), 86 deletions(-)

diff --git a/testing/test_nose.py b/testing/test_nose.py
index e5676f5007d..a24a66a4133 100644
--- a/testing/test_nose.py
+++ b/testing/test_nose.py
@@ -211,7 +211,7 @@ def test_world():
     result.stdout.fnmatch_lines(["*2 passed*"])
 
 
-def test_fixtures_nose_setup_module_issue8394(pytester: Pytester) -> None:
+def test_fixtures_nose_setup_issue8394(pytester: Pytester) -> None:
     pytester.makepyfile(
         """
         def setup_module():
@@ -220,45 +220,15 @@ def setup_module():
         def teardown_module():
             pass
 
-        def test_world():
+        def setup_function(func):
             pass
-        """
-    )
-    result = pytester.runpytest("--fixtures")
-    assert result.ret == 0
-    result.stdout.no_fnmatch_line("*no docstring available*")
-
-    result = pytester.runpytest("--fixtures", "-v")
-    assert result.ret == 0
-    result.stdout.fnmatch_lines(["*no docstring available*"])
-
-
-def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:
-    pytester.makepyfile(
-        """
-        class Test(object):
-            def setup_method(self, meth):
-                pass
-
-            def teardown_method(self, meth):
-                pass
-
-            def test_method_1(self): pass
-        """
-    )
-
-    result = pytester.runpytest("--fixtures")
-    assert result.ret == 0
-    result.stdout.no_fnmatch_line("*no docstring available*")
 
-    result = pytester.runpytest("--fixtures", "-v")
-    assert result.ret == 0
-    result.stdout.fnmatch_lines(["*no docstring available*"])
+        def teardown_function(func):
+            pass
 
+        def test_world():
+            pass
 
-def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:
-    pytester.makepyfile(
-        """
         class Test(object):
             def setup_class(cls):
                 pass
@@ -266,39 +236,23 @@ def setup_class(cls):
             def teardown_class(cls):
                 pass
 
-            def test_method_1(self): pass
-        """
-    )
-
-    result = pytester.runpytest("--fixtures")
-    assert result.ret == 0
-    result.stdout.no_fnmatch_line("*no docstring available*")
-
-    result = pytester.runpytest("--fixtures", "-v")
-    assert result.ret == 0
-    result.stdout.fnmatch_lines(["*no docstring available*"])
-
-
-def test_fixtures_nose_setup_function_issue8394(pytester: Pytester) -> None:
-    pytester.makepyfile(
-        """
-        def setup_function(func):
-            pass
+            def setup_method(self, meth):
+                pass
 
-        def teardown_function(func):
-            pass
+            def teardown_method(self, meth):
+                pass
 
-        def test_world():
-            pass
-        """
+            def test_method(self): pass
+        """        
     )
+    regex = "*no docstring available*"
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
-    result.stdout.no_fnmatch_line("*no docstring available*")
+    result.stdout.no_fnmatch_line(regex)
 
     result = pytester.runpytest("--fixtures", "-v")
     assert result.ret == 0
-    result.stdout.fnmatch_lines(["*no docstring available*"])
+    result.stdout.fnmatch_lines([regex, regex, regex, regex])
 
 
 def test_nose_setup_ordering(pytester: Pytester) -> None:
diff --git a/testing/test_unittest.py b/testing/test_unittest.py
index abb531edd49..d26e5c42c0b 100644
--- a/testing/test_unittest.py
+++ b/testing/test_unittest.py
@@ -327,7 +327,7 @@ def tearDownClass(cls):
 
 
 def test_setup_class(pytester: Pytester) -> None:
-    testpath = pytester.makepyfile(
+    pytester.makepyfile(
         """
         import unittest
         import pytest
@@ -349,30 +349,6 @@ def test_teareddown():
     reprec.assertoutcome(passed=3)
 
 
-def test_fixtures_setup(pytester: Pytester) -> None:
-    testpath = pytester.makepyfile(
-        """
-        import unittest
-        class MyTestCase(unittest.TestCase):
-            def setup_method(self, method):
-                pass
-            def test_func1(self):
-                pass
-            def teardown_method(self, method):
-                assert 0, "42"
-    """
-    )
-    result = pytester.runpytest("--fixtures")
-    assert result.ret == 0
-    result.stdout.no_fnmatch_line("*no docstring available*")
-
-    result = pytester.runpytest("--fixtures", "-v")
-    assert result.ret == 0
-    result.stdout.fnmatch_lines(
-        ["*no docstring available*", "*no docstring available*"]
-    )
-
-
 @pytest.mark.parametrize("type", ["Error", "Failure"])
 def test_testcase_adderrorandfailure_defers(pytester: Pytester, type: str) -> None:
     pytester.makepyfile(

From b00789018b886fbd4e77c4aa64908ba9b74d4b1e Mon Sep 17 00:00:00 2001
From: "pre-commit-ci[bot]"
 <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Date: Thu, 4 Mar 2021 19:37:36 +0000
Subject: [PATCH 5/8] [pre-commit.ci] auto fixes from pre-commit.com hooks

for more information, see https://pre-commit.ci
---
 testing/test_nose.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/testing/test_nose.py b/testing/test_nose.py
index a24a66a4133..a3e935e612d 100644
--- a/testing/test_nose.py
+++ b/testing/test_nose.py
@@ -243,7 +243,7 @@ def teardown_method(self, meth):
                 pass
 
             def test_method(self): pass
-        """        
+        """
     )
     regex = "*no docstring available*"
     result = pytester.runpytest("--fixtures")

From 9fe69cb845da55b03b04c675ac84d0928db1a887 Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 14:45:01 -0500
Subject: [PATCH 6/8] fixup (the effects of sleep deprivation)

---
 testing/test_unittest.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/testing/test_unittest.py b/testing/test_unittest.py
index d26e5c42c0b..d7f7737153d 100644
--- a/testing/test_unittest.py
+++ b/testing/test_unittest.py
@@ -303,7 +303,7 @@ def test_teareddown():
 
 
 def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:
-    testpath = pytester.makepyfile(
+    pytester.makepyfile(
         """
         import unittest
         class MyTestCase(unittest.TestCase):
@@ -327,7 +327,7 @@ def tearDownClass(cls):
 
 
 def test_setup_class(pytester: Pytester) -> None:
-    pytester.makepyfile(
+    testpath = pytester.makepyfile(
         """
         import unittest
         import pytest

From ba05d88f05380e765f0ddca89aa317682996d8f1 Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 15:27:21 -0500
Subject: [PATCH 7/8] issue8394: add changelog

---
 changelog/8394.bugfix.rst | 1 +
 1 file changed, 1 insertion(+)
 create mode 100644 changelog/8394.bugfix.rst

diff --git a/changelog/8394.bugfix.rst b/changelog/8394.bugfix.rst
new file mode 100644
index 00000000000..a0fb5bb71fd
--- /dev/null
+++ b/changelog/8394.bugfix.rst
@@ -0,0 +1 @@
+Use private names for internal fixtures that handle classic setup/teardown so that they don't show up with the default ``--fixtures`` invocation (but they still show up with ``--fixtures -v``).

From 43ce0ac4a8a39031b2220e27feae445eb0ef5b88 Mon Sep 17 00:00:00 2001
From: atzannes <atzannes@gmail.com>
Date: Thu, 4 Mar 2021 15:29:22 -0500
Subject: [PATCH 8/8] fixup: var-rename

---
 testing/test_nose.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/testing/test_nose.py b/testing/test_nose.py
index a3e935e612d..77f79b53b3c 100644
--- a/testing/test_nose.py
+++ b/testing/test_nose.py
@@ -245,14 +245,14 @@ def teardown_method(self, meth):
             def test_method(self): pass
         """
     )
-    regex = "*no docstring available*"
+    match = "*no docstring available*"
     result = pytester.runpytest("--fixtures")
     assert result.ret == 0
-    result.stdout.no_fnmatch_line(regex)
+    result.stdout.no_fnmatch_line(match)
 
     result = pytester.runpytest("--fixtures", "-v")
     assert result.ret == 0
-    result.stdout.fnmatch_lines([regex, regex, regex, regex])
+    result.stdout.fnmatch_lines([match, match, match, match])
 
 
 def test_nose_setup_ordering(pytester: Pytester) -> None:
