{"instance_id": "sphinx-doc__sphinx-8595", "score": "I", "diff": "diff --git a/_build/.doctrees/CONTRIBUTING.doctree b/_build/.doctrees/CONTRIBUTING.doctree\nnew file mode 100644\nindex 000000000..22177b939\nBinary files /dev/null and b/_build/.doctrees/CONTRIBUTING.doctree differ\ndiff --git a/_build/.doctrees/README.doctree b/_build/.doctrees/README.doctree\nnew file mode 100644\nindex 000000000..0da927987\nBinary files /dev/null and b/_build/.doctrees/README.doctree differ\ndiff --git a/_build/.doctrees/doc/changes.doctree b/_build/.doctrees/doc/changes.doctree\nnew file mode 100644\nindex 000000000..94f033f06\nBinary files /dev/null and b/_build/.doctrees/doc/changes.doctree differ\ndiff --git a/_build/.doctrees/doc/contents.doctree b/_build/.doctrees/doc/contents.doctree\nnew file mode 100644\nindex 000000000..de0736934\nBinary files /dev/null and b/_build/.doctrees/doc/contents.doctree differ\ndiff --git a/_build/.doctrees/doc/develop.doctree b/_build/.doctrees/doc/develop.doctree\nnew file mode 100644\nindex 000000000..96cc00e98\nBinary files /dev/null and b/_build/.doctrees/doc/develop.doctree differ\ndiff --git a/_build/.doctrees/doc/development/builders.doctree b/_build/.doctrees/doc/development/builders.doctree\nnew file mode 100644\nindex 000000000..707eaf0d2\nBinary files /dev/null and b/_build/.doctrees/doc/development/builders.doctree differ\ndiff --git a/_build/.doctrees/doc/development/index.doctree b/_build/.doctrees/doc/development/index.doctree\nnew file mode 100644\nindex 000000000..47fb2d38e\nBinary files /dev/null and b/_build/.doctrees/doc/development/index.doctree differ\ndiff --git a/_build/.doctrees/doc/development/overview.doctree b/_build/.doctrees/doc/development/overview.doctree\nnew file mode 100644\nindex 000000000..071562abc\nBinary files /dev/null and b/_build/.doctrees/doc/development/overview.doctree differ\ndiff --git a/_build/.doctrees/doc/development/theming.doctree b/_build/.doctrees/doc/development/theming.doctree\nnew file mode 100644\nindex 000000000..26d1f2539\nBinary files /dev/null and b/_build/.doctrees/doc/development/theming.doctree differ\ndiff --git a/_build/.doctrees/doc/development/tutorials/examples/README.doctree b/_build/.doctrees/doc/development/tutorials/examples/README.doctree\nnew file mode 100644\nindex 000000000..88c3bec37\nBinary files /dev/null and b/_build/.doctrees/doc/development/tutorials/examples/README.doctree differ\ndiff --git a/_build/.doctrees/doc/development/tutorials/helloworld.doctree b/_build/.doctrees/doc/development/tutorials/helloworld.doctree\nnew file mode 100644\nindex 000000000..29e36a207\nBinary files /dev/null and b/_build/.doctrees/doc/development/tutorials/helloworld.doctree differ\ndiff --git a/_build/.doctrees/doc/development/tutorials/index.doctree b/_build/.doctrees/doc/development/tutorials/index.doctree\nnew file mode 100644\nindex 000000000..066712e60\nBinary files /dev/null and b/_build/.doctrees/doc/development/tutorials/index.doctree differ\ndiff --git a/_build/.doctrees/doc/development/tutorials/recipe.doctree b/_build/.doctrees/doc/development/tutorials/recipe.doctree\nnew file mode 100644\nindex 000000000..7e410bfc0\nBinary files /dev/null and b/_build/.doctrees/doc/development/tutorials/recipe.doctree differ\ndiff --git a/_build/.doctrees/doc/development/tutorials/todo.doctree b/_build/.doctrees/doc/development/tutorials/todo.doctree\nnew file mode 100644\nindex 000000000..5efef9f0b\nBinary files /dev/null and b/_build/.doctrees/doc/development/tutorials/todo.doctree differ\ndiff --git a/_build/.doctrees/doc/examples.doctree b/_build/.doctrees/doc/examples.doctree\nnew file mode 100644\nindex 000000000..2915b6b3e\nBinary files /dev/null and b/_build/.doctrees/doc/examples.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/appapi.doctree b/_build/.doctrees/doc/extdev/appapi.doctree\nnew file mode 100644\nindex 000000000..1fc0e9d51\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/appapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/builderapi.doctree b/_build/.doctrees/doc/extdev/builderapi.doctree\nnew file mode 100644\nindex 000000000..765248a5d\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/builderapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/collectorapi.doctree b/_build/.doctrees/doc/extdev/collectorapi.doctree\nnew file mode 100644\nindex 000000000..ff8270105\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/collectorapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/deprecated.doctree b/_build/.doctrees/doc/extdev/deprecated.doctree\nnew file mode 100644\nindex 000000000..77d483364\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/deprecated.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/domainapi.doctree b/_build/.doctrees/doc/extdev/domainapi.doctree\nnew file mode 100644\nindex 000000000..1191022b5\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/domainapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/envapi.doctree b/_build/.doctrees/doc/extdev/envapi.doctree\nnew file mode 100644\nindex 000000000..a0c511a83\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/envapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/i18n.doctree b/_build/.doctrees/doc/extdev/i18n.doctree\nnew file mode 100644\nindex 000000000..9864aae68\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/i18n.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/index.doctree b/_build/.doctrees/doc/extdev/index.doctree\nnew file mode 100644\nindex 000000000..0d41909d6\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/index.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/logging.doctree b/_build/.doctrees/doc/extdev/logging.doctree\nnew file mode 100644\nindex 000000000..2103206db\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/logging.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/markupapi.doctree b/_build/.doctrees/doc/extdev/markupapi.doctree\nnew file mode 100644\nindex 000000000..0a96486ce\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/markupapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/nodes.doctree b/_build/.doctrees/doc/extdev/nodes.doctree\nnew file mode 100644\nindex 000000000..347562017\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/nodes.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/parserapi.doctree b/_build/.doctrees/doc/extdev/parserapi.doctree\nnew file mode 100644\nindex 000000000..bc38f7584\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/parserapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/projectapi.doctree b/_build/.doctrees/doc/extdev/projectapi.doctree\nnew file mode 100644\nindex 000000000..4079ab0b6\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/projectapi.doctree differ\ndiff --git a/_build/.doctrees/doc/extdev/utils.doctree b/_build/.doctrees/doc/extdev/utils.doctree\nnew file mode 100644\nindex 000000000..7d7b01d48\nBinary files /dev/null and b/_build/.doctrees/doc/extdev/utils.doctree differ\ndiff --git a/_build/.doctrees/doc/faq.doctree b/_build/.doctrees/doc/faq.doctree\nnew file mode 100644\nindex 000000000..f7db63c6e\nBinary files /dev/null and b/_build/.doctrees/doc/faq.doctree differ\ndiff --git a/_build/.doctrees/doc/glossary.doctree b/_build/.doctrees/doc/glossary.doctree\nnew file mode 100644\nindex 000000000..56e3a7da3\nBinary files /dev/null and b/_build/.doctrees/doc/glossary.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/authors.doctree b/_build/.doctrees/doc/internals/authors.doctree\nnew file mode 100644\nindex 000000000..02b483cba\nBinary files /dev/null and b/_build/.doctrees/doc/internals/authors.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/code-of-conduct.doctree b/_build/.doctrees/doc/internals/code-of-conduct.doctree\nnew file mode 100644\nindex 000000000..bbc47ec02\nBinary files /dev/null and b/_build/.doctrees/doc/internals/code-of-conduct.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/contributing.doctree b/_build/.doctrees/doc/internals/contributing.doctree\nnew file mode 100644\nindex 000000000..ab921840b\nBinary files /dev/null and b/_build/.doctrees/doc/internals/contributing.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/index.doctree b/_build/.doctrees/doc/internals/index.doctree\nnew file mode 100644\nindex 000000000..136b3fdc0\nBinary files /dev/null and b/_build/.doctrees/doc/internals/index.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/organization.doctree b/_build/.doctrees/doc/internals/organization.doctree\nnew file mode 100644\nindex 000000000..92e3f0179\nBinary files /dev/null and b/_build/.doctrees/doc/internals/organization.doctree differ\ndiff --git a/_build/.doctrees/doc/internals/release-process.doctree b/_build/.doctrees/doc/internals/release-process.doctree\nnew file mode 100644\nindex 000000000..a0c2aa840\nBinary files /dev/null and b/_build/.doctrees/doc/internals/release-process.doctree differ\ndiff --git a/_build/.doctrees/doc/latex.doctree b/_build/.doctrees/doc/latex.doctree\nnew file mode 100644\nindex 000000000..3c2762807\nBinary files /dev/null and b/_build/.doctrees/doc/latex.doctree differ\ndiff --git a/_build/.doctrees/doc/man/index.doctree b/_build/.doctrees/doc/man/index.doctree\nnew file mode 100644\nindex 000000000..831f834b6\nBinary files /dev/null and b/_build/.doctrees/doc/man/index.doctree differ\ndiff --git a/_build/.doctrees/doc/man/sphinx-apidoc.doctree b/_build/.doctrees/doc/man/sphinx-apidoc.doctree\nnew file mode 100644\nindex 000000000..edd12afc1\nBinary files /dev/null and b/_build/.doctrees/doc/man/sphinx-apidoc.doctree differ\ndiff --git a/_build/.doctrees/doc/man/sphinx-autogen.doctree b/_build/.doctrees/doc/man/sphinx-autogen.doctree\nnew file mode 100644\nindex 000000000..9faf97727\nBinary files /dev/null and b/_build/.doctrees/doc/man/sphinx-autogen.doctree differ\ndiff --git a/_build/.doctrees/doc/man/sphinx-build.doctree b/_build/.doctrees/doc/man/sphinx-build.doctree\nnew file mode 100644\nindex 000000000..087dc068a\nBinary files /dev/null and b/_build/.doctrees/doc/man/sphinx-build.doctree differ\ndiff --git a/_build/.doctrees/doc/man/sphinx-quickstart.doctree b/_build/.doctrees/doc/man/sphinx-quickstart.doctree\nnew file mode 100644\nindex 000000000..9ad1a6b10\nBinary files /dev/null and b/_build/.doctrees/doc/man/sphinx-quickstart.doctree differ\ndiff --git a/_build/.doctrees/doc/templating.doctree b/_build/.doctrees/doc/templating.doctree\nnew file mode 100644\nindex 000000000..dff768de2\nBinary files /dev/null and b/_build/.doctrees/doc/templating.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/intl.doctree b/_build/.doctrees/doc/usage/advanced/intl.doctree\nnew file mode 100644\nindex 000000000..e11774e50\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/intl.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/setuptools.doctree b/_build/.doctrees/doc/usage/advanced/setuptools.doctree\nnew file mode 100644\nindex 000000000..9010fbf41\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/setuptools.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/websupport/api.doctree b/_build/.doctrees/doc/usage/advanced/websupport/api.doctree\nnew file mode 100644\nindex 000000000..33eaae062\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/api.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/websupport/index.doctree b/_build/.doctrees/doc/usage/advanced/websupport/index.doctree\nnew file mode 100644\nindex 000000000..516f1c420\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/index.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree b/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree\nnew file mode 100644\nindex 000000000..c8c2af141\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree b/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree\nnew file mode 100644\nindex 000000000..c74ff046f\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree b/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree\nnew file mode 100644\nindex 000000000..04cf211ac\nBinary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/builders/index.doctree b/_build/.doctrees/doc/usage/builders/index.doctree\nnew file mode 100644\nindex 000000000..4d0ac0c9f\nBinary files /dev/null and b/_build/.doctrees/doc/usage/builders/index.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/configuration.doctree b/_build/.doctrees/doc/usage/configuration.doctree\nnew file mode 100644\nindex 000000000..e699691df\nBinary files /dev/null and b/_build/.doctrees/doc/usage/configuration.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/autodoc.doctree b/_build/.doctrees/doc/usage/extensions/autodoc.doctree\nnew file mode 100644\nindex 000000000..5e0a71bf5\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autodoc.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree b/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree\nnew file mode 100644\nindex 000000000..e08eeaccf\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/autosummary.doctree b/_build/.doctrees/doc/usage/extensions/autosummary.doctree\nnew file mode 100644\nindex 000000000..d0a5cb7b2\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autosummary.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/coverage.doctree b/_build/.doctrees/doc/usage/extensions/coverage.doctree\nnew file mode 100644\nindex 000000000..dd45b1560\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/coverage.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/doctest.doctree b/_build/.doctrees/doc/usage/extensions/doctest.doctree\nnew file mode 100644\nindex 000000000..6e4b2a4c8\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/doctest.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/duration.doctree b/_build/.doctrees/doc/usage/extensions/duration.doctree\nnew file mode 100644\nindex 000000000..6fd1a5f1f\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/duration.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/example_google.doctree b/_build/.doctrees/doc/usage/extensions/example_google.doctree\nnew file mode 100644\nindex 000000000..8d35e36ab\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/example_google.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/example_numpy.doctree b/_build/.doctrees/doc/usage/extensions/example_numpy.doctree\nnew file mode 100644\nindex 000000000..951d86933\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/example_numpy.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/extlinks.doctree b/_build/.doctrees/doc/usage/extensions/extlinks.doctree\nnew file mode 100644\nindex 000000000..9ab4765fa\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/extlinks.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/githubpages.doctree b/_build/.doctrees/doc/usage/extensions/githubpages.doctree\nnew file mode 100644\nindex 000000000..21d8ab5fc\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/githubpages.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/graphviz.doctree b/_build/.doctrees/doc/usage/extensions/graphviz.doctree\nnew file mode 100644\nindex 000000000..b4911e6cf\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/graphviz.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/ifconfig.doctree b/_build/.doctrees/doc/usage/extensions/ifconfig.doctree\nnew file mode 100644\nindex 000000000..072084dc0\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/ifconfig.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/imgconverter.doctree b/_build/.doctrees/doc/usage/extensions/imgconverter.doctree\nnew file mode 100644\nindex 000000000..75d658db6\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/imgconverter.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/index.doctree b/_build/.doctrees/doc/usage/extensions/index.doctree\nnew file mode 100644\nindex 000000000..7c918b154\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/index.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/inheritance.doctree b/_build/.doctrees/doc/usage/extensions/inheritance.doctree\nnew file mode 100644\nindex 000000000..919f2bbc4\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/inheritance.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/intersphinx.doctree b/_build/.doctrees/doc/usage/extensions/intersphinx.doctree\nnew file mode 100644\nindex 000000000..c30c23890\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/intersphinx.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/linkcode.doctree b/_build/.doctrees/doc/usage/extensions/linkcode.doctree\nnew file mode 100644\nindex 000000000..cb1326598\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/linkcode.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/math.doctree b/_build/.doctrees/doc/usage/extensions/math.doctree\nnew file mode 100644\nindex 000000000..cad69ecb5\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/math.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/napoleon.doctree b/_build/.doctrees/doc/usage/extensions/napoleon.doctree\nnew file mode 100644\nindex 000000000..bd8c6bc63\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/napoleon.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/todo.doctree b/_build/.doctrees/doc/usage/extensions/todo.doctree\nnew file mode 100644\nindex 000000000..4b1c533a4\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/todo.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/extensions/viewcode.doctree b/_build/.doctrees/doc/usage/extensions/viewcode.doctree\nnew file mode 100644\nindex 000000000..f976f1462\nBinary files /dev/null and b/_build/.doctrees/doc/usage/extensions/viewcode.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/index.doctree b/_build/.doctrees/doc/usage/index.doctree\nnew file mode 100644\nindex 000000000..e627f6c45\nBinary files /dev/null and b/_build/.doctrees/doc/usage/index.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/installation.doctree b/_build/.doctrees/doc/usage/installation.doctree\nnew file mode 100644\nindex 000000000..0eb8ee7f8\nBinary files /dev/null and b/_build/.doctrees/doc/usage/installation.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/markdown.doctree b/_build/.doctrees/doc/usage/markdown.doctree\nnew file mode 100644\nindex 000000000..7f2d9e5f7\nBinary files /dev/null and b/_build/.doctrees/doc/usage/markdown.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/quickstart.doctree b/_build/.doctrees/doc/usage/quickstart.doctree\nnew file mode 100644\nindex 000000000..13e25b1e8\nBinary files /dev/null and b/_build/.doctrees/doc/usage/quickstart.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/basics.doctree b/_build/.doctrees/doc/usage/restructuredtext/basics.doctree\nnew file mode 100644\nindex 000000000..c1aea2dc2\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/basics.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/directives.doctree b/_build/.doctrees/doc/usage/restructuredtext/directives.doctree\nnew file mode 100644\nindex 000000000..b86748bcb\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/directives.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/domains.doctree b/_build/.doctrees/doc/usage/restructuredtext/domains.doctree\nnew file mode 100644\nindex 000000000..18f708780\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/domains.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree b/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree\nnew file mode 100644\nindex 000000000..d80628190\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/index.doctree b/_build/.doctrees/doc/usage/restructuredtext/index.doctree\nnew file mode 100644\nindex 000000000..59a4807e7\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/index.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/restructuredtext/roles.doctree b/_build/.doctrees/doc/usage/restructuredtext/roles.doctree\nnew file mode 100644\nindex 000000000..7452fce78\nBinary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/roles.doctree differ\ndiff --git a/_build/.doctrees/doc/usage/theming.doctree b/_build/.doctrees/doc/usage/theming.doctree\nnew file mode 100644\nindex 000000000..bc276e04b\nBinary files /dev/null and b/_build/.doctrees/doc/usage/theming.doctree differ\ndiff --git a/_build/.doctrees/environment.pickle b/_build/.doctrees/environment.pickle\nnew file mode 100644\nindex 000000000..b3a33ee9e\nBinary files /dev/null and b/_build/.doctrees/environment.pickle differ\ndiff --git a/_build/.doctrees/index.doctree b/_build/.doctrees/index.doctree\nnew file mode 100644\nindex 000000000..f9c2bebd2\nBinary files /dev/null and b/_build/.doctrees/index.doctree differ\ndiff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree\nnew file mode 100644\nindex 000000000..a52691b5a\nBinary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree differ\ndiff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree\nnew file mode 100644\nindex 000000000..8ff9fe679\nBinary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree differ\ndiff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree\nnew file mode 100644\nindex 000000000..e5fc65c35\nBinary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree b/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree\nnew file mode 100644\nindex 000000000..7e8fa089a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree b/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree\nnew file mode 100644\nindex 000000000..d79f6a4e0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-autosummary/index.doctree b/_build/.doctrees/tests/roots/test-autosummary/index.doctree\nnew file mode 100644\nindex 000000000..316c89d3c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-autosummary/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree b/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree\nnew file mode 100644\nindex 000000000..d596ef431\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-basic/index.doctree b/_build/.doctrees/tests/roots/test-basic/index.doctree\nnew file mode 100644\nindex 000000000..c43d6e29c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-basic/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree b/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree\nnew file mode 100644\nindex 000000000..30cf9406e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree\nnew file mode 100644\nindex 000000000..98670fb05\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree\nnew file mode 100644\nindex 000000000..22dca4afc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree\nnew file mode 100644\nindex 000000000..00fd9899c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree\nnew file mode 100644\nindex 000000000..f3c4066c1\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree\nnew file mode 100644\nindex 000000000..2dd837266\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree\nnew file mode 100644\nindex 000000000..3573bef71\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree\nnew file mode 100644\nindex 000000000..f4250062a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-changes/base.doctree b/_build/.doctrees/tests/roots/test-changes/base.doctree\nnew file mode 100644\nindex 000000000..c9e6a1fa6\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/base.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-changes/c-api.doctree b/_build/.doctrees/tests/roots/test-changes/c-api.doctree\nnew file mode 100644\nindex 000000000..d7cf7f863\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/c-api.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-changes/contents.doctree b/_build/.doctrees/tests/roots/test-changes/contents.doctree\nnew file mode 100644\nindex 000000000..cc815bdbd\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/contents.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-changes/library/utils.doctree b/_build/.doctrees/tests/roots/test-changes/library/utils.doctree\nnew file mode 100644\nindex 000000000..6c72d7e4d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/library/utils.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-circular/index.doctree b/_build/.doctrees/tests/roots/test-circular/index.doctree\nnew file mode 100644\nindex 000000000..3f99a4c86\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-circular/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-circular/sub.doctree b/_build/.doctrees/tests/roots/test-circular/sub.doctree\nnew file mode 100644\nindex 000000000..0e2f6e15b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-circular/sub.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-correct-year/index.doctree b/_build/.doctrees/tests/roots/test-correct-year/index.doctree\nnew file mode 100644\nindex 000000000..24cefad5a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-correct-year/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-default_role/foo.doctree b/_build/.doctrees/tests/roots/test-default_role/foo.doctree\nnew file mode 100644\nindex 000000000..47f82305d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-default_role/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-default_role/index.doctree b/_build/.doctrees/tests/roots/test-default_role/index.doctree\nnew file mode 100644\nindex 000000000..82622659e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-default_role/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/caption.doctree b/_build/.doctrees/tests/roots/test-directive-code/caption.doctree\nnew file mode 100644\nindex 000000000..c7f8fc73f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/caption.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/classes.doctree b/_build/.doctrees/tests/roots/test-directive-code/classes.doctree\nnew file mode 100644\nindex 000000000..3d37d06b3\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/classes.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree b/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree\nnew file mode 100644\nindex 000000000..9d86e0b58\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/force.doctree b/_build/.doctrees/tests/roots/test-directive-code/force.doctree\nnew file mode 100644\nindex 000000000..f606f0c3c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/force.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree b/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree\nnew file mode 100644\nindex 000000000..c06b9de6f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/index.doctree b/_build/.doctrees/tests/roots/test-directive-code/index.doctree\nnew file mode 100644\nindex 000000000..375e5285f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree b/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree\nnew file mode 100644\nindex 000000000..adb15cd1f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree b/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree\nnew file mode 100644\nindex 000000000..672a7b535\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree b/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree\nnew file mode 100644\nindex 000000000..6b6f378ae\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree b/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree\nnew file mode 100644\nindex 000000000..a6b6d8291\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-code/python.doctree b/_build/.doctrees/tests/roots/test-directive-code/python.doctree\nnew file mode 100644\nindex 000000000..ab82cc27d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/python.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-only/index.doctree b/_build/.doctrees/tests/roots/test-directive-only/index.doctree\nnew file mode 100644\nindex 000000000..cb6f02fbb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-only/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directive-only/only.doctree b/_build/.doctrees/tests/roots/test-directive-only/only.doctree\nnew file mode 100644\nindex 000000000..77651c020\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-only/only.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-directives-raw/index.doctree b/_build/.doctrees/tests/roots/test-directives-raw/index.doctree\nnew file mode 100644\nindex 000000000..485983a8d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-directives-raw/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree b/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree\nnew file mode 100644\nindex 000000000..7d9fea125\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree b/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree\nnew file mode 100644\nindex 000000000..66ff12b9d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree b/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree\nnew file mode 100644\nindex 000000000..ad927464a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-c/index.doctree b/_build/.doctrees/tests/roots/test-domain-c/index.doctree\nnew file mode 100644\nindex 000000000..700859092\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree b/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree\nnew file mode 100644\nindex 000000000..225214d50\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree b/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree\nnew file mode 100644\nindex 000000000..4822daa1b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree\nnew file mode 100644\nindex 000000000..7c7034cc3\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree\nnew file mode 100644\nindex 000000000..1d0962580\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree\nnew file mode 100644\nindex 000000000..a906d3af5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree\nnew file mode 100644\nindex 000000000..b34f8790d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree\nnew file mode 100644\nindex 000000000..58ec0ad20\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree\nnew file mode 100644\nindex 000000000..d84ee48d5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree\nnew file mode 100644\nindex 000000000..a0a04ef3c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree\nnew file mode 100644\nindex 000000000..e4fb4ddc4\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree\nnew file mode 100644\nindex 000000000..709dc1d58\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree\nnew file mode 100644\nindex 000000000..33b81f627\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree\nnew file mode 100644\nindex 000000000..9a5d3e91b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree\nnew file mode 100644\nindex 000000000..bd69e3883\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree\nnew file mode 100644\nindex 000000000..c10d087ce\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-js/index.doctree b/_build/.doctrees/tests/roots/test-domain-js/index.doctree\nnew file mode 100644\nindex 000000000..7701e3245\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-js/module.doctree b/_build/.doctrees/tests/roots/test-domain-js/module.doctree\nnew file mode 100644\nindex 000000000..9d39caccc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/module.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-js/roles.doctree b/_build/.doctrees/tests/roots/test-domain-js/roles.doctree\nnew file mode 100644\nindex 000000000..c90ab7b09\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/roles.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree b/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree\nnew file mode 100644\nindex 000000000..57d1c3282\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-py/index.doctree b/_build/.doctrees/tests/roots/test-domain-py/index.doctree\nnew file mode 100644\nindex 000000000..c5e3ec2e5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-py/module.doctree b/_build/.doctrees/tests/roots/test-domain-py/module.doctree\nnew file mode 100644\nindex 000000000..29a82fe16\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/module.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree b/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree\nnew file mode 100644\nindex 000000000..a48a652d2\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-domain-py/roles.doctree b/_build/.doctrees/tests/roots/test-domain-py/roles.doctree\nnew file mode 100644\nindex 000000000..fa599b027\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/roles.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree b/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree\nnew file mode 100644\nindex 000000000..804e2bff2\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree b/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree\nnew file mode 100644\nindex 000000000..33e5129ae\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree b/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree\nnew file mode 100644\nindex 000000000..3b5ed26e1\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree\nnew file mode 100644\nindex 000000000..30f23a13f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree\nnew file mode 100644\nindex 000000000..601379019\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree\nnew file mode 100644\nindex 000000000..c32fcfd6c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree\nnew file mode 100644\nindex 000000000..479ded0cd\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree\nnew file mode 100644\nindex 000000000..f32c38196\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree\nnew file mode 100644\nindex 000000000..9a2fe3a1e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree\nnew file mode 100644\nindex 000000000..de6cc0ca5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree\nnew file mode 100644\nindex 000000000..70e30a373\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree\nnew file mode 100644\nindex 000000000..cdb43bfd4\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree\nnew file mode 100644\nindex 000000000..7cc48d23f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree b/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree\nnew file mode 100644\nindex 000000000..071ec6972\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree\nnew file mode 100644\nindex 000000000..0dd100ee7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree\nnew file mode 100644\nindex 000000000..b23a142c2\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree b/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree\nnew file mode 100644\nindex 000000000..79f82b9aa\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree b/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree\nnew file mode 100644\nindex 000000000..698106991\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree b/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree\nnew file mode 100644\nindex 000000000..5f134cc47\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree b/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree\nnew file mode 100644\nindex 000000000..ed7bdd130\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree b/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree\nnew file mode 100644\nindex 000000000..fcf5051a7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree b/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree\nnew file mode 100644\nindex 000000000..5376f5c8e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree b/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree\nnew file mode 100644\nindex 000000000..2788e54ae\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree b/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree\nnew file mode 100644\nindex 000000000..508db5cc1\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-math/index.doctree b/_build/.doctrees/tests/roots/test-ext-math/index.doctree\nnew file mode 100644\nindex 000000000..506cbfc72\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-math/math.doctree b/_build/.doctrees/tests/roots/test-ext-math/math.doctree\nnew file mode 100644\nindex 000000000..afc50ffd0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/math.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-math/page.doctree b/_build/.doctrees/tests/roots/test-ext-math/page.doctree\nnew file mode 100644\nindex 000000000..64df829ed\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/page.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree b/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree\nnew file mode 100644\nindex 000000000..ff74d24b8\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree b/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree\nnew file mode 100644\nindex 000000000..d481b13eb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-todo/index.doctree b/_build/.doctrees/tests/roots/test-ext-todo/index.doctree\nnew file mode 100644\nindex 000000000..d71466068\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree\nnew file mode 100644\nindex 000000000..fa43d03da\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree\nnew file mode 100644\nindex 000000000..58d1314c2\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree\nnew file mode 100644\nindex 000000000..c94bc2e68\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-footnotes/bar.doctree b/_build/.doctrees/tests/roots/test-footnotes/bar.doctree\nnew file mode 100644\nindex 000000000..f7ac4c5cb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-footnotes/baz.doctree b/_build/.doctrees/tests/roots/test-footnotes/baz.doctree\nnew file mode 100644\nindex 000000000..fd17b8a67\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-footnotes/index.doctree b/_build/.doctrees/tests/roots/test-footnotes/index.doctree\nnew file mode 100644\nindex 000000000..8d1c8cbc5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-gettext-template/index.doctree b/_build/.doctrees/tests/roots/test-gettext-template/index.doctree\nnew file mode 100644\nindex 000000000..995ad378e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-gettext-template/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-glossary/index.doctree b/_build/.doctrees/tests/roots/test-glossary/index.doctree\nnew file mode 100644\nindex 000000000..18032889a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-glossary/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree\nnew file mode 100644\nindex 000000000..e69dc3dae\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_assets/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/index.doctree\nnew file mode 100644\nindex 000000000..7dc0b5ad7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree\nnew file mode 100644\nindex 000000000..64beee9b1\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_entity/index.doctree b/_build/.doctrees/tests/roots/test-html_entity/index.doctree\nnew file mode 100644\nindex 000000000..6e7906a98\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_entity/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree b/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree\nnew file mode 100644\nindex 000000000..19620c725\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-html_style/index.doctree b/_build/.doctrees/tests/roots/test-html_style/index.doctree\nnew file mode 100644\nindex 000000000..cfecfa217\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-html_style/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree b/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree\nnew file mode 100644\nindex 000000000..1c0ce7a55\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-image-in-section/index.doctree b/_build/.doctrees/tests/roots/test-image-in-section/index.doctree\nnew file mode 100644\nindex 000000000..2b6b2156b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-image-in-section/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-images/index.doctree b/_build/.doctrees/tests/roots/test-images/index.doctree\nnew file mode 100644\nindex 000000000..985c2ae72\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-images/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-images/subdir/index.doctree b/_build/.doctrees/tests/roots/test-images/subdir/index.doctree\nnew file mode 100644\nindex 000000000..04df0d89f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-images/subdir/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree b/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree\nnew file mode 100644\nindex 000000000..cac213d30\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree b/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree\nnew file mode 100644\nindex 000000000..035493d9f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree\nnew file mode 100644\nindex 000000000..ba4092f10\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree\nnew file mode 100644\nindex 000000000..f03897080\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree\nnew file mode 100644\nindex 000000000..b5a3ff766\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree\nnew file mode 100644\nindex 000000000..94277b93a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree\nnew file mode 100644\nindex 000000000..8ead8f0f8\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-inheritance/index.doctree b/_build/.doctrees/tests/roots/test-inheritance/index.doctree\nnew file mode 100644\nindex 000000000..2d4348f5f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree b/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree\nnew file mode 100644\nindex 000000000..0495d1279\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree b/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree\nnew file mode 100644\nindex 000000000..cc928ee9d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree b/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree\nnew file mode 100644\nindex 000000000..dda37824e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-babel/index.doctree b/_build/.doctrees/tests/roots/test-latex-babel/index.doctree\nnew file mode 100644\nindex 000000000..0ac9bf3ce\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree b/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree\nnew file mode 100644\nindex 000000000..ebd8673b0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree b/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree\nnew file mode 100644\nindex 000000000..a82060ef4\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree b/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree\nnew file mode 100644\nindex 000000000..5dd622f54\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-index/index.doctree b/_build/.doctrees/tests/roots/test-latex-index/index.doctree\nnew file mode 100644\nindex 000000000..e3835962a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-index/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-labels/index.doctree b/_build/.doctrees/tests/roots/test-latex-labels/index.doctree\nnew file mode 100644\nindex 000000000..0e820235d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-labels/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree b/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree\nnew file mode 100644\nindex 000000000..878cca14a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree\nnew file mode 100644\nindex 000000000..cc237dd6b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree\nnew file mode 100644\nindex 000000000..d8f512686\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree\nnew file mode 100644\nindex 000000000..6354ee1b7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-table/complex.doctree b/_build/.doctrees/tests/roots/test-latex-table/complex.doctree\nnew file mode 100644\nindex 000000000..0f7bb94ac\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/complex.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-table/index.doctree b/_build/.doctrees/tests/roots/test-latex-table/index.doctree\nnew file mode 100644\nindex 000000000..d008b9e92\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree b/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree\nnew file mode 100644\nindex 000000000..b8c9787a7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree b/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree\nnew file mode 100644\nindex 000000000..54cb9343d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-theme/index.doctree b/_build/.doctrees/tests/roots/test-latex-theme/index.doctree\nnew file mode 100644\nindex 000000000..b2170e0da\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-theme/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-title/index.doctree b/_build/.doctrees/tests/roots/test-latex-title/index.doctree\nnew file mode 100644\nindex 000000000..d3a3817d0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-title/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree b/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree\nnew file mode 100644\nindex 000000000..b6c13c326\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree\nnew file mode 100644\nindex 000000000..80d78eb27\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree\nnew file mode 100644\nindex 000000000..9bf0fe832\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree\nnew file mode 100644\nindex 000000000..338e74073\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree\nnew file mode 100644\nindex 000000000..95ae322cd\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-manpage_url/index.doctree b/_build/.doctrees/tests/roots/test-manpage_url/index.doctree\nnew file mode 100644\nindex 000000000..67a774982\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-manpage_url/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-markup-citation/index.doctree b/_build/.doctrees/tests/roots/test-markup-citation/index.doctree\nnew file mode 100644\nindex 000000000..823edc766\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-markup-citation/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree b/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree\nnew file mode 100644\nindex 000000000..939c4cd3b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree b/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree\nnew file mode 100644\nindex 000000000..e781ed495\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-metadata/index.doctree b/_build/.doctrees/tests/roots/test-metadata/index.doctree\nnew file mode 100644\nindex 000000000..a7b460199\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-metadata/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree b/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree\nnew file mode 100644\nindex 000000000..ac52773ec\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree b/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree\nnew file mode 100644\nindex 000000000..67d8221fb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree b/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree\nnew file mode 100644\nindex 000000000..3e48ffdf7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/index.doctree b/_build/.doctrees/tests/roots/test-need-escaped/index.doctree\nnew file mode 100644\nindex 000000000..1ff0180ed\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree b/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree\nnew file mode 100644\nindex 000000000..78bcfbae7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree b/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree\nnew file mode 100644\nindex 000000000..3bbb9f2bb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree b/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree\nnew file mode 100644\nindex 000000000..d5cca6a3d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-nested-tables/index.doctree b/_build/.doctrees/tests/roots/test-nested-tables/index.doctree\nnew file mode 100644\nindex 000000000..8373d89d0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-nested-tables/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree b/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree\nnew file mode 100644\nindex 000000000..b56b424d0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree b/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree\nnew file mode 100644\nindex 000000000..16eab2721\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numfig/bar.doctree b/_build/.doctrees/tests/roots/test-numfig/bar.doctree\nnew file mode 100644\nindex 000000000..ca7c41739\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numfig/baz.doctree b/_build/.doctrees/tests/roots/test-numfig/baz.doctree\nnew file mode 100644\nindex 000000000..f0f77256e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numfig/foo.doctree b/_build/.doctrees/tests/roots/test-numfig/foo.doctree\nnew file mode 100644\nindex 000000000..324325c5a\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-numfig/index.doctree b/_build/.doctrees/tests/roots/test-numfig/index.doctree\nnew file mode 100644\nindex 000000000..f863474a0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree b/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree\nnew file mode 100644\nindex 000000000..46f0e37bc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree b/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree\nnew file mode 100644\nindex 000000000..f0954ebc6\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree b/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree\nnew file mode 100644\nindex 000000000..60cac2cf6\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree b/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree\nnew file mode 100644\nindex 000000000..c10922d39\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/P1.doctree b/_build/.doctrees/tests/roots/test-productionlist/P1.doctree\nnew file mode 100644\nindex 000000000..fac46037e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/P1.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/P2.doctree b/_build/.doctrees/tests/roots/test-productionlist/P2.doctree\nnew file mode 100644\nindex 000000000..24b250a38\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/P2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree b/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree\nnew file mode 100644\nindex 000000000..b7710894d\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-productionlist/index.doctree b/_build/.doctrees/tests/roots/test-productionlist/index.doctree\nnew file mode 100644\nindex 000000000..388a01d46\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-prolog/index.doctree b/_build/.doctrees/tests/roots/test-prolog/index.doctree\nnew file mode 100644\nindex 000000000..c401844ae\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-prolog/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree b/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree\nnew file mode 100644\nindex 000000000..28082539b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree b/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree\nnew file mode 100644\nindex 000000000..a5a8d93eb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree b/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree\nnew file mode 100644\nindex 000000000..6a2242aca\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree b/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree\nnew file mode 100644\nindex 000000000..19757abd5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-roles-download/index.doctree b/_build/.doctrees/tests/roots/test-roles-download/index.doctree\nnew file mode 100644\nindex 000000000..fa06530f3\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-roles-download/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-search/index.doctree b/_build/.doctrees/tests/roots/test-search/index.doctree\nnew file mode 100644\nindex 000000000..8b0192662\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-search/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-search/nosearch.doctree b/_build/.doctrees/tests/roots/test-search/nosearch.doctree\nnew file mode 100644\nindex 000000000..91527c548\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-search/nosearch.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-search/tocitem.doctree b/_build/.doctrees/tests/roots/test-search/tocitem.doctree\nnew file mode 100644\nindex 000000000..c7f841029\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-search/tocitem.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-smartquotes/index.doctree b/_build/.doctrees/tests/roots/test-smartquotes/index.doctree\nnew file mode 100644\nindex 000000000..197eb6a29\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-smartquotes/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-stylesheets/index.doctree b/_build/.doctrees/tests/roots/test-stylesheets/index.doctree\nnew file mode 100644\nindex 000000000..4b3be2e53\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-stylesheets/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree b/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree\nnew file mode 100644\nindex 000000000..de4640b02\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-theming/index.doctree b/_build/.doctrees/tests/roots/test-theming/index.doctree\nnew file mode 100644\nindex 000000000..095c805c1\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-theming/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree b/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree\nnew file mode 100644\nindex 000000000..ce61bc82e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree b/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree\nnew file mode 100644\nindex 000000000..d5ba02964\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree b/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree\nnew file mode 100644\nindex 000000000..2135f09fb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-tocdepth/index.doctree b/_build/.doctrees/tests/roots/test-tocdepth/index.doctree\nnew file mode 100644\nindex 000000000..2d193d26b\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree\nnew file mode 100644\nindex 000000000..a1e5f5ec0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree b/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree\nnew file mode 100644\nindex 000000000..1dbb7c667\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree b/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree\nnew file mode 100644\nindex 000000000..0aad2786e\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree\nnew file mode 100644\nindex 000000000..bd4aacd57\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree\nnew file mode 100644\nindex 000000000..430430387\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree\nnew file mode 100644\nindex 000000000..777c0c778\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree\nnew file mode 100644\nindex 000000000..ae4c45ccb\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree\nnew file mode 100644\nindex 000000000..3b71b37dc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree\nnew file mode 100644\nindex 000000000..cf603e9bc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree\nnew file mode 100644\nindex 000000000..b908ea702\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree\nnew file mode 100644\nindex 000000000..a0c620458\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree\nnew file mode 100644\nindex 000000000..e83e12c50\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree\nnew file mode 100644\nindex 000000000..17df8220f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree\nnew file mode 100644\nindex 000000000..83a52c9a5\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree\nnew file mode 100644\nindex 000000000..0ec225daa\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree\nnew file mode 100644\nindex 000000000..ac028a4a7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree\nnew file mode 100644\nindex 000000000..71861314f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree\nnew file mode 100644\nindex 000000000..c7a65d642\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree\nnew file mode 100644\nindex 000000000..ee1d40c36\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree\nnew file mode 100644\nindex 000000000..2788c1a4c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/bar.doctree b/_build/.doctrees/tests/roots/test-toctree/bar.doctree\nnew file mode 100644\nindex 000000000..3183985e7\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/bar.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/baz.doctree b/_build/.doctrees/tests/roots/test-toctree/baz.doctree\nnew file mode 100644\nindex 000000000..281741cf4\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/baz.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/foo.doctree b/_build/.doctrees/tests/roots/test-toctree/foo.doctree\nnew file mode 100644\nindex 000000000..2c77ec1b0\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/foo.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/index.doctree b/_build/.doctrees/tests/roots/test-toctree/index.doctree\nnew file mode 100644\nindex 000000000..389741102\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/quux.doctree b/_build/.doctrees/tests/roots/test-toctree/quux.doctree\nnew file mode 100644\nindex 000000000..4f349a314\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/quux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/qux.doctree b/_build/.doctrees/tests/roots/test-toctree/qux.doctree\nnew file mode 100644\nindex 000000000..5963de4bc\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/qux.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree b/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree\nnew file mode 100644\nindex 000000000..d78ec8972\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree b/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree\nnew file mode 100644\nindex 000000000..de4995f14\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-warnings/index.doctree b/_build/.doctrees/tests/roots/test-warnings/index.doctree\nnew file mode 100644\nindex 000000000..4fea3ae5c\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-warnings/index.doctree differ\ndiff --git a/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree b/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree\nnew file mode 100644\nindex 000000000..f852d9c8f\nBinary files /dev/null and b/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree differ\ndiff --git a/_build/CONTRIBUTING.txt b/_build/CONTRIBUTING.txt\nnew file mode 100644\nindex 000000000..0866f70c6\n--- /dev/null\n+++ b/_build/CONTRIBUTING.txt\n@@ -0,0 +1,17 @@\n+Contributing to Sphinx\n+**********************\n+\n+Interested in contributing to Sphinx? Hurrah! We welcome all forms of\n+contribution, including code patches, documentation improvements and\n+bug reports/feature requests.\n+\n+Our contributing guide can be found online at:\n+\n+https://www.sphinx-doc.org/en/master/internals/contributing.html\n+\n+You can also browse it from this repository from\n+\"doc/internals/contributing.rst\"\n+\n+Sphinx uses GitHub to host source code, track patches and bugs, and\n+more. Please make an effort to provide as much detail as possible when\n+filing bugs.\ndiff --git a/_build/README.txt b/_build/README.txt\nnew file mode 100644\nindex 000000000..52876c6b1\n--- /dev/null\n+++ b/_build/README.txt\n@@ -0,0 +1,103 @@\n+Sphinx\n+******\n+\n+[image: Package on PyPI][image][image: Documentation\n+Status][image][image: Build Status (Travis CI)][image][image: Build\n+Status (AppVeyor)][image][image: Build Status\n+(CircleCI)][image][image: Code Coverage Status\n+(Codecov)][image][image: BSD 3 Clause][image][image: Open Source\n+Helpers badge][image]\n+\n+Sphinx is a tool that makes it easy to create intelligent and\n+beautiful documentation for Python projects (or other documents\n+consisting of multiple reStructuredText sources), written by Georg\n+Brandl.  It was originally created for the new Python documentation,\n+and has excellent facilities for Python project documentation, but\n+C/C++ is supported as well, and more languages are planned.\n+\n+Sphinx uses reStructuredText as its markup language, and many of its\n+strengths come from the power and straightforwardness of\n+reStructuredText and its parsing and translating suite, the Docutils.\n+\n+Among its features are the following:\n+\n+* Output formats: HTML (including derivative formats such as HTML\n+  Help, Epub and Qt Help), plain text, manual pages and LaTeX or\n+  direct PDF output using rst2pdf\n+\n+* Extensive cross-references: semantic markup and automatic links for\n+  functions, classes, glossary terms and similar pieces of information\n+\n+* Hierarchical structure: easy definition of a document tree, with\n+  automatic links to siblings, parents and children\n+\n+* Automatic indices: general index as well as a module index\n+\n+* Code handling: automatic highlighting using the Pygments highlighter\n+\n+* Flexible HTML output using the Jinja 2 templating engine\n+\n+* Various extensions are available, e.g. for automatic testing of\n+  snippets and inclusion of appropriately formatted docstrings\n+\n+* Setuptools integration\n+\n+For more information, refer to the the documentation.\n+\n+\n+Installation\n+============\n+\n+Sphinx is published on PyPI and can be installed from there:\n+\n+   pip install -U sphinx\n+\n+We also publish beta releases:\n+\n+   pip install -U --pre sphinx\n+\n+If you wish to install *Sphinx* for development purposes, refer to the\n+contributors guide.\n+\n+\n+Documentation\n+=============\n+\n+Documentation is available from sphinx-doc.org.\n+\n+\n+Get in touch\n+============\n+\n+* Report bugs, suggest features or view the source code on GitHub.\n+\n+* For less well defined questions or ideas, use the mailing list.\n+\n+Please adhere to our code of conduct.\n+\n+\n+Testing\n+=======\n+\n+Continuous testing is provided by Travis (for unit tests and style\n+checks on Linux), AppVeyor (for unit tests on Windows), and CircleCI\n+(for large processes like TeX compilation).\n+\n+For information on running tests locally, refer to the contributors\n+guide.\n+\n+\n+Contributing\n+============\n+\n+Refer to the contributors guide.\n+\n+\n+Release signatures\n+==================\n+\n+Releases are signed with following keys:\n+\n+* 498D6B9E\n+\n+* 5EBA0E07\ndiff --git a/_build/doc/changes.txt b/_build/doc/changes.txt\nnew file mode 100644\nindex 000000000..518a23216\n--- /dev/null\n+++ b/_build/doc/changes.txt\n@@ -0,0 +1,9164 @@\n+Changelog\n+*********\n+\n+\n+Release 3.5.0 (in development)\n+==============================\n+\n+\n+Dependencies\n+------------\n+\n+\n+Incompatible changes\n+--------------------\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.ext.autodoc.importer.get_module_members()\"\n+\n+\n+Features added\n+--------------\n+\n+* #8022: autodoc: autodata and autoattribute directives does not show\n+  right-hand value of the variable if docstring contains \":meta hide-\n+  value:\" in info-field-list\n+\n+\n+Bugs fixed\n+----------\n+\n+* #741: autodoc: inherited-members doesn't work for instance\n+  attributes on super class\n+\n+* #8592: autodoc: \":meta public:\" does not effect to variables\n+\n+\n+Testing\n+-------\n+\n+\n+Release 3.4.2 (in development)\n+==============================\n+\n+\n+Dependencies\n+------------\n+\n+\n+Incompatible changes\n+--------------------\n+\n+\n+Deprecated\n+----------\n+\n+\n+Features added\n+--------------\n+\n+\n+Bugs fixed\n+----------\n+\n+\n+Testing\n+-------\n+\n+\n+Release 3.4.1 (released Dec 25, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #8559: autodoc: AttributeError is raised when using forward-\n+  reference type annotations\n+\n+* #8568: autodoc: TypeError is raised on checking slots attribute\n+\n+* #8567: autodoc: Instance attributes are incorrectly added to Parent\n+  class\n+\n+* #8566: autodoc: The \"autodoc-process-docstring\" event is emitted to\n+  the alias classes unexpectedly\n+\n+* #8583: autodoc: Unnecessary object comparision via \"__eq__\" method\n+\n+* #8565: linkcheck: Fix PriorityQueue crash when link tuples are not\n+  comparable\n+\n+\n+Release 3.4.0 (released Dec 20, 2020)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #8105: autodoc: the signature of class constructor will be shown for\n+  decorated classes, not a signature of decorator\n+\n+\n+Deprecated\n+----------\n+\n+* The \"follow_wrapped\" argument of \"sphinx.util.inspect.signature()\"\n+\n+* The \"no_docstring\" argument of\n+  \"sphinx.ext.autodoc.Documenter.add_content()\"\n+\n+* \"sphinx.ext.autodoc.Documenter.get_object_members()\"\n+\n+* \"sphinx.ext.autodoc.DataDeclarationDocumenter\"\n+\n+* \"sphinx.ext.autodoc.GenericAliasDocumenter\"\n+\n+* \"sphinx.ext.autodoc.InstanceAttributeDocumenter\"\n+\n+* \"sphinx.ext.autodoc.SlotsAttributeDocumenter\"\n+\n+* \"sphinx.ext.autodoc.TypeVarDocumenter\"\n+\n+* \"sphinx.ext.autodoc.importer._getannotations()\"\n+\n+* \"sphinx.ext.autodoc.importer._getmro()\"\n+\n+* \"sphinx.pycode.ModuleAnalyzer.parse()\"\n+\n+* \"sphinx.util.osutil.movefile()\"\n+\n+* \"sphinx.util.requests.is_ssl_error()\"\n+\n+\n+Features added\n+--------------\n+\n+* #8119: autodoc: Allow to determine whether a member not included in\n+  \"__all__\" attribute of the module should be documented or not via\n+  >>:event:`autodoc-skip-member`<< event\n+\n+* #8219: autodoc: Parameters for generic class are not shown when\n+  super class is a generic class and show-inheritance option is given\n+  (in Python 3.7 or above)\n+\n+* autodoc: Add \"Documenter.config\" as a shortcut to access the config\n+  object\n+\n+* autodoc: Add Optional[t] to annotation of function and method if a\n+  default value equal to None is set.\n+\n+* #8209: autodoc: Add \":no-value:\" option to \"autoattribute\" and\n+  \"autodata\" directive to suppress the default value of the variable\n+\n+* #8460: autodoc: Support custom types defined by typing.NewType\n+\n+* #8285: napoleon: Add >>:confval:`napoleon_attr_annotations`<< to\n+  merge type hints on source code automatically if any type is\n+  specified in docstring\n+\n+* #8236: napoleon: Support numpydoc's \"Receives\" section\n+\n+* #6914: Add a new event >>:event:`warn-missing-reference`<< to custom\n+  warning messages when failed to resolve a cross-reference\n+\n+* #6914: Emit a detailed warning when failed to resolve a \":ref:\"\n+  reference\n+\n+* #6629: linkcheck: The builder now handles rate limits. See\n+  >>:confval:`linkcheck_retry_on_rate_limit`<< for details.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7613: autodoc: autodoc does not respect __signature__ of the class\n+\n+* #4606: autodoc: the location of the warning is incorrect for\n+  inherited method\n+\n+* #8105: autodoc: the signature of class constructor is incorrect if\n+  the class is decorated\n+\n+* #8434: autodoc: >>:confval:`autodoc_type_aliases`<< does not effect\n+  to variables and attributes\n+\n+* #8443: autodoc: autodata directive can't create document for PEP-526\n+  based type annotated variables\n+\n+* #8443: autodoc: autoattribute directive can't create document for\n+  PEP-526 based uninitalized variables\n+\n+* #8480: autodoc: autoattribute could not create document for\n+  __slots__ attributes\n+\n+* #8503: autodoc: autoattribute could not create document for a\n+  GenericAlias as class attributes correctly\n+\n+* #8534: autodoc: autoattribute could not create document for a\n+  commented attribute in alias class\n+\n+* #8452: autodoc: autodoc_type_aliases doesn't work when\n+  autodoc_typehints is set to \"description\"\n+\n+* #8541: autodoc: autodoc_type_aliases doesn't work for the type\n+  annotation to instance attributes\n+\n+* #8460: autodoc: autodata and autoattribute directives do not display\n+  type information of TypeVars\n+\n+* #8493: autodoc: references to builtins not working in class aliases\n+\n+* #8522: autodoc:  \"__bool__\" method could be called\n+\n+* #8067: autodoc: A typehint for the instance variable having\n+  type_comment on super class is not displayed\n+\n+* #8545: autodoc: a __slots__ attribute is not documented even having\n+  docstring\n+\n+* #741: autodoc: inherited-members doesn't work for instance\n+  attributes on super class\n+\n+* #8477: autosummary: non utf-8 reST files are generated when template\n+  contains multibyte characters\n+\n+* #8501: autosummary: summary extraction splits text after \"el at.\"\n+  unexpectedly\n+\n+* #8524: html: Wrong url_root has been generated on a document named\n+  \"index\"\n+\n+* #8419: html search: Do not load \"language_data.js\" in non-search\n+  pages\n+\n+* #8549: i18n: \"-D gettext_compact=0\" is no longer working\n+\n+* #8454: graphviz: The layout option for graph and digraph directives\n+  don't work\n+\n+* #8131: linkcheck: Use GET when HEAD requests cause Too Many\n+  Redirects, to accommodate infinite redirect loops on HEAD\n+\n+* #8437: Makefile: \"make clean\" with empty BUILDDIR is dangerous\n+\n+* #8365: py domain: \":type:\" and \":rtype:\" gives false ambiguous class\n+  lookup warnings\n+\n+* #8352: std domain: Failed to parse an option that starts with\n+  bracket\n+\n+* #8519: LaTeX: Prevent page brake in the middle of a seealso\n+\n+* #8520: C, fix copying of AliasNode.\n+\n+\n+Release 3.3.1 (released Nov 12, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #8372: autodoc: autoclass directive became slower than Sphinx-3.2\n+\n+* #7727: autosummary: raise PycodeError when documenting python\n+  package without __init__.py\n+\n+* #8350: autosummary: autosummary_mock_imports causes slow down builds\n+\n+* #8364: C, properly initialize attributes in empty symbols.\n+\n+* #8399: i18n: Put system locale path after the paths specified by\n+  configuration\n+\n+\n+Release 3.3.0 (released Nov 02, 2020)\n+=====================================\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.builders.latex.LaTeXBuilder.usepackages\"\n+\n+* \"sphinx.builders.latex.LaTeXBuilder.usepackages_afger_hyperref\"\n+\n+* \"sphinx.ext.autodoc.SingledispatchFunctionDocumenter\"\n+\n+* \"sphinx.ext.autodoc.SingledispatchMethodDocumenter\"\n+\n+\n+Features added\n+--------------\n+\n+* #8100: html: Show a better error message for failures on copying\n+  html_static_files\n+\n+* #8141: C: added a \"maxdepth\" option to \"c:alias\" to insert nested\n+  declarations.\n+\n+* #8081: LaTeX: Allow to add LaTeX package via\n+  \"app.add_latex_package()\" until just before writing .tex file\n+\n+* #7996: manpage: Add >>:confval:`man_make_section_directory`<< to\n+  make a section directory on build man page\n+\n+* #8289: epub: Allow to suppress \"duplicated ToC entry found\" warnings\n+  from epub builder using >>:confval:`suppress_warnings`<<.\n+\n+* #8298: sphinx-quickstart: Add \"sphinx-quickstart --no-sep\" option\n+\n+* #8304: sphinx.testing: Register public markers in\n+  sphinx.testing.fixtures\n+\n+* #8051: napoleon: use the obj role for all See Also items\n+\n+* #8050: napoleon: Apply >>:confval:`napoleon_preprocess_types`<< to\n+  every field\n+\n+* C and C++, show line numbers for previous declarations when\n+  duplicates are detected.\n+\n+* #8183: Remove substitution_reference nodes from doctree only on\n+  LaTeX builds\n+\n+\n+Bugs fixed\n+----------\n+\n+* #8085: i18n: Add support for having single text domain\n+\n+* #6640: i18n: Failed to override system message translation\n+\n+* #8143: autodoc: AttributeError is raised when False value is passed\n+  to autodoc_default_options\n+\n+* #8103: autodoc: functools.cached_property is not considered as a\n+  property\n+\n+* #8190: autodoc: parsing error is raised if some extension replaces\n+  docstring by string not ending with blank lines\n+\n+* #8142: autodoc: Wrong constructor signature for the class derived\n+  from typing.Generic\n+\n+* #8157: autodoc: TypeError is raised when annotation has invalid\n+  __args__\n+\n+* #7964: autodoc: Tuple in default value is wrongly rendered\n+\n+* #8200: autodoc: type aliases break type formatting of autoattribute\n+\n+* #7786: autodoc: can't detect overloaded methods defined in other\n+  file\n+\n+* #8294: autodoc: single-string __slots__ is not handled correctly\n+\n+* #7785: autodoc: autodoc_typehints='none' does not effect to\n+  overloaded functions\n+\n+* #8192: napoleon: description is disappeared when it contains inline\n+  literals\n+\n+* #8142: napoleon: Potential of regex denial of service in google\n+  style docs\n+\n+* #8169: LaTeX: pxjahyper loaded even when latex_engine is not platex\n+\n+* #8215: LaTeX: 'oneside' classoption causes build warning\n+\n+* #8175: intersphinx: Potential of regex denial of service by broken\n+  inventory\n+\n+* #8277: sphinx-build: missing and redundant spacing (and etc) for\n+  console output on building\n+\n+* #7973: imgconverter: Check availability of imagemagick many times\n+\n+* #8255: py domain: number in default argument value is changed from\n+  hexadecimal to decimal\n+\n+* #8316: html: Prevent arrow keys changing page when button elements\n+  are focused\n+\n+* #8343: html search: Fix unnecessary load of images when parsing the\n+  document\n+\n+* #8254: html theme: Line numbers misalign with code lines\n+\n+* #8093: The highlight warning has wrong location in some builders\n+  (LaTeX, singlehtml and so on)\n+\n+* #8215: Eliminate Fancyhdr build warnings for oneside documents\n+\n+* #8239: Failed to refer a token in productionlist if it is indented\n+\n+* #8268: linkcheck: Report HTTP errors when \"linkcheck_anchors\" is\n+  \"True\"\n+\n+* #8245: linkcheck: take source directory into account for local files\n+\n+* #8321: linkcheck: \"tel:\" schema hyperlinks are detected as errors\n+\n+* #8323: linkcheck: An exit status is incorrect when links having\n+  unsupported schema found\n+\n+* #8188: C, add missing items to internal object types dictionary,\n+  e.g., preventing intersphinx from resolving them.\n+\n+* C, fix anon objects in intersphinx.\n+\n+* #8270, C++, properly reject functions as duplicate declarations if a\n+  non-function declaration of the same name already exists.\n+\n+* C, fix references to function parameters. Link to the function\n+  instead of a non-existing anchor.\n+\n+* #6914: figure numbers are unexpectedly assigned to uncaptioned items\n+\n+* #8320: make \"inline\" line numbers un-selectable\n+\n+\n+Testing\n+-------\n+\n+* #8257: Support parallel build in sphinx.testing\n+\n+\n+Release 3.2.1 (released Aug 14, 2020)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #8095: napoleon: Add >>:confval:`napoleon_preprocess_types`<< to\n+  enable the type preprocessor for numpy style docstrings\n+\n+* #8114: C and C++, parse function attributes after parameters and\n+  qualifiers.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #8074: napoleon: Crashes during processing C-ext module\n+\n+* #8088: napoleon: \"Inline literal start-string without end-string\"\n+  warning in Numpy style Parameters section\n+\n+* #8084: autodoc: KeyError is raised on documenting an attribute of\n+  the broken class\n+\n+* #8091: autodoc: AttributeError is raised on documenting an attribute\n+  on Python 3.5.2\n+\n+* #8099: autodoc: NameError is raised when target code uses\n+  \"TYPE_CHECKING\"\n+\n+* C++, fix parsing of template template paramters, broken by the fix\n+  of #7944\n+\n+\n+Release 3.2.0 (released Aug 08, 2020)\n+=====================================\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.ext.autodoc.members_set_option()\"\n+\n+* \"sphinx.ext.autodoc.merge_special_members_option()\"\n+\n+* \"sphinx.writers.texinfo.TexinfoWriter.desc\"\n+\n+* C, parsing of pre-v3 style type directives and roles, along with the\n+  options >>:confval:`c_allow_pre_v3`<< and\n+  >>:confval:`c_warn_on_allowed_pre_v3`<<.\n+\n+\n+Features added\n+--------------\n+\n+* #2076: autodoc: Allow overriding of exclude-members in skip-member\n+  function\n+\n+* #8034: autodoc: \":private-member:\" can take an explicit list of\n+  member names to be documented\n+\n+* #2024: autosummary: Add >>:confval:`autosummary_filename_map`<< to\n+  avoid conflict of filenames between two object with different case\n+\n+* #8011: autosummary: Support instance attributes as a target of\n+  autosummary directive\n+\n+* #7849: html: Add >>:confval:`html_codeblock_linenos_style`<< to\n+  change the style of line numbers for code-blocks\n+\n+* #7853: C and C++, support parameterized GNU style attributes.\n+\n+* #7888: napoleon: Add aliases Warn and Raise.\n+\n+* #7690: napoleon: parse type strings and make them hyperlinks as\n+  possible.  The conversion rule can be updated via\n+  >>:confval:`napoleon_type_aliases`<<\n+\n+* #8049: napoleon: Create a hyperlink for each the type of parameter\n+  when >>:confval:`napoleon_use_params`<< is False\n+\n+* C, added \"c:alias\" directive for inserting copies of existing\n+  declarations.\n+\n+* #7745: html: inventory is broken if the docname contains a space\n+\n+* #7991: html search: Allow searching for numbers\n+\n+* #7902: html theme: Add a new option\n+  >>:confval:`globaltoc_maxdepth`<< to control the behavior of\n+  globaltoc in sidebar\n+\n+* #7840: i18n: Optimize the dependencies check on bootstrap\n+\n+* #7768: i18n: >>:confval:`figure_language_filename`<< supports\n+  \"docpath\" token\n+\n+* #5208: linkcheck: Support checks for local links\n+\n+* #5090: setuptools: Link verbosity to distutils' -v and -q option\n+\n+* #6698: doctest: Add \":trim-doctest-flags:\" and \":no-trim-doctest-\n+  flags:\" options to doctest, testcode and testoutput directives\n+\n+* #7052: add \":noindexentry:\" to the Python, C, C++, and Javascript\n+  domains. Update the documentation to better reflect the relationship\n+  between this option and the \":noindex:\" option.\n+\n+* #7899: C, add possibility of parsing of some pre-v3 style type\n+  directives and roles and try to convert them to equivalent v3\n+  directives/roles. Set the new option >>:confval:`c_allow_pre_v3`<<\n+  to \"True\" to enable this. The warnings printed from this\n+  functionality can be suppressed by setting\n+  >>:confval:`c_warn_on_allowed_pre_v3``<< to \"True\". The\n+  functionality is immediately deprecated.\n+\n+* #7999: C, add support for named variadic macro arguments.\n+\n+* #8071: Allow to suppress \"self referenced toctrees\" warning\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7886: autodoc: TypeError is raised on mocking generic-typed classes\n+\n+* #7935: autodoc: function signature is not shown when the function\n+  has a parameter having \"inspect._empty\" as its default value\n+\n+* #7901: autodoc: type annotations for overloaded functions are not\n+  resolved\n+\n+* #904: autodoc: An instance attribute cause a crash of autofunction\n+  directive\n+\n+* #1362: autodoc: \"private-members\" option does not work for class\n+  attributes\n+\n+* #7983: autodoc: Generator type annotation is wrongly rendered in\n+  py36\n+\n+* #8030: autodoc: An uninitialized annotated instance variable is not\n+  documented when \":inherited-members:\" option given\n+\n+* #8032: autodoc: A type hint for the instance variable defined at\n+  parent class is not shown in the document of the derived class\n+\n+* #8041: autodoc: An annotated instance variable on super class is not\n+  documented when derived class has other annotated instance variables\n+\n+* #7839: autosummary: cannot handle umlauts in function names\n+\n+* #7865: autosummary: Failed to extract summary line when\n+  abbreviations found\n+\n+* #7866: autosummary: Failed to extract correct summary line when\n+  docstring contains a hyperlink target\n+\n+* #7469: autosummary: \"Module attributes\" header is not translatable\n+\n+* #7940: apidoc: An extra newline is generated at the end of the rst\n+  file if a module has submodules\n+\n+* #4258: napoleon: decorated special methods are not shown\n+\n+* #7799: napoleon: parameters are not escaped for combined params in\n+  numpydoc\n+\n+* #7780: napoleon: multiple paramaters declaration in numpydoc was\n+  wrongly recognized when napoleon_use_params=True\n+\n+* #7715: LaTeX: \"numfig_secnum_depth > 1\" leads to wrong figure links\n+\n+* #7846: html theme: XML-invalid files were generated\n+\n+* #7894: gettext: Wrong source info is shown when using rst_epilog\n+\n+* #7691: linkcheck: HEAD requests are not used for checking\n+\n+* #4888: i18n: Failed to add an explicit title to \":ref:\" role on\n+  translation\n+\n+* #7928: py domain: failed to resolve a type annotation for the\n+  attribute\n+\n+* #8008: py domain: failed to parse a type annotation containing\n+  ellipsis\n+\n+* #7994: std domain: option directive does not generate old node_id\n+  compatible with 2.x or older\n+\n+* #7968: i18n: The content of \"math\" directive is interpreted as reST\n+  on translation\n+\n+* #7768: i18n: The \"root\" element for\n+  >>:confval:`figure_language_filename`<< is not a path that user\n+  specifies in the document\n+\n+* #7993: texinfo: TypeError is raised for nested object descriptions\n+\n+* #7993: texinfo: a warning not supporting desc_signature_line node is\n+  shown\n+\n+* #7869: \"abbr\" role without an explanation will show the explanation\n+  from the previous abbr role\n+\n+* #8048: graphviz: graphviz.css was copied on building non-HTML\n+  document\n+\n+* C and C++, removed \"noindex\" directive option as it did nothing.\n+\n+* #7619: Duplicated node IDs are generated if node has multiple IDs\n+\n+* #2050: Symbols sections are appeared twice in the index page\n+\n+* #8017: Fix circular import in sphinx.addnodes\n+\n+* #7986: CSS: make \"highlight\" selector more robust\n+\n+* #7944: C++, parse non-type template parameters starting with a\n+  dependent qualified name.\n+\n+* C, don't deepcopy the entire symbol table and make a mess every time\n+  an enumerator is handled.\n+\n+\n+Release 3.1.2 (released Jul 05, 2020)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #7650: autodoc: the signature of base function will be shown for\n+  decorated functions, not a signature of decorator\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7844: autodoc: Failed to detect module when relative module name\n+  given\n+\n+* #7856: autodoc: AttributeError is raised when non-class object is\n+  given to the autoclass directive\n+\n+* #7850: autodoc: KeyError is raised for invalid mark up when\n+  autodoc_typehints is 'description'\n+\n+* #7812: autodoc: crashed if the target name matches to both an\n+  attribute and module that are same name\n+\n+* #7650: autodoc: function signature becomes \"(*args, **kwargs)\" if\n+  the function is decorated by generic decorator\n+\n+* #7812: autosummary: generates broken stub files if the target code\n+  contains an attribute and module that are same name\n+\n+* #7806: viewcode: Failed to resolve viewcode references on 3rd party\n+  builders\n+\n+* #7838: html theme: List items have extra vertical space\n+\n+* #7878: html theme: Undesired interaction between \"overflow\" and\n+  \"float\"\n+\n+\n+Release 3.1.1 (released Jun 14, 2020)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #7808: napoleon: a type for attribute are represented as typed field\n+\n+\n+Features added\n+--------------\n+\n+* #7807: autodoc: Show detailed warning when type_comment is\n+  mismatched with its signature\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7808: autodoc: Warnings raised on variable and attribute type\n+  annotations\n+\n+* #7802: autodoc: EOFError is raised on parallel build\n+\n+* #7821: autodoc: TypeError is raised for overloaded C-ext function\n+\n+* #7805: autodoc: an object which descriptors returns is unexpectedly\n+  documented\n+\n+* #7807: autodoc: wrong signature is shown for the function using\n+  contextmanager\n+\n+* #7812: autosummary: generates broken stub files if the target code\n+  contains an attribute and module that are same name\n+\n+* #7808: napoleon: Warnings raised on variable and attribute type\n+  annotations\n+\n+* #7811: sphinx.util.inspect causes circular import problem\n+\n+\n+Release 3.1.0 (released Jun 08, 2020)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+* #7746: mathjax: Update to 2.7.5\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #7477: imgconverter: Invoke \"magick convert\" command by default on\n+  Windows\n+\n+\n+Deprecated\n+----------\n+\n+* The first argument for\n+  sphinx.ext.autosummary.generate.AutosummaryRenderer has been changed\n+  to Sphinx object\n+\n+* \"sphinx.ext.autosummary.generate.AutosummaryRenderer\" takes an\n+  object type as an argument\n+\n+* The \"ignore\" argument of \"sphinx.ext.autodoc.Documenter.get_doc()\"\n+\n+* The \"template_dir\" argument of \"sphinx.ext.autosummary.generate.\n+  AutosummaryRenderer\"\n+\n+* The \"module\" argument of \"sphinx.ext.autosummary.generate.\n+  find_autosummary_in_docstring()\"\n+\n+* The \"builder\" argument of \"sphinx.ext.autosummary.generate.\n+  generate_autosummary_docs()\"\n+\n+* The \"template_dir\" argument of \"sphinx.ext.autosummary.generate.\n+  generate_autosummary_docs()\"\n+\n+* The \"ignore\" argument of \"sphinx.util.docstring.prepare_docstring()\"\n+\n+* \"sphinx.ext.autosummary.generate.AutosummaryRenderer.exists()\"\n+\n+* \"sphinx.util.rpartition()\"\n+\n+\n+Features added\n+--------------\n+\n+* LaTeX: Make the \"toplevel_sectioning\" setting optional in LaTeX\n+  theme\n+\n+* LaTeX: Allow to override papersize and pointsize from LaTeX themes\n+\n+* LaTeX: Add >>:confval:`latex_theme_options`<< to override theme\n+  options\n+\n+* #7410: Allow to suppress \"circular toctree references detected\"\n+  warnings using >>:confval:`suppress_warnings`<<\n+\n+* C, added scope control directives, \"c:namespace\", \"c:namespace-\n+  push\", and \"c:namespace-pop\".\n+\n+* #2044: autodoc: Suppress default value for instance attributes\n+\n+* #7473: autodoc: consider a member public if docstring contains\n+  \":meta public:\" in info-field-list\n+\n+* #7487: autodoc: Allow to generate docs for singledispatch functions\n+  by py:autofunction\n+\n+* #7143: autodoc: Support final classes and methods\n+\n+* #7384: autodoc: Support signatures defined by \"__new__()\",\n+  metaclasses and builtin base classes\n+\n+* #2106: autodoc: Support multiple signatures on docstring\n+\n+* #4422: autodoc: Support GenericAlias in Python 3.7 or above\n+\n+* #3610: autodoc: Support overloaded functions\n+\n+* #7722: autodoc: Support TypeVar\n+\n+* #7466: autosummary: headings in generated documents are not\n+  translated\n+\n+* #7490: autosummary: Add \":caption:\" option to autosummary directive\n+  to set a caption to the toctree\n+\n+* #7469: autosummary: Support module attributes\n+\n+* #248, #6040: autosummary: Add \":recursive:\" option to autosummary\n+  directive to generate stub files recursively\n+\n+* #4030: autosummary: Add >>:confval:`autosummary_context`<< to add\n+  template variables for custom templates\n+\n+* #7530: html: Support nested <kbd> elements\n+\n+* #7481: html theme: Add right margin to footnote/citation labels\n+\n+* #7482, #7717: html theme: CSS spacing for code blocks with captions\n+  and line numbers\n+\n+* #7443: html theme: Add new options >>:confval:`globaltoc_collapse`<<\n+  and >>:confval:`globaltoc_includehidden`<< to control the behavior\n+  of globaltoc in sidebar\n+\n+* #7484: html theme: Avoid clashes between sidebar and other blocks\n+\n+* #7476: html theme: Relbar breadcrumb should contain current page\n+\n+* #7506: html theme: A canonical URL is not escaped\n+\n+* #7533: html theme: Avoid whitespace at the beginning of\n+  genindex.html\n+\n+* #7541: html theme: Add a \"clearer\" at the end of the \"body\"\n+\n+* #7542: html theme: Make admonition/topic/sidebar scrollable\n+\n+* #7543: html theme: Add top and bottom margins to tables\n+\n+* #7695: html theme: Add viewport meta tag for basic theme\n+\n+* #7721: html theme: classic: default codetextcolor/codebgcolor\n+  doesn't override Pygments\n+\n+* C and C++: allow semicolon in the end of declarations.\n+\n+* C++, parse parameterized noexcept specifiers.\n+\n+* #7294: C++, parse expressions with user-defined literals.\n+\n+* C++, parse trailing return types.\n+\n+* #7143: py domain: Add \":final:\" option to \"py:class:\",\n+  \"py:exception:\" and \"py:method:\" directives\n+\n+* #7596: py domain: Change a type annotation for variables to a\n+  hyperlink\n+\n+* #7770: std domain: \"option\" directive support arguments in the form\n+  of \"foo[=bar]\"\n+\n+* #7582: napoleon: a type for attribute are represented like type\n+  annotation\n+\n+* #7734: napoleon: overescaped trailing underscore on attribute\n+\n+* #7247: linkcheck: Add >>:confval:`linkcheck_request_headers`<< to\n+  send custom HTTP headers for specific host\n+\n+* #7792: setuptools: Support \"--verbosity\" option\n+\n+* #7683: Add \"allowed_exceptions\" parameter to \"Sphinx.emit()\" to\n+  allow handlers to raise specified exceptions\n+\n+* #7295: C++, parse (trailing) requires clauses.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6703: autodoc: incremental build does not work for imported objects\n+\n+* #7564: autodoc: annotations not to be shown for descriptors\n+\n+* #6588: autodoc: Decorated inherited method has no documentation\n+\n+* #7469: autodoc: The change of autodoc-process-docstring for\n+  variables is cached unexpectedly\n+\n+* #7559: autodoc: misdetects a sync function is async\n+\n+* #6857: autodoc: failed to detect a classmethod on Enum class\n+\n+* #7562: autodoc: a typehint contains spaces is wrongly rendered under\n+  autodoc_typehints='description' mode\n+\n+* #7551: autodoc: failed to import nested class\n+\n+* #7362: autodoc: does not render correct signatures for built-in\n+  functions\n+\n+* #7654: autodoc: \"Optional[Union[foo, bar]]\" is presented as\n+  \"Union[foo, bar, None]\"\n+\n+* #7629: autodoc: autofunction emits an unfriendly warning if an\n+  invalid object specified\n+\n+* #7650: autodoc: undecorated signature is shown for decorated\n+  functions\n+\n+* #7676: autodoc: typo in the default value of autodoc_member_order\n+\n+* #7676: autodoc: wrong value for :member-order: option is ignored\n+  silently\n+\n+* #7676: autodoc: member-order=\"bysource\" does not work for C module\n+\n+* #3673: autodoc: member-order=\"bysource\" does not work for a module\n+  having __all__\n+\n+* #7668: autodoc: wrong retann value is passed to a handler of\n+  autodoc-proccess-signature\n+\n+* #7711: autodoc: fails with ValueError when processing numpy objects\n+\n+* #7791: autodoc: TypeError is raised on documenting singledispatch\n+  function\n+\n+* #7551: autosummary: a nested class is indexed as non-nested class\n+\n+* #7661: autosummary: autosummary directive emits warnings twices if\n+  failed to import the target module\n+\n+* #7685: autosummary: The template variable \"members\" contains\n+  imported members even if\n+  >>:confval:`autossummary_imported_members`<< is False\n+\n+* #7671: autosummary: The location of import failure warning is\n+  missing\n+\n+* #7535: sphinx-autogen: crashes when custom template uses inheritance\n+\n+* #7536: sphinx-autogen: crashes when template uses i18n feature\n+\n+* #7781: sphinx-build: Wrong error message when outdir is not\n+  directory\n+\n+* #7653: sphinx-quickstart: Fix multiple directory creation for nested\n+  relpath\n+\n+* #2785: html: Bad alignment of equation links\n+\n+* #7718: html theme: some themes does not respect background color of\n+  Pygments style (agogo, haiku, nature, pyramid, scrolls, sphinxdoc\n+  and traditional)\n+\n+* #7544: html theme: inconsistent padding in admonitions\n+\n+* #7581: napoleon: bad parsing of inline code in attribute docstrings\n+\n+* #7628: imgconverter: runs imagemagick once unnecessary for builders\n+  not supporting images\n+\n+* #7610: incorrectly renders consecutive backslashes for docutils-0.16\n+\n+* #7646: handle errors on event handlers\n+\n+* #4187: LaTeX: EN DASH disappears from PDF bookmarks in Japanese\n+  documents\n+\n+* #7701: LaTeX: Anonymous indirect hyperlink target causes duplicated\n+  labels\n+\n+* #7723: LaTeX: pdflatex crashed when URL contains a single quote\n+\n+* #7756: py domain: The default value for positional only argument is\n+  not shown\n+\n+* #7760: coverage: Add >>:confval:`coverage_show_missing_items`<< to\n+  show coverage result to console\n+\n+* C++, fix rendering and xrefs in nested names explicitly starting in\n+  global scope, e.g., \"::A::B\".\n+\n+* C, fix rendering and xrefs in nested names explicitly starting in\n+  global scope, e.g., \".A.B\".\n+\n+* #7763: C and C++, don't crash during display stringification of\n+  unary expressions and fold expressions.\n+\n+\n+Release 3.0.4 (released May 27, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7567: autodoc: parametrized types are shown twice for generic types\n+\n+* #7637: autodoc: system defined TypeVars are shown in Python 3.9\n+\n+* #7696: html: Updated jQuery version from 3.4.1 to 3.5.1 for security\n+  reasons\n+\n+* #7611: md5 fails when OpenSSL FIPS is enabled\n+\n+* #7626: release package does not contain \"CODE_OF_CONDUCT\"\n+\n+\n+Release 3.0.3 (released Apr 26, 2020)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* C, parse array declarators with static, qualifiers, and VLA\n+  specification.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7516: autodoc: crashes if target object raises an error on\n+  accessing its attributes\n+\n+\n+Release 3.0.2 (released Apr 19, 2020)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* C, parse attributes and add >>:confval:`c_id_attributes`<< and\n+  >>:confval:`c_paren_attributes`<< to support user-defined\n+  attributes.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7461: py domain: fails with IndexError for empty tuple in type\n+  annotation\n+\n+* #7510: py domain: keyword-only arguments are documented as having a\n+  default of None\n+\n+* #7418: std domain: \"term\" role could not match case-insensitively\n+\n+* #7461: autodoc: empty tuple in type annotation is not shown\n+  correctly\n+\n+* #7479: autodoc: Sphinx builds has been slower since 3.0.0 on mocking\n+\n+* C++, fix spacing issue in east-const declarations.\n+\n+* #7414: LaTeX: Xindy language options were incorrect\n+\n+* sphinx crashes with ImportError on python3.5.1\n+\n+\n+Release 3.0.1 (released Apr 11, 2020)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #7418: std domain: \"term\" role becomes case sensitive\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7428: py domain: a reference to class \"None\" emits a nitpicky\n+  warning\n+\n+* #7445: py domain: a return annotation \"None\" in the function\n+  signature is not converted to a hyperlink when using intersphinx\n+\n+* #7418: std domain: duplication warning for glossary terms is case\n+  insensitive\n+\n+* #7438: C++, fix merging overloaded functions in parallel builds.\n+\n+* #7422: autodoc: fails with ValueError when using\n+  autodoc_mock_imports\n+\n+* #7435: autodoc: \"autodoc_typehints='description'\" doesn't suppress\n+  typehints in signature for classes/methods\n+\n+* #7451: autodoc: fails with AttributeError when an object returns\n+  non-string object as a \"__doc__\" member\n+\n+* #7423: crashed when giving a non-string object to logger\n+\n+* #7479: html theme: Do not include xmlns attribute with HTML 5\n+  doctype\n+\n+* #7426: html theme: Escape some links in HTML templates\n+\n+\n+Release 3.0.0 (released Apr 06, 2020)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+3.0.0b1\n+\n+* LaTeX: drop dependency on **extractbb** for image inclusion in\n+  Japanese documents as \".xbb\" files are unneeded by **dvipdfmx**\n+  since TeXLive2015 (refs: #6189)\n+\n+* babel-2.0 or above is available (Unpinned)\n+\n+\n+Incompatible changes\n+--------------------\n+\n+3.0.0b1\n+\n+* Drop features and APIs deprecated in 1.8.x\n+\n+* #247: autosummary: stub files are overwritten automatically by\n+  default.  see >>:confval:`autosummary_generate_overwrite`<< to\n+  change the behavior\n+\n+* #5923: autodoc: the members of \"object\" class are not documented by\n+  default when \":inherited-members:\" and \":special-members:\" are\n+  given.\n+\n+* #6830: py domain: \"meta\" fields in info-field-list becomes reserved.\n+  They are not displayed on output document now\n+\n+* #6417: py domain: doctree of desc_parameterlist has been changed.\n+  The argument names, annotations and default values are wrapped with\n+  inline node\n+\n+* The structure of \"sphinx.events.EventManager.listeners\" has changed\n+\n+* Due to the scoping changes for \"productionlist\" some uses of \"token\"\n+  must be modified to include the scope which was previously ignored.\n+\n+* #6903: Internal data structure of Python, reST and standard domains\n+  have changed.  The node_id is added to the index of objects and\n+  modules.  Now they contains a pair of docname and node_id for cross\n+  reference.\n+\n+* #7276: C++ domain: Non intended behavior is removed such as\n+  \"say_hello_\" links to \".. cpp:function:: say_hello()\"\n+\n+* #7210: js domain: Non intended behavior is removed such as\n+  \"parseInt_\" links to \".. js:function:: parseInt\"\n+\n+* #7229: rst domain: Non intended behavior is removed such as\n+  \"numref_\" links to \".. rst:role:: numref\"\n+\n+* #6903: py domain: Non intended behavior is removed such as\n+  \"say_hello_\" links to \".. py:function:: say_hello()\"\n+\n+* #7246: py domain: Drop special cross reference helper for\n+  exceptions, functions and methods\n+\n+* The C domain has been rewritten, with additional directives and\n+  roles. The existing ones are now more strict, resulting in new\n+  warnings.\n+\n+* The attribute \"sphinx_cpp_tagname\" in the \"desc_signature_line\" node\n+  has been renamed to \"sphinx_line_type\".\n+\n+* #6462: double backslashes in domain directives are no longer\n+  replaced by single backslashes as default. A new configuration value\n+  >>:confval:`strip_signature_backslash`<< can be used by users to\n+  reenable it.\n+\n+3.0.0 final\n+\n+* #7222: \"sphinx.util.inspect.unwrap()\" is renamed to \"unwrap_all()\"\n+\n+\n+Deprecated\n+----------\n+\n+3.0.0b1\n+\n+* \"desc_signature['first']\"\n+\n+* \"sphinx.directives.DescDirective\"\n+\n+* \"sphinx.domains.std.StandardDomain.add_object()\"\n+\n+* \"sphinx.domains.python.PyDecoratorMixin\"\n+\n+* \"sphinx.ext.autodoc.get_documenters()\"\n+\n+* \"sphinx.ext.autosummary.process_autosummary_toc()\"\n+\n+* \"sphinx.parsers.Parser.app\"\n+\n+* \"sphinx.testing.path.Path.text()\"\n+\n+* \"sphinx.testing.path.Path.bytes()\"\n+\n+* \"sphinx.util.inspect.getargspec()\"\n+\n+* \"sphinx.writers.latex.LaTeXWriter.format_docclass()\"\n+\n+\n+Features added\n+--------------\n+\n+3.0.0b1\n+\n+* #247: autosummary: Add >>:confval:`autosummary_generate_overwrite`<<\n+  to overwrite old stub file\n+\n+* #5923: autodoc: \":inherited-members:\" option takes a name of\n+  anchestor class not to document inherited members of the class and\n+  uppers\n+\n+* #6830: autodoc: consider a member private if docstring contains\n+  \":meta private:\" in info-field-list\n+\n+* #7165: autodoc: Support Annotated type (PEP-593)\n+\n+* #2815: autodoc: Support singledispatch functions and methods\n+\n+* #7079: autodoc: >>:confval:`autodoc_typehints`<< accepts\n+  \"\"description\"\" configuration.  It shows typehints as object\n+  description\n+\n+* #7314: apidoc: Propagate \"--maxdepth\" option through package\n+  documents\n+\n+* #6558: glossary: emit a warning for duplicated glossary entry\n+\n+* #3106: domain: Register hyperlink target for index page\n+  automatically\n+\n+* #6558: std domain: emit a warning for duplicated generic objects\n+\n+* #6830: py domain: Add new event: >>:event:`object-description-\n+  transform`<<\n+\n+* #6895: py domain: Do not emit nitpicky warnings for built-in types\n+\n+* py domain: Support lambda functions in function signature\n+\n+* #6417: py domain: Allow to make a style for arguments of functions\n+  and methods\n+\n+* #7238, #7239: py domain: Emit a warning on describing a python\n+  object if the entry is already added as the same name\n+\n+* #7341: py domain: type annotations in singature are converted to\n+  cross refs\n+\n+* Support priority of event handlers. For more detail, see\n+  \"Sphinx.connect()\"\n+\n+* #3077: Implement the scoping for \"productionlist\" as indicated in\n+  the documentation.\n+\n+* #1027: Support backslash line continuation in \"productionlist\".\n+\n+* #7108: config: Allow to show an error message from conf.py via\n+  \"ConfigError\"\n+\n+* #7032: html: >>:confval:`html_scaled_image_link`<< will be disabled\n+  for images having \"no-scaled-link\" class\n+\n+* #7144: Add CSS class indicating its domain for each desc node\n+\n+* #7211: latex: Use babel for Chinese document when using XeLaTeX\n+\n+* #6672: LaTeX: Support LaTeX Theming (experimental)\n+\n+* #7005: LaTeX: Add LaTeX styling macro for \"kbd\" role\n+\n+* #7220: genindex: Show \"main\" index entries at first\n+\n+* #7103: linkcheck: writes all links to \"output.json\"\n+\n+* #7025: html search: full text search can be disabled for individual\n+  document using \":nosearch:\" file-wide metadata\n+\n+* #7293: html search: Allow to override JavaScript splitter via\n+  \"SearchLanguage.js_splitter_code\"\n+\n+* #7142: html theme: Add a theme option: \"pygments_dark_style\" to\n+  switch the style of code-blocks in dark mode\n+\n+* The C domain has been rewritten adding for example:\n+\n+  * Cross-referencing respecting the current scope.\n+\n+  * Possible to document anonymous entities.\n+\n+  * More specific directives and roles for each type of entitiy, e.g.,\n+    handling scoping of enumerators.\n+\n+  * New role \"c:expr\" for rendering expressions and types in text.\n+\n+* Added \"SphinxDirective.get_source_info()\" and\n+  \"SphinxRole.get_source_info()\".\n+\n+* #7324: sphinx-build: Emit a warning if multiple files having\n+  different file extensions for same document found\n+\n+3.0.0 final\n+\n+* Added \"ObjectDescription.transform_content()\".\n+\n+\n+Bugs fixed\n+----------\n+\n+3.0.0b1\n+\n+* C++, fix cross reference lookup in certain cases involving function\n+  overloads.\n+\n+* #5078: C++, fix cross reference lookup when a directive contains\n+  multiple declarations.\n+\n+* C++, suppress warnings for directly dependent typenames in cross\n+  references generated automatically in signatures.\n+\n+* #5637: autodoc: Incorrect handling of nested class names on show-\n+  inheritance\n+\n+* #7267: autodoc: error message for invalid directive options has\n+  wrong location\n+\n+* #7329: autodoc: info-field-list is wrongly generated from type hints\n+  into the class description even if \"autoclass_content='class'\" set\n+\n+* #7331: autodoc: a cython-function is not recognized as a function\n+\n+* #5637: inheritance_diagram: Incorrect handling of nested class names\n+\n+* #7139: \"code-block:: guess\" does not work\n+\n+* #7325: html: source_suffix containing dot leads to wrong source link\n+\n+* #7357: html: Resizing SVG image fails with ValueError\n+\n+* #7278: html search: Fix use of \"html_file_suffix\" instead of\n+  \"html_link_suffix\" in search results\n+\n+* #7297: html theme: \"bizstyle\" does not support \"sidebarwidth\"\n+\n+* #3842: singlehtml: Path to images broken when master doc is not in\n+  source root\n+\n+* #7179: std domain: Fix whitespaces are suppressed on referring\n+  GenericObject\n+\n+* #7289: console: use bright colors instead of bold\n+\n+* #1539: C, parse array types.\n+\n+* #2377: C, parse function pointers even in complex types.\n+\n+* #7345: sphinx-build: Sphinx crashes if output directory exists as a\n+  file\n+\n+* #7290: sphinx-build: Ignore bdb.BdbQuit when handling exceptions\n+\n+* #6240: napoleon: Attributes and Methods sections ignore :noindex:\n+  option\n+\n+3.0.0 final\n+\n+* #7364: autosummary: crashed when >>:confval:`autosummary_generate`<<\n+  is False\n+\n+* #7370: autosummary: raises UnboundLocalError when unknown module\n+  given\n+\n+* #7367: C++, alternate operator spellings are now supported.\n+\n+* C, alternate operator spellings are now supported.\n+\n+* #7368: C++, comma operator in expressions, pack expansion in\n+  template argument lists, and more comprehensive error messages in\n+  some cases.\n+\n+* C, C++, fix crash and wrong duplicate warnings related to anon\n+  symbols.\n+\n+* #6477: Escape first \"!\" in a cross reference linking no longer\n+  possible\n+\n+* #7219: py domain: The index entry generated by \"py:function\"\n+  directive is different with one from \"index\" directive with\n+  \"builtin\" type\n+\n+* #7301: capital characters are not allowed for node_id\n+\n+* #7301: epub: duplicated node_ids are generated\n+\n+* #6564: html: a width of table was ignored on HTML builder\n+\n+* #7401: Incorrect argument is passed for >>:event:`env-get-\n+  outdated`<< handlers\n+\n+* #7355: autodoc: a signature of cython-function is not recognized\n+  well\n+\n+* #7222: autodoc: \"__wrapped__\" functions are not documented correctly\n+\n+* #7409: intersphinx: ValueError is raised when an extension sets up\n+  >>:confval:`intersphinx_mapping`<< on >>:event:`config-inited`<<\n+  event\n+\n+* #7343: Sphinx builds has been slower since 2.4.0 on debug mode\n+\n+\n+Release 2.4.4 (released Mar 05, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7197: LaTeX: platex cause error to build image directive with\n+  target url\n+\n+* #7223: Sphinx builds has been slower since 2.4.0\n+\n+\n+Release 2.4.3 (released Feb 22, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7184: autodoc: \"*args\" and \"**kwarg\" in type comments are not\n+  handled properly\n+\n+* #7189: autodoc: classmethod coroutines are not detected\n+\n+* #7183: intersphinx: \":attr:\" reference to property is broken\n+\n+* #6244, #6387: html search: Search breaks/hangs when built with\n+  dirhtml builder\n+\n+* #7195: todo: emit doctree-resolved event with non-document node\n+  incorrectly\n+\n+\n+Release 2.4.2 (released Feb 19, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7138: autodoc: \"autodoc.typehints\" crashed when variable has\n+  unbound object as a value\n+\n+* #7156: autodoc: separator for keyword only arguments is not shown\n+\n+* #7146: autodoc: IndexError is raised on suppressed type_comment\n+  found\n+\n+* #7161: autodoc: typehints extension does not support parallel build\n+\n+* #7178: autodoc: TypeError is raised on fetching type annotations\n+\n+* #7151: crashed when extension assigns a value to \"env.indexentries\"\n+\n+* #7170: text: Remove debug print\n+\n+* #7137: viewcode: Avoid to crash when non-python code given\n+\n+\n+Release 2.4.1 (released Feb 11, 2020)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #7120: html: crashed when on scaling SVG images which have float\n+  dimensions\n+\n+* #7126: autodoc: TypeError: 'getset_descriptor' object is not\n+  iterable\n+\n+\n+Release 2.4.0 (released Feb 09, 2020)\n+=====================================\n+\n+\n+Deprecated\n+----------\n+\n+* The \"decode\" argument of \"sphinx.pycode.ModuleAnalyzer()\"\n+\n+* \"sphinx.directives.other.Index\"\n+\n+* \"sphinx.environment.temp_data['gloss_entries']\"\n+\n+* \"sphinx.environment.BuildEnvironment.indexentries\"\n+\n+* \"sphinx.environment.collectors.indexentries.IndexEntriesCollector\"\n+\n+* \"sphinx.ext.apidoc.INITPY\"\n+\n+* \"sphinx.ext.apidoc.shall_skip()\"\n+\n+* \"sphinx.io.FiletypeNotFoundError\"\n+\n+* \"sphinx.io.get_filetype()\"\n+\n+* \"sphinx.pycode.ModuleAnalyzer.encoding\"\n+\n+* \"sphinx.roles.Index\"\n+\n+* \"sphinx.util.detect_encoding()\"\n+\n+* \"sphinx.util.get_module_source()\"\n+\n+* \"sphinx.util.inspect.Signature\"\n+\n+* \"sphinx.util.inspect.safe_getmembers()\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.settings.author\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.settings.contentsname\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.settings.docclass\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.settings.docname\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.settings.title\"\n+\n+* \"sphinx.writers.latex.ADDITIONAL_SETTINGS\"\n+\n+* \"sphinx.writers.latex.DEFAULT_SETTINGS\"\n+\n+* \"sphinx.writers.latex.LUALATEX_DEFAULT_FONTPKG\"\n+\n+* \"sphinx.writers.latex.PDFLATEX_DEFAULT_FONTPKG\"\n+\n+* \"sphinx.writers.latex.XELATEX_DEFAULT_FONTPKG\"\n+\n+* \"sphinx.writers.latex.XELATEX_GREEK_DEFAULT_FONTPKG\"\n+\n+\n+Features added\n+--------------\n+\n+* #6910: inheritance_diagram: Make the background of diagrams\n+  transparent\n+\n+* #6446: duration: Add \"sphinx.ext.durations\" to inspect which\n+  documents slow down the build\n+\n+* #6837: LaTeX: Support a nested table\n+\n+* #7115: LaTeX: Allow to override LATEXOPTS and LATEXMKOPTS via\n+  environment variable\n+\n+* #6966: graphviz: Support \":class:\" option\n+\n+* #6696: html: \":scale:\" option of image/figure directive not working\n+  for SVG images (imagesize-1.2.0 or above is required)\n+\n+* #6994: imgconverter: Support illustrator file (.ai) to .png\n+  conversion\n+\n+* autodoc: Support Positional-Only Argument separator (PEP-570\n+  compliant)\n+\n+* autodoc: Support type annotations for variables\n+\n+* #2755: autodoc: Add new event: >>:event:`autodoc-before-process-\n+  signature`<<\n+\n+* #2755: autodoc: Support type_comment style (ex. \"# type: (str) ->\n+  str\") annotation (python3.8+ or typed_ast is required)\n+\n+* #7051: autodoc: Support instance variables without defaults\n+  (PEP-526)\n+\n+* #6418: autodoc: Add a new extension \"sphinx.ext.autodoc.typehints\".\n+  It shows typehints as object description if \"autodoc_typehints =\n+  \"description\"\" set. This is an experimental extension and it will be\n+  integrated into autodoc core in Sphinx-3.0\n+\n+* SphinxTranslator now calls visitor/departure method for super node\n+  class if visitor/departure method for original node class not found\n+\n+* #6418: Add new event: >>:event:`object-description-transform`<<\n+\n+* py domain: \"py:data\" and \"py:attribute\" take new options named\n+  \":type:\" and \":value:\" to describe its type and initial value\n+\n+* #6785: py domain: \":py:attr:\" is able to refer properties again\n+\n+* #6772: apidoc: Add \"-q\" option for quiet mode\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6925: html: Remove redundant type=\"text/javascript\" from <script>\n+  elements\n+\n+* #7112: html: SVG image is not layouted as float even if aligned\n+\n+* #6906, #6907: autodoc: failed to read the source codes encoeded in\n+  cp1251\n+\n+* #6961: latex: warning for babel shown twice\n+\n+* #7059: latex: LaTeX compilation falls into infinite loop (wrapfig\n+  issue)\n+\n+* #6581: latex: \":reversed:\" option for toctree does not effect to\n+  LaTeX build\n+\n+* #6559: Wrong node-ids are generated in glossary directive\n+\n+* #6986: apidoc: misdetects module name for .so file inside module\n+\n+* #6899: apidoc: private members are not shown even if \"--private\"\n+  given\n+\n+* #6327: apidoc: Support a python package consisted of __init__.so\n+  file\n+\n+* #6999: napoleon: fails to parse tilde in :exc: role\n+\n+* #7019: gettext: Absolute path used in message catalogs\n+\n+* #7023: autodoc: nested partial functions are not listed\n+\n+* #7023: autodoc: partial functions imported from other modules are\n+  listed as module members without :impoprted-members: option\n+\n+* #6889: autodoc: Trailing comma in \":members::\" option causes cryptic\n+  warning\n+\n+* #6568: autosummary: \"autosummary_imported_members\" is ignored on\n+  generating a stub file for submodule\n+\n+* #7055: linkcheck: redirect is treated as an error\n+\n+* #7088: HTML template: If \"navigation_with_keys\" option is activated,\n+  modifier keys are ignored, which means the feature can interfere\n+  with browser features\n+\n+* #7090: std domain: Can't assign numfig-numbers for custom container\n+  nodes\n+\n+* #7106: std domain: enumerated nodes are marked as duplicated when\n+  extensions call \"note_explicit_target()\"\n+\n+* #7095: dirhtml: Cross references are broken via intersphinx and\n+  \":doc:\" role\n+\n+* C++:\n+\n+  * Don't crash when using the \"struct\" role in some cases.\n+\n+  * Don't warn when using the \"var\"/\"member\" role for function\n+    parameters.\n+\n+  * Render call and braced-init expressions correctly.\n+\n+* #7097: Filenames of images generated by\n+  \"sphinx.transforms.post_transforms.images.ImageConverter\" or its\n+  subclasses (used for latex build) are now sanitized, to prevent\n+  broken paths\n+\n+\n+Release 2.3.1 (released Dec 22, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6936: sphinx-autogen: raises AttributeError\n+\n+\n+Release 2.3.0 (released Dec 15, 2019)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #6742: \"end-before\" option of \"literalinclude\" directive does not\n+  match the first line of the code block.\n+\n+* #1331: Change default User-Agent header to \"\"Sphinx/X.Y.Z\n+  requests/X.Y.Z python/X.Y.Z\"\".  It can be changed via\n+  >>:confval:`user_agent`<<.\n+\n+* #6867: text: content of admonitions starts after a blank line\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.builders.gettext.POHEADER\"\n+\n+* \"sphinx.io.SphinxStandaloneReader.app\"\n+\n+* \"sphinx.io.SphinxStandaloneReader.env\"\n+\n+* \"sphinx.util.texescape.tex_escape_map\"\n+\n+* \"sphinx.util.texescape.tex_hl_escape_map_new\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.no_contractions\"\n+\n+\n+Features added\n+--------------\n+\n+* #6707: C++, support bit-fields.\n+\n+* #267: html: Eliminate prompt characters of doctest block from\n+  copyable text\n+\n+* #6548: html: Use favicon for OpenSearch if available\n+\n+* #6729: html theme: agogo theme now supports \"rightsidebar\" option\n+\n+* #6780: Add PEP-561 Support\n+\n+* #6762: latex: Allow to load additional LaTeX packages via\n+  \"extrapackages\" key of >>:confval:`latex_elements`<<\n+\n+* #1331: Add new config variable: >>:confval:`user_agent`<<\n+\n+* #6000: LaTeX: have backslash also be an inline literal word wrap\n+  break character\n+\n+* #4186: LaTeX: Support upLaTeX as a new >>:confval:`latex_engine`<<\n+  (experimental)\n+\n+* #6812: Improve a warning message when extensions are not parallel\n+  safe\n+\n+* #6818: Improve Intersphinx performance for multiple remote\n+  inventories.\n+\n+* #2546: apidoc: .so file support\n+\n+* #6798: autosummary: emit \"autodoc-skip-member\" event on generating\n+  stub file\n+\n+* #6483: i18n: make explicit titles in toctree translatable\n+\n+* #6816: linkcheck: Add >>:confval:`linkcheck_auth`<< option to\n+  provide authentication information when doing \"linkcheck\" builds\n+\n+* #6872: linkcheck: Handles HTTP 308 Permanent Redirect\n+\n+* #6613: html: Wrap section number in span tag\n+\n+* #6781: gettext: Add >>:confval:`gettext_last_translator' and\n+  :confval:`gettext_language_team`<< to customize headers of POT file\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6668: LaTeX: Longtable before header has incorrect distance (refs:\n+  latex3/latex2e#173)\n+\n+* #6618: LaTeX: Avoid section names at the end of a page\n+\n+* #6738: LaTeX: Do not replace unicode characters by LaTeX macros on\n+  unicode supported LaTeX engines: \u00b6, \u00a7, \u20ac, \u221e, \u00b1, \u2192, \u2023, \u2013, superscript\n+  and subscript digits go through \"as is\" (as default OpenType font\n+  supports them)\n+\n+* #6704: linkcheck: Be defensive and handle newly defined HTTP error\n+  code\n+\n+* #6806: linkcheck: Failure on parsing content\n+\n+* #6655: image URLs containing \"data:\" causes gettext builder crashed\n+\n+* #6584: i18n: Error when compiling message catalogs on Hindi\n+\n+* #6718: i18n: KeyError is raised if section title and table title are\n+  same\n+\n+* #6743: i18n: >>:confval:`rst_prolog`<< breaks the translation\n+\n+* #6708: mathbase: Some deprecated functions have removed\n+\n+* #6709: autodoc: mock object does not work as a class decorator\n+\n+* #5070: epub: Wrong internal href fragment links\n+\n+* #6712: Allow not to install sphinx.testing as runtime (mainly for\n+  ALT Linux)\n+\n+* #6741: html: search result was broken with empty\n+  >>:confval:`html_file_suffix`<<\n+\n+* #6001: LaTeX does not wrap long code lines at backslash character\n+\n+* #6804: LaTeX: PDF build breaks if admonition of danger type contains\n+  code-block long enough not to fit on one page\n+\n+* #6809: LaTeX: code-block in a danger type admonition can easily\n+  spill over bottom of page\n+\n+* #6793: texinfo: Code examples broken following \"sidebar\"\n+\n+* #6813: An orphan warning is emitted for included document on\n+  Windows.  Thanks to @drillan\n+\n+* #6850: Fix smartypants module calls re.sub() with wrong options\n+\n+* #6824: HTML search: If a search term is partially matched in the\n+  title and fully matched in a text paragraph on the same page, the\n+  search does not include this match.\n+\n+* #6848: config.py shouldn't pop extensions from overrides\n+\n+* #6867: text: extra spaces are inserted to hyphenated words on\n+  folding lines\n+\n+* #6886: LaTeX: xelatex converts straight double quotes into right\n+  curly ones (shows when >>:confval:`smartquotes`<< is \"False\")\n+\n+* #6890: LaTeX: even with smartquotes off, PDF output transforms\n+  straight quotes and consecutive hyphens into curly quotes and dashes\n+\n+* #6876: LaTeX: multi-line display of authors on title page has ragged\n+  edges\n+\n+* #6887: Sphinx crashes with docutils-0.16b0\n+\n+* #6920: sphinx-build: A console message is wrongly highlighted\n+\n+* #6900: sphinx-build: \"-D\" option does not considers \"0\" and \"1\" as a\n+  boolean value\n+\n+\n+Release 2.2.2 (released Dec 03, 2019)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #6803: For security reason of python, parallel mode is disabled on\n+  macOS and Python3.8+\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6776: LaTeX: 2019-10-01 LaTeX release breaks \"sphinxcyrillic.sty\"\n+\n+* #6815: i18n: French, Hindi, Chinese, Japanese and Korean translation\n+  messages has been broken\n+\n+* #6803: parallel build causes AttributeError on macOS and Python3.8\n+\n+\n+Release 2.2.1 (released Oct 26, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6641: LaTeX: Undefined control sequence \"\\sphinxmaketitle\"\n+\n+* #6710: LaTeX not well configured for Greek language as main language\n+\n+* #6759: validation of html static paths and extra paths no longer\n+  throws an error if the paths are in different directories\n+\n+\n+Release 2.2.0 (released Aug 19, 2019)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* apidoc: template files are renamed to \".rst_t\"\n+\n+* html: Field lists will be styled by grid layout\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.domains.math.MathDomain.add_equation()\"\n+\n+* \"sphinx.domains.math.MathDomain.get_next_equation_number()\"\n+\n+* The \"info\" and \"warn\" arguments of\n+  \"sphinx.ext.autosummary.generate.generate_autosummary_docs()\"\n+\n+* \"sphinx.ext.autosummary.generate._simple_info()\"\n+\n+* \"sphinx.ext.autosummary.generate._simple_warn()\"\n+\n+* \"sphinx.ext.todo.merge_info()\"\n+\n+* \"sphinx.ext.todo.process_todo_nodes()\"\n+\n+* \"sphinx.ext.todo.process_todos()\"\n+\n+* \"sphinx.ext.todo.purge_todos()\"\n+\n+\n+Features added\n+--------------\n+\n+* #5124: graphviz: \":graphviz_dot:\" option is renamed to \":layout:\"\n+\n+* #1464: html: emit a warning if >>:confval:`html_static_path`<< and\n+  >>:confval:`html_extra_path`<< directories are inside output\n+  directory\n+\n+* #6514: html: Add a label to search input for accessability purposes\n+\n+* #5602: apidoc: Add \"--templatedir\" option\n+\n+* #6475: Add \"override\" argument to \"app.add_autodocumenter()\"\n+\n+* #6310: imgmath: let >>:confval:`imgmath_use_preview`<< work also\n+  with the SVG format for images rendering inline math\n+\n+* #6533: LaTeX: refactor visit_enumerated_list() to use\n+  \"\\sphinxsetlistlabels\"\n+\n+* #6628: quickstart: Use \"https://docs.python.org/3/\" for default\n+  setting of >>:confval:`intersphinx_mapping`<<\n+\n+* #6419: sphinx-build: give reasons why rebuilded\n+\n+\n+Bugs fixed\n+----------\n+\n+* py domain: duplicated warning does not point the location of source\n+  code\n+\n+* #6499: html: Sphinx never updates a copy of >>:confval:`html_logo`<<\n+  even if original file has changed\n+\n+* #1125: html theme: scrollbar is hard to see on classic theme and\n+  macOS\n+\n+* #5502: linkcheck: Consider HTTP 503 response as not an error\n+\n+* #6439: Make generated download links reproducible\n+\n+* #6486: UnboundLocalError is raised if broken extension installed\n+\n+* #6567: autodoc: >>:confval:`autodoc_inherit_docstrings`<< does not\n+  effect to \"__init__()\" and \"__new__()\"\n+\n+* #6574: autodoc: >>:confval:`autodoc_member_order`<< does not refer\n+  order of imports when \"'bysource'\" order\n+\n+* #6574: autodoc: missing type annotation for variadic and keyword\n+  parameters\n+\n+* #6589: autodoc: Formatting issues with autodoc_typehints='none'\n+\n+* #6605: autodoc: crashed when target code contains custom method-like\n+  objects\n+\n+* #6498: autosummary: crashed with wrong autosummary_generate setting\n+\n+* #6507: autosummary: crashes without no autosummary_generate setting\n+\n+* #6511: LaTeX: autonumbered list can not be customized in LaTeX since\n+  Sphinx 1.8.0 (refs: #6533)\n+\n+* #6531: Failed to load last environment object when extension added\n+\n+* #736: Invalid sort in pair index\n+\n+* #6527: >>:confval:`last_updated`<< wrongly assumes timezone as UTC\n+\n+* #5592: std domain: \"option\" directive registers an index entry for\n+  each comma separated option\n+\n+* #6549: sphinx-build: Escaped characters in error messages\n+\n+* #6545: doctest comments not getting trimmed since Sphinx 1.8.0\n+\n+* #6561: glossary: Wrong hyperlinks are generated for non alphanumeric\n+  terms\n+\n+* #6620: i18n: classifiers of definition list are not translated with\n+  docutils-0.15\n+\n+* #6474: \"DocFieldTransformer\" raises AttributeError when given\n+  directive is not a subclass of ObjectDescription\n+\n+\n+Release 2.1.2 (released Jun 19, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6497: custom lexers fails highlighting when syntax error\n+\n+* #6478, #6488: info field lists are incorrectly recognized\n+\n+\n+Release 2.1.1 (released Jun 10, 2019)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #6447: autodoc: Stop to generate document for undocumented module\n+  variables\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6442: LaTeX: admonitions of \"note\" type can get separated from\n+  immediately preceding section title by pagebreak\n+\n+* #6448: autodoc: crashed when autodocumenting classes with \"__slots__\n+  = None\"\n+\n+* #6451: autodoc: generates docs for \"optional import\"ed modules as\n+  variables\n+\n+* #6452: autosummary: crashed when generating document of properties\n+\n+* #6455: napoleon: docstrings for properties are not processed\n+\n+* #6436: napoleon: \"Unknown target name\" error if variable name ends\n+  with underscore\n+\n+* #6440: apidoc: missing blank lines between modules\n+\n+\n+Release 2.1.0 (released Jun 02, 2019)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Ignore filenames without file extension given to\n+  \"Builder.build_specific()\" API directly\n+\n+* #6230: The anchor of term in glossary directive is changed if it is\n+  consisted by non-ASCII characters\n+\n+* #4550: html: Centering tables by default using CSS\n+\n+* #6239: latex: xelatex and xeCJK are used for Chinese documents by\n+  default\n+\n+* \"Sphinx.add_lexer()\" now takes a Lexer class instead of instance.\n+  An instance of lexers are still supported until Sphinx-3.x.\n+\n+\n+Deprecated\n+----------\n+\n+* \"sphinx.builders.latex.LaTeXBuilder.apply_transforms()\"\n+\n+* \"sphinx.builders._epub_base.EpubBuilder.esc()\"\n+\n+* \"sphinx.directives.Acks\"\n+\n+* \"sphinx.directives.Author\"\n+\n+* \"sphinx.directives.Centered\"\n+\n+* \"sphinx.directives.Class\"\n+\n+* \"sphinx.directives.CodeBlock\"\n+\n+* \"sphinx.directives.Figure\"\n+\n+* \"sphinx.directives.HList\"\n+\n+* \"sphinx.directives.Highlight\"\n+\n+* \"sphinx.directives.Include\"\n+\n+* \"sphinx.directives.Index\"\n+\n+* \"sphinx.directives.LiteralInclude\"\n+\n+* \"sphinx.directives.Meta\"\n+\n+* \"sphinx.directives.Only\"\n+\n+* \"sphinx.directives.SeeAlso\"\n+\n+* \"sphinx.directives.TabularColumns\"\n+\n+* \"sphinx.directives.TocTree\"\n+\n+* \"sphinx.directives.VersionChange\"\n+\n+* \"sphinx.domains.python.PyClassmember\"\n+\n+* \"sphinx.domains.python.PyModulelevel\"\n+\n+* \"sphinx.domains.std.StandardDomain._resolve_citation_xref()\"\n+\n+* \"sphinx.domains.std.StandardDomain.note_citations()\"\n+\n+* \"sphinx.domains.std.StandardDomain.note_citation_refs()\"\n+\n+* \"sphinx.domains.std.StandardDomain.note_labels()\"\n+\n+* \"sphinx.environment.NoUri\"\n+\n+* \"sphinx.ext.apidoc.format_directive()\"\n+\n+* \"sphinx.ext.apidoc.format_heading()\"\n+\n+* \"sphinx.ext.apidoc.makename()\"\n+\n+* \"sphinx.ext.autodoc.importer.MockFinder\"\n+\n+* \"sphinx.ext.autodoc.importer.MockLoader\"\n+\n+* \"sphinx.ext.autodoc.importer.mock()\"\n+\n+* \"sphinx.ext.autosummary.autolink_role()\"\n+\n+* \"sphinx.ext.imgmath.DOC_BODY\"\n+\n+* \"sphinx.ext.imgmath.DOC_BODY_PREVIEW\"\n+\n+* \"sphinx.ext.imgmath.DOC_HEAD\"\n+\n+* \"sphinx.transforms.CitationReferences\"\n+\n+* \"sphinx.transforms.SmartQuotesSkipper\"\n+\n+* \"sphinx.util.docfields.DocFieldTransformer.preprocess_fieldtypes()\"\n+\n+* \"sphinx.util.node.find_source_node()\"\n+\n+* \"sphinx.util.i18n.find_catalog()\"\n+\n+* \"sphinx.util.i18n.find_catalog_files()\"\n+\n+* \"sphinx.util.i18n.find_catalog_source_files()\"\n+\n+For more details, see deprecation APIs list.\n+\n+\n+Features added\n+--------------\n+\n+* Add a helper class\n+  \"sphinx.transforms.post_transforms.SphinxPostTransform\"\n+\n+* Add helper methods\n+\n+  * \"PythonDomain.note_module()\"\n+\n+  * \"PythonDomain.note_object()\"\n+\n+  * \"SphinxDirective.set_source_info()\"\n+\n+* #6180: Support \"--keep-going\" with BuildDoc setup command\n+\n+* \"math\" directive now supports \":class:\" option\n+\n+* todo: \"todo\" directive now supports \":name:\" option\n+\n+* Enable override via environment of \"SPHINXOPTS\" and \"SPHINXBUILD\"\n+  Makefile variables (refs: #6232, #6303)\n+\n+* #6287: autodoc: Unable to document bound instance methods exported\n+  as module functions\n+\n+* #6289: autodoc: >>:confval:`autodoc_default_options`<< now supports\n+  \"imported-members\" option\n+\n+* #4777: autodoc: Support coroutine\n+\n+* #744: autodoc: Support abstractmethod\n+\n+* #6325: autodoc: Support attributes in __slots__.  For dict-style\n+  __slots__, autodoc considers values as a docstring of the attribute\n+\n+* #6361: autodoc: Add >>:confval:`autodoc_typehints`<< to suppress\n+  typehints from signature\n+\n+* #1063: autodoc: \"automodule\" directive now handles undocumented\n+  module level variables\n+\n+* #6212 autosummary: Add >>:confval:`autosummary_imported_members`<<\n+  to display imported members on autosummary\n+\n+* #6271: \"make clean\" is catastrophically broken if building into '.'\n+\n+* #6363: Support \"%O%\" environment variable in make.bat\n+\n+* #4777: py domain: Add \":async:\" option to \"py:function\" directive\n+\n+* py domain: Add new options to \"py:method\" directive\n+\n+  * \":abstractmethod:\"\n+\n+  * \":async:\"\n+\n+  * \":classmethod:\"\n+\n+  * \":property:\"\n+\n+  * \":staticmethod:\"\n+\n+* rst domain: Add \"directive:option\" directive to describe the option\n+  for directive\n+\n+* #6306: html: Add a label to search form for accessability purposes\n+\n+* #4390: html: Consistent and semantic CSS for signatures\n+\n+* #6358: The \"rawsource\" property of \"production\" nodes now contains\n+  the full production rule\n+\n+* #6373: autosectionlabel: Allow suppression of warnings\n+\n+* coverage: Support a new \"coverage_ignore_pyobjects\" option\n+\n+* #6239: latex: Support to build Chinese documents\n+\n+\n+Bugs fixed\n+----------\n+\n+* #6230: Inappropriate node_id has been generated by glossary\n+  directive if term is consisted by non-ASCII characters\n+\n+* #6213: ifconfig: contents after headings are not shown\n+\n+* commented term in glossary directive is wrongly recognized\n+\n+* #6299: rst domain: rst:directive directive generates waste space\n+\n+* #6379: py domain: Module index (py-modindex.html) has duplicate\n+  titles\n+\n+* #6331: man: invalid output when doctest follows rubric\n+\n+* #6351: \"Hyperlink target is not referenced\" message is shown even if\n+  referenced\n+\n+* #6165: autodoc: \"tab_width\" setting of docutils has been ignored\n+\n+* #6347: autodoc: crashes with a plain Tuple on Python 3.6 and 3.5\n+\n+* #6311: autosummary: autosummary table gets confused by complex type\n+  hints\n+\n+* #6350: autosummary: confused by an argument having some kind of\n+  default value\n+\n+* Generated Makefiles lack a final EOL (refs: #6232)\n+\n+* #6375: extlinks: Cannot escape angle brackets in link caption\n+\n+* #6378: linkcheck: Send commonly used User-Agent\n+\n+* #6387: html search: failed to search document with haiku and scrolls\n+  themes\n+\n+* #6408: html search: Fix the ranking of search results\n+\n+* #6406: Wrong year is returned for \"SOURCE_DATE_EPOCH\"\n+\n+* #6402: image directive crashes by unknown image format\n+\n+* #6286: C++, allow 8 and 9 in hexadecimal integer literals.\n+\n+* #6305: Fix the string in quickstart for 'path' argument of parser\n+\n+* LaTeX: Figures in admonitions produced errors (refs: #6364)\n+\n+\n+Release 2.0.1 (released Apr 08, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* LaTeX: some system labels are not translated\n+\n+* RemovedInSphinx30Warning is marked as pending\n+\n+* deprecation warnings are not emitted\n+\n+  * sphinx.application.CONFIG_FILENAME\n+\n+  * sphinx.builders.htmlhelp\n+\n+  * >>:confval:`viewcode_import`<<\n+\n+* #6208: C++, properly parse full xrefs that happen to have a short\n+  xref as prefix\n+\n+* #6220, #6225: napoleon: AttributeError is raised for raised section\n+  having references\n+\n+* #6245: circular import error on importing SerializingHTMLBuilder\n+\n+* #6243: LaTeX: 'releasename' setting for latex_elements is ignored\n+\n+* #6244: html: Search function is broken with 3rd party themes\n+\n+* #6263: html: HTML5Translator crashed with invalid field node\n+\n+* #6262: html theme: The style of field lists has changed in bizstyle\n+  theme\n+\n+\n+Release 2.0.0 (released Mar 29, 2019)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+2.0.0b1\n+\n+* LaTeX builder now depends on TeX Live 2015 or above.\n+\n+* LaTeX builder (with \"'pdflatex'\" >>:confval:`latex_engine`<<) will\n+  process Unicode Greek letters in text (not in math mark-up) via the\n+  text font and will not escape them to math mark-up. See the\n+  discussion of the \"'fontenc'\" key of >>:confval:`latex_elements`<<;\n+  such (optional) support for Greek adds, for example on Ubuntu\n+  xenial, the \"texlive-lang-greek\" and (if default font set-up is not\n+  modified) \"cm-super(-minimal)\" as additional Sphinx LaTeX\n+  requirements.\n+\n+* LaTeX builder with >>:confval:`latex_engine`<< set to \"'xelatex'\" or\n+  to \"'lualatex'\" requires (by default) the \"FreeFont\" fonts, which in\n+  Ubuntu xenial are provided by package \"fonts-freefont-otf\", and e.g.\n+  in Fedora 29 via package \"texlive-gnu-freefont\".\n+\n+* requests 2.5.0 or above\n+\n+* The six package is no longer a dependency\n+\n+* The sphinxcontrib-websupport package is no longer a dependency\n+\n+* Some packages are separated to sub packages:\n+\n+  * sphinxcontrib.applehelp\n+\n+  * sphinxcontrib.devhelp\n+\n+  * sphinxcontrib.htmlhelp\n+\n+  * sphinxcontrib.jsmath\n+\n+  * sphinxcontrib.serializinghtml\n+\n+  * sphinxcontrib.qthelp\n+\n+\n+Incompatible changes\n+--------------------\n+\n+2.0.0b1\n+\n+* Drop python 2.7 and 3.4 support\n+\n+* Drop docutils 0.11 support\n+\n+* Drop features and APIs deprecated in 1.7.x\n+\n+* The default setting for >>:confval:`master_doc`<< is changed to\n+  \"'index'\" which has been longly used as default of sphinx-\n+  quickstart.\n+\n+* LaTeX: Move message resources to \"sphinxmessage.sty\"\n+\n+* LaTeX: Stop using \"\\captions<lang>\" macro for some labels\n+\n+* LaTeX: for \"'xelatex'\" and \"'lualatex'\", use the \"FreeFont\" OpenType\n+  fonts as default choice (refs: #5645)\n+\n+* LaTeX: \"'xelatex'\" and \"'lualatex'\" now use \"\\small\" in code-blocks\n+  (due to \"FreeMono\" character width) like \"'pdflatex'\" already did\n+  (due to \"Courier\" character width).  You may need to adjust this via\n+  >>:confval:`latex_elements`<< \"'fvset'\" key, in case of usage of\n+  some other OpenType fonts (refs: #5768)\n+\n+* LaTeX: Greek letters in text are not escaped to math mode mark-up,\n+  and they will use the text font not the math font. The \"LGR\" font\n+  encoding must be added to the \"'fontenc'\" key of\n+  >>:confval:`latex_elements`<< for this to work (only if it is needed\n+  by the document, of course).\n+\n+* LaTeX: setting the >>:confval:`language`<< to \"'en'\" triggered\n+  \"Sonny\" option of \"fncychap\", now it is \"Bjarne\" to match case of no\n+  language specified. (refs: #5772)\n+\n+* #5770: doctest: Follow >>:confval:`highlight_language`<< on\n+  highlighting doctest block.  As a result, they are highlighted as\n+  python3 by default.\n+\n+* The order of argument for \"HTMLTranslator\", \"HTML5Translator\" and\n+  \"ManualPageTranslator\" are changed\n+\n+* LaTeX: hard-coded redefinitions of \"\\l@section\" and \"\\l@subsection\"\n+  formerly done during loading of \"'manual'\" docclass get executed\n+  later, at time of \"\\sphinxtableofcontents\".  This means that custom\n+  user definitions from LaTeX preamble now get overwritten.  Use\n+  \"\\sphinxtableofcontentshook\" to insert custom user definitions.  See\n+  Macros.\n+\n+* quickstart: Simplify generated \"conf.py\"\n+\n+* #4148: quickstart: some questions are removed.  They are still able\n+  to specify via command line options\n+\n+* websupport: unbundled from sphinx core. Please use sphinxcontrib-\n+  websupport\n+\n+* C++, the visibility of base classes is now always rendered as\n+  present in the input. That is, \"private\" is now shown, where it was\n+  ellided before.\n+\n+* LaTeX: graphics inclusion of oversized images rescales to not exceed\n+  the text width and height, even if width and/or height option were\n+  used. (refs: #5956)\n+\n+* epub: \"epub_title\" defaults to the >>:confval:`project`<< option\n+\n+* #4550: All tables and figures without \"align\" option are displayed\n+  to center\n+\n+* #4587: html: Output HTML5 by default\n+\n+2.0.0b2\n+\n+* texinfo: image files are copied into \"name-figure\" directory\n+\n+\n+Deprecated\n+----------\n+\n+2.0.0b1\n+\n+* Support for evaluating Python 2 syntax is deprecated. This includes\n+  configuration files which should be converted to Python 3.\n+\n+* The arguments of \"EpubBuilder.build_mimetype()\",\n+  \"EpubBuilder.build_container()\", \"EpubBuilder.bulid_content()\",\n+  \"EpubBuilder.build_toc()\" and \"EpubBuilder.build_epub()\"\n+\n+* The arguments of \"Epub3Builder.build_navigation_doc()\"\n+\n+* The config variables\n+\n+  * >>:confval:`html_experimental_html5_writer`<<\n+\n+* The \"encoding\" argument of \"autodoc.Documenter.get_doc()\",\n+  \"autodoc.DocstringSignatureMixin.get_doc()\",\n+  \"autodoc.DocstringSignatureMixin._find_signature()\", and\n+  \"autodoc.ClassDocumenter.get_doc()\" are deprecated.\n+\n+* The \"importer\" argument of \"sphinx.ext.autodoc.importer._MockModule\"\n+\n+* The \"nodetype\" argument of \"sphinx.search.WordCollector.\n+  is_meta_keywords()\"\n+\n+* The \"suffix\" argument of \"env.doc2path()\" is deprecated.\n+\n+* The string style \"base\" argument of \"env.doc2path()\" is deprecated.\n+\n+* The fallback to allow omitting the \"filename\" argument from an\n+  overridden \"IndexBuilder.feed()\" method is deprecated.\n+\n+* \"sphinx.addnodes.abbreviation\"\n+\n+* \"sphinx.application.Sphinx._setting_up_extension\"\n+\n+* \"sphinx.builders.epub3.Epub3Builder.validate_config_value()\"\n+\n+* \"sphinx.builders.html.SingleFileHTMLBuilder\"\n+\n+* \"sphinx.builders.htmlhelp.HTMLHelpBuilder.open_file()\"\n+\n+* \"sphinx.cmd.quickstart.term_decode()\"\n+\n+* \"sphinx.cmd.quickstart.TERM_ENCODING\"\n+\n+* \"sphinx.config.check_unicode()\"\n+\n+* \"sphinx.config.string_classes\"\n+\n+* \"sphinx.domains.cpp.DefinitionError.description\"\n+\n+* \"sphinx.domains.cpp.NoOldIdError.description\"\n+\n+* \"sphinx.domains.cpp.UnsupportedMultiCharacterCharLiteral.decoded\"\n+\n+* \"sphinx.ext.autodoc.importer._MockImporter\"\n+\n+* \"sphinx.ext.autosummary.Autosummary.warn()\"\n+\n+* \"sphinx.ext.autosummary.Autosummary.genopt\"\n+\n+* \"sphinx.ext.autosummary.Autosummary.warnings\"\n+\n+* \"sphinx.ext.autosummary.Autosummary.result\"\n+\n+* \"sphinx.ext.doctest.doctest_encode()\"\n+\n+* \"sphinx.io.SphinxBaseFileInput\"\n+\n+* \"sphinx.io.SphinxFileInput.supported\"\n+\n+* \"sphinx.io.SphinxRSTFileInput\"\n+\n+* \"sphinx.registry.SphinxComponentRegistry.add_source_input()\"\n+\n+* \"sphinx.roles.abbr_role()\"\n+\n+* \"sphinx.roles.emph_literal_role()\"\n+\n+* \"sphinx.roles.menusel_role()\"\n+\n+* \"sphinx.roles.index_role()\"\n+\n+* \"sphinx.roles.indexmarkup_role()\"\n+\n+* \"sphinx.testing.util.remove_unicode_literal()\"\n+\n+* \"sphinx.util.attrdict\"\n+\n+* \"sphinx.util.force_decode()\"\n+\n+* \"sphinx.util.get_matching_docs()\"\n+\n+* \"sphinx.util.inspect.Parameter\"\n+\n+* \"sphinx.util.jsonimpl\"\n+\n+* \"sphinx.util.osutil.EEXIST\"\n+\n+* \"sphinx.util.osutil.EINVAL\"\n+\n+* \"sphinx.util.osutil.ENOENT\"\n+\n+* \"sphinx.util.osutil.EPIPE\"\n+\n+* \"sphinx.util.osutil.walk()\"\n+\n+* \"sphinx.util.PeekableIterator\"\n+\n+* \"sphinx.util.pycompat.NoneType\"\n+\n+* \"sphinx.util.pycompat.TextIOWrapper\"\n+\n+* \"sphinx.util.pycompat.UnicodeMixin\"\n+\n+* \"sphinx.util.pycompat.htmlescape\"\n+\n+* \"sphinx.util.pycompat.indent\"\n+\n+* \"sphinx.util.pycompat.sys_encoding\"\n+\n+* \"sphinx.util.pycompat.terminal_safe()\"\n+\n+* \"sphinx.util.pycompat.u\"\n+\n+* \"sphinx.writers.latex.ExtBabel\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator._make_visit_admonition()\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.babel_defmacro()\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.collect_footnotes()\"\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.generate_numfig_format()\"\n+\n+* \"sphinx.writers.texinfo.TexinfoTranslator._make_visit_admonition()\"\n+\n+* \"sphinx.writers.text.TextTranslator._make_depart_admonition()\"\n+\n+* template variables for LaTeX template\n+\n+  * \"logo\"\n+\n+  * \"numfig_format\"\n+\n+  * \"pageautorefname\"\n+\n+  * \"translatablestrings\"\n+\n+For more details, see deprecation APIs list.\n+\n+\n+Features added\n+--------------\n+\n+2.0.0b1\n+\n+* #1618: The search results preview of generated HTML documentation is\n+  reader-friendlier: instead of showing the snippets as raw\n+  reStructuredText markup, Sphinx now renders the corresponding HTML.\n+  This means the Sphinx extension Sphinx: pretty search results is no\n+  longer necessary.  Note that changes to the search function of your\n+  custom or 3rd-party HTML template might overwrite this improvement.\n+\n+* #4182: autodoc: Support >>:confval:`suppress_warnings`<<\n+\n+* #5533: autodoc: >>:confval:`autodoc_default_options`<< supports\n+  \"member-order\"\n+\n+* #5394: autodoc: Display readable names in type annotations for\n+  mocked objects\n+\n+* #5459: autodoc: >>:confval:`autodoc_default_options`<< accepts\n+  \"True\" as a value\n+\n+* #1148: autodoc: Add \"autodecorator\" directive for decorators\n+\n+* #5635: autosummary: Add >>:confval:`autosummary_mock_imports`<< to\n+  mock external libraries on importing targets\n+\n+* #4018: htmlhelp: Add >>:confval:`htmlhelp_file_suffix`<< and\n+  >>:confval:`htmlhelp_link_suffix`<<\n+\n+* #5559: text: Support complex tables (colspan and rowspan)\n+\n+* LaTeX: support rendering (not in math, yet) of Greek and Cyrillic\n+  Unicode letters in non-Cyrillic document even with \"'pdflatex'\" as\n+  >>:confval:`latex_engine`<< (refs: #5645)\n+\n+* #5660: The \"versionadded\", \"versionchanged\" and \"deprecated\"\n+  directives are now generated with their own specific CSS classes\n+  (\"added\", \"changed\" and \"deprecated\", respectively) in addition to\n+  the generic \"versionmodified\" class.\n+\n+* #5841: apidoc: Add --extensions option to sphinx-apidoc\n+\n+* #4981: C++, added an alias directive for inserting lists of\n+  declarations, that references existing declarations (e.g., for\n+  making a synopsis).\n+\n+* C++: add \"cpp:struct\" to complement \"cpp:class\".\n+\n+* #1341 the HTML search considers words that contain a search term of\n+  length three or longer a match.\n+\n+* #4611: epub: Show warning for duplicated ToC entries\n+\n+* #1851: Allow to omit an argument for \"code-block\" directive.  If\n+  omitted, it follows \"highlight\" or >>:confval:`highlight_language`<<\n+\n+* #4587: html: Add >>:confval:`html4_writer`<< to use old HTML4 writer\n+\n+* #6016: HTML search: A placeholder for the search summary prevents\n+  search result links from changing their position when the search\n+  terminates.  This makes navigating search results easier.\n+\n+* #5196: linkcheck also checks remote images exist\n+\n+* #5924: githubpages: create CNAME file for custom domains when\n+  >>:confval:`html_baseurl`<< set\n+\n+* #4261: autosectionlabel: restrict the labeled sections by new config\n+  value; >>:confval:`autosectionlabel_maxdepth`<<\n+\n+\n+Bugs fixed\n+----------\n+\n+2.0.0b1\n+\n+* #1682: LaTeX: writer should not translate Greek unicode, but use\n+  textgreek package\n+\n+* #5247: LaTeX: PDF does not build with default font config for\n+  Russian language and \"'xelatex'\" or \"'lualatex'\" as\n+  >>:confval:`latex_engine`<< (refs: #5251)\n+\n+* #5248: LaTeX: Greek letters in section titles disappear from PDF\n+  bookmarks\n+\n+* #5249: LaTeX: Unicode Greek letters in math directive break PDF\n+  build (fix requires extra set-up, see >>:confval:`latex_elements`<<\n+  \"'textgreek'\" key and/or >>:confval:`latex_engine`<< setting)\n+\n+* #5772: LaTeX: should the Bjarne style of fncychap be used for\n+  English also if passed as language option?\n+\n+* #5179: LaTeX: (lualatex only) escaping of \">\" by \"\\textgreater{}\" is\n+  not enough as \"\\textgreater{}\\textgreater{}\" applies TeX-ligature\n+\n+* LaTeX: project name is not escaped if >>:confval:`latex_documents`<<\n+  omitted\n+\n+* LaTeX: authors are not shown if >>:confval:`latex_documents`<<\n+  omitted\n+\n+* HTML: Invalid HTML5 file is generated for a glossary having multiple\n+  terms for one description (refs: #4611)\n+\n+* QtHelp: OS dependent path separator is used in .qhp file\n+\n+* HTML search: search always returns nothing when multiple search\n+  terms are used and one term is shorter than three characters\n+\n+2.0.0b2\n+\n+* #6096: html: Anchor links are not added to figures\n+\n+* #3620: html: Defer searchindex.js rather than loading it via ajax\n+\n+* #6113: html: Table cells and list items have large margins\n+\n+* #5508: \"linenothreshold\" option for \"highlight\" directive was\n+  ignored\n+\n+* texinfo: \"make install-info\" causes syntax error\n+\n+* texinfo: \"make install-info\" fails on macOS\n+\n+* #3079: texinfo: image files are not copied on \"make install-info\"\n+\n+* #5391: A cross reference in heading is rendered as literal\n+\n+* #5946: C++, fix \"cpp:alias\" problems in LaTeX (and singlehtml)\n+\n+* #6147: classes attribute of \"citation_reference\" node is lost\n+\n+* AssertionError is raised when custom \"citation_reference\" node\n+  having classes attribute refers missing citation (refs: #6147)\n+\n+* #2155: Support \"code\" directive\n+\n+* C++, fix parsing of braced initializers.\n+\n+* #6172: AttributeError is raised for old styled index nodes\n+\n+* #4872: inheritance_diagram: correctly describe behavior of \"parts\"\n+  option in docs, allow negative values.\n+\n+* #6178: i18n: Captions missing in translations for hidden TOCs\n+\n+2.0.0 final\n+\n+* #6196: py domain: unexpected prefix is generated\n+\n+\n+Testing\n+-------\n+\n+2.0.0b1\n+\n+* Stop to use \"SPHINX_TEST_TEMPDIR\" envvar\n+\n+2.0.0b2\n+\n+* Add a helper function: \"sphinx.testing.restructuredtext.parse()\"\n+\n+\n+Release 1.8.5 (released Mar 10, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* LaTeX: Remove extraneous space after author names on PDF title page\n+  (refs: #6004)\n+\n+* #6026: LaTeX: A cross reference to definition list does not work\n+\n+* #6046: LaTeX: \"TypeError\" is raised when invalid latex_elements\n+  given\n+\n+* #6067: LaTeX: images having a target are concatenated to next line\n+\n+* #6067: LaTeX: images having a target are not aligned even if\n+  specified\n+\n+* #6149: LaTeX: \":index:\" role in titles causes \"Use of \\@icentercr\n+  doesn't match its definition\" error on latexpdf build\n+\n+* #6019: imgconverter: Including multipage PDF fails\n+\n+* #6047: autodoc: \"autofunction\" emits a warning for method objects\n+\n+* #6028: graphviz: Ensure the graphviz filenames are reproducible\n+\n+* #6068: doctest: \"skipif\" option may remove the code block from\n+  documentation\n+\n+* #6136: \":name:\" option for \"math\" directive causes a crash\n+\n+* #6139: intersphinx: ValueError on failure reporting\n+\n+* #6135: changes: Fix UnboundLocalError when any module found\n+\n+* #3859: manpage: code-block captions are not displayed correctly\n+\n+\n+Release 1.8.4 (released Feb 03, 2019)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3707: latex: no bold checkmark (\u2714) available.\n+\n+* #5605: with the documentation language set to Chinese, English words\n+  could not be searched.\n+\n+* #5889: LaTeX: user \"numfig_format\" is stripped of spaces and may\n+  cause build failure\n+\n+* C++, fix hyperlinks for declarations involving east cv-qualifiers.\n+\n+* #5755: C++, fix duplicate declaration error on function templates\n+  with constraints in the return type.\n+\n+* C++, parse unary right fold expressions and binary fold expressions.\n+\n+* pycode could not handle egg files on windows\n+\n+* #5928: KeyError: 'DOCUTILSCONFIG' when running build\n+\n+* #5936: LaTeX: PDF build broken by inclusion of image taller than\n+  page height in an admonition\n+\n+* #5231: \"make html\" does not read and build \"po\" files in \"locale\"\n+  dir\n+\n+* #5954: \":scale:\" image option may break PDF build if image in an\n+  admonition\n+\n+* #5966: mathjax has not been loaded on incremental build\n+\n+* #5960: LaTeX: modified PDF layout since September 2018 TeXLive\n+  update of \"parskip.sty\"\n+\n+* #5948: LaTeX: duplicated labels are generated for sections\n+\n+* #5958: versionadded directive causes crash with Python 3.5.0\n+\n+* #5995: autodoc: autodoc_mock_imports conflict with metaclass on\n+  Python 3.7\n+\n+* #5871: texinfo: a section title \".\" is not allowed\n+\n+\n+Release 1.8.3 (released Dec 26, 2018)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* LaTeX: it is possible to insert custom material to appear on back of\n+  title page, see discussion of \"'maketitle'\" key of\n+  >>:confval:`latex_elements`<< (\"'manual'\" docclass only)\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5725: mathjax: Use CDN URL for \"latest\" version by default\n+\n+* #5460: html search does not work with some 3rd party themes\n+\n+* #5520: LaTeX, caption package incompatibility since Sphinx 1.6\n+\n+* #5614: autodoc: incremental build is broken when builtin modules are\n+  imported\n+\n+* #5627: qthelp: index.html missing in QtHelp\n+\n+* #5659: linkcheck: crashes for a hyperlink containing multibyte\n+  character\n+\n+* #5754: DOC: Fix some mistakes in */latex*\n+\n+* #5810: LaTeX: sphinxVerbatim requires explicit \"hllines\" set-up\n+  since 1.6.6 (refs: #1238)\n+\n+* #5636: C++, fix parsing of floating point literals.\n+\n+* #5496 (again): C++, fix assertion in partial builds with duplicates.\n+\n+* #5724: quickstart: sphinx-quickstart fails when $LC_ALL is empty\n+\n+* #1956: Default conf.py is not PEP8-compliant\n+\n+* #5849: LaTeX: document class \"\\maketitle\" is overwritten with no\n+  possibility to use original meaning in place of Sphinx custom one\n+\n+* #5834: apidoc: wrong help for \"--tocfile\"\n+\n+* #5800: todo: crashed if todo is defined in TextElement\n+\n+* #5846: htmlhelp: convert hex escaping to decimal escaping in\n+  .hhc/.hhk files\n+\n+* htmlhelp: broken .hhk file generated when title contains a double\n+  quote\n+\n+\n+Release 1.8.2 (released Nov 11, 2018)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #5497: Do not include MathJax.js and jsmath.js unless it is really\n+  needed\n+\n+\n+Features added\n+--------------\n+\n+* #5471: Show appropriate deprecation warnings\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5490: latex: enumerated list causes a crash with recommonmark\n+\n+* #5492: sphinx-build fails to build docs w/ Python < 3.5.2\n+\n+* #3704: latex: wrong \"\\label\" positioning for figures with a legend\n+\n+* #5496: C++, fix assertion when a symbol is declared more than twice.\n+\n+* #5493: gettext: crashed with broken template\n+\n+* #5495: csv-table directive with file option in included file is\n+  broken (refs: #4821)\n+\n+* #5498: autodoc: unable to find type hints for a \"functools.partial\"\n+\n+* #5480: autodoc: unable to find type hints for unresolvable Forward\n+  references\n+\n+* #5419: incompatible math_block node has been generated\n+\n+* #5548: Fix ensuredir() in case of pre-existing file\n+\n+* #5549: graphviz Correctly deal with non-existing static dir\n+\n+* #3002: i18n: multiple footnote_references referring same footnote\n+  cause duplicated node_ids\n+\n+* #5563: latex: footnote_references generated by extension causes a\n+  LaTeX builder crash\n+\n+* #5561: make all-pdf fails with old xindy version\n+\n+* #5557: quickstart: --no-batchfile isn't honored\n+\n+* #3080: texinfo: multiline rubrics are broken\n+\n+* #3080: texinfo: multiline citations are broken\n+\n+\n+Release 1.8.1 (released Sep 22, 2018)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* LaTeX \"\\pagestyle\" commands have been moved to the LaTeX template.\n+  No changes in PDF, except possibly if \"\\sphinxtableofcontents\",\n+  which contained them, had been customized in \"conf.py\". (refs:\n+  #5455)\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5418: Incorrect default path for sphinx-build -d/doctrees files\n+\n+* #5421: autodoc emits deprecation warning for\n+  >>:confval:`autodoc_default_flags`<<\n+\n+* #5422: lambda object causes PicklingError on storing environment\n+\n+* #5417: Sphinx fails to build with syntax error in Python 2.7.5\n+\n+* #4911: add latexpdf to make.bat for non make-mode\n+\n+* #5436: Autodoc does not work with enum subclasses with\n+  properties/methods\n+\n+* #5437: autodoc: crashed on modules importing eggs\n+\n+* #5433: latex: ImportError: cannot import name 'DEFAULT_SETTINGS'\n+\n+* #5431: autodoc: \"autofunction\" emits a warning for callable objects\n+\n+* #5457: Fix TypeError in error message when override is prohibited\n+\n+* #5453: PDF builds of 'howto' documents have no page numbers\n+\n+* #5463: mathbase: math_role and MathDirective was disappeared in\n+  1.8.0\n+\n+* #5454: latex: Index has disappeared from PDF for Japanese documents\n+\n+* #5432: py domain: \":type:\" field can't process \":term:\" references\n+\n+* #5426: py domain: TypeError has been raised for class attribute\n+\n+\n+Release 1.8.0 (released Sep 13, 2018)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+1.8.0b1\n+\n+* LaTeX: >>:confval:`latex_use_xindy`<<, if \"True\" (default for\n+  \"xelatex/lualatex\"), instructs \"make latexpdf\" to use **xindy** for\n+  general index.  Make sure your LaTeX distribution includes it.\n+  (refs: #5134)\n+\n+* LaTeX: \"latexmk\" is required for \"make latexpdf\" on Windows\n+\n+\n+Incompatible changes\n+--------------------\n+\n+1.8.0b2\n+\n+* #5282: html theme: refer \"pygments_style\" settings of HTML themes\n+  preferentially\n+\n+* The URL of download files are changed\n+\n+* #5127: quickstart: \"Makefile\" and \"make.bat\" are not overwritten if\n+  exists\n+\n+1.8.0b1\n+\n+* #5156: the \"sphinx.ext.graphviz: extension runs `dot\" in the\n+  directory of the document being built instead of in the root\n+  directory of the documentation.\n+\n+* #4460: extensions which stores any data to environment should return\n+  the version of its env data structure as metadata.  In detail,\n+  please see Extension metadata.\n+\n+* Sphinx expects source parser modules to have supported file formats\n+  as \"Parser.supported\" attribute\n+\n+* The default value of >>:confval:`epub_author`<< and\n+  >>:confval:`epub_publisher`<< are changed from \"'unknown'\" to the\n+  value of >>:confval:`author`<<.  This is same as a \"conf.py\" file\n+  sphinx-build generates.\n+\n+* The \"gettext_compact\" attribute is removed from \"document.settings\"\n+  object.  Please use \"config.gettext_compact\" instead.\n+\n+* The processing order on reading phase is changed.  smart_quotes,\n+  sphinx domains, >>:event:`doctree-read`<< event and versioning\n+  doctrees are invoked earlier than so far. For more details, please\n+  read a description of \"Sphinx.add_transform()\"\n+\n+* #4827: All \"substitution_definition\" nodes are removed from doctree\n+  on reading phase\n+\n+* \"docutils.conf\" in \"$HOME\" or \"/etc\" directories are ignored.  Only\n+  \"docutils.conf\" from confdir is obeyed.\n+\n+* #789: \":samp:\" role supports to escape curly braces with backslash\n+\n+* #4811: The files under >>:confval:`html_static_path`<< are excluded\n+  from source files.\n+\n+* latex: Use \"\\sphinxcite\" for citation references instead \"\\hyperref\"\n+\n+* The config value \"viewcode_import\" is renamed to\n+  >>:confval:`viewcode_follow_imported_members`<< (refs: #4035)\n+\n+* #1857: latex: >>:confval:`latex_show_pagerefs`<< does not add\n+  pagerefs for citations\n+\n+* #4648: latex: Now \"rubric\" elements are rendered as unnumbered\n+  section title\n+\n+* #4983: html: The anchor for productionlist tokens has been changed\n+\n+* Modifying a template variable \"script_files\" in templates is allowed\n+  now. Please use \"app.add_js_file()\" instead.\n+\n+* #5072: Save environment object also with only new documents\n+\n+* #5035: qthelp builder allows dashes in\n+  >>:confval:`qthelp_namespace`<<\n+\n+* LaTeX: with lualatex or xelatex use by default **xindy** as UTF-8\n+  able replacement of **makeindex** (refs: #5134).  After upgrading\n+  Sphinx, please clean latex build repertory of existing project\n+  before new build.\n+\n+* #5163: html: hlist items are now aligned to top\n+\n+* \"highlightlang\" directive is processed on resolving phase\n+\n+* #4000: LaTeX: template changed.  Following elements moved to it:\n+\n+  * \"\\begin{document}\"\n+\n+  * \"shorthandoff\" variable\n+\n+  * \"maketitle\" variable\n+\n+  * \"tableofcontents\" variable\n+\n+\n+Deprecated\n+----------\n+\n+1.8.0b2\n+\n+* \"sphinx.io.SphinxI18nReader.set_lineno_for_reporter()\" is deprecated\n+\n+* \"sphinx.io.SphinxI18nReader.line\" is deprecated\n+\n+* \"sphinx.util.i18n.find_catalog_source_file()\" has changed; the\n+  *gettext_compact* argument has been deprecated\n+\n+* #5403: \"sphinx.util.images.guess_mimetype()\" has changed; the\n+  *content* argument has been deprecated\n+\n+1.8.0b1\n+\n+* >>:confval:`source_parsers`<< is deprecated\n+\n+* >>:confval:`autodoc_default_flags`<< is deprecated\n+\n+* quickstart: \"--epub\" option becomes default, so it is deprecated\n+\n+* Drop function based directive support.  For now, Sphinx only\n+  supports class based directives (see \"Directive\")\n+\n+* \"sphinx.util.docutils.directive_helper()\" is deprecated\n+\n+* \"sphinx.cmdline\" is deprecated\n+\n+* \"sphinx.make_mode\" is deprecated\n+\n+* \"sphinx.locale.l_()\" is deprecated\n+\n+* #2157: helper function \"warn()\" for HTML themes is deprecated\n+\n+* \"app.override_domain()\" is deprecated\n+\n+* \"app.add_stylesheet()\" is deprecated\n+\n+* \"app.add_javascript()\" is deprecated\n+\n+* \"app.import_object()\" is deprecated\n+\n+* \"app.add_source_parser()\" has changed;  the *suffix* argument has\n+  been deprecated\n+\n+* \"sphinx.versioning.prepare()\" is deprecated\n+\n+* \"Config.__init__()\" has changed;  the *dirname*, *filename* and\n+  *tags* argument has been deprecated\n+\n+* \"Config.check_types()\" is deprecated\n+\n+* \"Config.check_unicode()\" is deprecated\n+\n+* \"sphinx.application.CONFIG_FILENAME\" is deprecated\n+\n+* \"highlightlang\" directive is deprecated\n+\n+* \"BuildEnvironment.load()\" is deprecated\n+\n+* \"BuildEnvironment.loads()\" is deprecated\n+\n+* \"BuildEnvironment.frompickle()\" is deprecated\n+\n+* \"env.read_doc()\" is deprecated\n+\n+* \"env.update()\" is deprecated\n+\n+* \"env._read_serial()\" is deprecated\n+\n+* \"env._read_parallel()\" is deprecated\n+\n+* \"env.write_doctree()\" is deprecated\n+\n+* \"env._nitpick_ignore\" is deprecated\n+\n+* \"env.versionchanges\" is deprecated\n+\n+* \"env.dump()\" is deprecated\n+\n+* \"env.dumps()\" is deprecated\n+\n+* \"env.topickle()\" is deprecated\n+\n+* \"env.note_versionchange()\" is deprecated\n+\n+* \"sphinx.writers.latex.Table.caption_footnotetexts\" is deprecated\n+\n+* \"sphinx.writers.latex.Table.header_footnotetexts\" is deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.footnotestack\" is deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.in_container_literal_block\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.next_section_ids\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.next_hyperlink_ids\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.restrict_footnote()\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.unrestrict_footnote()\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.push_hyperlink_ids()\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.pop_hyperlink_ids()\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.check_latex_elements()\" is\n+  deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.bibitems\" is deprecated\n+\n+* \"sphinx.writers.latex.LaTeXTranslator.hlsettingstack\" is deprecated\n+\n+* \"sphinx.writers.latex.ExtBabel.get_shorthandoff()\" is deprecated\n+\n+* \"sphinx.writers.html.HTMLTranslator.highlightlang\" is deprecated\n+\n+* \"sphinx.writers.html.HTMLTranslator.highlightlang_base\" is\n+  deprecated\n+\n+* \"sphinx.writers.html.HTMLTranslator.highlightlangopts\" is deprecated\n+\n+* \"sphinx.writers.html.HTMLTranslator.highlightlinenothreshold\" is\n+  deprecated\n+\n+* \"sphinx.writers.html5.HTMLTranslator.highlightlang\" is deprecated\n+\n+* \"sphinx.writers.html5.HTMLTranslator.highlightlang_base\" is\n+  deprecated\n+\n+* \"sphinx.writers.html5.HTMLTranslator.highlightlangopts\" is\n+  deprecated\n+\n+* \"sphinx.writers.html5.HTMLTranslator.highlightlinenothreshold\" is\n+  deprecated\n+\n+* \"sphinx.ext.mathbase\" extension is deprecated\n+\n+* \"sphinx.ext.mathbase.math\" node is deprecated\n+\n+* \"sphinx.ext.mathbase.displaymath\" node is deprecated\n+\n+* \"sphinx.ext.mathbase.eqref\" node is deprecated\n+\n+* \"sphinx.ext.mathbase.is_in_section_title()\" is deprecated\n+\n+* \"sphinx.ext.mathbase.MathDomain\" is deprecated\n+\n+* \"sphinx.ext.mathbase.MathDirective\" is deprecated\n+\n+* \"sphinx.ext.mathbase.math_role\" is deprecated\n+\n+* \"sphinx.ext.mathbase.setup_math()\" is deprecated\n+\n+* \"sphinx.directives.other.VersionChanges\" is deprecated\n+\n+* \"sphinx.highlighting.PygmentsBridge.unhighlight()\" is deprecated\n+\n+* \"sphinx.ext.mathbase.get_node_equation_number()\" is deprecated\n+\n+* \"sphinx.ext.mathbase.wrap_displaymath()\" is deprecated\n+\n+* The \"trim_doctest_flags\" argument of\n+  \"sphinx.highlighting.PygmentsBridge\" is deprecated\n+\n+For more details, see deprecation APIs list\n+\n+\n+Features added\n+--------------\n+\n+1.8.0b2\n+\n+* #5388: Ensure frozen object descriptions are reproducible\n+\n+* #5362: apidoc: Add \"--tocfile\" option to change the filename of ToC\n+\n+1.8.0b1\n+\n+* Add >>:event:`config-inited`<< event\n+\n+* Add \"sphinx.config.Any\" to represent the config value accepts any\n+  type of value\n+\n+* >>:confval:`source_suffix`<< allows a mapping fileext to file types\n+\n+* Add >>:confval:`author`<< as a configuration value\n+\n+* #2852: imgconverter: Support to convert GIF to PNG\n+\n+* \"sphinx-build\" command supports i18n console output\n+\n+* Add \"app.add_message_catalog()\" and\n+  \"sphinx.locale.get_translations()\" to support translation for 3rd\n+  party extensions\n+\n+* helper function \"warning()\" for HTML themes is added\n+\n+* Add \"Domain.enumerable_nodes\" to manage own enumerable nodes for\n+  domains (experimental)\n+\n+* Add a new keyword argument \"override\" to Application APIs\n+\n+* LaTeX: new key \"'fvset'\" for >>:confval:`latex_elements`<<. For\n+  XeLaTeX/LuaLaTeX its default sets \"fanvyvrb\" to use normal, not\n+  small, fontsize in code-blocks (refs: #4793)\n+\n+* Add >>:confval:`html_css_files`<< and >>:confval:`epub_css_files`<<\n+  for adding CSS files from configuration\n+\n+* Add >>:confval:`html_js_files`<< for adding JS files from\n+  configuration\n+\n+* #4834: Ensure set object descriptions are reproducible.\n+\n+* #4828: Allow to override >>:confval:`numfig_format`<< partially.\n+  Full definition is not needed.\n+\n+* Improve warning messages during including (refs: #4818)\n+\n+* LaTeX: separate customizability of \"guilabel\" and \"menuselection\"\n+  (refs: #4830)\n+\n+* Add \"Config.read()\" classmethod to create a new config object from\n+  configuration file\n+\n+* #4866: Wrap graphviz diagrams in \"<div>\" tag\n+\n+* viewcode: Add >>:event:`viewcode-find-source`<< and >>:event\n+  :`viewcode-follow-imported`<< to load source code without loading\n+\n+* #4785: napoleon: Add strings to translation file for localisation\n+\n+* #4927: Display a warning when invalid values are passed to\n+  linenothreshold option of highlight directive\n+\n+* C++:\n+\n+  * Add a \"cpp:texpr\" role as a sibling to \"cpp:expr\".\n+\n+  * Add support for unions.\n+\n+  * #3593, #2683: add support for anonymous entities using names\n+    staring with \"@\".\n+\n+  * #5147: add support for (most) character literals.\n+\n+  * Cross-referencing entities inside primary templates is supported,\n+    and now properly documented.\n+\n+  * #1552: add new cross-referencing format for \"cpp:any\" and\n+    \"cpp:func\" roles, for referencing specific function overloads.\n+\n+* #3606: MathJax should be loaded with async attribute\n+\n+* html: Output \"canonical_url\" metadata if >>:confval:`html_baseurl`<<\n+  set (refs: #4193)\n+\n+* #5029: autosummary: expose \"inherited_members\" to template\n+\n+* #3784: mathjax: Add >>:confval:`mathjax_options`<< to give options\n+  to script tag for mathjax\n+\n+* #726, #969: mathjax: Add >>:confval:`mathjax_config`<< to give in-\n+  line configurations for mathjax\n+\n+* #4362: latex: Don't overwrite .tex file if document not changed\n+\n+* #1431: latex: Add alphanumeric enumerated list support\n+\n+* Add >>:confval:`latex_use_xindy`<< for UTF-8 savvy indexing,\n+  defaults to \"True\" if >>:confval:`latex_engine`<< is \"'xelatex'\" or\n+  \"'lualatex'\". (refs: #5134, #5192, #5212)\n+\n+* #4976: \"SphinxLoggerAdapter.info()\" now supports \"location\"\n+  parameter\n+\n+* #5122: setuptools: support nitpicky option\n+\n+* #2820: autoclass directive supports nested class\n+\n+* Add \"app.add_html_math_renderer()\" to register a math renderer for\n+  HTML\n+\n+* Apply >>:confval:`trim_doctest_flags`<< to all builders (cf. text,\n+  manpages)\n+\n+* #5140: linkcheck: Add better Accept header to HTTP client\n+\n+* #4614: sphinx-build: Add \"--keep-going\" option to show all warnings\n+\n+* Add \"math:numref\" role to refer equations (Same as \"eq\")\n+\n+* quickstart: epub builder is enabled by default\n+\n+* #5246: Add >>:confval:`singlehtml_sidebars`<< to configure sidebars\n+  for singlehtml builder\n+\n+* #5273: doctest: Skip doctest conditionally\n+\n+* #5306: autodoc: emit a warning for invalid typehints\n+\n+* #4075, #5215: autodoc: Add >>:confval:`autodoc_default_options`<<\n+  which accepts option values as dict\n+\n+\n+Bugs fixed\n+----------\n+\n+1.8.0b2\n+\n+* html: search box overrides to other elements if scrolled\n+\n+* i18n: warnings for translation catalogs have wrong line numbers\n+  (refs: #5321)\n+\n+* #5325: latex: cross references has been broken by multiply labeled\n+  objects\n+\n+* C++, fixes for symbol addition and lookup. Lookup should no longer\n+  break in partial builds. See also #5337.\n+\n+* #5348: download reference to remote file is not displayed\n+\n+* #5282: html theme: \"pygments_style\" of theme was overridden by\n+  \"conf.py\" by default\n+\n+* #4379: toctree shows confusing warning when document is excluded\n+\n+* #2401: autodoc: \":members:\" causes \":special-members:\" not to be\n+  shown\n+\n+* autodoc: ImportError is replaced by AttributeError for deeper module\n+\n+* #2720, #4034: Incorrect links with \":download:\", duplicate names,\n+  and parallel builds\n+\n+* #5290: autodoc: failed to analyze source code in egg package\n+\n+* #5399: Sphinx crashes if unknown po file exists\n+\n+1.8.0b1\n+\n+* i18n: message catalogs were reset on each initialization\n+\n+* #4850: latex: footnote inside footnote was not rendered\n+\n+* #4945: i18n: fix lang_COUNTRY not fallback correctly for\n+  IndexBuilder. Thanks to Shengjing Zhu.\n+\n+* #4983: productionlist directive generates invalid IDs for the tokens\n+\n+* #5132: lualatex: PDF build fails if indexed word starts with Unicode\n+  character\n+\n+* #5133: latex: index headings \"Symbols\" and \"Numbers\" not\n+  internationalized\n+\n+* #5114: sphinx-build: Handle errors on scanning documents\n+\n+* epub: spine has been broken when \"self\" is listed on toctree (refs:\n+  #4611)\n+\n+* #344: autosummary does not understand docstring of module level\n+  attributes\n+\n+* #5191: C++, prevent nested declarations in functions to avoid lookup\n+  problems.\n+\n+* #5126: C++, add missing isPack method for certain template parameter\n+  types.\n+\n+* #5187: C++, parse attributes on declarators as well.\n+\n+* C++, parse delete expressions and basic new expressions as well.\n+\n+* #5002: graphviz: SVGs do not adapt to the column width\n+\n+\n+Features removed\n+----------------\n+\n+1.8.0b1\n+\n+* \"sphinx.ext.pngmath\" extension\n+\n+\n+Documentation\n+-------------\n+\n+1.8.0b1\n+\n+* #5083: Fix wrong make.bat option for internationalization.\n+\n+* #5115: napoleon: add admonitions added by #4613 to the docs.\n+\n+\n+Release 1.7.9 (released Sep 05, 2018)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #5359: Make generated texinfo files reproducible by sorting the\n+  anchors\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5361: crashed on incremental build if document uses include\n+  directive\n+\n+\n+Release 1.7.8 (released Aug 29, 2018)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* The type of \"env.included\" has been changed to dict of set\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5320: intersphinx: crashed if invalid url given\n+\n+* #5326: manpage: crashed when invalid docname is specified as\n+  \"man_pages\"\n+\n+* #5322: autodoc: \"Any\" typehint causes formatting error\n+\n+* #5327: \"document isn't included in any toctree\" warning on rebuild\n+  with generated files\n+\n+* #5335: quickstart: escape sequence has been displayed with MacPorts'\n+  python\n+\n+\n+Release 1.7.7 (released Aug 19, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5198: document not in toctree warning when including files only for\n+  parallel builds\n+\n+* LaTeX: reduce \"Token not allowed in a PDF string\" hyperref warnings\n+  in latex console output (refs: #5236)\n+\n+* LaTeX: suppress \"remreset Warning: The remreset package is obsolete\"\n+  in latex console output with recent LaTeX (refs: #5237)\n+\n+* #5234: PDF output: usage of PAPER environment variable is broken\n+  since Sphinx 1.5\n+\n+* LaTeX: fix the >>:confval:`latex_engine`<< documentation regarding\n+  Latin Modern font with XeLaTeX/LuaLateX (refs: #5251)\n+\n+* #5280: autodoc: Fix wrong type annotations for complex typing\n+\n+* autodoc: Optional types are wrongly rendered\n+\n+* #5291: autodoc crashed by ForwardRef types\n+\n+* #5211: autodoc: No docs generated for functools.partial functions\n+\n+* #5306: autodoc: \"getargspec()\" raises NameError for invalid\n+  typehints\n+\n+* #5298: imgmath: math_number_all causes equations to have two numbers\n+  in html\n+\n+* #5294: sphinx-quickstart blank prompts in PowerShell\n+\n+\n+Release 1.7.6 (released Jul 17, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #5037: LaTeX \"\\sphinxupquote{}\" breaks in Russian\n+\n+* sphinx.testing uses deprecated pytest API; \"Node.get_marker(name)\"\n+\n+* #5016: crashed when recommonmark.AutoStrictify is enabled\n+\n+* #5022: latex: crashed with docutils package provided by\n+  Debian/Ubuntu\n+\n+* #5009: latex: a label for table is vanished if table does not have a\n+  caption\n+\n+* #5048: crashed with numbered toctree\n+\n+* #2410: C, render empty argument lists for macros.\n+\n+* C++, fix lookup of full template specializations with no template\n+  arguments.\n+\n+* #4667: C++, fix assertion on missing references in global scope when\n+  using intersphinx. Thanks to Alan M. Carroll.\n+\n+* #5019: autodoc: crashed by Form Feed Character\n+\n+* #5032: autodoc: loses the first staticmethod parameter for old\n+  styled classes\n+\n+* #5036: quickstart: Typing Ctrl-U clears the whole of line\n+\n+* #5066: html: \"relations\" sidebar is not shown by default\n+\n+* #5091: latex: curly braces in index entries are not handled\n+  correctly\n+\n+* #5070: epub: Wrong internal href fragment links\n+\n+* #5104: apidoc: Interface of \"sphinx.apidoc:main()\" has changed\n+\n+* #4272: PDF builds of French projects have issues with XeTeX\n+\n+* #5076: napoleon raises RuntimeError with python 3.7\n+\n+* #5125: sphinx-build: Interface of \"sphinx:main()\" has changed\n+\n+* sphinx-build: \"sphinx.cmd.build.main()\" refers \"sys.argv\" instead of\n+  given argument\n+\n+* #5146: autosummary: warning is emitted when the first line of\n+  docstring ends with literal notation\n+\n+* autosummary: warnings of autosummary indicates wrong location (refs:\n+  #5146)\n+\n+* #5143: autodoc: crashed on inspecting dict like object which does\n+  not support sorting\n+\n+* #5139: autodoc: Enum argument missing if it shares value with\n+  another\n+\n+* #4946: py domain: rtype field could not handle \"None\" as a type\n+\n+* #5176: LaTeX: indexing of terms containing \"@\", \"!\", or \"\"\" fails\n+\n+* #5161: html: crashes if copying static files are failed\n+\n+* #5167: autodoc: Fix formatting type annotations for tuples with more\n+  than two arguments\n+\n+* #3329: i18n: crashed by auto-symbol footnote references\n+\n+* #5158: autosummary: module summary has been broken when it starts\n+  with heading\n+\n+\n+Release 1.7.5 (released May 29, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4924: html search: Upper characters problem in any other languages\n+\n+* #4932: apidoc: some subpackage is ignored if sibling subpackage\n+  contains a module starting with underscore\n+\n+* #4863, #4938, #4939: i18n doesn't handle correctly node.title as\n+  used for contents, topic, admonition, table and section.\n+\n+* #4913: i18n: literal blocks in bullet list are not translated\n+\n+* #4962: C++, raised TypeError on duplicate declaration.\n+\n+* #4825: C++, properly parse expr roles and give better error messages\n+  when (escaped) line breaks are present.\n+\n+* C++, properly use \"desc_addname\" nodes for prefixes of names.\n+\n+* C++, parse pack expansions in function calls.\n+\n+* #4915, #4916: links on search page are broken when using dirhtml\n+  builder\n+\n+* #4969: autodoc: constructor method should not have return annotation\n+\n+* latex: deeply nested enumerated list which is beginning with non-1\n+  causes LaTeX engine crashed\n+\n+* #4978: latex: shorthandoff is not set up for Brazil locale\n+\n+* #4928: i18n: Ignore dot-directories like .git/ in LC_MESSAGES/\n+\n+* #4946: py domain: type field could not handle \"None\" as a type\n+\n+* #4979: latex: Incorrect escaping of curly braces in index entries\n+\n+* #4956: autodoc: Failed to extract document from a subclass of the\n+  class on mocked module\n+\n+* #4973: latex: glossary directive adds whitespace to each item\n+\n+* #4980: latex: Explicit labels on code blocks are duplicated\n+\n+* #4919: node.asdom() crashes if toctree has :numbered: option\n+\n+* #4914: autodoc: Parsing error when using dataclasses without default\n+  values\n+\n+* #4931: autodoc: crashed when handler for autodoc-skip-member raises\n+  an error\n+\n+* #4931: autodoc: crashed when subclass of mocked class are processed\n+  by napoleon module\n+\n+* #5007: sphinx-build crashes when error log contains a \"%\" character\n+\n+\n+Release 1.7.4 (released Apr 25, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4885, #4887: domains: Crashed with duplicated objects\n+\n+* #4889: latex: sphinx.writers.latex causes recursive import\n+\n+\n+Release 1.7.3 (released Apr 23, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4769: autodoc loses the first staticmethod parameter\n+\n+* #4790: autosummary: too wide two column tables in PDF builds\n+\n+* #4795: Latex customization via \"_templates/longtable.tex_t\" is\n+  broken\n+\n+* #4789: imgconverter: confused by convert.exe of Windows\n+\n+* #4783: On windows, Sphinx crashed when drives of srcdir and outdir\n+  are different\n+\n+* #4812: autodoc ignores type annotated variables\n+\n+* #4817: wrong URLs on warning messages\n+\n+* #4784: latex: >>:confval:`latex_show_urls`<< assigns incorrect\n+  footnote numbers if hyperlinks exists inside substitutions\n+\n+* #4837: latex with class memoir Error: Font command \"\\sf\" is not\n+  supported\n+\n+* #4803: latex: too slow in proportion to number of auto numbered\n+  footnotes\n+\n+* #4838: htmlhelp: The entries in .hhp file is not ordered\n+\n+* toctree directive tries to glob for URL having query_string\n+\n+* #4871: html search: Upper characters problem in German\n+\n+* #4717: latex: Compilation for German docs failed with LuaLaTeX and\n+  XeLaTeX\n+\n+* #4459: duplicated labels detector does not work well in parallel\n+  build\n+\n+* #4878: Crashed with extension which returns invalid metadata\n+\n+\n+Release 1.7.2 (released Mar 21, 2018)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #4520: apidoc: folders with an empty __init__.py are no longer\n+  excluded from TOC\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4669: sphinx.build_main and sphinx.make_main throw NameError\n+\n+* #4685: autosummary emits meaningless warnings\n+\n+* autodoc: crashed when invalid options given\n+\n+* pydomain: always strip parenthesis if empty (refs: #1042)\n+\n+* #4689: autosummary: unexpectedly strips docstrings containing \"i.e.\"\n+\n+* #4701: viewcode: Misplaced \"<div>\" in viewcode html output\n+\n+* #4444: Don't require numfig to use :numref: on sections\n+\n+* #4727: Option clash for package textcomp\n+\n+* #4725: Sphinx does not work with python 3.5.0 and 3.5.1\n+\n+* #4716: Generation PDF file with TexLive on Windows, file not found\n+  error\n+\n+* #4574: vertical space before equation in latex\n+\n+* #4720: message when an image is mismatched for builder is not clear\n+\n+* #4655, #4684: Incomplete localization strings in Polish and Chinese\n+\n+* #2286: Sphinx crashes when error is happens in rendering HTML pages\n+\n+* #4688: Error to download remote images having long URL\n+\n+* #4754: sphinx/pycode/__init__.py raises AttributeError\n+\n+* #1435: qthelp builder should htmlescape keywords\n+\n+* epub: Fix docTitle elements of toc.ncx is not escaped\n+\n+* #4520: apidoc: Subpackage not in toc (introduced in 1.6.6) now fixed\n+\n+* #4767: html: search highlighting breaks mathjax equations\n+\n+\n+Release 1.7.1 (released Feb 23, 2018)\n+=====================================\n+\n+\n+Deprecated\n+----------\n+\n+* #4623: \"sphinx.build_main()\" is deprecated.\n+\n+* autosummary: The interface of\n+  \"sphinx.ext.autosummary.get_documenter()\" has been changed (Since\n+  1.7.0)\n+\n+* #4664: \"sphinx.ext.intersphinx.debug()\" is deprecated.\n+\n+For more details, see deprecation APIs list\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4608: epub: Invalid meta tag is generated\n+\n+* #4260: autodoc: keyword only argument separator is not disappeared\n+  if it is appeared at top of the argument list\n+\n+* #4622: epub: >>:confval:`epub_scheme`<< does not effect to\n+  content.opf\n+\n+* #4627: graphviz: Fit graphviz images to page\n+\n+* #4617: quickstart: PROJECT_DIR argument is required\n+\n+* #4623: sphinx.build_main no longer exists in 1.7.0\n+\n+* #4615: The argument of \"sphinx.build\" has been changed in 1.7.0\n+\n+* autosummary: The interface of\n+  \"sphinx.ext.autosummary.get_documenter()\" has been changed\n+\n+* #4630: Have order on msgids in sphinx.pot deterministic\n+\n+* #4563: autosummary: Incorrect end of line punctuation detection\n+\n+* #4577: Enumerated sublists with explicit start with wrong number\n+\n+* #4641: A external link in TOC cannot contain \"?\" with \":glob:\"\n+  option\n+\n+* C++, add missing parsing of explicit casts and typeid in expression\n+  parsing.\n+\n+* C++, add missing parsing of \"this\" in expression parsing.\n+\n+* #4655: Fix incomplete localization strings in Polish\n+\n+* #4653: Fix error reporting for parameterless ImportErrors\n+\n+* #4664: Reading objects.inv fails again\n+\n+* #4662: \"any\" refs with \"term\" targets crash when an ambiguity is\n+  encountered\n+\n+\n+Release 1.7.0 (released Feb 12, 2018)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+1.7.0b1\n+\n+* Add \"packaging\" package\n+\n+\n+Incompatible changes\n+--------------------\n+\n+1.7.0b1\n+\n+* #3668: The arguments has changed of main functions for each command\n+\n+* #3893: Unknown html_theme_options throw warnings instead of errors\n+\n+* #3927: Python parameter/variable types should match classes, not all\n+  objects\n+\n+* #3962: sphinx-apidoc now recognizes given directory as an implicit\n+  namespace package when \"--implicit-namespaces\" option given, not\n+  subdirectories of given directory.\n+\n+* #3929: apidoc: Move sphinx.apidoc to sphinx.ext.apidoc\n+\n+* #4226: apidoc: Generate new style makefile (make-mode)\n+\n+* #4274: sphinx-build returns 2 as an exit code on argument error\n+\n+* #4389: output directory will be created after loading extensions\n+\n+* autodoc does not generate warnings messages to the generated\n+  document even if >>:confval:`keep_warnings`<< is True.  They are\n+  only emitted to stderr.\n+\n+* shebang line is removed from generated conf.py\n+\n+* #2557: autodoc: >>:confval:`autodoc_mock_imports`<< only mocks\n+  specified modules with their descendants.  It does not mock their\n+  ancestors.  If you want to mock them, please specify the name of\n+  ancestors explicitly.\n+\n+* #3620: html theme: move DOCUMENTATION_OPTIONS to independent\n+  JavaScript file (refs: #4295)\n+\n+* #4246: Limit width of text body for all themes. Configurable via\n+  theme options \"body_min_width\" and \"body_max_width\".\n+\n+* #4771: apidoc: The \"exclude_patterns\" arguments are ignored if they\n+  are placed just after command line options\n+\n+1.7.0b2\n+\n+* #4467: html theme: Rename \"csss\" block to \"css\"\n+\n+\n+Deprecated\n+----------\n+\n+1.7.0b1\n+\n+* using a string value for >>:confval:`html_sidebars`<< is deprecated\n+  and only list values will be accepted at 2.0.\n+\n+* \"format_annotation()\" and \"formatargspec()\" is deprecated.  Please\n+  use \"sphinx.util.inspect.Signature\" instead.\n+\n+* \"sphinx.ext.autodoc.AutodocReporter\" is replaced by\n+  \"sphinx.util.docutils. switch_source_input()\" and now deprecated.\n+  It will be removed in Sphinx-2.0.\n+\n+* \"sphinx.ext.autodoc.add_documenter()\" and \"AutoDirective._register\"\n+  is now deprecated.  Please use \"app.add_autodocumenter()\" instead.\n+\n+* \"AutoDirective._special_attrgetters\" is now deprecated.  Please use\n+  \"app.add_autodoc_attrgetter()\" instead.\n+\n+\n+Features added\n+--------------\n+\n+1.7.0b1\n+\n+* C++, handle \"decltype(auto)\".\n+\n+* #2406: C++, add proper parsing of expressions, including linking of\n+  identifiers.\n+\n+* C++, add a \"cpp:expr\" role for inserting inline C++ expressions or\n+  types.\n+\n+* C++, support explicit member instantiations with shorthand\n+  \"template\" prefix\n+\n+* C++, make function parameters linkable, like template params.\n+\n+* #3638: Allow to change a label of reference to equation using\n+  \"math_eqref_format\"\n+\n+* Now >>:confval:`suppress_warnings`<< accepts following\n+  configurations:\n+\n+  * \"ref.python\" (ref: #3866)\n+\n+* #3872: Add latex key to configure literal blocks caption position in\n+  PDF output (refs #3792, #1723)\n+\n+* In case of missing docstring try to retrieve doc from base classes\n+  (ref: #3140)\n+\n+* #4023: Clarify error message when any role has more than one target.\n+\n+* #3973: epub: allow to override build date\n+\n+* #3972: epub: Sort manifest entries by filename\n+\n+* #4052: viewcode: Sort before highlighting module code\n+\n+* #1448: qthelp: Add new config value; >>:confval:`qthelp_namespace`<<\n+\n+* #4140: html themes: Make body tag inheritable\n+\n+* #4168: improve zh search with jieba\n+\n+* HTML themes can set up default sidebars through \"theme.conf\"\n+\n+* #3160: html: Use \"<kdb>\" to represent \":kbd:\" role\n+\n+* #4212: autosummary: catch all exceptions when importing modules\n+\n+* #4166: Add >>:confval:`math_numfig`<< for equation numbering by\n+  section (refs: #3991, #4080). Thanks to Oliver Jahn.\n+\n+* #4311: Let LaTeX obey >>:confval:`numfig_secnum_depth`<< for\n+  figures, tables, and code-blocks\n+\n+* #947: autodoc now supports ignore-module-all to ignore a module's\n+  \"__all__\"\n+\n+* #4332: Let LaTeX obey >>:confval:`math_numfig`<< for equation\n+  numbering\n+\n+* #4093: sphinx-build creates empty directories for unknown\n+  targets/builders\n+\n+* Add \"top-classes\" option for the \"sphinx.ext.inheritance_diagram\"\n+  extension to limit the scope of inheritance graphs.\n+\n+* #4183: doctest: \":pyversion:\" option also follows PEP-440\n+  specification\n+\n+* #4235: html: Add >>:confval:`manpages_url`<< to make manpage roles\n+  to hyperlinks\n+\n+* #3570: autodoc: Do not display 'typing.' module for type hints\n+\n+* #4354: sphinx-build now emits finish message.  Builders can modify\n+  it through \"Builder.epilog\" attribute\n+\n+* #4245: html themes: Add \"language\" to javascript vars list\n+\n+* #4079: html: Add \"notranslate\" class to each code-blocks, literals\n+  and maths to let Google Translate know they are not translatable\n+\n+* #4137: doctest: doctest block is always highlighted as python\n+  console (pycon)\n+\n+* #4137: doctest: testcode block is always highlighted as python\n+\n+* #3998: text: Assign section numbers by default.  You can control it\n+  using >>:confval:`text_add_secnumbers`<< and\n+  >>:confval:`text_secnumber_suffix`<<\n+\n+1.7.0b2\n+\n+* #4271: sphinx-build supports an option called \"-j auto\" to adjust\n+  numbers of processes automatically.\n+\n+* Napoleon: added option to specify custom section tags.\n+\n+\n+Features removed\n+----------------\n+\n+1.7.0b1\n+\n+* Configuration variables\n+\n+  * html_use_smartypants\n+\n+  * latex_keep_old_macro_names\n+\n+  * latex_elements['footer']\n+\n+* utility methods of \"sphinx.application.Sphinx\" class\n+\n+  * buildername (property)\n+\n+  * _display_chunk()\n+\n+  * old_status_iterator()\n+\n+  * status_iterator()\n+\n+  * _directive_helper()\n+\n+* utility methods of \"sphinx.environment.BuildEnvironment\" class\n+\n+  * currmodule (property)\n+\n+  * currclass (property)\n+\n+* epub2 builder\n+\n+* prefix and colorfunc parameter for warn()\n+\n+* \"sphinx.util.compat\" module\n+\n+* \"sphinx.util.nodes.process_only_nodes()\"\n+\n+* LaTeX environment \"notice\", use \"sphinxadmonition\" instead\n+\n+* LaTeX \"\\sphinxstylethead\", use \"\\sphinxstyletheadfamily\"\n+\n+* C++, support of function concepts. Thanks to mickk-on-cpp.\n+\n+* Not used and previously not documented LaTeX macros \"\\shortversion\"\n+  and \"\\setshortversion\"\n+\n+\n+Bugs fixed\n+----------\n+\n+1.7.0b1\n+\n+* #3882: Update the order of files for HTMLHelp and QTHelp\n+\n+* #3962: sphinx-apidoc does not recognize implicit namespace packages\n+  correctly\n+\n+* #4094: C++, allow empty template argument lists.\n+\n+* C++, also hyperlink types in the name of declarations with qualified\n+  names.\n+\n+* C++, do not add index entries for declarations inside concepts.\n+\n+* C++, support the template disambiguator for dependent names.\n+\n+* #4314: For PDF 'howto' documents, numbering of code-blocks differs\n+  from the one of figures and tables\n+\n+* #4330: PDF 'howto' documents have an incoherent default LaTeX\n+  tocdepth counter setting\n+\n+* #4198: autosummary emits multiple 'autodoc-process-docstring' event.\n+  Thanks to Joel Nothman.\n+\n+* #4081: Warnings and errors colored the same when building\n+\n+* latex: Do not display 'Release' label if >>:confval:`release`<< is\n+  not set\n+\n+1.7.0b2\n+\n+* #4415: autodoc classifies inherited classmethods as regular methods\n+\n+* #4415: autodoc classifies inherited staticmethods as regular methods\n+\n+* #4472: DOCUMENTATION_OPTIONS is not defined\n+\n+* #4491: autodoc: prefer _MockImporter over other importers in\n+  sys.meta_path\n+\n+* #4490: autodoc: type annotation is broken with python 3.7.0a4+\n+\n+* utils package is no longer installed\n+\n+* #3952: apidoc: module header is too escaped\n+\n+* #4275: Formats accepted by sphinx.util.i18n.format_date are limited\n+\n+* #4493: recommonmark raises AttributeError if AutoStructify enabled\n+\n+* #4209: intersphinx: In link title, \"v\" should be optional if target\n+  has no version\n+\n+* #4230: slowdown in writing pages with sphinx 1.6\n+\n+* #4522: epub: document is not rebuilt even if config changed\n+\n+1.7.0b3\n+\n+* #4019: inheritance_diagram AttributeError stopping make process\n+\n+* #4531: autosummary: methods are not treated as attributes\n+\n+* #4538: autodoc: \"sphinx.ext.autodoc.Options\" has been moved\n+\n+* #4539: autodoc emits warnings for partialmethods\n+\n+* #4223: doctest: failing tests reported in wrong file, at wrong line\n+\n+* i18n: message catalogs are not compiled if specific filenames are\n+  given for \"sphinx-build\" as arguments (refs: #4560)\n+\n+* #4027: sphinx.ext.autosectionlabel now expects labels to be the same\n+  as they are in the raw source; no smart quotes, nothig fancy.\n+\n+* #4581: apidoc: Excluded modules still included\n+\n+\n+Testing\n+-------\n+\n+1.7.0b1\n+\n+* Add support for docutils 0.14\n+\n+* Add tests for the \"sphinx.ext.inheritance_diagram\" extension.\n+\n+\n+Release 1.6.7 (released Feb 04, 2018)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1922: html search: Upper characters problem in French\n+\n+* #4412: Updated jQuery version from 3.1.0 to 3.2.1\n+\n+* #4438: math: math with labels with whitespace cause html error\n+\n+* #2437: make full reference for classes, aliased with \"alias of\"\n+\n+* #4434: pure numbers as link targets produce warning\n+\n+* #4477: Build fails after building specific files\n+\n+* #4449: apidoc: include \"empty\" packages that contain modules\n+\n+* #3917: citation labels are transformed to ellipsis\n+\n+* #4501: graphviz: epub3 validation error caused if graph is not\n+  clickable\n+\n+* #4514: graphviz: workaround for wrong map ID which graphviz\n+  generates\n+\n+* #4525: autosectionlabel does not support parallel build\n+\n+* #3953: Do not raise warning when there is a working intersphinx\n+  inventory\n+\n+* #4487: math: ValueError is raised on parallel build. Thanks to\n+  jschueller.\n+\n+* #2372: autosummary: invalid signatures are shown for type annotated\n+  functions\n+\n+* #3942: html: table is not aligned to center even if \":align: center\"\n+\n+\n+Release 1.6.6 (released Jan 08, 2018)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #4181: autodoc: Sort dictionary keys when possible\n+\n+* \"VerbatimHighlightColor\" is a new LaTeX 'sphinxsetup' key (refs:\n+  #4285)\n+\n+* Easier customizability of LaTeX macros involved in rendering of\n+  code-blocks\n+\n+* Show traceback if conf.py raises an exception (refs: #4369)\n+\n+* Add >>:confval:`smartquotes`<< to disable smart quotes through\n+  \"conf.py\" (refs: #3967)\n+\n+* Add >>:confval:`smartquotes_action`<< and\n+  >>:confval:`smartquotes_excludes`<< (refs: #4142, #4357)\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4334: sphinx-apidoc: Don't generate references to non-existing\n+  files in TOC\n+\n+* #4206: latex: reST label between paragraphs loses paragraph break\n+\n+* #4231: html: Apply fixFirefoxAnchorBug only under Firefox\n+\n+* #4221: napoleon depends on autodoc, but users need to load it\n+  manually\n+\n+* #2298: automodule fails to document a class attribute\n+\n+* #4099: C++: properly link class reference to class from inside\n+  constructor\n+\n+* #4267: PDF build broken by Unicode U+2116 NUMERO SIGN character\n+\n+* #4249: PDF output: Pygments error highlighting increases line\n+  spacing in code blocks\n+\n+* #1238: Support \":emphasize-lines:\" in PDF output\n+\n+* #4279: Sphinx crashes with pickling error when run with multiple\n+  processes and remote image\n+\n+* #1421: Respect the quiet flag in sphinx-quickstart\n+\n+* #4281: Race conditions when creating output directory\n+\n+* #4315: For PDF 'howto' documents, \"latex_toplevel_sectioning='part'\"\n+  generates \"\\chapter\" commands\n+\n+* #4214: Two todolist directives break sphinx-1.6.5\n+\n+* Fix links to external option docs with intersphinx (refs: #3769)\n+\n+* #4091: Private members not documented without :undoc-members:\n+\n+\n+Release 1.6.5 (released Oct 23, 2017)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #4107: Make searchtools.js compatible with pre-Sphinx1.5 templates\n+\n+* #4112: Don't override the smart_quotes setting if it was already set\n+\n+* #4125: Display reference texts of original and translated passages\n+  on i18n warning message\n+\n+* #4147: Include the exception when logging PO/MO file read/write\n+\n+\n+Bugs fixed\n+----------\n+\n+* #4085: Failed PDF build from image in parsed-literal using \":align:\"\n+  option\n+\n+* #4100: Remove debug print from autodoc extension\n+\n+* #3987: Changing theme from alabaster causes HTML build to fail\n+\n+* #4096: C++, don't crash when using the wrong role type. Thanks to\n+  mitya57.\n+\n+* #4070, #4111: crashes when the warning message contains format\n+  strings (again)\n+\n+* #4108: Search word highlighting breaks SVG images\n+\n+* #3692: Unable to build HTML if writing .buildinfo failed\n+\n+* #4152: HTML writer crashes if a field list is placed on top of the\n+  document\n+\n+* #4063: Sphinx crashes when labeling directive \".. todolist::\"\n+\n+* #4134: [doc] \"docutils.conf\" is not documented explicitly\n+\n+* #4169: Chinese language doesn't trigger Chinese search automatically\n+\n+* #1020: ext.todo todolist not linking to the page in pdflatex\n+\n+* #3965: New quickstart generates wrong SPHINXBUILD in Makefile\n+\n+* #3739: \":module:\" option is ignored at content of pyobjects\n+\n+* #4149: Documentation: Help choosing >>:confval:`latex_engine`<<\n+\n+* #4090: [doc] >>:confval:`latex_additional_files`<< with extra LaTeX\n+  macros should not use \".tex\" extension\n+\n+* Failed to convert reST parser error to warning (refs: #4132)\n+\n+\n+Release 1.6.4 (released Sep 26, 2017)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #3926: Add \"autodoc_warningiserror\" to suppress the behavior of \"-W\"\n+  option during importing target modules on autodoc\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3924: docname lost after dynamically parsing RST in extension\n+\n+* #3946: Typo in sphinx.sty (this was a bug with no effect in default\n+  context)\n+\n+* pep:\n+     and :rfc: does not supports \"default-role\" directive (refs:\n+     #3960)\n+\n+* #3960: default_role = 'guilabel' not functioning\n+\n+* Missing \"texinputs_win/Makefile\" to be used in latexpdf builder on\n+  windows.\n+\n+* #4026: nature: Fix macOS Safari scrollbar color\n+\n+* #3877: Fix for C++ multiline signatures.\n+\n+* #4006: Fix crash on parallel build\n+\n+* #3969: private instance attributes causes AttributeError\n+\n+* #4041: C++, remove extra name linking in function pointers.\n+\n+* #4038: C, add missing documentation of \"member\" role.\n+\n+* #4044: An empty multicolumn cell causes extra row height in PDF\n+  output\n+\n+* #4049: Fix typo in output of sphinx-build -h\n+\n+* #4062: hashlib.sha1() must take bytes, not unicode on Python 3\n+\n+* Avoid indent after index entries in latex (refs: #4066)\n+\n+* #4070: crashes when the warning message contains format strings\n+\n+* #4067: Return non-zero exit status when make subprocess fails\n+\n+* #4055: graphviz: the :align: option does not work for SVG output\n+\n+* #4055: graphviz: the :align: center option does not work for latex\n+  output\n+\n+* #4051: \"warn()\" function for HTML theme outputs 'None' string\n+\n+\n+Release 1.6.3 (released Jul 02, 2017)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* latex: hint that code-block continues on next page (refs: #3764,\n+  #3792)\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3821: Failed to import sphinx.util.compat with docutils-0.14rc1\n+\n+* #3829: sphinx-quickstart template is incomplete regarding use of\n+  alabaster\n+\n+* #3772: 'str object' has no attribute 'filename'\n+\n+* Emit wrong warnings if citation label includes hyphens (refs: #3565)\n+\n+* #3858: Some warnings are not colored when using --color option\n+\n+* #3775: Remove unwanted whitespace in default template\n+\n+* #3835: sphinx.ext.imgmath fails to convert SVG images if project\n+  directory name contains spaces\n+\n+* #3850: Fix color handling in make mode's help command\n+\n+* #3865: use of self.env.warn in sphinx extension fails\n+\n+* #3824: production lists apply smart quotes transform since Sphinx\n+  1.6.1\n+\n+* latex: fix \"\\sphinxbfcode\" swallows initial space of argument\n+\n+* #3878: Quotes in auto-documented class attributes should be straight\n+  quotes in PDF output\n+\n+* #3881: LaTeX figure floated to next page sometimes leaves extra\n+  vertical whitespace\n+\n+* #3885: duplicated footnotes raises IndexError\n+\n+* #3873: Failure of deprecation warning mechanism of\n+  \"sphinx.util.compat.Directive\"\n+\n+* #3874: Bogus warnings for \"citation not referenced\" for cross-file\n+  citations\n+\n+* #3860: Don't download images when builders not supported images\n+\n+* #3860: Remote image URIs without filename break builders not\n+  supported remote images\n+\n+* #3833: command line messages are translated unintentionally with\n+  \"language\" setting.\n+\n+* #3840: make checking \"epub_uid\" strict\n+\n+* #3851, #3706: Fix about box drawing characters for PDF output\n+\n+* #3900: autosummary could not find methods\n+\n+* #3902: Emit error if \"latex_documents\" contains non-unicode string\n+  in py2\n+\n+\n+Release 1.6.2 (released May 28, 2017)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #3789: Do not require typing module for python>=3.5\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3754: HTML builder crashes if HTML theme appends own stylesheets\n+\n+* #3756: epub: Entity 'mdash' not defined\n+\n+* #3758: Sphinx crashed if logs are emitted in conf.py\n+\n+* #3755: incorrectly warns about dedent with literalinclude\n+\n+* #3742: RTD PDF builds of Sphinx own docs are missing an index entry\n+  in the bookmarks and table of contents. This is\n+  rtfd/readthedocs.org#2857 issue, a workaround is obtained using some\n+  extra LaTeX code in Sphinx's own \"conf.py\"\n+\n+* #3770: Build fails when a \"code-block\" has the option emphasize-\n+  lines and the number indicated is higher than the number of lines\n+\n+* #3774: Incremental HTML building broken when using citations\n+\n+* #3763: got epubcheck validations error if epub_cover is set\n+\n+* #3779: 'ImportError' in sphinx.ext.autodoc due to broken\n+  'sys.meta_path'. Thanks to Tatiana Tereshchenko.\n+\n+* #3796: env.resolve_references() crashes when non-document node given\n+\n+* #3803: Sphinx crashes with invalid PO files\n+\n+* #3791: PDF \"continued on next page\" for long tables isn't\n+  internationalized\n+\n+* #3788: smartquotes emits warnings for unsupported languages\n+\n+* #3807: latex Makefile for \"make latexpdf\" is only for unixen\n+\n+* #3781: double hyphens in option directive are compiled as endashes\n+\n+* #3817: latex builder raises AttributeError\n+\n+\n+Release 1.6.1 (released May 16, 2017)\n+=====================================\n+\n+\n+Dependencies\n+------------\n+\n+1.6b1\n+\n+* (updated) latex output is tested with Ubuntu trusty's texlive\n+  packages (Feb. 2014) and earlier tex installations may not be fully\n+  compliant, particularly regarding Unicode engines xelatex and\n+  lualatex\n+\n+* (added) latexmk is required for \"make latexpdf\" on GNU/Linux and Mac\n+  OS X (refs: #3082)\n+\n+\n+Incompatible changes\n+--------------------\n+\n+1.6b1\n+\n+* #1061, #2336, #3235: Now generation of autosummary doesn't contain\n+  imported members by default. Thanks to Luc Saffre.\n+\n+* LaTeX \"\\includegraphics\" command isn't overloaded: only\n+  \"\\sphinxincludegraphics\" has the custom code to fit image to\n+  available width if oversized.\n+\n+* The subclasses of \"sphinx.domains.Index\" should override\n+  \"generate()\" method.  The default implementation raises\n+  NotImplementedError\n+\n+* LaTeX positioned long tables horizontally centered, and short ones\n+  flushed left (no text flow around table.) The position now defaults\n+  to center in both cases, and it will obey Docutils 0.13 \":align:\"\n+  option (refs #3415, #3377)\n+\n+* option directive also allows all punctuations for the option name\n+  (refs: #3366)\n+\n+* #3413: if \"literalinclude\"'s \":start-after:\" is used, make \":lines:\"\n+  relative (refs #3412)\n+\n+* \"literalinclude\" directive does not allow the combination of\n+  \":diff:\" option and other options (refs: #3416)\n+\n+* LuaLaTeX engine uses \"fontspec\" like XeLaTeX. It is advised\n+  \"latex_engine = 'lualatex'\" be used only on up-to-date TeX installs\n+  (refs #3070, #3466)\n+\n+* >>:confval:`latex_keep_old_macro_names`<< default value has been\n+  changed from \"True\" to \"False\". This means that some LaTeX macros\n+  for styling are by default defined only with \"\\sphinx..\" prefixed\n+  names. (refs: #3429)\n+\n+* Footer \"Continued on next page\" of LaTeX longtable's now not framed\n+  (refs: #3497)\n+\n+* #3529: The arguments of \"BuildEnvironment.__init__\" is changed\n+\n+* #3082: Use latexmk for pdf (and dvi) targets (Unix-like platforms\n+  only)\n+\n+* #3558: Emit warnings if footnotes and citations are not referenced.\n+  The warnings can be suppressed by \"suppress_warnings\".\n+\n+* latex made available (non documented) colour macros from a file\n+  distributed with pdftex engine for Plain TeX. This is removed in\n+  order to provide better support for multiple TeX engines. Only\n+  interface from \"color\" or \"xcolor\" packages should be used by\n+  extensions of Sphinx latex writer. (refs #3550)\n+\n+* \"Builder.env\" is not filled at instantiation\n+\n+* #3594: LaTeX: single raw directive has been considered as block\n+  level element\n+\n+* #3639: If \"html_experimental_html5_writer\" is available, epub\n+  builder use it by default.\n+\n+* \"Sphinx.add_source_parser()\" raises an error if duplicated\n+\n+1.6b2\n+\n+* #3345: Replace the custom smartypants code with Docutils'\n+  smart_quotes. Thanks to Dmitry Shachnev, and to G\u00fcnter Milde at\n+  Docutils.\n+\n+1.6b3\n+\n+* LaTeX package \"eqparbox\" is not used and not loaded by Sphinx\n+  anymore\n+\n+* LaTeX package \"multirow\" is not used and not loaded by Sphinx\n+  anymore\n+\n+* Add line numbers to citation data in std domain\n+\n+1.6 final\n+\n+* LaTeX package \"threeparttable\" is not used and not loaded by Sphinx\n+  anymore (refs #3686, #3532, #3377)\n+\n+\n+Features removed\n+----------------\n+\n+* Configuration variables\n+\n+  * epub3_contributor\n+\n+  * epub3_description\n+\n+  * epub3_page_progression_direction\n+\n+  * html_translator_class\n+\n+  * html_use_modindex\n+\n+  * latex_font_size\n+\n+  * latex_paper_size\n+\n+  * latex_preamble\n+\n+  * latex_use_modindex\n+\n+  * latex_use_parts\n+\n+* \"termsep\" node\n+\n+* defindex.html template\n+\n+* LDML format support in \"today\", \"today_fmt\" and\n+  \"html_last_updated_fmt\"\n+\n+* \":inline:\" option for the directives of sphinx.ext.graphviz\n+  extension\n+\n+* sphinx.ext.pngmath extension\n+\n+* \"sphinx.util.compat.make_admonition()\"\n+\n+\n+Features added\n+--------------\n+\n+1.6b1\n+\n+* #3136: Add \":name:\" option to the directives in\n+  \"sphinx.ext.graphviz\"\n+\n+* #2336: Add \"imported_members\" option to \"sphinx-autogen\" command to\n+  document imported members.\n+\n+* C++, add \":tparam-line-spec:\" option to templated declarations. When\n+  specified, each template parameter will be rendered on a separate\n+  line.\n+\n+* #3359: Allow sphinx.js in a user locale dir to override sphinx.js\n+  from Sphinx\n+\n+* #3303: Add \":pyversion:\" option to the doctest directive.\n+\n+* #3378: (latex) support for \":widths:\" option of table directives\n+  (refs: #3379, #3381)\n+\n+* #3402: Allow to suppress \"download file not readable\" warnings using\n+  >>:confval:`suppress_warnings`<<.\n+\n+* #3377: latex: Add support for Docutils 0.13 \":align:\" option for\n+  tables (but does not implement text flow around table).\n+\n+* latex: footnotes from inside tables are hyperlinked (except from\n+  captions or headers) (refs: #3422)\n+\n+* Emit warning if over dedent has detected on \"literalinclude\"\n+  directive (refs: #3416)\n+\n+* Use for LuaLaTeX same default settings as for XeLaTeX (i.e.\n+  \"fontspec\" and \"polyglossia\"). (refs: #3070, #3466)\n+\n+* Make \"'extraclassoptions'\" key of \"latex_elements\" public (refs\n+  #3480)\n+\n+* #3463: Add warning messages for required EPUB3 metadata. Add default\n+  value to \"epub_description\" to avoid warning like other settings.\n+\n+* #3476: setuptools: Support multiple builders\n+\n+* latex: merged cells in LaTeX tables allow code-blocks, lists,\n+  blockquotes... as do normal cells (refs: #3435)\n+\n+* HTML builder uses experimental HTML5 writer if\n+  \"html_experimental_html5_writer\" is True and docutils 0.13 or later\n+  is installed.\n+\n+* LaTeX macros to customize space before and after tables in PDF\n+  output (refs #3504)\n+\n+* #3348: Show decorators in literalinclude and viewcode directives\n+\n+* #3108: Show warning if :start-at: and other literalinclude options\n+  does not match to the text\n+\n+* #3609: Allow to suppress \"duplicate citation\" warnings using\n+  \"suppress_warnings\"\n+\n+* #2803: Discovery of builders by entry point\n+\n+* #1764, #1676: Allow setting 'rel' and 'title' attributes for\n+  stylesheets\n+\n+* #3589: Support remote images on non-HTML builders\n+\n+* #3589: Support images in Data URI on non-HTML builders\n+\n+* #2961: improve >>:confval:`autodoc_mock_imports`<<. Now the config\n+  value only requires to declare the top-level modules that should be\n+  mocked. Thanks to Robin Jarry.\n+\n+* #3449: On py3, autodoc use inspect.signature for more accurate\n+  signature calculation. Thanks to Nathaniel J. Smith.\n+\n+* #3641: Epub theme supports HTML structures that are generated by\n+  HTML5 writer.\n+\n+* #3644 autodoc uses inspect instead of checking types. Thanks to\n+  Jeroen Demeyer.\n+\n+* Add a new extension; \"sphinx.ext.imgconverter\". It converts images\n+  in the document to appropriate format for builders\n+\n+* latex: Use templates to render tables (refs #3389, 2a37b0e)\n+\n+1.6b2\n+\n+* \"LATEXMKOPTS\" variable for the Makefile in \"$BUILDDIR/latex\" to pass\n+  options to \"latexmk\" when executing \"make latexpdf\" (refs #3695,\n+  #3720)\n+\n+* Add a new event \"env-check-consistency\" to check consistency to\n+  extensions\n+\n+* Add \"Domain.check_consistency()\" to check consistency\n+\n+\n+Bugs fixed\n+----------\n+\n+1.6b1\n+\n+* \"literalinclude\" directive expands tabs after dedent-ing (refs:\n+  #3416)\n+\n+* #1574: Paragraphs in table cell doesn't work in Latex output\n+\n+* #3288: Table with merged headers not wrapping text\n+\n+* #3491: Inconsistent vertical space around table and longtable in PDF\n+\n+* #3506: Depart functions for all admonitions in HTML writer now\n+  properly pass \"node\" to \"depart_admonition\".\n+\n+* #2693: Sphinx latex style file wrongly inhibits colours for section\n+  headings for latex+dvi(ps,pdf,pdfmx)\n+\n+* C++, properly look up \"any\" references.\n+\n+* #3624: sphinx.ext.intersphinx couldn't load inventories compressed\n+  with gzip\n+\n+* #3551: PDF information dictionary is lacking author and title data\n+\n+* #3351: intersphinx does not refers context like \"py:module\",\n+  \"py:class\" and so on.\n+\n+* Fail to load template file if the parent template is archived\n+\n+1.6b2\n+\n+* #3661: sphinx-build crashes on parallel build\n+\n+* #3669: gettext builder fails with \"ValueError: substring not found\"\n+\n+* #3660: Sphinx always depends on sphinxcontrib-websupport and its\n+  dependencies\n+\n+* #3472: smart quotes getting wrong in latex (at least with list of\n+  strings via autoattribute) (refs: #3345, #3666)\n+\n+1.6b3\n+\n+* #3588: No compact (p tag) html output in the i18n document build\n+  even when >>:confval:`html_compact_lists`<< is True.\n+\n+* The \"make latexpdf\" from 1.6b1 (for GNU/Linux and Mac OS, using\n+  \"latexmk\") aborted earlier in case of LaTeX errors than was the case\n+  with 1.5 series, due to hard-coded usage of \"--halt-on-error\" option\n+  (refs #3695)\n+\n+* #3683: sphinx.websupport module is not provided by default\n+\n+* #3683: Failed to build document if builder.css_file.insert() is\n+  called\n+\n+* #3714: viewcode extension not taking \"highlight_code='none'\" in\n+  account\n+\n+* #3698: Moving :doc: to std domain broke backwards compatibility\n+\n+* #3633: misdetect unreferenced citations\n+\n+1.6 final\n+\n+* LaTeX tables do not allow multiple paragraphs in a header cell\n+\n+* LATEXOPTS is not passed over correctly to pdflatex since 1.6b3\n+\n+* #3532: Figure or literal block captions in cells of short tables\n+  cause havoc in PDF output\n+\n+* Fix: in PDF captions of tables are rendered differently whether\n+  table is of longtable class or not (refs #3686)\n+\n+* #3725: Todo looks different from note in LaTeX output\n+\n+* #3479: stub-columns have no effect in LaTeX output\n+\n+* #3738: Nonsensical code in theming.py\n+\n+* #3746: PDF builds fail with latexmk 4.48 or earlier due to undefined\n+  options \"-pdfxe\" and \"-pdflua\"\n+\n+\n+Deprecated\n+----------\n+\n+1.6b1\n+\n+* \"sphinx.util.compat.Directive\" class is now deprecated. Please use\n+  instead \"docutils.parsers.rst.Directive\"\n+\n+* \"sphinx.util.compat.docutils_version\" is now deprecated\n+\n+* #2367: \"Sphinx.warn()\", \"Sphinx.info()\" and other logging methods\n+  are now deprecated.  Please use \"sphinx.util.logging\" (Logging API)\n+  instead.\n+\n+* #3318: \"notice\" is now deprecated as LaTeX environment name and will\n+  be removed at Sphinx 1.7. Extension authors please use\n+  \"sphinxadmonition\" instead (as Sphinx does since 1.5.)\n+\n+* \"Sphinx.status_iterator()\" and \"Sphinx.old_status_iterator()\" is now\n+  deprecated.  Please use \"sphinx.util:status_iterator()\" instead.\n+\n+* \"Sphinx._directive_helper()\" is deprecated. Please use\n+  \"sphinx.util.docutils.directive_helper()\" instead.\n+\n+* \"BuildEnvironment.set_warnfunc()\" is now deprecated\n+\n+* Following methods of \"BuildEnvironment\" is now deprecated.\n+\n+  * \"BuildEnvironment.note_toctree()\"\n+\n+  * \"BuildEnvironment.get_toc_for()\"\n+\n+  * \"BuildEnvironment.get_toctree_for()\"\n+\n+  * \"BuildEnvironment.create_index()\"\n+\n+  Please use \"sphinx.environment.adapters\" modules instead.\n+\n+* latex package  \"footnote\" is not loaded anymore by its bundled\n+  replacement \"footnotehyper-sphinx\". The redefined macros keep the\n+  same names as in the original package.\n+\n+* #3429: deprecate config setting \"latex_keep_old_macro_names\". It\n+  will be removed at 1.7, and already its default value has changed\n+  from \"True\" to \"False\".\n+\n+* #3221: epub2 builder is deprecated\n+\n+* #3254: \"sphinx.websupport\" is now separated into independent\n+  package; \"sphinxcontrib-websupport\".  \"sphinx.websupport\" will be\n+  removed in Sphinx-2.0.\n+\n+* #3628: \"sphinx_themes\" entry_point is deprecated.  Please use\n+  \"sphinx.html_themes\" instead.\n+\n+1.6b2\n+\n+* #3662: \"builder.css_files\" is deprecated.  Please use\n+  \"add_stylesheet()\" API instead.\n+\n+1.6 final\n+\n+* LaTeX \"\\sphinxstylethead\" is deprecated at 1.6 and will be removed\n+  at 1.7. Please move customization into new macro\n+  \"\\sphinxstyletheadfamily\".\n+\n+\n+Testing\n+-------\n+\n+1.6 final\n+\n+* #3458: Add \"sphinx.testing\" (experimental)\n+\n+\n+Release 1.6 (unreleased)\n+========================\n+\n+* not released (because of package script error)\n+\n+\n+Release 1.5.6 (released May 15, 2017)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3614: Sphinx crashes with requests-2.5.0\n+\n+* #3618: autodoc crashes with tupled arguments\n+\n+* #3664: No space after the bullet in items of a latex list produced\n+  by Sphinx\n+\n+* #3657: EPUB builder crashes if a document starting with genindex\n+  exists\n+\n+* #3588: No compact (p tag) html output in the i18n document build\n+  even when >>:confval:`html_compact_lists`<< is True.\n+\n+* #3685: AttributeError when using 3rd party domains\n+\n+* #3702: LaTeX writer styles figure legends with a hard-coded \"\\small\"\n+\n+* #3708: LaTeX writer allows irc scheme\n+\n+* #3717: Stop enforcing that favicon's must be .ico\n+\n+* #3731, #3732: Protect isenumclass predicate against non-class\n+  arguments\n+\n+* #3320: Warning about reference target not being found for container\n+  types\n+\n+* Misspelled ARCHIVEPREFIX in Makefile for latex build repertory\n+\n+\n+Release 1.5.5 (released Apr 03, 2017)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3597: python domain raises UnboundLocalError if invalid name given\n+\n+* #3599: Move to new MathJax CDN\n+\n+\n+Release 1.5.4 (released Apr 02, 2017)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #3470: Make genindex support all kinds of letters, not only Latin\n+  ones\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3445: setting \"'inputenc'\" key to \"\\\\usepackage[utf8x]{inputenc}\"\n+  leads to failed PDF build\n+\n+* EPUB file has duplicated \"nav.xhtml\" link in \"content.opf\" except\n+  first time build\n+\n+* #3488: objects.inv has broken when \"release\" or \"version\" contain\n+  return code\n+\n+* #2073, #3443, #3490: gettext builder that writes pot files unless\n+  the content are same without creation date. Thanks to Yoshiki\n+  Shibukawa.\n+\n+* #3487: intersphinx: failed to refer options\n+\n+* #3496: latex longtable's last column may be much wider than its\n+  contents\n+\n+* #3507: wrong quotes in latex output for productionlist directive\n+\n+* #3533: Moving from Sphinx 1.3.1 to 1.5.3 breaks LaTeX compilation of\n+  links rendered as code\n+\n+* #2665, #2607: Link names in C++ docfields, and make it possible for\n+  other domains.\n+\n+* #3542: C++, fix parsing error of non-type template argument with\n+  template.\n+\n+* #3065, #3520: python domain fails to recognize nested class\n+\n+* #3575: Problems with pdflatex in a Turkish document built with\n+  sphinx has reappeared (refs #2997, #2397)\n+\n+* #3577: Fix intersphinx debug tool\n+\n+* A LaTeX command such as \"\\\\large\" inserted in the title items of\n+  >>:confval:`latex_documents`<< causes failed PDF build (refs #3551,\n+  #3567)\n+\n+\n+Release 1.5.3 (released Feb 26, 2017)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* Support requests-2.0.0 (experimental) (refs: #3367)\n+\n+* (latex) PDF page margin dimensions may be customized (refs: #3387)\n+\n+* \"literalinclude\" directive allows combination of \":pyobject:\" and\n+  \":lines:\" options (refs: #3416)\n+\n+* #3400: make-mode doesn't use subprocess on building docs\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3370: the caption of code-block is not picked up for translation\n+\n+* LaTeX: >>:confval:`release`<< is not escaped (refs: #3362)\n+\n+* #3364: sphinx-quickstart prompts overflow on Console with 80 chars\n+  width\n+\n+* since 1.5, PDF's TOC and bookmarks lack an entry for general Index\n+  (refs: #3383)\n+\n+* #3392: \"'releasename'\" in >>:confval:`latex_elements`<< is not\n+  working\n+\n+* #3356: Page layout for Japanese \"'manual'\" docclass has a shorter\n+  text area\n+\n+* #3394: When \"'pointsize'\" is not \"10pt\", Japanese \"'manual'\"\n+  document gets wrong PDF page dimensions\n+\n+* #3399: quickstart: conf.py was not overwritten by template\n+\n+* #3366: option directive does not allow punctuations\n+\n+* #3410: return code in >>:confval:`release`<< breaks html search\n+\n+* #3427: autodoc: memory addresses are not stripped on Windows\n+\n+* #3428: xetex build tests fail due to fontspec v2.6 defining\n+  \"\\strong\"\n+\n+* #3349: Result of \"IndexBuilder.load()\" is broken\n+\n+* #3450: &nbsp is appeared in EPUB docs\n+\n+* #3418: Search button is misaligned in nature and pyramid theme\n+\n+* #3421: Could not translate a caption of tables\n+\n+* #3552: linkcheck raises UnboundLocalError\n+\n+\n+Release 1.5.2 (released Jan 22, 2017)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Dependency requirement updates: requests 2.4.0 or above (refs:\n+  #3268, #3310)\n+\n+\n+Features added\n+--------------\n+\n+* #3241: emit latex warning if buggy titlesec (ref #3210)\n+\n+* #3194: Refer the $MAKE environment variable to determine \"make\"\n+  command\n+\n+* Emit warning for nested numbered toctrees (refs: #3142)\n+\n+* #978: \"intersphinx_mapping\" also allows a list as a parameter\n+\n+* #3340: (LaTeX) long lines in >>:dudir:`parsed-literal`<< are wrapped\n+  like in \"code-block\", inline math and footnotes are fully\n+  functional.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3246: xapian search adapter crashes\n+\n+* #3253: In Py2 environment, building another locale with a non-\n+  captioned toctree produces \"None\" captions\n+\n+* #185: References to section title including raw node has broken\n+\n+* #3255: In Py3.4 environment, autodoc doesn't support documentation\n+  for attributes of Enum class correctly.\n+\n+* #3261: \"latex_use_parts\" makes sphinx crash\n+\n+* The warning type \"misc.highlighting_failure\" does not work\n+\n+* #3294: \"add_latex_package()\" make crashes non-LaTeX builders\n+\n+* The caption of table are rendered as invalid HTML (refs: #3287)\n+\n+* #3268: Sphinx crashes with requests package from Debian jessie\n+\n+* #3284: Sphinx crashes on parallel build with an extension which\n+  raises unserializable exception\n+\n+* #3315: Bibliography crashes on latex build with docclass 'memoir'\n+\n+* #3328: Could not refer rubric implicitly\n+\n+* #3329: emit warnings if po file is invalid and can't read it. Also\n+  writing mo\n+\n+* #3337: Ugly rendering of definition list term's classifier\n+\n+* #3335: gettext does not extract field_name of a field in a\n+  field_list\n+\n+* #2952: C++, fix refs to operator() functions.\n+\n+* Fix Unicode super- and subscript digits in \"code-block\" and parsed-\n+  literal LaTeX output (ref #3342)\n+\n+* LaTeX writer: leave \"\"\" character inside parsed-literal as is (ref\n+  #3341)\n+\n+* #3234: intersphinx failed for encoded inventories\n+\n+* #3158: too much space after captions in PDF output\n+\n+* #3317: An URL in parsed-literal contents gets wrongly rendered in\n+  PDF if with hyphen\n+\n+* LaTeX crash if the filename of an image inserted in parsed-literal\n+  via a substitution contains an hyphen (ref #3340)\n+\n+* LaTeX rendering of inserted footnotes in parsed-literal is wrong\n+  (ref #3340)\n+\n+* Inline math in parsed-literal is not rendered well by LaTeX (ref\n+  #3340)\n+\n+* #3308: Parsed-literals don't wrap very long lines with pdf builder\n+  (ref #3340)\n+\n+* #3295: Could not import extension sphinx.builders.linkcheck\n+\n+* #3285: autosummary: asterisks are escaped twice\n+\n+* LaTeX, pass dvipdfm option to geometry package for Japanese\n+  documents (ref #3363)\n+\n+* Fix parselinenos() could not parse left half open range (cf. \"-4\")\n+\n+\n+Release 1.5.1 (released Dec 13, 2016)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #3214: Allow to suppress \"unknown mimetype\" warnings from epub\n+  builder using >>:confval:`suppress_warnings`<<.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #3195: Can not build in parallel\n+\n+* #3198: AttributeError is raised when toctree has 'self'\n+\n+* #3211: Remove untranslated sphinx locale catalogs (it was covered by\n+  untranslated it_IT)\n+\n+* #3212: HTML Builders crashes with docutils-0.13\n+\n+* #3207: more latex problems with references inside parsed-literal\n+  directive (\"\\DUrole\")\n+\n+* #3205: sphinx.util.requests crashes with old pyOpenSSL (< 0.14)\n+\n+* #3220: KeyError when having a duplicate citation\n+\n+* #3200: LaTeX: xref inside desc_name not allowed\n+\n+* #3228: \"build_sphinx\" command crashes when missing dependency\n+\n+* #2469: Ignore updates of catalog files for gettext builder. Thanks\n+  to Hiroshi Ohkubo.\n+\n+* #3183: Randomized jump box order in generated index page.\n+\n+\n+Release 1.5 (released Dec 5, 2016)\n+==================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+1.5a1\n+\n+* latex, package fancybox is not any longer a dependency of sphinx.sty\n+\n+* Use \"'locales'\" as a default value of \"locale_dirs\"\n+\n+* latex, package ifthen is not any longer a dependency of sphinx.sty\n+\n+* latex, style file does not modify fancyvrb's Verbatim (also\n+  available as OriginalVerbatim) but uses sphinxVerbatim for name of\n+  custom wrapper.\n+\n+* latex, package newfloat is not used (and not included) anymore (ref\n+  #2660; it was used since 1.3.4 and shipped with Sphinx since 1.4).\n+\n+* latex, literal blocks in tables do not use OriginalVerbatim but\n+  sphinxVerbatimintable which handles captions and wraps lines (ref\n+  #2704).\n+\n+* latex, replace \"pt\" by TeX equivalent \"bp\" if found in \"width\" or\n+  \"height\" attribute of an image.\n+\n+* latex, if \"width\" or \"height\" attribute of an image is given with no\n+  unit, use \"px\" rather than ignore it.\n+\n+* latex: Separate stylesheets of pygments to independent .sty file\n+\n+* #2454: The filename of sourcelink is now changed.  The value of\n+  \"html_sourcelink_suffix\" will be appended to the original filename\n+  (like \"index.rst.txt\").\n+\n+* \"sphinx.util.copy_static_entry()\" is now deprecated. Use\n+  \"sphinx.util.fileutil.copy_asset()\" instead.\n+\n+* \"sphinx.util.osutil.filecopy()\" skips copying if the file has not\n+  been changed (ref: #2510, #2753)\n+\n+* Internet Explorer 6-8, Opera 12.1x or Safari 5.1+ support is dropped\n+  because jQuery version is updated from 1.11.0 to 3.1.0 (ref: #2634,\n+  #2773)\n+\n+* QtHelpBuilder doesn't generate search page (ref: #2352)\n+\n+* QtHelpBuilder uses \"nonav\" theme instead of default one to improve\n+  readability.\n+\n+* latex: To provide good default settings to Japanese documents,\n+  Sphinx uses \"jreport\" and \"jsbook\" as docclass if\n+  >>:confval:`language`<< is \"ja\".\n+\n+* \"sphinx-quickstart\" now allows a project version is empty\n+\n+* Fix :download: role on epub/qthelp builder. They ignore the role\n+  because they don't support it.\n+\n+* \"sphinx.ext.viewcode\" doesn't work on epub building by default.\n+  \"viewcode_enable_epub\" option\n+\n+* \"sphinx.ext.viewcode\" disabled on singlehtml builder.\n+\n+* Use make-mode of \"sphinx-quickstart\" by default.  To disable this,\n+  use \"-M\" option\n+\n+* Fix \"genindex.html\", Sphinx's document template, link address to\n+  itself to satisfy xhtml standard.\n+\n+* Use epub3 builder by default.  And the old epub builder is renamed\n+  to epub2.\n+\n+* Fix \"epub\" and \"epub3\" builders that contained links to \"genindex\"\n+  even if \"epub_use_index = False\".\n+\n+* \"html_translator_class\" is now deprecated. Use\n+  \"Sphinx.set_translator()\" API instead.\n+\n+* Drop python 2.6 and 3.3 support\n+\n+* Drop epub3 builder's \"epub3_page_progression_direction\" option (use\n+  \"epub3_writing_mode\").\n+\n+* #2877: Rename \"latex_elements['footer']\" to\n+  \"latex_elements['atendofbody']\"\n+\n+1.5a2\n+\n+* #2983: Rename \"epub3_description\" and \"epub3_contributor\" to\n+  \"epub_description\" and \"epub_contributor\".\n+\n+* Remove themes/basic/defindex.html; no longer used\n+\n+* Sphinx does not ship anymore (but still uses) LaTeX style file\n+  \"fncychap\"\n+\n+* #2435: Slim down quickstarted conf.py\n+\n+* The \"sphinx.sty\" latex package does not load itself \"hyperref\", as\n+  this is done later in the preamble of the latex output via\n+  \"'hyperref'\" key.\n+\n+* Sphinx does not ship anymore a custom modified LaTeX style file\n+  \"tabulary\". The non-modified package is used.\n+\n+* #3057: By default, footnote marks in latex PDF output are not\n+  preceded by a space anymore, \"\\sphinxBeforeFootnote\" allows user\n+  customization if needed.\n+\n+* LaTeX target requires that option \"hyperfootnotes\" of package\n+  \"hyperref\" be left unchanged to its default (i.e. \"true\") (refs:\n+  #3022)\n+\n+1.5 final\n+\n+* #2986: \"themes/basic/defindex.html\" is now deprecated\n+\n+* Emit warnings that will be deprecated in Sphinx 1.6 by default.\n+  Users can change the behavior by setting the environment variable\n+  PYTHONWARNINGS. Please refer Deprecation Warnings.\n+\n+* #2454: new JavaScript variable \"SOURCELINK_SUFFIX\" is added\n+\n+\n+Deprecated\n+----------\n+\n+These features are removed in Sphinx-1.6:\n+\n+* LDML format  support in i18n feature\n+\n+* \"sphinx.addnodes.termsep\"\n+\n+* Some functions and classes in \"sphinx.util.pycompat\": \"zip_longest\",\n+  \"product\", \"all\", \"any\", \"next\", \"open\", \"class_types\",\n+  \"base_exception\", \"relpath\", \"StringIO\", \"BytesIO\". Please use the\n+  standard library version instead;\n+\n+If any deprecation warning like \"RemovedInSphinxXXXWarning\" are\n+displayed, please refer Deprecation Warnings.\n+\n+\n+Features added\n+--------------\n+\n+1.5a1\n+\n+* #2951: Add \"--implicit-namespaces\" PEP-0420 support to apidoc.\n+\n+* Add \":caption:\" option for sphinx.ext.inheritance_diagram.\n+\n+* #2471: Add config variable for default doctest flags.\n+\n+* Convert linkcheck builder to requests for better encoding handling\n+\n+* #2463, #2516: Add keywords of \"meta\" directive to search index\n+\n+* \":maxdepth:\" option of toctree affects \"secnumdepth\" (ref: #2547)\n+\n+* #2575: Now \"sphinx.ext.graphviz\" allows \":align:\" option\n+\n+* Show warnings if unknown key is specified to \"latex_elements\"\n+\n+* Show warnings if no domains match with \"primary_domain\" (ref: #2001)\n+\n+* C++, show warnings when the kind of role is misleading for the kind\n+  of target it refers to (e.g., using the \"class\" role for a\n+  function).\n+\n+* latex, writer abstracts more of text styling into customizable\n+  macros, e.g. the \"visit_emphasis\" will output \"\\sphinxstyleemphasis\"\n+  rather than \"\\emph\" (which may be in use elsewhere or in an added\n+  LaTeX package). See list at end of \"sphinx.sty\" (ref: #2686)\n+\n+* latex, public names for environments and parameters used by note,\n+  warning, and other admonition types, allowing full customizability\n+  from the \"'preamble'\" key or an input file (ref: feature request\n+  #2674, #2685)\n+\n+* latex, better computes column widths of some tables (as a result,\n+  there will be slight changes as tables now correctly fill the line\n+  width; ref: #2708)\n+\n+* latex, sphinxVerbatim environment is more easily customizable (ref:\n+  #2704). In addition to already existing VerbatimColor and\n+  VerbatimBorderColor:\n+\n+  * two lengths \"\\sphinxverbatimsep\" and \"\\sphinxverbatimborder\",\n+\n+  * booleans \"\\ifsphinxverbatimwithframe\" and\n+    \"\\ifsphinxverbatimwrapslines\".\n+\n+* latex, captions for literal blocks inside tables are handled, and\n+  long code lines wrapped to fit table cell (ref: #2704)\n+\n+* #2597: Show warning messages as darkred\n+\n+* latex, allow image dimensions using px unit (default is 96px=1in)\n+\n+* Show warnings if invalid dimension units found\n+\n+* #2650: Add \"--pdb\" option to setup.py command\n+\n+* latex, make the use of \"\\small\" for code listings customizable (ref\n+  #2721)\n+\n+* #2663: Add \"--warning-is-error\" option to setup.py command\n+\n+* Show warnings if deprecated latex options are used\n+\n+* Add sphinx.config.ENUM to check the config values is in candidates\n+\n+* math: Add hyperlink marker to each equations in HTML output\n+\n+* Add new theme \"nonav\" that doesn't include any navigation links.\n+  This is for any help generator like qthelp.\n+\n+* #2680: \"sphinx.ext.todo\" now emits warnings if \"todo_emit_warnings\"\n+  enabled. Also, it emits an additional event named \"todo-defined\" to\n+  handle the TODO entries in 3rd party extensions.\n+\n+* Python domain signature parser now uses the xref mixin for\n+  'exceptions', allowing exception classes to be autolinked.\n+\n+* #2513: Add \"latex_engine\" to switch the LaTeX engine by conf.py\n+\n+* #2682: C++, basic support for attributes (C++11 style and GNU\n+  style). The new configuration variables 'cpp_id_attributes' and\n+  'cpp_paren_attributes' can be used to introduce custom attributes.\n+\n+* #1958: C++, add configuration variable 'cpp_index_common_prefix' for\n+  removing prefixes from the index text of C++ objects.\n+\n+* C++, added concept directive. Thanks to mickk-on-cpp.\n+\n+* C++, added support for template introduction syntax. Thanks to\n+  mickk-on-cpp.\n+\n+* #2725: latex builder: allow to use user-defined template file\n+  (experimental)\n+\n+* apidoc now avoids invalidating cached files by not writing to files\n+  whose content doesn't change. This can lead to significant\n+  performance wins if apidoc is run frequently.\n+\n+* #2851: \"sphinx.ext.math\" emits missing-reference event if equation\n+  not found\n+\n+* #1210: \"eqref\" role now supports cross reference\n+\n+* #2892: Added \"-a\" (\"--append-syspath\") option to \"sphinx-apidoc\"\n+\n+* #1604: epub3 builder: Obey font-related CSS when viewing in iBooks.\n+\n+* #646: \"option\" directive support '.' character as a part of options\n+\n+* Add document about kindlegen and fix document structure for it.\n+\n+* #2474: Add \"intersphinx_timeout\" option to \"sphinx.ext.intersphinx\"\n+\n+* #2926: EPUB3 builder supports vertical mode (\"epub3_writing_mode\"\n+  option)\n+\n+* #2695: \"build_sphinx\" subcommand for setuptools handles exceptions\n+  as same as \"sphinx-build\" does\n+\n+* #326: \"numref\" role can also refer sections\n+\n+* #2916: \"numref\" role can also refer caption as an its linktext\n+\n+1.5a2\n+\n+* #3008: \"linkcheck\" builder ignores self-signed certificate URL\n+\n+* #3020: new \"'geometry'\" key to \"latex_elements\" whose default uses\n+  LaTeX style file \"geometry.sty\" to set page layout\n+\n+* #2843: Add :start-at: and :end-at: options to literalinclude\n+  directive\n+\n+* #2527: Add \":reversed:\" option to toctree directive\n+\n+* Add \"-t\" and \"-d\" option to \"sphinx-quickstart\" to support\n+  templating generated sphinx project.\n+\n+* #3028: Add \"{path}\" and \"{basename}\" to the format of\n+  \"figure_language_filename\"\n+\n+* new \"'hyperref'\" key in the \"latex_elements\" dictionary (ref #3030)\n+\n+* #3022: Allow code-blocks in footnotes for LaTeX PDF output\n+\n+1.5b1\n+\n+* #2513: A better default settings for XeLaTeX\n+\n+* #3096: \"'maxlistdepth'\" key to work around LaTeX list limitations\n+\n+* #3060: autodoc supports documentation for attributes of Enum class.\n+  Now autodoc render just the value of Enum attributes instead of Enum\n+  attribute representation.\n+\n+* Add \"--extensions\" to \"sphinx-quickstart\" to support enable\n+  arbitrary extensions from command line (ref: #2904)\n+\n+* #3104, #3122: \"'sphinxsetup'\" for key=value styling of Sphinx LaTeX\n+\n+* #3071: Autodoc: Allow mocked module decorators to pass-through\n+  functions unchanged\n+\n+* #2495: linkcheck: Allow skipping anchor checking using\n+  >>:confval:`linkcheck_anchors_ignore`<<\n+\n+* #3083: let Unicode no-break space act like LaTeX \"~\" (fixed #3019)\n+\n+* #3116: allow word wrap in PDF output for inline literals (ref #3110)\n+\n+* #930: sphinx-apidoc allow wildcards for excluding paths. Thanks to\n+  Nick Coghlan.\n+\n+* #3121: add \"inlineliteralwraps\" option to control if inline literal\n+  word-wraps in latex\n+\n+1.5 final\n+\n+* #3095: Add >>:confval:`tls_verify`<< and >>:confval:`tls_cacerts`<<\n+  to support self-signed HTTPS servers in linkcheck and intersphinx\n+\n+* #2215: make.bat generated by sphinx-quickstart can be called from\n+  another dir. Thanks to Timotheus Kampik.\n+\n+* #3185: Add new warning type \"misc.highlighting_failure\"\n+\n+\n+Bugs fixed\n+----------\n+\n+1.5a1\n+\n+* #2707: (latex) the column width is badly computed for tabular\n+\n+* #2799: Sphinx installs roles and directives automatically on\n+  importing sphinx module.  Now Sphinx installs them on running\n+  application.\n+\n+* \"sphinx.ext.autodoc\" crashes if target code imports * from mock\n+  modules by \"autodoc_mock_imports\".\n+\n+* #1953: \"Sphinx.add_node\" does not add handlers the translator\n+  installed by \"html_translator_class\"\n+\n+* #1797: text builder inserts blank line on top\n+\n+* #2894: quickstart main() doesn't use argv argument\n+\n+* #2874: gettext builder could not extract all text under the \"only\"\n+  directives\n+\n+* #2485: autosummary crashes with multiple source_suffix values\n+\n+* #1734: Could not translate the caption of toctree directive\n+\n+* Could not translate the content of meta directive (ref: #1734)\n+\n+* #2550: external links are opened in help viewer\n+\n+* #2687: Running Sphinx multiple times produces 'already registered'\n+  warnings\n+\n+1.5a2\n+\n+* #2810: Problems with pdflatex in an Italian document\n+\n+* Use \"latex_elements.papersize\" to specify papersize of LaTeX in\n+  Makefile\n+\n+* #2988: linkcheck: retry with GET request if denied HEAD request\n+\n+* #2990: linkcheck raises \"Can't convert 'bytes' object to str\n+  implicitly\" error if linkcheck_anchors enabled\n+\n+* #3004: Invalid link types \"top\" and \"up\" are used\n+\n+* #3009: Bad rendering of parsed-literals in LaTeX since Sphinx 1.4.4\n+\n+* #3000: \"option\" directive generates invalid HTML anchors\n+\n+* #2984: Invalid HTML has been generated if \"html_split_index\" enabled\n+\n+* #2986: themes/basic/defindex.html should be changed for html5\n+  friendly\n+\n+* #2987: Invalid HTML has been generated if multiple IDs are assigned\n+  to a list\n+\n+* #2891: HTML search does not provide all the results\n+\n+* #1986: Title in PDF Output\n+\n+* #147: Problem with latex chapter style\n+\n+* #3018: LaTeX problem with page layout dimensions and chapter titles\n+\n+* Fix an issue with \"\\pysigline\" in LaTeX style file (ref #3023)\n+\n+* #3038: \"sphinx.ext.math*\" raises TypeError if labels are duplicated\n+\n+* #3031: incompatibility with LaTeX package \"tocloft\"\n+\n+* #3003: literal blocks in footnotes are not supported by Latex\n+\n+* #3047: spacing before footnote in pdf output is not coherent and\n+  allows breaks\n+\n+* #3045: HTML search index creator should ignore \"raw\" content if now\n+  html\n+\n+* #3039: English stemmer returns wrong word if the word is capitalized\n+\n+* Fix make-mode Makefile template (ref #3056, #2936)\n+\n+1.5b1\n+\n+* #2432: Fix unwanted * between varargs and keyword only args. Thanks\n+  to Alex Gr\u00f6nholm.\n+\n+* #3062: Failed to build PDF using 1.5a2 (undefined \"\\hypersetup\" for\n+  Japanese documents since PR#3030)\n+\n+* Better rendering of multiline signatures in html.\n+\n+* #777: LaTeX output \"too deeply nested\" (ref #3096)\n+\n+* Let LaTeX image inclusion obey \"scale\" before textwidth fit (ref\n+  #2865, #3059)\n+\n+* #3019: LaTeX fails on description of C function with arguments (ref\n+  #3083)\n+\n+* fix latex inline literals where \"< > -\" gobbled a space\n+\n+1.5 final\n+\n+* #3069: Even if \"'babel'\" key is set to empty string, LaTeX output\n+  contains one \"\\addto\\captions...\"\n+\n+* #3123: user \"'babel'\" key setting is not obeyed anymore\n+\n+* #3155: Fix JavaScript for \"html_sourcelink_suffix\" fails with IE and\n+  Opera\n+\n+* #3085: keep current directory after breaking build documentation.\n+  Thanks to Timotheus Kampik.\n+\n+* #3181: pLaTeX crashes with a section contains endash\n+\n+* #3180: latex: add stretch/shrink between successive singleline or\n+  multipleline cpp signatures (ref #3072)\n+\n+* #3128: globing images does not support .svgz file\n+\n+* #3015: fix a broken test on Windows.\n+\n+* #1843: Fix documentation of descriptor classes that have a custom\n+  metaclass. Thanks to Erik Bray.\n+\n+* #3190: util.split_docinfo fails to parse multi-line field bodies\n+\n+* #3024, #3037: In Python3, application.Sphinx._log crushed when the\n+  log message cannot be encoded into console encoding.\n+\n+\n+Testing\n+-------\n+\n+* To simplify, sphinx uses external mock package even if unittest.mock\n+  exists.\n+\n+\n+Release 1.4.9 (released Nov 23, 2016)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2936: Fix doc/Makefile that can't build man because doc/man exists\n+\n+* #3058: Using the same 'caption' attribute in multiple 'toctree'\n+  directives results in warning / error\n+\n+* #3068: Allow the '=' character in the -D option of sphinx-build.py\n+\n+* #3074: \"add_source_parser()\" crashes in debug mode\n+\n+* #3135: \"sphinx.ext.autodoc\" crashes with plain Callable\n+\n+* #3150: Fix query word splitter in JavaScript. It behaves as same as\n+  Python's regular expression.\n+\n+* #3093: gettext build broken on substituted images.\n+\n+* #3093: gettext build broken on image node under \"note\" directive.\n+\n+* imgmath: crashes on showing error messages if image generation\n+  failed\n+\n+* #3117: LaTeX writer crashes if admonition is placed before first\n+  section title\n+\n+* #3164: Change search order of \"sphinx.ext.inheritance_diagram\"\n+\n+\n+Release 1.4.8 (released Oct 1, 2016)\n+====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2996: The wheel package of Sphinx got crash with ImportError\n+\n+\n+Release 1.4.7 (released Oct 1, 2016)\n+====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2890: Quickstart should return an error consistently on all error\n+  conditions\n+\n+* #2870: flatten genindex columns' heights.\n+\n+* #2856: Search on generated HTML site doesn't find some symbols\n+\n+* #2882: Fall back to a GET request on 403 status in linkcheck\n+\n+* #2902: jsdump.loads fails to load search index if keywords starts\n+  with underscore\n+\n+* #2900: Fix epub content.opf: add auto generated orphan files to\n+  spine.\n+\n+* #2899: Fix \"hasdoc()\" function in Jinja2 template. It will detect\n+  \"genindex\", \"search\" also.\n+\n+* #2901: Fix epub result: skip creating links from image tags to\n+  original image files.\n+\n+* #2917: inline code is hyphenated on HTML\n+\n+* #1462: autosummary warns for namedtuple with attribute with trailing\n+  underscore\n+\n+* Could not reference equations if \":nowrap:\" option specified\n+\n+* #2873: code-block overflow in latex (due to commas)\n+\n+* #1060, #2056: sphinx.ext.intersphinx: broken links are generated if\n+  relative paths are used in \"intersphinx_mapping\"\n+\n+* #2931: code-block directive with same :caption: causes warning of\n+  duplicate target.  Now \"code-block\" and \"literalinclude\" does not\n+  define hyperlink target using its caption automatically.\n+\n+* #2962: latex: missing label of longtable\n+\n+* #2968: autodoc: show-inheritance option breaks docstrings\n+\n+\n+Release 1.4.6 (released Aug 20, 2016)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* #2867: linkcheck builder crashes with six-1.4.  Now Sphinx depends\n+  on six-1.5 or later\n+\n+\n+Bugs fixed\n+----------\n+\n+* applehelp: Sphinx crashes if \"hiutil\" or \"codesign\" commands not\n+  found\n+\n+* Fix \"make clean\" abort issue when build dir contains regular files\n+  like \"DS_Store\".\n+\n+* Reduce epubcheck warnings/errors:\n+\n+  * Fix DOCTYPE to html5\n+\n+  * Change extension from .html to .xhtml.\n+\n+  * Disable search page on epub results\n+\n+* #2778: Fix autodoc crashes if obj.__dict__ is a property method and\n+  raises exception\n+\n+* Fix duplicated toc in epub3 output.\n+\n+* #2775: Fix failing linkcheck with servers not supporting identity\n+  encoding\n+\n+* #2833: Fix formatting instance annotations in ext.autodoc.\n+\n+* #1911: \"-D\" option of \"sphinx-build\" does not override the\n+  \"extensions\" variable\n+\n+* #2789: \"sphinx.ext.intersphinx\" generates wrong hyperlinks if the\n+  inventory is given\n+\n+* parsing errors for caption of code-blocks are displayed in document\n+  (ref: #2845)\n+\n+* #2846: \"singlehtml\" builder does not include figure numbers\n+\n+* #2816: Fix data from builds cluttering the \"Domain.initial_data\"\n+  class attributes\n+\n+\n+Release 1.4.5 (released Jul 13, 2016)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* latex, inclusion of non-inline images from image directive resulted\n+  in non-coherent whitespaces depending on original image width; new\n+  behaviour by necessity differs from earlier one in some cases. (ref:\n+  #2672)\n+\n+* latex, use of \"\\includegraphics\" to refer to Sphinx custom variant\n+  is deprecated; in future it will revert to original LaTeX macro,\n+  custom one already has alternative name \"\\sphinxincludegraphics\".\n+\n+\n+Features added\n+--------------\n+\n+* new config option \"latex_keep_old_macro_names\", defaults to True. If\n+  False, lets macros (for text styling) be defined only with\n+  \"\\sphinx\"-prefixed names\n+\n+* latex writer allows user customization of \"shadowed\" boxes (topics),\n+  via three length variables.\n+\n+* woff-format web font files now supported by the epub builder.\n+\n+\n+Bugs fixed\n+----------\n+\n+* jsdump fix for python 3: fixes the HTML search on python > 3\n+\n+* #2676: (latex) Error with verbatim text in captions since Sphinx\n+  1.4.4\n+\n+* #2629: memoir class crashes LaTeX. Fixed by\n+  \"latex_keep_old_macro_names=False\" (ref 2675)\n+\n+* #2684: \"sphinx.ext.intersphinx\" crashes with six-1.4.1\n+\n+* #2679: \"float\" package needed for \"'figure_align': 'H'\" latex option\n+\n+* #2671: image directive may lead to inconsistent spacing in pdf\n+\n+* #2705: \"toctree\" generates empty bullet_list if \":titlesonly:\"\n+  specified\n+\n+* #2479: \"sphinx.ext.viewcode\" uses python2 highlighter by default\n+\n+* #2700: HtmlHelp builder has hard coded index.html\n+\n+* latex, since 1.4.4 inline literal text is followed by spurious space\n+\n+* #2722: C++, fix id generation for var/member declarations to include\n+  namespaces.\n+\n+* latex, images (from image directive) in lists or quoted blocks did\n+  not obey indentation (fixed together with #2671)\n+\n+* #2733: since Sphinx-1.4.4 \"make latexpdf\" generates lots of hyperref\n+  warnings\n+\n+* #2731: \"sphinx.ext.autodoc\" does not access propertymethods which\n+  raises any exceptions\n+\n+* #2666: C++, properly look up nested names involving constructors.\n+\n+* #2579: Could not refer a label including both spaces and colons via\n+  \"sphinx.ext.intersphinx\"\n+\n+* #2718: Sphinx crashes if the document file is not readable\n+\n+* #2699: hyperlinks in help HTMLs are broken if \"html_file_suffix\" is\n+  set\n+\n+* #2723: extra spaces in latex pdf output from multirow cell\n+\n+* #2735: latexpdf \"Underfull \\hbox (badness 10000)\" warnings from\n+  title page\n+\n+* #2667: latex crashes if resized images appeared in section title\n+\n+* #2763: (html) Provide default value for required \"alt\" attribute for\n+  image tags of SVG source, required to validate and now consistent w/\n+  other formats.\n+\n+\n+Release 1.4.4 (released Jun 12, 2016)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2630: latex: sphinx.sty notice environment formatting problem\n+\n+* #2632: Warning directives fail in quote environment latex build\n+\n+* #2633: Sphinx crashes with old styled indices\n+\n+* Fix a \"\\begin{\\minipage}\" typo in sphinx.sty from 1.4.2 (ref:\n+  68becb1)\n+\n+* #2622: Latex produces empty pages after title and table of contents\n+\n+* #2640: 1.4.2 LaTeX crashes if code-block inside warning directive\n+\n+* Let LaTeX use straight quotes also in inline code (ref #2627)\n+\n+* #2351: latex crashes if enumerated lists are placed on footnotes\n+\n+* #2646: latex crashes if math contains twice empty lines\n+\n+* #2480: \"sphinx.ext.autodoc\": memory addresses were shown\n+\n+* latex: allow code-blocks appearing inside lists and quotes at\n+  maximal nesting depth (ref #777, #2624, #2651)\n+\n+* #2635: Latex code directives produce inconsistent frames based on\n+  viewing resolution\n+\n+* #2639: Sphinx now bundles iftex.sty\n+\n+* Failed to build PDF with framed.sty 0.95\n+\n+* Sphinx now bundles needspace.sty\n+\n+\n+Release 1.4.3 (released Jun 5, 2016)\n+====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2530: got \"Counter too large\" error on building PDF if large\n+  numbered footnotes existed in admonitions\n+\n+* \"width\" option of figure directive does not work if \"align\" option\n+  specified at same time (ref: #2595)\n+\n+* #2590: The \"inputenc\" package breaks compiling under lualatex and\n+  xelatex\n+\n+* #2540: date on latex front page use different font\n+\n+* Suppress \"document isn't included in any toctree\" warning if the\n+  document is included (ref: #2603)\n+\n+* #2614: Some tables in PDF output will end up shifted if user sets\n+  non zero parindent in preamble\n+\n+* #2602: URL redirection breaks the hyperlinks generated by\n+  \"sphinx.ext.intersphinx\"\n+\n+* #2613: Show warnings if merged extensions are loaded\n+\n+* #2619: make sure amstext LaTeX package always loaded (ref: d657225,\n+  488ee52, 9d82cad and #2615)\n+\n+* #2593: latex crashes if any figures in the table\n+\n+\n+Release 1.4.2 (released May 29, 2016)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* Now >>:confval:`suppress_warnings`<< accepts following\n+  configurations (ref: #2451, #2466):\n+\n+  * \"app.add_node\"\n+\n+  * \"app.add_directive\"\n+\n+  * \"app.add_role\"\n+\n+  * \"app.add_generic_role\"\n+\n+  * \"app.add_source_parser\"\n+\n+  * \"image.data_uri\"\n+\n+  * \"image.nonlocal_uri\"\n+\n+* #2453: LaTeX writer allows page breaks in topic contents; and their\n+  horizontal extent now fits in the line width (with shadow in\n+  margin). Also warning-type admonitions allow page breaks and their\n+  vertical spacing has been made more coherent with the one for hint-\n+  type notices (ref #2446).\n+\n+* #2459: the framing of literal code-blocks in LaTeX output (and not\n+  only the code lines themselves) obey the indentation in lists or\n+  quoted blocks.\n+\n+* #2343: the long source lines in code-blocks are wrapped (without\n+  modifying the line numbering) in LaTeX output (ref #1534, #2304).\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2370: the equations are slightly misaligned in LaTeX writer\n+\n+* #1817, #2077: suppress pep8 warnings on conf.py generated by sphinx-\n+  quickstart\n+\n+* #2407: building docs crash if document includes large data image\n+  URIs\n+\n+* #2436: Sphinx does not check version by >>:confval:`needs_sphinx`<<\n+  if loading extensions failed\n+\n+* #2397: Setup shorthandoff for Turkish documents\n+\n+* #2447: VerbatimBorderColor wrongly used also for captions of PDF\n+\n+* #2456: C++, fix crash related to document merging (e.g., singlehtml\n+  and Latex builders).\n+\n+* #2446: latex(pdf) sets local tables of contents (or more generally\n+  topic nodes) in unbreakable boxes, causes overflow at bottom\n+\n+* #2476: Omit MathJax markers if :nowrap: is given\n+\n+* #2465: latex builder fails in case no caption option is provided to\n+  toctree directive\n+\n+* Sphinx crashes if self referenced toctree found\n+\n+* #2481: spelling mistake for mecab search splitter. Thanks to Naoki\n+  Sato.\n+\n+* #2309: Fix could not refer \"indirect hyperlink targets\" by ref-role\n+\n+* intersphinx fails if mapping URL contains any port\n+\n+* #2088: intersphinx crashes if the mapping URL requires basic auth\n+\n+* #2304: auto line breaks in latexpdf codeblocks\n+\n+* #1534: Word wrap long lines in Latex verbatim blocks\n+\n+* #2460: too much white space on top of captioned literal blocks in\n+  PDF output\n+\n+* Show error reason when multiple math extensions are loaded (ref:\n+  #2499)\n+\n+* #2483: any figure number was not assigned if figure title contains\n+  only non text objects\n+\n+* #2501: Unicode subscript numbers are normalized in LaTeX\n+\n+* #2492: Figure directive with :figwidth: generates incorrect Latex-\n+  code\n+\n+* The caption of figure is always put on center even if \":align:\" was\n+  specified\n+\n+* #2526: LaTeX writer crashes if the section having only images\n+\n+* #2522: Sphinx touches mo files under installed directory that caused\n+  permission error.\n+\n+* #2536: C++, fix crash when an immediately nested scope has the same\n+  name as the current scope.\n+\n+* #2555: Fix crash on any-references with unicode.\n+\n+* #2517: wrong bookmark encoding in PDF if using LuaLaTeX\n+\n+* #2521: generated Makefile causes BSD make crashed if sphinx-build\n+  not found\n+\n+* #2470: \"typing\" backport package causes autodoc errors with python\n+  2.7\n+\n+* \"sphinx.ext.intersphinx\" crashes if non-string value is used for key\n+  of \"intersphinx_mapping\"\n+\n+* #2518: \"intersphinx_mapping\" disallows non alphanumeric keys\n+\n+* #2558: unpack error on devhelp builder\n+\n+* #2561: Info builder crashes when a footnote contains a link\n+\n+* #2565: The descriptions of objects generated by\n+  \"sphinx.ext.autosummary\" overflow lines at LaTeX writer\n+\n+* Extend pdflatex config in sphinx.sty to subparagraphs (ref: #2551)\n+\n+* #2445: \"rst_prolog\" and \"rst_epilog\" affect to non reST sources\n+\n+* #2576: \"sphinx.ext.imgmath\" crashes if subprocess raises error\n+\n+* #2577: \"sphinx.ext.imgmath\": Invalid argument are passed to dvisvgm\n+\n+* #2556: Xapian search does not work with Python 3\n+\n+* #2581: The search doesn't work if language=\"es\" (Spanish)\n+\n+* #2382: Adjust spacing after abbreviations on figure numbers in LaTeX\n+  writer\n+\n+* #2383: The generated footnote by \"latex_show_urls\" overflows lines\n+\n+* #2497, #2552: The label of search button does not fit for the button\n+  itself\n+\n+\n+Release 1.4.1 (released Apr 12, 2016)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* The default format of \"today_fmt\" and \"html_last_updated_fmt\" is\n+  back to strftime format again.  Locale Date Markup Language is also\n+  supported for backward compatibility until Sphinx-1.5.\n+\n+\n+Translations\n+------------\n+\n+* Added Welsh translation, thanks to Geraint Palmer.\n+\n+* Added Greek translation, thanks to Stelios Vitalis.\n+\n+* Added Esperanto translation, thanks to Dinu Gherman.\n+\n+* Added Hindi translation, thanks to Purnank H. Ghumalia.\n+\n+* Added Romanian translation, thanks to Razvan Stefanescu.\n+\n+\n+Bugs fixed\n+----------\n+\n+* C++, added support for \"extern\" and \"thread_local\".\n+\n+* C++, type declarations are now using the prefixes \"typedef\",\n+  \"using\", and \"type\", depending on the style of declaration.\n+\n+* #2413: C++, fix crash on duplicate declarations\n+\n+* #2394: Sphinx crashes when html_last_updated_fmt is invalid\n+\n+* #2408: dummy builder not available in Makefile and make.bat\n+\n+* #2412: hyperlink targets are broken in LaTeX builder\n+\n+* figure directive crashes if non paragraph item is given as caption\n+\n+* #2418: time formats no longer allowed in today_fmt\n+\n+* #2395: Sphinx crashes if unicode character in image filename\n+\n+* #2396: \"too many values to unpack\" in genindex-single\n+\n+* #2405: numref link in PDF jumps to the wrong location\n+\n+* #2414: missing number in PDF hyperlinks to code listings\n+\n+* #2440: wrong import for gmtime. Thanks to Uwe L. Korn.\n+\n+\n+Release 1.4 (released Mar 28, 2016)\n+===================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Drop \"PorterStemmer\" package support. Use \"PyStemmer\" instead of\n+  \"PorterStemmer\" to accelerate stemming.\n+\n+* sphinx_rtd_theme has become optional. Please install it manually.\n+  Refs #2087, #2086, #1845 and #2097. Thanks to Victor Zverovich.\n+\n+* #2231: Use DUrole instead of DUspan for custom roles in LaTeX\n+  writer. It enables to take title of roles as an argument of custom\n+  macros.\n+\n+* #2022: 'Thumbs.db' and '.DS_Store' are added to \"exclude_patterns\"\n+  default values in conf.py that will be provided on sphinx-\n+  quickstart.\n+\n+* #2027, #2208: The \"html_title\" accepts string values only. And The\n+  None value cannot be accepted.\n+\n+* \"sphinx.ext.graphviz\": show graph image in inline by default\n+\n+* #2060, #2224: The \"manpage\" role now generate\n+  \"sphinx.addnodes.manpage\" node instead of\n+  \"sphinx.addnodes.literal_emphasis\" node.\n+\n+* #2022: >>:confval:`html_extra_path`<< also copies dotfiles in the\n+  extra directory, and refers to >>:confval:`exclude_patterns`<< to\n+  exclude extra files and directories.\n+\n+* #2300: enhance autoclass:: to use the docstring of __new__ if\n+  __init__ method's is missing of empty\n+\n+* #2251: Previously, under glossary directives, multiple terms for one\n+  definition are converted into single \"term\" node and the each terms\n+  in the term node are separated by \"termsep\" node. In new\n+  implementation, each terms are converted into individual \"term\"\n+  nodes and \"termsep\" node is removed. By this change, output layout\n+  of every builders are changed a bit.\n+\n+* The default highlight language is now Python 3.  This means that\n+  source code is highlighted as Python 3 (which is mostly a superset\n+  of Python 2), and no parsing is attempted to distinguish valid code.\n+  To get the old behavior back, add \"highlight_language = \"python\"\" to\n+  conf.py.\n+\n+* Locale Date Markup Language like \"\"MMMM dd, YYYY\"\" is default format\n+  for \"today_fmt\" and \"html_last_updated_fmt\".  However strftime\n+  format like \"\"%B %d, %Y\"\" is also supported for backward\n+  compatibility until Sphinx-1.5. Later format will be disabled from\n+  Sphinx-1.5.\n+\n+* #2327: \"latex_use_parts\" is deprecated now. Use\n+  \"latex_toplevel_sectioning\" instead.\n+\n+* #2337: Use \"\\url{URL}\" macro instead of \"\\href{URL}{URL}\" in LaTeX\n+  writer.\n+\n+* #1498: manpage writer: don't make whole of item in definition list\n+  bold if it includes strong node.\n+\n+* #582: Remove hint message from quick search box for html output.\n+\n+* #2378: Sphinx now bundles newfloat.sty\n+\n+\n+Features added\n+--------------\n+\n+* #2092: add todo directive support in napoleon package.\n+\n+* #1962: when adding directives, roles or nodes from an extension,\n+  warn if such an element is already present (built-in or added by\n+  another extension).\n+\n+* #1909: Add \"doc\" references to Intersphinx inventories.\n+\n+* C++ type alias support (e.g., \".. type:: T = int\").\n+\n+* C++ template support for classes, functions, type aliases, and\n+  variables (#1729, #1314).\n+\n+* C++, added new scope management directives \"namespace-push\" and\n+  \"namespace-pop\".\n+\n+* #1970: Keyboard shortcuts to navigate Next and Previous topics\n+\n+* Intersphinx: Added support for fetching Intersphinx inventories with\n+  URLs using HTTP basic auth.\n+\n+* C++, added support for template parameter in function info field\n+  lists.\n+\n+* C++, added support for pointers to member (function).\n+\n+* #2113: Allow \":class:\" option to code-block directive.\n+\n+* #2192: Imgmath (pngmath with svg support).\n+\n+* #2200: Support XeTeX and LuaTeX for the LaTeX builder.\n+\n+* #1906: Use xcolor over color for fcolorbox where available for LaTeX\n+  output.\n+\n+* #2216: Texinputs makefile improvements.\n+\n+* #2170: Support for Chinese language search index.\n+\n+* #2214: Add sphinx.ext.githubpages to publish the docs on GitHub\n+  Pages\n+\n+* #1030: Make page reference names for latex_show_pagerefs\n+  translatable\n+\n+* #2162: Add Sphinx.add_source_parser() to add source_suffix and\n+  source_parsers from extension\n+\n+* #2207: Add sphinx.parsers.Parser class; a base class for new parsers\n+\n+* #656: Add \"graphviz_dot\" option to graphviz directives to switch the\n+  \"dot\" command\n+\n+* #1939: Added the \"dummy\" builder: syntax check without output.\n+\n+* #2230: Add \"math_number_all\" option to number all displayed math in\n+  math extensions\n+\n+* #2235: \"needs_sphinx\" supports micro version comparison\n+\n+* #2282: Add \"language\" attribute to html tag in the \"basic\" theme\n+\n+* #1779: Add EPUB 3 builder\n+\n+* #1751: Add >>:confval:`todo_link_only`<< to avoid file path and line\n+  indication on \"todolist\". Thanks to Francesco Montesano.\n+\n+* #2199: Use \"imagesize\" package to obtain size of images.\n+\n+* #1099: Add configurable retries to the linkcheck builder. Thanks to\n+  Alex Gaynor.  Also don't check anchors starting with \"!\".\n+\n+* #2300: enhance autoclass:: to use the docstring of __new__ if\n+  __init__ method's is missing of empty\n+\n+* #1858: Add Sphinx.add_enumerable_node() to add enumerable nodes for\n+  numfig feature\n+\n+* #1286, #2099: Add \"sphinx.ext.autosectionlabel\" extension to allow\n+  reference sections using its title. Thanks to Tadhg O'Higgins.\n+\n+* #1854: Allow to choose Janome for Japanese splitter.\n+\n+* #1853: support custom text splitter on html search with\n+  \"language='ja'\".\n+\n+* #2320: classifier of glossary terms can be used for index entries\n+  grouping key The classifier also be used for translation. See also\n+  Glossary.\n+\n+* #2308: Define \"\\tablecontinued\" macro to redefine the style of\n+  continued label for longtables.\n+\n+* Select an image by similarity if multiple images are globbed by \"..\n+  image:: filename.*\"\n+\n+* #1921: Support figure substitutions by >>:confval:`language`<< and\n+  >>:confval:`figure_language_filename`<<\n+\n+* #2245: Add \"latex_elements[\"passoptionstopackages\"]\" option to call\n+  PassOptionsToPackages in early stage of preambles.\n+\n+* #2340: Math extension: support alignment of multiple equations for\n+  MathJax.\n+\n+* #2338: Define \"\\titleref\" macro to redefine the style of \"title-\n+  reference\" roles.\n+\n+* Define \"\\menuselection\" and \"\\accelerator\" macros to redefine the\n+  style of \"menuselection\" roles.\n+\n+* Define \"\\crossref\" macro to redefine the style of references\n+\n+* #2301: Texts in the classic html theme should be hyphenated.\n+\n+* #2355: Define \"\\termref\" macro to redefine the style of \"term\"\n+  roles.\n+\n+* Add >>:confval:`suppress_warnings`<< to suppress arbitrary warning\n+  message (experimental)\n+\n+* #2229: Fix no warning is given for unknown options\n+\n+* #2327: Add \"latex_toplevel_sectioning\" to switch the top level\n+  sectioning of LaTeX document.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1913: C++, fix assert bug for enumerators in next-to-global and\n+  global scope.\n+\n+* C++, fix parsing of 'signed char' and 'unsigned char' as types.\n+\n+* C++, add missing support for 'friend' functions.\n+\n+* C++, add missing support for virtual base classes (thanks to\n+  Rapptz).\n+\n+* C++, add support for final classes.\n+\n+* C++, fix parsing of types prefixed with 'enum'.\n+\n+* #2023: Dutch search support uses Danish stemming info.\n+\n+* C++, add support for user-defined literals.\n+\n+* #1804: Now html output wraps overflowed long-line-text in the\n+  sidebar. Thanks to Hassen ben tanfous.\n+\n+* #2183: Fix porterstemmer causes \"make json\" to fail.\n+\n+* #1899: Ensure list is sent to OptParse.\n+\n+* #2164: Fix wrong check for pdftex inside sphinx.sty (for graphicx\n+  package option).\n+\n+* #2165, #2218: Remove faulty and non-need conditional from\n+  sphinx.sty.\n+\n+* Fix broken LaTeX code is generated if unknown language is given\n+\n+* #1944: Fix rst_prolog breaks file-wide metadata\n+\n+* #2074: make gettext should use canonical relative paths for .pot.\n+  Thanks to anatoly techtonik.\n+\n+* #2311: Fix sphinx.ext.inheritance_diagram raises AttributeError\n+\n+* #2251: Line breaks in .rst files are transferred to .pot files in a\n+  wrong way.\n+\n+* #794: Fix date formatting in latex output is not localized\n+\n+* Remove \"image/gif\" from supported_image_types of LaTeX writer\n+  (#2272)\n+\n+* Fix ValueError is raised if LANGUAGE is empty string\n+\n+* Fix unpack warning is shown when the directives generated from\n+  \"Sphinx.add_crossref_type\" is used\n+\n+* The default highlight language is now \"default\".  This means that\n+  source code is highlighted as Python 3 (which is mostly a superset\n+  of Python 2) if possible.  To get the old behavior back, add\n+  \"highlight_language = \"python\"\" to conf.py.\n+\n+* #2329: Refresh environment forcedly if source directory has changed.\n+\n+* #2331: Fix code-blocks are filled by block in dvi; remove \"xcdraw\"\n+  option from xcolor package\n+\n+* Fix the confval type checker emits warnings if unicode is given to\n+  confvals which expects string value\n+\n+* #2360: Fix numref in LaTeX output is broken\n+\n+* #2361: Fix additional paragraphs inside the \"compound\" directive are\n+  indented\n+\n+* #2364: Fix KeyError 'rootSymbol' on Sphinx upgrade from older\n+  version.\n+\n+* #2348: Move amsmath and amssymb to before fontpkg on LaTeX writer.\n+\n+* #2368: Ignore emacs lock files like \".#foo.rst\" by default.\n+\n+* #2262: literal_block and its caption has been separated by pagebreak\n+  in LaTeX output.\n+\n+* #2319: Fix table counter is overridden by code-block's in LaTeX.\n+  Thanks to jfbu.\n+\n+* Fix unpack warning if combined with 3rd party domain extensions.\n+\n+* #1153: Fix figures in sidebar causes latex build error.\n+\n+* #2358: Fix user-preamble could not override the tocdepth definition.\n+\n+* #2358: Reduce tocdepth if \"part\" or \"chapter\" is used for\n+  top_sectionlevel\n+\n+* #2351: Fix footnote spacing\n+\n+* #2363: Fix \"toctree()\" in templates generates broken links in\n+  SingleHTMLBuilder.\n+\n+* #2366: Fix empty hyperref is generated on toctree in HTML builder.\n+\n+\n+Documentation\n+-------------\n+\n+* #1757: Fix for usage of >>:confval:`html_last_updated_fmt`<<. Thanks\n+  to Ralf Hemmecke.\n+\n+\n+Release 1.3.6 (released Feb 29, 2016)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #1873, #1876, #2278: Add \"page_source_suffix\" html context variable.\n+  This should be introduced with >>:confval:`source_parsers`<<\n+  feature. Thanks for Eric Holscher.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2265: Fix babel is used in spite of disabling it on\n+  \"latex_elements\"\n+\n+* #2295: Avoid mutating dictionary errors while enumerating members in\n+  autodoc with Python 3\n+\n+* #2291: Fix pdflatex \"Counter too large\" error from footnotes inside\n+  tables of contents\n+\n+* #2292: Fix some footnotes disappear from LaTeX output\n+\n+* #2287: \"sphinx.transforms.Locale\" always uses rst parser. Sphinx\n+  i18n feature should support parsers that specified source_parsers.\n+\n+* #2290: Fix \"sphinx.ext.mathbase\" use of amsfonts may break user\n+  choice of math fonts\n+\n+* #2324: Print a hint how to increase the recursion limit when it is\n+  hit.\n+\n+* #1565, #2229: Revert new warning; the new warning will be triggered\n+  from version 1.4 on.\n+\n+* #2329: Refresh environment forcedly if source directory has changed.\n+\n+* #2019: Fix the domain objects in search result are not escaped\n+\n+\n+Release 1.3.5 (released Jan 24, 2016)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* Fix line numbers was not shown on warnings in LaTeX and texinfo\n+  builders\n+\n+* Fix filenames were not shown on warnings of citations\n+\n+* Fix line numbers was not shown on warnings in LaTeX and texinfo\n+  builders\n+\n+* Fix line numbers was not shown on warnings of indices\n+\n+* #2026: Fix LaTeX builder raises error if parsed-literal includes\n+  links\n+\n+* #2243: Ignore strange docstring types for classes, do not crash\n+\n+* #2247: Fix #2205 breaks make html for definition list with\n+  classifiers that contains regular-expression like string\n+\n+* #1565: Sphinx will now emit a warning that highlighting was skipped\n+  if the syntax is incorrect for \"code-block\", \"literalinclude\" and so\n+  on.\n+\n+* #2211: Fix paragraphs in table cell doesn't work in Latex output\n+\n+* #2253: \":pyobject:\" option of \"literalinclude\" directive can't\n+  detect indented body block when the block starts with blank or\n+  comment lines.\n+\n+* Fix TOC is not shown when no \":maxdepth:\" for toctrees (ref: #771)\n+\n+* Fix warning message for \":numref:\" if target is in orphaned doc\n+  (ref: #2244)\n+\n+\n+Release 1.3.4 (released Jan 12, 2016)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2134: Fix figure caption with reference causes latex build error\n+\n+* #2094: Fix rubric with reference not working in Latex\n+\n+* #2147: Fix literalinclude code in latex does not break in pages\n+\n+* #1833: Fix email addresses is showed again if latex_show_urls is not\n+  None\n+\n+* #2176: sphinx.ext.graphviz: use <object> instead of <img> to embed\n+  svg\n+\n+* #967: Fix SVG inheritance diagram is not hyperlinked (clickable)\n+\n+* #1237: Fix footnotes not working in definition list in LaTeX\n+\n+* #2168: Fix raw directive does not work for text writer\n+\n+* #2171: Fix cannot linkcheck url with unicode\n+\n+* #2182: LaTeX: support image file names with more than 1 dots\n+\n+* #2189: Fix previous sibling link for first file in subdirectory uses\n+  last file, not intended previous from root toctree\n+\n+* #2003: Fix decode error under python2 (only) when \"make linkcheck\"\n+  is run\n+\n+* #2186: Fix LaTeX output of mathbb in math\n+\n+* #1480, #2188: LaTeX: Support math in section titles\n+\n+* #2071: Fix same footnote in more than two section titles =>\n+  LaTeX/PDF Bug\n+\n+* #2040: Fix UnicodeDecodeError in sphinx-apidoc when author contains\n+  non-ascii characters\n+\n+* #2193: Fix shutil.SameFileError if source directory and destination\n+  directory are same\n+\n+* #2178: Fix unparsable C++ cross-reference when referencing a\n+  function with :cpp:any:\n+\n+* #2206: Fix Sphinx latex doc build failed due to a footnotes\n+\n+* #2201: Fix wrong table caption for tables with over 30 rows\n+\n+* #2213: Set <blockquote> in the classic theme to fit with <p>\n+\n+* #1815: Fix linkcheck does not raise an exception if warniserror set\n+  to true and link is broken\n+\n+* #2197: Fix slightly cryptic error message for missing index.rst file\n+\n+* #1894: Unlisted phony targets in quickstart Makefile\n+\n+* #2125: Fix unifies behavior of collapsed fields (\"GroupedField\" and\n+  \"TypedField\")\n+\n+* #1408: Check latex_logo validity before copying\n+\n+* #771: Fix latex output doesn't set tocdepth\n+\n+* #1820: On Windows, console coloring is broken with colorama version\n+  0.3.3. Now sphinx use colorama>=0.3.5 to avoid this problem.\n+\n+* #2072: Fix footnotes in chapter-titles do not appear in PDF output\n+\n+* #1580: Fix paragraphs in longtable don't work in Latex output\n+\n+* #1366: Fix centered image not centered in latex\n+\n+* #1860: Fix man page using \":samp:\" with braces - font doesn't reset\n+\n+* #1610: Sphinx crashes in Japanese indexing in some systems\n+\n+* Fix Sphinx crashes if mecab initialization failed\n+\n+* #2160: Fix broken TOC of PDFs if section includes an image\n+\n+* #2172: Fix dysfunctional admonition \"\\py@lightbox\" in sphinx.sty.\n+  Thanks to jfbu.\n+\n+* #2198,#2205: \"make gettext\" generate broken msgid for definition\n+  lists.\n+\n+* #2062: Escape characters in doctests are treated incorrectly with\n+  Python 2.\n+\n+* #2225: Fix if the option does not begin with dash, linking is not\n+  performed\n+\n+* #2226: Fix math is not HTML-encoded when :nowrap: is given (jsmath,\n+  mathjax)\n+\n+* #1601, #2220: 'any' role breaks extended domains behavior. Affected\n+  extensions doesn't support resolve_any_xref and resolve_xref returns\n+  problematic node instead of None.  sphinxcontrib-httpdomain is one\n+  of them.\n+\n+* #2229: Fix no warning is given for unknown options\n+\n+\n+Release 1.3.3 (released Dec 2, 2015)\n+====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #2177: Fix parallel hangs\n+\n+* #2012: Fix exception occurred if \"numfig_format\" is invalid\n+\n+* #2142: Provide non-minified JS code in \"sphinx/search/non-minified-\n+  js/*.js\" for source distribution on PyPI.\n+\n+* #2148: Error while building devhelp target with non-ASCII document.\n+\n+\n+Release 1.3.2 (released Nov 29, 2015)\n+=====================================\n+\n+\n+Features added\n+--------------\n+\n+* #1935: Make \"numfig_format\" overridable in latex_elements.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1976: Avoid \"2.0\" version of Babel because it doesn't work with\n+  Windows environment.\n+\n+* Add a \"default.css\" stylesheet (which imports \"classic.css\") for\n+  compatibility\n+\n+* #1788: graphviz extension raises exception when caption option is\n+  present.\n+\n+* #1789: \":pyobject:\" option of \"literalinclude\" directive includes\n+  following lines after class definitions\n+\n+* #1790: \"literalinclude\" strips empty lines at the head and tail\n+\n+* #1802: load plugin themes automatically when theme.conf use it as\n+  'inherit'. Thanks to Takayuki Hirai.\n+\n+* #1794: custom theme extended from alabaster or sphinx_rtd_theme\n+  can't find base theme.\n+\n+* #1834: compatibility for docutils-0.13: handle_io_errors keyword\n+  argument for docutils.io.FileInput cause TypeError.\n+\n+* #1823: '.' as <module_path> for sphinx-apidoc cause an unfriendly\n+  error. Now '.' is converted to absolute path automatically.\n+\n+* Fix a crash when setting up extensions which do not support\n+  metadata.\n+\n+* #1784: Provide non-minified JS code in \"sphinx/search/non-minified-\n+  js/*.js\"\n+\n+* #1822, #1892: Fix regression for #1061. autosummary can't generate\n+  doc for imported members since sphinx-1.3b3. Thanks to Eric Larson.\n+\n+* #1793, #1819: \"see also\" misses a linebreak in text output. Thanks\n+  to Takayuki Hirai.\n+\n+* #1780, #1866: \"make text\" shows \"class\" keyword twice. Thanks to\n+  Takayuki Hirai.\n+\n+* #1871: Fix for LaTeX output of tables with one column and multirows.\n+\n+* Work around the lack of the HTMLParserError exception in Python 3.5.\n+\n+* #1949: Use \"safe_getattr\" in the coverage builder to avoid aborting\n+  with descriptors that have custom behavior.\n+\n+* #1915: Do not generate smart quotes in doc field type annotations.\n+\n+* #1796: On py3, automated .mo building caused UnicodeDecodeError.\n+\n+* #1923: Use babel features only if the babel latex element is\n+  nonempty.\n+\n+* #1942: Fix a KeyError in websupport.\n+\n+* #1903: Fix strange id generation for glossary terms.\n+\n+* \"make text\" will crush if a definition list item has more than 1\n+  classifiers as: \"term : classifier1 : classifier2\".\n+\n+* #1855: make gettext generates broken po file for definition lists\n+  with classifier.\n+\n+* #1869: Fix problems when dealing with files containing non-ASCII\n+  characters. Thanks to Marvin Schmidt.\n+\n+* #1798: Fix building LaTeX with references in titles.\n+\n+* #1725: On py2 environment, doctest with using non-ASCII characters\n+  causes \"'ascii' codec can't decode byte\" exception.\n+\n+* #1540: Fix RuntimeError with circular referenced toctree\n+\n+* #1983: i18n translation feature breaks references which uses section\n+  name.\n+\n+* #1990: Use caption of toctree to title of tableofcontents in LaTeX\n+\n+* #1987: Fix ampersand is ignored in \":menuselection:\" and\n+  \":guilabel:\" on LaTeX builder\n+\n+* #1994: More supporting non-standard parser (like recommonmark\n+  parser) for Translation and WebSupport feature. Now node.rawsource\n+  is fall backed to node.astext() during docutils transforming.\n+\n+* #1989: \"make blahblah\" on Windows indicate help messages for sphinx-\n+  build every time.  It was caused by wrong make.bat that generated by\n+  Sphinx-1.3.0/1.3.1.\n+\n+* On Py2 environment, conf.py that is generated by sphinx-quickstart\n+  should have u prefixed config value for 'version' and 'release'.\n+\n+* #2102: On Windows + Py3, using \"|today|\" and non-ASCII date format\n+  will raise UnicodeEncodeError.\n+\n+* #1974: UnboundLocalError: local variable 'domain' referenced before\n+  assignment when using \"any\" role and \"sphinx.ext.intersphinx\" in\n+  same time.\n+\n+* #2121: multiple words search doesn't find pages when words across on\n+  the page title and the page content.\n+\n+* #1884, #1885: plug-in html themes cannot inherit another plug-in\n+  theme. Thanks to Suzumizaki.\n+\n+* #1818: \"sphinx.ext.todo\" directive generates broken html class\n+  attribute as 'admonition-' when >>:confval:`language`<< is specified\n+  with non-ASCII linguistic area like 'ru' or 'ja'. To fix this, now\n+  \"todo\" directive can use \":class:\" option.\n+\n+* #2140: Fix footnotes in table has broken in LaTeX\n+\n+* #2127: MecabBinder for html searching feature doesn't work with\n+  Python 3. Thanks to Tomoko Uchida.\n+\n+\n+Release 1.3.1 (released Mar 17, 2015)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1769: allows generating quickstart files/dirs for destination dir\n+  that doesn't overwrite existent files/dirs. Thanks to WAKAYAMA\n+  shirou.\n+\n+* #1773: sphinx-quickstart doesn't accept non-ASCII character as a\n+  option argument.\n+\n+* #1766: the message \"least Python 2.6 to run\" is at best misleading.\n+\n+* #1772: cross reference in docstrings like \":param .write:\" breaks\n+  building.\n+\n+* #1770, #1774: \"literalinclude\" with empty file occurs exception.\n+  Thanks to Takayuki Hirai.\n+\n+* #1777: Sphinx 1.3 can't load extra theme. Thanks to tell-k.\n+\n+* #1776: \"source_suffix = ['.rst']\" cause unfriendly error on prior\n+  version.\n+\n+* #1771: automated .mo building doesn't work properly.\n+\n+* #1783: Autodoc: Python2 Allow unicode string in __all__. Thanks to\n+  Jens Hedegaard Nielsen.\n+\n+* #1781: Setting \"html_domain_indices\" to a list raises a type check\n+  warnings.\n+\n+\n+Release 1.3 (released Mar 10, 2015)\n+===================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Roles \"ref\", \"term\" and \"menusel\" now don't generate\n+  >>:durole:`emphasis`<< nodes anymore.  If you want to keep italic\n+  style, adapt your stylesheet.\n+\n+* Role \"numref\" uses \"%s\" as special character to indicate position of\n+  figure numbers instead \"#\" symbol.\n+\n+\n+Features added\n+--------------\n+\n+* Add convenience directives and roles to the C++ domain: directive\n+  \"cpp:var\" as alias for \"cpp:member\", role \":cpp:var\" as alias for\n+  \":cpp:member\", and role \"any\" for cross-reference to any C++\n+  declaraction. #1577, #1744\n+\n+* The >>:confval:`source_suffix`<< config value can now be a list of\n+  multiple suffixes.\n+\n+* Add the ability to specify source parsers by source suffix with the\n+  >>:confval:`source_parsers`<< config value.\n+\n+* #1675: A new builder, AppleHelpBuilder, has been added that builds\n+  Apple Help Books.\n+\n+\n+Bugs fixed\n+----------\n+\n+* 1.3b3 change breaks a previous gettext output that contains\n+  duplicated msgid such as \"foo bar\" and \"version changes in 1.3: foo\n+  bar\".\n+\n+* #1745: latex builder cause maximum recursion depth exceeded when a\n+  footnote has a footnote mark itself.\n+\n+* #1748: SyntaxError in sphinx/ext/ifconfig.py with Python 2.6.\n+\n+* #1658, #1750: No link created (and warning given) if option does not\n+  begin with -, / or +. Thanks to Takayuki Hirai.\n+\n+* #1753: C++, added missing support for more complex declarations.\n+\n+* #1700: Add \":caption:\" option for \"toctree\".\n+\n+* #1742: \":name:\" option is provided for \"toctree\", \"code-block\" and\n+  \"literalinclude\" directives.\n+\n+* #1756: Incorrect section titles in search that was introduced from\n+  1.3b3.\n+\n+* #1746: C++, fixed name lookup procedure, and added missing lookups\n+  in declarations.\n+\n+* #1765: C++, fix old id generation to use fully qualified names.\n+\n+\n+Documentation\n+-------------\n+\n+* #1651: Add \"vartype\" field description for python domain.\n+\n+\n+Release 1.3b3 (released Feb 24, 2015)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Dependency requirement updates: docutils 0.11, Pygments 2.0\n+\n+* The \"gettext_enables\" config value has been renamed to\n+  \"gettext_additional_targets\".\n+\n+* #1735: Use https://docs.python.org/ instead of \"http\" protocol. It\n+  was used for \"sphinx.ext.intersphinx\" and some documentation.\n+\n+\n+Features added\n+--------------\n+\n+* #1346: Add new default theme;\n+\n+  * Add 'alabaster' theme.\n+\n+  * Add 'sphinx_rtd_theme' theme.\n+\n+  * The 'default' html theme has been renamed to 'classic'. 'default'\n+    is still available, however it will emit notice a recommendation\n+    that using new 'alabaster' theme.\n+\n+* Added \"highlight_options\" configuration value.\n+\n+* The \"language\" config value is now available in the HTML templates.\n+\n+* The \"env-updated\" event can now return a value, which is interpreted\n+  as an iterable of additional docnames that need to be rewritten.\n+\n+* #772: Support for scoped and unscoped enums in C++. Enumerators in\n+  unscoped enums are injected into the parent scope in addition to the\n+  enum scope.\n+\n+* Add \"todo_include_todos\" config option to quickstart conf file,\n+  handled as described in documentation.\n+\n+* HTML breadcrumb items tag has class \"nav-item\" and \"nav-item-N\"\n+  (like nav-item-0, 1, 2...).\n+\n+* New option \"sphinx-quickstart --use-make-mode\" for generating\n+  Makefile that use sphinx-build make-mode.\n+\n+* #1235: i18n: several node can be translated if it is set to\n+  \"gettext_additional_targets\" in conf.py. Supported nodes are:\n+\n+  * 'literal-block'\n+\n+  * 'doctest-block'\n+\n+  * 'raw'\n+\n+  * 'image'\n+\n+* #1227: Add \"html_scaled_image_link\" config option to conf.py, to\n+  control scaled image link.\n+\n+\n+Bugs fixed\n+----------\n+\n+* LaTeX writer now generates correct markup for cells spanning\n+  multiple rows.\n+\n+* #1674: Do not crash if a module's \"__all__\" is not a list of\n+  strings.\n+\n+* #1629: Use VerbatimBorderColor to add frame to code-block in LaTeX\n+\n+* On windows, make-mode didn't work on Win32 platform if sphinx was\n+  invoked as \"python sphinx-build.py\".\n+\n+* #1687: linkcheck now treats 401 Unauthorized responses as \"working\".\n+\n+* #1690: toctrees with \"glob\" option now can also contain entries for\n+  single documents with explicit title.\n+\n+* #1591: html search results for C++ elements now has correct\n+  interpage links.\n+\n+* bizstyle theme: nested long title pages make long breadcrumb that\n+  breaks page layout.\n+\n+* bizstyle theme: all breadcrumb items become 'Top' on some mobile\n+  browser (iPhone5s safari).\n+\n+* #1722: restore \"toctree()\" template function behavior that was\n+  changed at 1.3b1.\n+\n+* #1732: i18n: localized table caption raises exception.\n+\n+* #1718: \":numref:\" does not work with capital letters in the label\n+\n+* #1630: resolve CSS conflicts, \"div.container\" css target for literal\n+  block wrapper now renamed to \"div.literal-block-wrapper\".\n+\n+* \"sphinx.util.pycompat\" has been restored in its backwards-\n+  compatibility; slated for removal in Sphinx 1.4.\n+\n+* #1719: LaTeX writer does not respect \"numref_format\" option in\n+  captions\n+\n+\n+Release 1.3b2 (released Dec 5, 2014)\n+====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* update bundled ez_setup.py for setuptools-7.0 that requires Python\n+  2.6 or later.\n+\n+\n+Features added\n+--------------\n+\n+* #1597: Added possibility to return a new template name from \"html-\n+  page-context\".\n+\n+* PR#314, #1150: Configuration values are now checked for their type.\n+  A warning is raised if the configured and the default value do not\n+  have the same type and do not share a common non-trivial base class.\n+\n+\n+Bugs fixed\n+----------\n+\n+* PR#311: sphinx-quickstart does not work on python 3.4.\n+\n+* Fix >>:confval:`autodoc_docstring_signature`<< not working with\n+  signatures in class docstrings.\n+\n+* Rebuilding cause crash unexpectedly when source files were added.\n+\n+* #1607: Fix a crash when building latexpdf with \"howto\" class\n+\n+* #1251: Fix again. Sections which depth are lower than :tocdepth:\n+  should not be shown on localtoc sidebar.\n+\n+* make-mode didn't work on Win32 platform if sphinx was installed by\n+  wheel package.\n+\n+\n+Release 1.3b1 (released Oct 10, 2014)\n+=====================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Dropped support for Python 2.5, 3.1 and 3.2.\n+\n+* Dropped support for docutils versions up to 0.9.\n+\n+* Removed the \"sphinx.ext.oldcmarkup\" extension.\n+\n+* The deprecated config values \"exclude_trees\", \"exclude_dirnames\" and\n+  \"unused_docs\" have been removed.\n+\n+* A new node, \"sphinx.addnodes.literal_strong\", has been added, for\n+  text that should appear literally (i.e. no smart quotes) in strong\n+  font.  Custom writers will have to be adapted to handle this node.\n+\n+* PR#269, #1476: replace \"<tt>\" tag by \"<code>\". User customized\n+  stylesheets should be updated If the css contain some styles for\n+  \"tt>\" tag. Thanks to Takeshi Komiya.\n+\n+* #1543: \"templates_path\" is automatically added to \"exclude_patterns\"\n+  to avoid reading autosummary rst templates in the templates\n+  directory.\n+\n+* Custom domains should implement the new \"Domain.resolve_any_xref\"\n+  method to make the \"any\" role work properly.\n+\n+* gettext builder: gettext doesn't emit uuid information to generated\n+  pot files by default. Please set \"True\" to \"gettext_uuid\" to emit\n+  uuid information. Additionally, if the \"python-levenshtein\" 3rd-\n+  party package is installed, it will improve the calculation time.\n+\n+* gettext builder: disable extracting/apply 'index' node by default.\n+  Please set 'index' to \"gettext_enables\" to enable extracting index\n+  entries.\n+\n+* PR#307: Add frame to code-block in LaTeX. Thanks to Takeshi Komiya.\n+\n+\n+Features added\n+--------------\n+\n+* Add support for Python 3.4.\n+\n+* Add support for docutils 0.12\n+\n+* Added \"sphinx.ext.napoleon\" extension for NumPy and Google style\n+  docstring support.\n+\n+* Added support for parallel reading (parsing) of source files with\n+  the \"sphinx-build -j\" option.  Third-party extensions will need to\n+  be checked for compatibility and may need to be adapted if they\n+  store information in the build environment object.  See \"env-merge-\n+  info\".\n+\n+* Added the \"any\" role that can be used to find a cross-reference of\n+  *any* type in *any* domain.  Custom domains should implement the new\n+  \"Domain.resolve_any_xref\" method to make this work properly.\n+\n+* Exception logs now contain the last 10 messages emitted by Sphinx.\n+\n+* Added support for extension versions (a string returned by\n+  \"setup()\", these can be shown in the traceback log files).  Version\n+  requirements for extensions can be specified in projects using the\n+  new \"needs_extensions\" config value.\n+\n+* Changing the default role within a document with the >>:dudir\n+  :`default-role`<< directive is now supported.\n+\n+* PR#214: Added stemming support for 14 languages, so that the built-\n+  in document search can now handle these.  Thanks to Shibukawa\n+  Yoshiki.\n+\n+* PR#296, PR#303, #76: numfig feature: Assign numbers to figures,\n+  tables and code-blocks. This feature is configured with \"numfig\",\n+  \"numfig_secnum_depth\" and \"numfig_format\". Also \"numref\" role is\n+  available. Thanks to Takeshi Komiya.\n+\n+* PR#202: Allow \".\" and \"~\" prefixed references in \":param:\" doc\n+  fields for Python.\n+\n+* PR#184: Add \"autodoc_mock_imports\", allowing to mock imports of\n+  external modules that need not be present when autodocumenting.\n+\n+* #925: Allow list-typed config values to be provided on the command\n+  line, like \"-D key=val1,val2\".\n+\n+* #668: Allow line numbering of \"code-block\" and \"literalinclude\"\n+  directives to start at an arbitrary line number, with a new \"lineno-\n+  start\" option.\n+\n+* PR#172, PR#266: The \"code-block\" and \"literalinclude\" directives now\n+  can have a \"caption\" option that shows a filename before the code in\n+  the output. Thanks to Nasimul Haque, Takeshi Komiya.\n+\n+* Prompt for the document language in sphinx-quickstart.\n+\n+* PR#217: Added config values to suppress UUID and location\n+  information in generated gettext catalogs.\n+\n+* PR#236, #1456: apidoc: Add a -M option to put module documentation\n+  before submodule documentation. Thanks to Wes Turner and Luc Saffre.\n+\n+* #1434: Provide non-minified JS files for jquery.js and underscore.js\n+  to clarify the source of the minified files.\n+\n+* PR#252, #1291: Windows color console support. Thanks to meu31.\n+\n+* PR#255: When generating latex references, also insert latex\n+  target/anchor for the ids defined on the node. Thanks to Olivier\n+  Heurtier.\n+\n+* PR#229: Allow registration of other translators. Thanks to Russell\n+  Sim.\n+\n+* Add app.set_translator() API to register or override a Docutils\n+  translator class like \"html_translator_class\".\n+\n+* PR#267, #1134: add 'diff' parameter to literalinclude. Thanks to\n+  Richard Wall and WAKAYAMA shirou.\n+\n+* PR#272: Added 'bizstyle' theme. Thanks to Shoji KUMAGAI.\n+\n+* Automatically compile \"*.mo\" files from \"*.po\" files when\n+  \"gettext_auto_build\" is True (default) and \"*.po\" is newer than\n+  \"*.mo\" file.\n+\n+* #623: \"sphinx.ext.viewcode\" supports imported function/class\n+  aliases.\n+\n+* PR#275: \"sphinx.ext.intersphinx\" supports multiple target for the\n+  inventory. Thanks to Brigitta Sipocz.\n+\n+* PR#261: Added the \"env-before-read-docs\" event that can be connected\n+  to modify the order of documents before they are read by the\n+  environment.\n+\n+* #1284: Program options documented with \"option\" can now start with\n+  \"+\".\n+\n+* PR#291: The caption of \"code-block\" is recognized as a title of ref\n+  target. Thanks to Takeshi Komiya.\n+\n+* PR#298: Add new API: \"add_latex_package()\". Thanks to Takeshi\n+  Komiya.\n+\n+* #1344: add \"gettext_enables\" to enable extracting 'index' to gettext\n+  catalog output / applying translation catalog to generated\n+  documentation.\n+\n+* PR#301, #1583: Allow the line numbering of the directive\n+  \"literalinclude\" to match that of the included file, using a new\n+  \"lineno-match\" option. Thanks to Jeppe Pihl.\n+\n+* PR#299: add various options to sphinx-quickstart. Quiet mode option\n+  \"--quiet\" will skips wizard mode. Thanks to WAKAYAMA shirou.\n+\n+* #1623: Return types specified with \":rtype:\" are now turned into\n+  links if possible.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1438: Updated jQuery version from 1.8.3 to 1.11.1.\n+\n+* #1568: Fix a crash when a \"centered\" directive contains a reference.\n+\n+* Now sphinx.ext.autodoc works with python-2.5 again.\n+\n+* #1563: \"add_search_language()\" raises AssertionError for correct\n+  type of argument. Thanks to rikoman.\n+\n+* #1174: Fix smart quotes being applied inside roles like \"program\" or\n+  \"makevar\".\n+\n+* PR#235: comment db schema of websupport lacked a length of the\n+  node_id field. Thanks to solos.\n+\n+* #1466,PR#241: Fix failure of the cpp domain parser to parse C+11\n+  \"variadic templates\" declarations. Thanks to Victor Zverovich.\n+\n+* #1459,PR#244: Fix default mathjax js path point to \"http://\" that\n+  cause mixed-content error on HTTPS server. Thanks to sbrandtb and\n+  robo9k.\n+\n+* PR#157: autodoc remove spurious signatures from @property decorated\n+  attributes. Thanks to David Ham.\n+\n+* PR#159: Add coverage targets to quickstart generated Makefile and\n+  make.bat. Thanks to Matthias Troffaes.\n+\n+* #1251: When specifying toctree :numbered: option and :tocdepth:\n+  metadata, sub section number that is larger depth than \":tocdepth:\"\n+  is shrunk.\n+\n+* PR#260: Encode underscore in citation labels for latex export.\n+  Thanks to Lennart Fricke.\n+\n+* PR#264: Fix could not resolve xref for figure node with :name:\n+  option. Thanks to Takeshi Komiya.\n+\n+* PR#265: Fix could not capture caption of graphviz node by xref.\n+  Thanks to Takeshi Komiya.\n+\n+* PR#263, #1013, #1103: Rewrite of C++ domain. Thanks to Jakob Lykke\n+  Andersen.\n+\n+  * Hyperlinks to all found nested names and template arguments\n+    (#1103).\n+\n+  * Support for function types everywhere, e.g., in\n+    std::function<bool(int, int)> (#1013).\n+\n+  * Support for virtual functions.\n+\n+  * Changed interpretation of function arguments to following standard\n+    prototype declarations, i.e., void f(arg) means that arg is the\n+    type of the argument, instead of it being the name.\n+\n+  * Updated tests.\n+\n+  * Updated documentation with elaborate description of what\n+    declarations are supported and how the namespace declarations\n+    influence declaration and cross-reference lookup.\n+\n+  * Index names may be different now. Elements are indexed by their\n+    fully qualified name. It should be rather easy to change this\n+    behaviour and potentially index by namespaces/classes as well.\n+\n+* PR#258, #939: Add dedent option for \"code-block\" and\n+  \"literalinclude\". Thanks to Zafar Siddiqui.\n+\n+* PR#268: Fix numbering section does not work at singlehtml mode. It\n+  still ad-hoc fix because there is a issue that section IDs are\n+  conflicted. Thanks to Takeshi Komiya.\n+\n+* PR#273, #1536: Fix RuntimeError with numbered circular toctree.\n+  Thanks to Takeshi Komiya.\n+\n+* PR#274: Set its URL as a default title value if URL appears in\n+  toctree. Thanks to Takeshi Komiya.\n+\n+* PR#276, #1381: \"rfc\" and \"pep\" roles support custom link text.\n+  Thanks to Takeshi Komiya.\n+\n+* PR#277, #1513: highlights for function pointers in argument list of\n+  \"c:function\". Thanks to Takeshi Komiya.\n+\n+* PR#278: Fix section entries were shown twice if toctree has been put\n+  under only directive. Thanks to Takeshi Komiya.\n+\n+* #1547: pgen2 tokenizer doesn't recognize \"...\" literal (Ellipsis for\n+  py3).\n+\n+* PR#294: On LaTeX builder, wrap float environment on writing\n+  literal_block to avoid separation of caption and body. Thanks to\n+  Takeshi Komiya.\n+\n+* PR#295, #1520: \"make.bat latexpdf\" mechanism to \"cd\" back to the\n+  current directory. Thanks to Peter Suter.\n+\n+* PR#297, #1571: Add imgpath property to all builders. It make easier\n+  to develop builder extensions. Thanks to Takeshi Komiya.\n+\n+* #1584: Point to master doc in HTML \"top\" link.\n+\n+* #1585: Autosummary of modules broken in Sphinx-1.2.3.\n+\n+* #1610: Sphinx cause AttributeError when MeCab search option is\n+  enabled and python-mecab is not installed.\n+\n+* #1674: Do not crash if a module's \"__all__\" is not a list of\n+  strings.\n+\n+* #1673: Fix crashes with >>:confval:`nitpick_ignore`<< and \":doc:\"\n+  references.\n+\n+* #1686: ifconfig directive doesn't care about default config values.\n+\n+* #1642: Fix only one search result appearing in Chrome.\n+\n+\n+Documentation\n+-------------\n+\n+* Add clarification about the syntax of tags. (\"doc/markup/misc.rst\")\n+\n+\n+Release 1.2.3 (released Sep 1, 2014)\n+====================================\n+\n+\n+Features added\n+--------------\n+\n+* #1518: \"sphinx-apidoc\" command now has a \"--version\" option to show\n+  version information and exit\n+\n+* New locales: Hebrew, European Portuguese, Vietnamese.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #636: Keep straight single quotes in literal blocks in the LaTeX\n+  build.\n+\n+* #1419: Generated i18n sphinx.js files are missing message catalog\n+  entries from '.js_t' and '.html'. The issue was introduced from\n+  Sphinx-1.1\n+\n+* #1363: Fix i18n: missing python domain's cross-references with\n+  currentmodule directive or currentclass directive.\n+\n+* #1444: autosummary does not create the description from attributes\n+  docstring.\n+\n+* #1457: In python3 environment, make linkcheck cause \"Can't convert\n+  'bytes' object to str implicitly\" error when link target url has a\n+  hash part. Thanks to Jorge_C.\n+\n+* #1467: Exception on Python3 if nonexistent method is specified by\n+  automethod\n+\n+* #1441: autosummary can't handle nested classes correctly.\n+\n+* #1499: With non-callable \"setup\" in a conf.py, now sphinx-build\n+  emits a user-friendly error message.\n+\n+* #1502: In autodoc, fix display of parameter defaults containing\n+  backslashes.\n+\n+* #1226: autodoc, autosummary: importing setup.py by automodule will\n+  invoke setup process and execute \"sys.exit()\". Now sphinx avoids\n+  SystemExit exception and emits warnings without unexpected\n+  termination.\n+\n+* #1503: py:function directive generate incorrectly signature when\n+  specifying a default parameter with an empty list \"[]\". Thanks to\n+  Geert Jansen.\n+\n+* #1508: Non-ASCII filename raise exception on make singlehtml, latex,\n+  man, texinfo and changes.\n+\n+* #1531: On Python3 environment, docutils.conf with 'source_link=true'\n+  in the general section cause type error.\n+\n+* PR#270, #1533: Non-ASCII docstring cause UnicodeDecodeError when\n+  uses with inheritance-diagram directive. Thanks to WAKAYAMA shirou.\n+\n+* PR#281, PR#282, #1509: TODO extension not compatible with\n+  websupport. Thanks to Takeshi Komiya.\n+\n+* #1477: gettext does not extract nodes.line in a table or list.\n+\n+* #1544: \"make text\" generates wrong table when it has empty table\n+  cells.\n+\n+* #1522: Footnotes from table get displayed twice in LaTeX. This\n+  problem has been appeared from Sphinx-1.2.1 by #949.\n+\n+* #508: Sphinx every time exit with zero when is invoked from setup.py\n+  command. ex. \"python setup.py build_sphinx -b doctest\" return zero\n+  even if doctest failed.\n+\n+\n+Release 1.2.2 (released Mar 2, 2014)\n+====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* PR#211: When checking for existence of the \"html_logo\" file, check\n+  the full relative path and not the basename.\n+\n+* PR#212: Fix traceback with autodoc and \"__init__\" methods without\n+  docstring.\n+\n+* PR#213: Fix a missing import in the setup command.\n+\n+* #1357: Option names documented by \"option\" are now again allowed to\n+  not start with a dash or slash, and referencing them will work\n+  correctly.\n+\n+* #1358: Fix handling of image paths outside of the source directory\n+  when using the \"wildcard\" style reference.\n+\n+* #1374: Fix for autosummary generating overly-long summaries if first\n+  line doesn't end with a period.\n+\n+* #1383: Fix Python 2.5 compatibility of sphinx-apidoc.\n+\n+* #1391: Actually prevent using \"pngmath\" and \"mathjax\" extensions at\n+  the same time in sphinx-quickstart.\n+\n+* #1386: Fix bug preventing more than one theme being added by the\n+  entry point mechanism.\n+\n+* #1370: Ignore \"toctree\" nodes in text writer, instead of raising.\n+\n+* #1364: Fix 'make gettext' fails when the '.. todolist::' directive\n+  is present.\n+\n+* #1367: Fix a change of PR#96 that break\n+  sphinx.util.docfields.Field.make_field interface/behavior for \"item\"\n+  argument usage.\n+\n+\n+Documentation\n+-------------\n+\n+* Extended the documentation about building extensions.\n+\n+\n+Release 1.2.1 (released Jan 19, 2014)\n+=====================================\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1335: Fix autosummary template overloading with exclamation prefix\n+  like \"{% extends \"!autosummary/class.rst\" %}\" cause infinite\n+  recursive function call. This was caused by PR#181.\n+\n+* #1337: Fix autodoc with \"autoclass_content=\"both\"\" uses useless\n+  \"object.__init__\" docstring when class does not have \"__init__\".\n+  This was caused by a change for #1138.\n+\n+* #1340: Can't search alphabetical words on the HTML quick search\n+  generated with language='ja'.\n+\n+* #1319: Do not crash if the \"html_logo\" file does not exist.\n+\n+* #603: Do not use the HTML-ized title for building the search index\n+  (that resulted in \"literal\" being found on every page with a literal\n+  in the title).\n+\n+* #751: Allow production lists longer than a page in LaTeX by using\n+  longtable.\n+\n+* #764: Always look for stopwords lowercased in JS search.\n+\n+* #814: autodoc: Guard against strange type objects that don't have\n+  \"__bases__\".\n+\n+* #932: autodoc: Do not crash if \"__doc__\" is not a string.\n+\n+* #933: Do not crash if an \"option\" value is malformed (contains\n+  spaces but no option name).\n+\n+* #908: On Python 3, handle error messages from LaTeX correctly in the\n+  pngmath extension.\n+\n+* #943: In autosummary, recognize \"first sentences\" to pull from the\n+  docstring if they contain uppercase letters.\n+\n+* #923: Take the entire LaTeX document into account when caching\n+  pngmath-generated images.  This rebuilds them correctly when\n+  \"pngmath_latex_preamble\" changes.\n+\n+* #901: Emit a warning when using docutils' new \"math\" markup without\n+  a Sphinx math extension active.\n+\n+* #845: In code blocks, when the selected lexer fails, display line\n+  numbers nevertheless if configured.\n+\n+* #929: Support parsed-literal blocks in LaTeX output correctly.\n+\n+* #949: Update the tabulary.sty packed with Sphinx.\n+\n+* #1050: Add anonymous labels into \"objects.inv\" to be referenced via\n+  \"intersphinx\".\n+\n+* #1095: Fix print-media stylesheet being included always in the\n+  \"scrolls\" theme.\n+\n+* #1085: Fix current classname not getting set if class description\n+  has \":noindex:\" set.\n+\n+* #1181: Report option errors in autodoc directives more gracefully.\n+\n+* #1155: Fix autodocumenting C-defined methods as attributes in Python\n+  3.\n+\n+* #1233: Allow finding both Python classes and exceptions with the\n+  \"class\" and \"exc\" roles in intersphinx.\n+\n+* #1198: Allow \"image\" for the \"figwidth\" option of the\n+  >>:dudir:`figure`<< directive as documented by docutils.\n+\n+* #1152: Fix pycode parsing errors of Python 3 code by including two\n+  grammar versions for Python 2 and 3, and loading the appropriate\n+  version for the running Python version.\n+\n+* #1017: Be helpful and tell the user when the argument to \"option\"\n+  does not match the required format.\n+\n+* #1345: Fix two bugs with \"nitpick_ignore\"; now you don't have to\n+  remove the store environment for changes to have effect.\n+\n+* #1072: In the JS search, fix issues searching for upper-cased words\n+  by lowercasing words before stemming.\n+\n+* #1299: Make behavior of the \"math\" directive more consistent and\n+  avoid producing empty environments in LaTeX output.\n+\n+* #1308: Strip HTML tags from the content of \"raw\" nodes before\n+  feeding it to the search indexer.\n+\n+* #1249: Fix duplicate LaTeX page numbering for manual documents.\n+\n+* #1292: In the linkchecker, retry HEAD requests when denied by HTTP\n+  405. Also make the redirect code apparent and tweak the output a bit\n+  to be more obvious.\n+\n+* #1285: Avoid name clashes between C domain objects and section\n+  titles.\n+\n+* #848: Always take the newest code in incremental rebuilds with the\n+  \"sphinx.ext.viewcode\" extension.\n+\n+* #979, #1266: Fix exclude handling in \"sphinx-apidoc\".\n+\n+* #1302: Fix regression in \"sphinx.ext.inheritance_diagram\" when\n+  documenting classes that can't be pickled.\n+\n+* #1316: Remove hard-coded \"font-face\" resources from epub theme.\n+\n+* #1329: Fix traceback with empty translation msgstr in .po files.\n+\n+* #1300: Fix references not working in translated documents in some\n+  instances.\n+\n+* #1283: Fix a bug in the detection of changed files that would try to\n+  access doctrees of deleted documents.\n+\n+* #1330: Fix \"exclude_patterns\" behavior with subdirectories in the\n+  \"html_static_path\".\n+\n+* #1323: Fix emitting empty \"<ul>\" tags in the HTML writer, which is\n+  not valid HTML.\n+\n+* #1147: Don't emit a sidebar search box in the \"singlehtml\" builder.\n+\n+\n+Documentation\n+-------------\n+\n+* #1325: Added a \"Intersphinx\" tutorial section. (\"doc/tutorial.rst\")\n+\n+\n+Release 1.2 (released Dec 10, 2013)\n+===================================\n+\n+\n+Features added\n+--------------\n+\n+* Added \"sphinx.version_info\" tuple for programmatic checking of the\n+  Sphinx version.\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Removed the \"sphinx.ext.refcounting\" extension -- it is very\n+  specific to CPython and has no place in the main distribution.\n+\n+\n+Bugs fixed\n+----------\n+\n+* Restore \"versionmodified\" CSS class for versionadded/changed and\n+  deprecated directives.\n+\n+* PR#181: Fix \"html_theme_path = ['.']\" is a trigger of rebuild all\n+  documents always (This change keeps the current \"theme changes cause\n+  a rebuild\" feature).\n+\n+* #1296: Fix invalid charset in HTML help generated HTML files for\n+  default locale.\n+\n+* PR#190: Fix gettext does not extract figure caption and rubric title\n+  inside other blocks. Thanks to Michael Schlenker.\n+\n+* PR#176: Make sure setup_command test can always import Sphinx.\n+  Thanks to Dmitry Shachnev.\n+\n+* #1311: Fix test_linkcode.test_html fails with C locale and Python 3.\n+\n+* #1269: Fix ResourceWarnings with Python 3.2 or later.\n+\n+* #1138: Fix: When \"autodoc_docstring_signature = True\" and\n+  \"autoclass_content = 'init'\" or \"'both'\", __init__ line should be\n+  removed from class documentation.\n+\n+\n+Release 1.2 beta3 (released Oct 3, 2013)\n+========================================\n+\n+\n+Features added\n+--------------\n+\n+* The Sphinx error log files will now include a list of the loaded\n+  extensions for help in debugging.\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* PR#154: Remove \"sphinx\" prefix from LaTeX class name except\n+  'sphinxmanual' and 'sphinxhowto'. Now you can use your custom\n+  document class without 'sphinx' prefix. Thanks to Erik B.\n+\n+\n+Bugs fixed\n+----------\n+\n+* #1265: Fix i18n: crash when translating a section name that is\n+  pointed to from a named target.\n+\n+* A wrong condition broke the search feature on first page that is\n+  usually index.rst.  This issue was introduced in 1.2b1.\n+\n+* #703: When Sphinx can't decode filenames with non-ASCII characters,\n+  Sphinx now catches UnicodeError and will continue if possible\n+  instead of raising the exception.\n+\n+\n+Release 1.2 beta2 (released Sep 17, 2013)\n+=========================================\n+\n+\n+Features added\n+--------------\n+\n+* \"apidoc\" now ignores \"_private\" modules by default, and has an\n+  option \"-P\" to include them.\n+\n+* \"apidoc\" now has an option to not generate headings for packages and\n+  modules, for the case that the module docstring already includes a\n+  reST heading.\n+\n+* PR#161: \"apidoc\" can now write each module to a standalone page\n+  instead of combining all modules in a package on one page.\n+\n+* Builders: rebuild i18n target document when catalog updated.\n+\n+* Support docutils.conf 'writers' and 'html4css1 writer' section in\n+  the HTML writer.  The latex, manpage and texinfo writers also\n+  support their respective 'writers' sections.\n+\n+* The new \"html_extra_path\" config value allows to specify directories\n+  with files that should be copied directly to the HTML output\n+  directory.\n+\n+* Autodoc directives for module data and attributes now support an\n+  \"annotation\" option, so that the default display of the\n+  data/attribute value can be overridden.\n+\n+* PR#136: Autodoc directives now support an \"imported-members\" option\n+  to include members imported from different modules.\n+\n+* New locales: Macedonian, Sinhala, Indonesian.\n+\n+* Theme package collection by using setuptools plugin mechanism.\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* PR#144, #1182: Force timezone offset to LocalTimeZone on POT-\n+  Creation-Date that was generated by gettext builder. Thanks to\n+  masklinn and Jakub Wilk.\n+\n+\n+Bugs fixed\n+----------\n+\n+* PR#132: Updated jQuery version to 1.8.3.\n+\n+* PR#141, #982: Avoid crash when writing PNG file using Python 3.\n+  Thanks to Marcin Wojdyr.\n+\n+* PR#145: In parallel builds, sphinx drops second document file to\n+  write. Thanks to tychoish.\n+\n+* PR#151: Some styling updates to tables in LaTeX.\n+\n+* PR#153: The \"extensions\" config value can now be overridden.\n+\n+* PR#155: Added support for some C++11 function qualifiers.\n+\n+* Fix: 'make gettext' caused UnicodeDecodeError when templates contain\n+  utf-8 encoded strings.\n+\n+* #828: use inspect.getfullargspec() to be able to document functions\n+  with keyword-only arguments on Python 3.\n+\n+* #1090: Fix i18n: multiple cross references (term, ref, doc) in the\n+  same line return the same link.\n+\n+* #1157: Combination of 'globaltoc.html' and hidden toctree caused\n+  exception.\n+\n+* #1159: fix wrong generation of objects inventory for Python modules,\n+  and add a workaround in intersphinx to fix handling of affected\n+  inventories.\n+\n+* #1160: Citation target missing caused an AssertionError.\n+\n+* #1162, PR#139: singlehtml builder didn't copy images to _images/.\n+\n+* #1173: Adjust setup.py dependencies because Jinja2 2.7 discontinued\n+  compatibility with Python < 3.3 and Python < 2.6.  Thanks to\n+  Alexander Dupuy.\n+\n+* #1185: Don't crash when a Python module has a wrong or no encoding\n+  declared, and non-ASCII characters are included.\n+\n+* #1188: sphinx-quickstart raises UnicodeEncodeError if \"Project\n+  version\" includes non-ASCII characters.\n+\n+* #1189: \"Title underline is too short\" WARNING is given when using\n+  fullwidth characters to \"Project name\" on quickstart.\n+\n+* #1190: Output TeX/texinfo/man filename has no basename (only\n+  extension) when using non-ASCII characters in the \"Project name\" on\n+  quickstart.\n+\n+* #1192: Fix escaping problem for hyperlinks in the manpage writer.\n+\n+* #1193: Fix i18n: multiple link references in the same line return\n+  the same link.\n+\n+* #1176: Fix i18n: footnote reference number missing for auto numbered\n+  named footnote and auto symbol footnote.\n+\n+* PR#146,#1172: Fix ZeroDivisionError in parallel builds. Thanks to\n+  tychoish.\n+\n+* #1204: Fix wrong generation of links to local intersphinx targets.\n+\n+* #1206: Fix i18n: gettext did not translate admonition directive's\n+  title.\n+\n+* #1232: Sphinx generated broken ePub files on Windows.\n+\n+* #1259: Guard the debug output call when emitting events; to prevent\n+  the repr() implementation of arbitrary objects causing build\n+  failures.\n+\n+* #1142: Fix NFC/NFD normalizing problem of rst filename on Mac OS X.\n+\n+* #1234: Ignoring the string consists only of white-space characters.\n+\n+\n+Release 1.2 beta1 (released Mar 31, 2013)\n+=========================================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Removed \"sphinx.util.compat.directive_dwim()\" and\n+  \"sphinx.roles.xfileref_role()\" which were deprecated since version\n+  1.0.\n+\n+* PR#122: the files given in \"latex_additional_files\" now override TeX\n+  files included by Sphinx, such as \"sphinx.sty\".\n+\n+* PR#124: the node generated by \"versionadded\", \"versionchanged\" and\n+  \"deprecated\" directives now includes all added markup (such as \"New\n+  in version X\") as child nodes, and no additional text must be\n+  generated by writers.\n+\n+* PR#99: the \"seealso\" directive now generates admonition nodes\n+  instead of the custom \"seealso\" node.\n+\n+\n+Features added\n+--------------\n+\n+* Markup\n+\n+  * The \"toctree\" directive and the \"toctree()\" template function now\n+    have an \"includehidden\" option that includes hidden toctree\n+    entries (bugs #790 and #1047).  A bug in the \"maxdepth\" option for\n+    the \"toctree()\" template function has been fixed (bug #1046).\n+\n+  * PR#99: Strip down seealso directives to normal admonitions.  This\n+    removes their unusual CSS classes (admonition-see-also),\n+    inconsistent LaTeX admonition title (\"See Also\" instead of \"See\n+    also\"), and spurious indentation in the text builder.\n+\n+* HTML builder\n+\n+  * #783: Create a link to full size image if it is scaled with width\n+    or height.\n+\n+  * #1067: Improve the ordering of the JavaScript search results:\n+    matches in titles come before matches in full text, and object\n+    results are better categorized.  Also implement a pluggable search\n+    scorer.\n+\n+  * #1053: The \"rightsidebar\" and \"collapsiblesidebar\" HTML theme\n+    options now work together.\n+\n+  * Update to jQuery 1.7.1 and Underscore.js 1.3.1.\n+\n+* Texinfo builder\n+\n+  * An \"Index\" node is no longer added when there are no entries.\n+\n+  * \"deffn\" categories are no longer capitalized if they contain\n+    capital letters.\n+\n+  * \"desc_annotation\" nodes are now rendered.\n+\n+  * \"strong\" and \"emphasis\" nodes are now formatted like \"literal\"s.\n+    The reason for this is because the standard Texinfo markup\n+    (\"*strong*\" and \"_emphasis_\") resulted in confusing output due to\n+    the common usage of using these constructs for documenting\n+    parameter names.\n+\n+  * Field lists formatting has been tweaked to better display \"Info\n+    field lists\".\n+\n+  * \"system_message\" and \"problematic\" nodes are now formatted in a\n+    similar fashion as done by the text builder.\n+\n+  * \"en-dash\" and \"em-dash\" conversion of hyphens is no longer\n+    performed in option directive signatures.\n+\n+  * \"@ref\" is now used instead of \"@pxref\" for cross-references which\n+    prevents the word \"see\" from being added before the link (does not\n+    affect the Info output).\n+\n+  * The \"@finalout\" command has been added for better TeX output.\n+\n+  * \"transition\" nodes are now formatted using underscores (\"_\")\n+    instead of asterisks (\"*\").\n+\n+  * The default value for the \"paragraphindent\" has been changed from\n+    2 to 0 meaning that paragraphs are no longer indented by default.\n+\n+  * #1110: A new configuration value \"texinfo_no_detailmenu\" has been\n+    added for controlling whether a \"@detailmenu\" is added in the\n+    \"Top\" node's menu.\n+\n+  * Detailed menus are no longer created except for the \"Top\" node.\n+\n+  * Fixed an issue where duplicate domain indices would result in\n+    invalid output.\n+\n+* LaTeX builder:\n+\n+  * PR#115: Add \"'transition'\" item in \"latex_elements\" for\n+    customizing how transitions are displayed. Thanks to Jeff Klukas.\n+\n+  * PR#114: The LaTeX writer now includes the \"cmap\" package by\n+    default. The \"'cmappkg'\" item in \"latex_elements\" can be used to\n+    control this. Thanks to Dmitry Shachnev.\n+\n+  * The \"'fontpkg'\" item in \"latex_elements\" now defaults to \"''\" when\n+    the >>:confval:`language`<< uses the Cyrillic script.  Suggested\n+    by Dmitry Shachnev.\n+\n+  * The \"latex_documents\", \"texinfo_documents\", and \"man_pages\"\n+    configuration values will be set to default values based on the\n+    >>:confval:`master_doc`<< if not explicitly set in \"conf.py\".\n+    Previously, if these values were not set, no output would be\n+    generated by their respective builders.\n+\n+* Internationalization:\n+\n+  * Add i18n capabilities for custom templates.  For example: The\n+    Sphinx reference documentation in doc directory provides a\n+    \"sphinx.pot\" file with message strings from\n+    \"doc/_templates/*.html\" when using \"make gettext\".\n+\n+  * PR#61,#703: Add support for non-ASCII filename handling.\n+\n+* Other builders:\n+\n+  * Added the Docutils-native XML and pseudo-XML builders.  See\n+    \"XMLBuilder\" and \"PseudoXMLBuilder\".\n+\n+  * PR#45: The linkcheck builder now checks \"#anchor\"s for existence.\n+\n+  * PR#123, #1106: Add \"epub_use_index\" configuration value.  If\n+    provided, it will be used instead of \"html_use_index\" for epub\n+    builder.\n+\n+  * PR#126: Add \"epub_tocscope\" configuration value. The setting\n+    controls the generation of the epub toc. The user can now also\n+    include hidden toc entries.\n+\n+  * PR#112: Add \"epub_show_urls\" configuration value.\n+\n+* Extensions:\n+\n+  * PR#52: \"special_members\" flag to autodoc now behaves like\n+    \"members\".\n+\n+  * PR#47: Added \"sphinx.ext.linkcode\" extension.\n+\n+  * PR#25: In inheritance diagrams, the first line of the class\n+    docstring is now the tooltip for the class.\n+\n+* Command-line interfaces:\n+\n+  * PR#75: Added \"--follow-links\" option to sphinx-apidoc.\n+\n+  * #869: sphinx-build now has the option \"-T\" for printing the full\n+    traceback after an unhandled exception.\n+\n+  * sphinx-build now supports the standard \"--help\" and \"--version\"\n+    options.\n+\n+  * sphinx-build now provides more specific error messages when called\n+    with invalid options or arguments.\n+\n+  * sphinx-build now has a verbose option \"-v\" which can be repeated\n+    for greater effect.  A single occurrence provides a slightly more\n+    verbose output than normal.  Two or more occurrences of this\n+    option provides more detailed output which may be useful for\n+    debugging.\n+\n+* Locales:\n+\n+  * PR#74: Fix some Russian translation.\n+\n+  * PR#54: Added Norwegian bokmaal translation.\n+\n+  * PR#35: Added Slovak translation.\n+\n+  * PR#28: Added Hungarian translation.\n+\n+  * #1113: Add Hebrew locale.\n+\n+  * #1097: Add Basque locale.\n+\n+  * #1037: Fix typos in Polish translation. Thanks to Jakub Wilk.\n+\n+  * #1012: Update Estonian translation.\n+\n+* Optimizations:\n+\n+  * Speed up building the search index by caching the results of the\n+    word stemming routines.  Saves about 20 seconds when building the\n+    Python documentation.\n+\n+  * PR#108: Add experimental support for parallel building with a new\n+    \"sphinx-build -j\" option.\n+\n+\n+Documentation\n+-------------\n+\n+* PR#88: Added the \"Sphinx Developer's Guide\" (\"doc/devguide.rst\")\n+  which outlines the basic development process of the Sphinx project.\n+\n+* Added a detailed \"Installing Sphinx\" document (\"doc/install.rst\").\n+\n+\n+Bugs fixed\n+----------\n+\n+* PR#124: Fix paragraphs in versionmodified are ignored when it has no\n+  dangling paragraphs.  Fix wrong html output (nested \"<p>\" tag).  Fix\n+  versionmodified is not translatable.  Thanks to Nozomu Kaneko.\n+\n+* PR#111: Respect add_autodoc_attrgetter() even when inherited-members\n+  is set. Thanks to A. Jesse Jiryu Davis.\n+\n+* PR#97: Fix footnote handling in translated documents.\n+\n+* Fix text writer not handling visit_legend for figure directive\n+  contents.\n+\n+* Fix text builder not respecting wide/fullwidth characters: title\n+  underline width, table layout width and text wrap width.\n+\n+* Fix leading space in LaTeX table header cells.\n+\n+* #1132: Fix LaTeX table output for multi-row cells in the first\n+  column.\n+\n+* #1128: Fix Unicode errors when trying to format time strings with a\n+  non-standard locale.\n+\n+* #1127: Fix traceback when autodoc tries to tokenize a non-Python\n+  file.\n+\n+* #1126: Fix double-hyphen to en-dash conversion in wrong places such\n+  as command-line option names in LaTeX.\n+\n+* #1123: Allow whitespaces in filenames given to \"literalinclude\".\n+\n+* #1120: Added improvements about i18n for themes \"basic\", \"haiku\" and\n+  \"scrolls\" that Sphinx built-in. Thanks to Leonardo J. Caballero G.\n+\n+* #1118: Updated Spanish translation. Thanks to Leonardo J. Caballero\n+  G.\n+\n+* #1117: Handle .pyx files in sphinx-apidoc.\n+\n+* #1112: Avoid duplicate download files when referenced from documents\n+  in different ways (absolute/relative).\n+\n+* #1111: Fix failure to find uppercase words in search when\n+  \"html_search_language\" is 'ja'. Thanks to Tomo Saito.\n+\n+* #1108: The text writer now correctly numbers enumerated lists with\n+  non-default start values (based on patch by Ewan Edwards).\n+\n+* #1102: Support multi-context \"with\" statements in autodoc.\n+\n+* #1090: Fix gettext not extracting glossary terms.\n+\n+* #1074: Add environment version info to the generated search index to\n+  avoid compatibility issues with old builds.\n+\n+* #1070: Avoid un-pickling issues when running Python 3 and the saved\n+  environment was created under Python 2.\n+\n+* #1069: Fixed error caused when autodoc would try to format\n+  signatures of \"partial\" functions without keyword arguments (patch\n+  by Artur Gaspar).\n+\n+* #1062: sphinx.ext.autodoc use __init__ method signature for class\n+  signature.\n+\n+* #1055: Fix web support with relative path to source directory.\n+\n+* #1043: Fix sphinx-quickstart asking again for yes/no questions\n+  because \"input()\" returns values with an extra 'r' on Python 3.2.0 +\n+  Windows. Thanks to R\u00e9gis D\u00e9camps.\n+\n+* #1041: Fix failure of the cpp domain parser to parse a const type\n+  with a modifier.\n+\n+* #1038: Fix failure of the cpp domain parser to parse C+11 \"static\n+  constexpr\" declarations.  Thanks to Jakub Wilk.\n+\n+* #1029: Fix intersphinx_mapping values not being stable if the\n+  mapping has plural key/value set with Python 3.3.\n+\n+* #1028: Fix line block output in the text builder.\n+\n+* #1024: Improve Makefile/make.bat error message if Sphinx is not\n+  found. Thanks to Anatoly Techtonik.\n+\n+* #1018: Fix \"container\" directive handling in the text builder.\n+\n+* #1015: Stop overriding jQuery contains() in the JavaScript.\n+\n+* #1010: Make pngmath images transparent by default; IE7+ should\n+  handle it.\n+\n+* #1008: Fix test failures with Python 3.3.\n+\n+* #995: Fix table-of-contents and page numbering for the LaTeX \"howto\"\n+  class.\n+\n+* #976: Fix gettext does not extract index entries.\n+\n+* PR#72: #975: Fix gettext not extracting definition terms before\n+  docutils 0.10.\n+\n+* #961: Fix LaTeX output for triple quotes in code snippets.\n+\n+* #958: Do not preserve \"environment.pickle\" after a failed build.\n+\n+* #955: Fix i18n transformation.\n+\n+* #940: Fix gettext does not extract figure caption.\n+\n+* #920: Fix PIL packaging issue that allowed to import \"Image\" without\n+  PIL namespace.  Thanks to Marc Schlaich.\n+\n+* #723: Fix the search function on local files in WebKit based\n+  browsers.\n+\n+* #440: Fix coarse timestamp resolution in some filesystem generating\n+  a wrong list of outdated files.\n+\n+\n+Release 1.1.3 (Mar 10, 2012)\n+============================\n+\n+* PR#40: Fix \"safe_repr\" function to decode bytestrings with non-ASCII\n+  characters correctly.\n+\n+* PR#37: Allow configuring sphinx-apidoc via \"SPHINX_APIDOC_OPTIONS\".\n+\n+* PR#34: Restore Python 2.4 compatibility.\n+\n+* PR#36: Make the \"bibliography to TOC\" fix in LaTeX output specific\n+  to the document class.\n+\n+* #695: When the highlight language \"python\" is specified explicitly,\n+  do not try to parse the code to recognize non-Python snippets.\n+\n+* #859: Fix exception under certain circumstances when not finding\n+  appropriate objects to link to.\n+\n+* #860: Do not crash when encountering invalid doctest examples, just\n+  emit a warning.\n+\n+* #864: Fix crash with some settings of \"modindex_common_prefix\".\n+\n+* #862: Fix handling of \"-D\" and \"-A\" options on Python 3.\n+\n+* #851: Recognize and warn about circular toctrees, instead of running\n+  into recursion errors.\n+\n+* #853: Restore compatibility with docutils trunk.\n+\n+* #852: Fix HtmlHelp index entry links again.\n+\n+* #854: Fix inheritance_diagram raising attribute errors on builtins.\n+\n+* #832: Fix crashes when putting comments or lone terms in a glossary.\n+\n+* #834, #818: Fix HTML help language/encoding mapping for all Sphinx\n+  supported languages.\n+\n+* #844: Fix crashes when dealing with Unicode output in doctest\n+  extension.\n+\n+* #831: Provide \"--project\" flag in setup_command as advertised.\n+\n+* #875: Fix reading config files under Python 3.\n+\n+* #876: Fix quickstart test under Python 3.\n+\n+* #870: Fix spurious KeyErrors when removing documents.\n+\n+* #892: Fix single-HTML builder misbehaving with the master document\n+  in a subdirectory.\n+\n+* #873: Fix assertion errors with empty \"only\" directives.\n+\n+* #816: Fix encoding issues in the Qt help builder.\n+\n+\n+Release 1.1.2 (Nov 1, 2011) -- 1.1.1 is a silly version number anyway!\n+======================================================================\n+\n+* #809: Include custom fixers in the source distribution.\n+\n+\n+Release 1.1.1 (Nov 1, 2011)\n+===========================\n+\n+* #791: Fix QtHelp, DevHelp and HtmlHelp index entry links.\n+\n+* #792: Include \"sphinx-apidoc\" in the source distribution.\n+\n+* #797: Don't crash on a misformatted glossary.\n+\n+* #801: Make intersphinx work properly without SSL support.\n+\n+* #805: Make the \"Sphinx.add_index_to_domain\" method work correctly.\n+\n+* #780: Fix Python 2.5 compatibility.\n+\n+\n+Release 1.1 (Oct 9, 2011)\n+=========================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* The \"py:module\" directive doesn't output its \"platform\" option value\n+  anymore.  (It was the only thing that the directive did output, and\n+  therefore quite inconsistent.)\n+\n+* Removed support for old dependency versions; requirements are now:\n+\n+  * Pygments >= 1.2\n+\n+  * Docutils >= 0.7\n+\n+  * Jinja2   >= 2.3\n+\n+\n+Features added\n+--------------\n+\n+* Added Python 3.x support.\n+\n+* New builders and subsystems:\n+\n+  * Added a Texinfo builder.\n+\n+  * Added i18n support for content, a \"gettext\" builder and related\n+    utilities.\n+\n+  * Added the \"websupport\" library and builder.\n+\n+  * #98: Added a \"sphinx-apidoc\" script that autogenerates a hierarchy\n+    of source files containing autodoc directives to document modules\n+    and packages.\n+\n+  * #273: Add an API for adding full-text search support for languages\n+    other than English.  Add support for Japanese.\n+\n+* Markup:\n+\n+  * #138: Added an \"index\" role, to make inline index entries.\n+\n+  * #454: Added more index markup capabilities: marking see/seealso\n+    entries, and main entries for a given key.\n+\n+  * #460: Allowed limiting the depth of section numbers for HTML using\n+    the \"toctree\"'s \"numbered\" option.\n+\n+  * #586: Implemented improved \"glossary\" markup which allows multiple\n+    terms per definition.\n+\n+  * #478: Added \"py:decorator\" directive to describe decorators.\n+\n+  * C++ domain now supports array definitions.\n+\n+  * C++ domain now supports doc fields (\":param x:\" inside\n+    directives).\n+\n+  * Section headings in \"only\" directives are now correctly handled.\n+\n+  * Added \"emphasize-lines\" option to source code directives.\n+\n+  * #678: C++ domain now supports superclasses.\n+\n+* HTML builder:\n+\n+  * Added \"pyramid\" theme.\n+\n+  * #559: \"html_add_permalinks\" is now a string giving the text to\n+    display in permalinks.\n+\n+  * #259: HTML table rows now have even/odd CSS classes to enable\n+    \"Zebra styling\".\n+\n+  * #554: Add theme option \"sidebarwidth\" to the basic theme.\n+\n+* Other builders:\n+\n+  * #516: Added new value of the \"latex_show_urls\" option to show the\n+    URLs in footnotes.\n+\n+  * #209: Added \"text_newlines\" and \"text_sectionchars\" config values.\n+\n+  * Added \"man_show_urls\" config value.\n+\n+  * #472: linkcheck builder: Check links in parallel, use HTTP HEAD\n+    requests and allow configuring the timeout.  New config values:\n+    \"linkcheck_timeout\" and \"linkcheck_workers\".\n+\n+  * #521: Added \"linkcheck_ignore\" config value.\n+\n+  * #28: Support row/colspans in tables in the LaTeX builder.\n+\n+* Configuration and extensibility:\n+\n+  * #537: Added \"nitpick_ignore\".\n+\n+  * #306: Added >>:event:`env-get-outdated`<< event.\n+\n+  * \"Application.add_stylesheet()\" now accepts full URIs.\n+\n+* Autodoc:\n+\n+  * #564: Add \"autodoc_docstring_signature\".  When enabled (the\n+    default), autodoc retrieves the signature from the first line of\n+    the docstring, if it is found there.\n+\n+  * #176: Provide \"private-members\" option for autodoc directives.\n+\n+  * #520: Provide \"special-members\" option for autodoc directives.\n+\n+  * #431: Doc comments for attributes can now be given on the same\n+    line as the assignment.\n+\n+  * #437: autodoc now shows values of class data attributes.\n+\n+  * autodoc now supports documenting the signatures of\n+    \"functools.partial\" objects.\n+\n+* Other extensions:\n+\n+  * Added the \"sphinx.ext.mathjax\" extension.\n+\n+  * #443: Allow referencing external graphviz files.\n+\n+  * Added \"inline\" option to graphviz directives, and fixed the\n+    default (block-style) in LaTeX output.\n+\n+  * #590: Added \"caption\" option to graphviz directives.\n+\n+  * #553: Added \"testcleanup\" blocks in the doctest extension.\n+\n+  * #594: \"trim_doctest_flags\" now also removes \"<BLANKLINE>\"\n+    indicators.\n+\n+  * #367: Added automatic exclusion of hidden members in inheritance\n+    diagrams, and an option to selectively enable it.\n+\n+  * Added \"pngmath_add_tooltips\".\n+\n+  * The math extension displaymath directives now support \"name\" in\n+    addition to \"label\" for giving the equation label, for\n+    compatibility with Docutils.\n+\n+* New locales:\n+\n+  * #221: Added Swedish locale.\n+\n+  * #526: Added Iranian locale.\n+\n+  * #694: Added Latvian locale.\n+\n+  * Added Nepali locale.\n+\n+  * #714: Added Korean locale.\n+\n+  * #766: Added Estonian locale.\n+\n+* Bugs fixed:\n+\n+  * #778: Fix \"hide search matches\" link on pages linked by search.\n+\n+  * Fix the source positions referenced by the \"viewcode\" extension.\n+\n+\n+Release 1.0.8 (Sep 23, 2011)\n+============================\n+\n+* #627: Fix tracebacks for AttributeErrors in autosummary generation.\n+\n+* Fix the \"abbr\" role when the abbreviation has newlines in it.\n+\n+* #727: Fix the links to search results with custom object types.\n+\n+* #648: Fix line numbers reported in warnings about undefined\n+  references.\n+\n+* #696, #666: Fix C++ array definitions and template arguments that\n+  are not type names.\n+\n+* #633: Allow footnotes in section headers in LaTeX output.\n+\n+* #616: Allow keywords to be linked via intersphinx.\n+\n+* #613: Allow Unicode characters in production list token names.\n+\n+* #720: Add dummy visitors for graphviz nodes for text and man.\n+\n+* #704: Fix image file duplication bug.\n+\n+* #677: Fix parsing of multiple signatures in C++ domain.\n+\n+* #637: Ignore Emacs lock files when looking for source files.\n+\n+* #544: Allow .pyw extension for importable modules in autodoc.\n+\n+* #700: Use \"$(MAKE)\" in quickstart-generated Makefiles.\n+\n+* #734: Make sidebar search box width consistent in browsers.\n+\n+* #644: Fix spacing of centered figures in HTML output.\n+\n+* #767: Safely encode SphinxError messages when printing them to\n+  sys.stderr.\n+\n+* #611: Fix LaTeX output error with a document with no sections but a\n+  link target.\n+\n+* Correctly treat built-in method descriptors as methods in autodoc.\n+\n+* #706: Stop monkeypatching the Python textwrap module.\n+\n+* #657: viewcode now works correctly with source files that have non-\n+  ASCII encoding.\n+\n+* #669: Respect the \"noindex\" flag option in py:module directives.\n+\n+* #675: Fix IndexErrors when including nonexisting lines with\n+  \"literalinclude\".\n+\n+* #676: Respect custom function/method parameter separator strings.\n+\n+* #682: Fix JS incompatibility with jQuery >= 1.5.\n+\n+* #693: Fix double encoding done when writing HTMLHelp .hhk files.\n+\n+* #647: Do not apply SmartyPants in parsed-literal blocks.\n+\n+* C++ domain now supports array definitions.\n+\n+\n+Release 1.0.7 (Jan 15, 2011)\n+============================\n+\n+* #347: Fix wrong generation of directives of static methods in\n+  autosummary.\n+\n+* #599: Import PIL as \"from PIL import Image\".\n+\n+* #558: Fix longtables with captions in LaTeX output.\n+\n+* Make token references work as hyperlinks again in LaTeX output.\n+\n+* #572: Show warnings by default when reference labels cannot be\n+  found.\n+\n+* #536: Include line number when complaining about missing reference\n+  targets in nitpicky mode.\n+\n+* #590: Fix inline display of graphviz diagrams in LaTeX output.\n+\n+* #589: Build using app.build() in setup command.\n+\n+* Fix a bug in the inheritance diagram exception that caused base\n+  classes to be skipped if one of them is a builtin.\n+\n+* Fix general index links for C++ domain objects.\n+\n+* #332: Make admonition boundaries in LaTeX output visible.\n+\n+* #573: Fix KeyErrors occurring on rebuild after removing a file.\n+\n+* Fix a traceback when removing files with globbed toctrees.\n+\n+* If an autodoc object cannot be imported, always re-read the document\n+  containing the directive on next build.\n+\n+* If an autodoc object cannot be imported, show the full traceback of\n+  the import error.\n+\n+* Fix a bug where the removal of download files and images wasn't\n+  noticed.\n+\n+* #571: Implement \"~\" cross-reference prefix for the C domain.\n+\n+* Fix regression of LaTeX output with the fix of #556.\n+\n+* #568: Fix lookup of class attribute documentation on descriptors so\n+  that comment documentation now works.\n+\n+* Fix traceback with \"only\" directives preceded by targets.\n+\n+* Fix tracebacks occurring for duplicate C++ domain objects.\n+\n+* Fix JavaScript domain links to objects with \"$\" in their name.\n+\n+\n+Release 1.0.6 (Jan 04, 2011)\n+============================\n+\n+* #581: Fix traceback in Python domain for empty cross-reference\n+  targets.\n+\n+* #283: Fix literal block display issues on Chrome browsers.\n+\n+* #383, #148: Support sorting a limited range of accented characters\n+  in the general index and the glossary.\n+\n+* #570: Try decoding \"-D\" and \"-A\" command-line arguments with the\n+  locale's preferred encoding.\n+\n+* #528: Observe \"locale_dirs\" when looking for the JS translations\n+  file.\n+\n+* #574: Add special code for better support of Japanese documents in\n+  the LaTeX builder.\n+\n+* Regression of #77: If there is only one parameter given with\n+  \":param:\" markup, the bullet list is now suppressed again.\n+\n+* #556: Fix missing paragraph breaks in LaTeX output in certain\n+  situations.\n+\n+* #567: Emit the \"autodoc-process-docstring\" event even for objects\n+  without a docstring so that it can add content.\n+\n+* #565: In the LaTeX builder, not only literal blocks require\n+  different table handling, but also quite a few other list-like block\n+  elements.\n+\n+* #515: Fix tracebacks in the viewcode extension for Python objects\n+  that do not have a valid signature.\n+\n+* Fix strange reports of line numbers for warnings generated from\n+  autodoc-included docstrings, due to different behavior depending on\n+  docutils version.\n+\n+* Several fixes to the C++ domain.\n+\n+\n+Release 1.0.5 (Nov 12, 2010)\n+============================\n+\n+* #557: Add CSS styles required by docutils 0.7 for aligned images and\n+  figures.\n+\n+* In the Makefile generated by LaTeX output, do not delete pdf files\n+  on clean; they might be required images.\n+\n+* #535: Fix LaTeX output generated for line blocks.\n+\n+* #544: Allow \".pyw\" as a source file extension.\n+\n+\n+Release 1.0.4 (Sep 17, 2010)\n+============================\n+\n+* #524: Open intersphinx inventories in binary mode on Windows, since\n+  version 2 contains zlib-compressed data.\n+\n+* #513: Allow giving non-local URIs for JavaScript files, e.g. in the\n+  JSMath extension.\n+\n+* #512: Fix traceback when \"intersphinx_mapping\" is empty.\n+\n+\n+Release 1.0.3 (Aug 23, 2010)\n+============================\n+\n+* #495: Fix internal vs. external link distinction for links coming\n+  from a docutils table-of-contents.\n+\n+* #494: Fix the \"maxdepth\" option for the \"toctree()\" template\n+  callable when used with \"collapse=True\".\n+\n+* #507: Fix crash parsing Python argument lists containing brackets in\n+  string literals.\n+\n+* #501: Fix regression when building LaTeX docs with figures that\n+  don't have captions.\n+\n+* #510: Fix inheritance diagrams for classes that are not picklable.\n+\n+* #497: Introduce separate background color for the sidebar collapse\n+  button, making it easier to see.\n+\n+* #502, #503, #496: Fix small layout bugs in several builtin themes.\n+\n+\n+Release 1.0.2 (Aug 14, 2010)\n+============================\n+\n+* #490: Fix cross-references to objects of types added by the\n+  \"add_object_type()\" API function.\n+\n+* Fix handling of doc field types for different directive types.\n+\n+* Allow breaking long signatures, continuing with backlash-escaped\n+  newlines.\n+\n+* Fix unwanted styling of C domain references (because of a namespace\n+  clash with Pygments styles).\n+\n+* Allow references to PEPs and RFCs with explicit anchors.\n+\n+* #471: Fix LaTeX references to figures.\n+\n+* #482: When doing a non-exact search, match only the given type of\n+  object.\n+\n+* #481: Apply non-exact search for Python reference targets with\n+  \".name\" for modules too.\n+\n+* #484: Fix crash when duplicating a parameter in an info field list.\n+\n+* #487: Fix setting the default role to one provided by the\n+  \"oldcmarkup\" extension.\n+\n+* #488: Fix crash when json-py is installed, which provides a \"json\"\n+  module but is incompatible to simplejson.\n+\n+* #480: Fix handling of target naming in intersphinx.\n+\n+* #486: Fix removal of \"!\" for all cross-reference roles.\n+\n+\n+Release 1.0.1 (Jul 27, 2010)\n+============================\n+\n+* #470: Fix generated target names for reST domain objects; they are\n+  not in the same namespace.\n+\n+* #266: Add Bengali language.\n+\n+* #473: Fix a bug in parsing JavaScript object names.\n+\n+* #474: Fix building with SingleHTMLBuilder when there is no toctree.\n+\n+* Fix display names for objects linked to by intersphinx with explicit\n+  targets.\n+\n+* Fix building with the JSON builder.\n+\n+* Fix hyperrefs in object descriptions for LaTeX.\n+\n+\n+Release 1.0 (Jul 23, 2010)\n+==========================\n+\n+\n+Incompatible changes\n+--------------------\n+\n+* Support for domains has been added.  A domain is a collection of\n+  directives and roles that all describe objects belonging together,\n+  e.g. elements of a programming language.  A few builtin domains are\n+  provided:\n+\n+  * Python\n+\n+  * C\n+\n+  * C++\n+\n+  * JavaScript\n+\n+  * reStructuredText\n+\n+* The old markup for defining and linking to C directives is now\n+  deprecated.  It will not work anymore in future versions without\n+  activating the \"oldcmarkup\" extension; in Sphinx 1.0, it is\n+  activated by default.\n+\n+* Removed support for old dependency versions; requirements are now:\n+\n+  * docutils >= 0.5\n+\n+  * Jinja2   >= 2.2\n+\n+* Removed deprecated elements:\n+\n+  * \"exclude_dirs\" config value\n+\n+  * \"sphinx.builder\" module\n+\n+\n+Features added\n+--------------\n+\n+* General:\n+\n+  * Added a \"nitpicky\" mode that emits warnings for all missing\n+    references.  It is activated by the \"sphinx-build -n\" command-line\n+    switch or the >>:confval:`nitpicky`<< config value.\n+\n+  * Added \"latexpdf\" target in quickstart Makefile.\n+\n+* Markup:\n+\n+  * The \"menuselection\" and \"guilabel\" roles now support ampersand\n+    accelerators.\n+\n+  * New more compact doc field syntax is now recognized: \":param type\n+    name: description\".\n+\n+  * Added \"tab-width\" option to \"literalinclude\" directive.\n+\n+  * Added \"titlesonly\" option to \"toctree\" directive.\n+\n+  * Added the \"prepend\" and \"append\" options to the \"literalinclude\"\n+    directive.\n+\n+  * #284: All docinfo metadata is now put into the document metadata,\n+    not just the author.\n+\n+  * The \"ref\" role can now also reference tables by caption.\n+\n+  * The >>:dudir:`include`<< directive now supports absolute paths,\n+    which are interpreted as relative to the source directory.\n+\n+  * In the Python domain, references like \":func:`.name`\" now look for\n+    matching names with any prefix if no direct match is found.\n+\n+* Configuration:\n+\n+  * Added \"rst_prolog\" config value.\n+\n+  * Added \"html_secnumber_suffix\" config value to control section\n+    numbering format.\n+\n+  * Added \"html_compact_lists\" config value to control docutils'\n+    compact lists feature.\n+\n+  * The \"html_sidebars\" config value can now contain patterns as keys,\n+    and the values can be lists that explicitly select which sidebar\n+    templates should be rendered.  That means that the builtin sidebar\n+    contents can be included only selectively.\n+\n+  * \"html_static_path\" can now contain single file entries.\n+\n+  * The new universal config value \"exclude_patterns\" makes the old\n+    \"unused_docs\", \"exclude_trees\" and \"exclude_dirnames\" obsolete.\n+\n+  * Added \"html_output_encoding\" config value.\n+\n+  * Added the \"latex_docclass\" config value and made the \"twoside\"\n+    documentclass option overridable by \"oneside\".\n+\n+  * Added the \"trim_doctest_flags\" config value, which is true by\n+    default.\n+\n+  * Added \"html_show_copyright\" config value.\n+\n+  * Added \"latex_show_pagerefs\" and \"latex_show_urls\" config values.\n+\n+  * The behavior of \"html_file_suffix\" changed slightly: the empty\n+    string now means \"no suffix\" instead of \"default suffix\", use\n+    \"None\" for \"default suffix\".\n+\n+* New builders:\n+\n+  * Added a builder for the Epub format.\n+\n+  * Added a builder for manual pages.\n+\n+  * Added a single-file HTML builder.\n+\n+* HTML output:\n+\n+  * Inline roles now get a CSS class with their name, allowing styles\n+    to customize their appearance.  Domain-specific roles get two\n+    classes, \"domain\" and \"domain-rolename\".\n+\n+  * References now get the class \"internal\" if they are internal to\n+    the whole project, as opposed to internal to the current page.\n+\n+  * External references can be styled differently with the new\n+    \"externalrefs\" theme option for the default theme.\n+\n+  * In the default theme, the sidebar can experimentally now be made\n+    collapsible using the new \"collapsiblesidebar\" theme option.\n+\n+  * #129: Toctrees are now wrapped in a \"div\" tag with class \"toctree-\n+    wrapper\" in HTML output.\n+\n+  * The \"toctree\" callable in templates now has a \"maxdepth\" keyword\n+    argument to control the depth of the generated tree.\n+\n+  * The \"toctree\" callable in templates now accepts a \"titles_only\"\n+    keyword argument.\n+\n+  * Added \"htmltitle\" block in layout template.\n+\n+  * In the JavaScript search, allow searching for object names\n+    including the module name, like \"sys.argv\".\n+\n+  * Added new theme \"haiku\", inspired by the Haiku OS user guide.\n+\n+  * Added new theme \"nature\".\n+\n+  * Added new theme \"agogo\", created by Andi Albrecht.\n+\n+  * Added new theme \"scrolls\", created by Armin Ronacher.\n+\n+  * #193: Added a \"visitedlinkcolor\" theme option to the default\n+    theme.\n+\n+  * #322: Improved responsiveness of the search page by loading the\n+    search index asynchronously.\n+\n+* Extension API:\n+\n+  * Added >>:event:`html-collect-pages`<<.\n+\n+  * Added \"needs_sphinx\" config value and \"require_sphinx()\"\n+    application API method.\n+\n+  * #200: Added \"add_stylesheet()\" application API method.\n+\n+* Extensions:\n+\n+  * Added the \"viewcode\" extension.\n+\n+  * Added the \"extlinks\" extension.\n+\n+  * Added support for source ordering of members in autodoc, with\n+    \"autodoc_member_order = 'bysource'\".\n+\n+  * Added \"autodoc_default_flags\" config value, which can be used to\n+    select default flags for all autodoc directives.\n+\n+  * Added a way for intersphinx to refer to named labels in other\n+    projects, and to specify the project you want to link to.\n+\n+  * #280: Autodoc can now document instance attributes assigned in\n+    \"__init__\" methods.\n+\n+  * Many improvements and fixes to the \"autosummary\" extension, thanks\n+    to Pauli Virtanen.\n+\n+  * #309: The \"graphviz\" extension can now output SVG instead of PNG\n+    images, controlled by the \"graphviz_output_format\" config value.\n+\n+  * Added \"alt\" option to \"graphviz\" extension directives.\n+\n+  * Added \"exclude\" argument to \"autodoc.between()\".\n+\n+* Translations:\n+\n+  * Added Croatian translation, thanks to Bojan Mihela\u010d.\n+\n+  * Added Turkish translation, thanks to Firat Ozgul.\n+\n+  * Added Catalan translation, thanks to Pau Fern\u00e1ndez.\n+\n+  * Added simplified Chinese translation.\n+\n+  * Added Danish translation, thanks to Hjorth Larsen.\n+\n+  * Added Lithuanian translation, thanks to Dalius Dobravolskas.\n+\n+* Bugs fixed:\n+\n+  * #445: Fix links to result pages when using the search function of\n+    HTML built with the \"dirhtml\" builder.\n+\n+  * #444: In templates, properly re-escape values treated with the\n+    \"striptags\" Jinja filter.\n+\n+\n+Previous versions\n+=================\n+\n+The changelog for versions before 1.0 can be found in the file\n+\"CHANGES.old\" in the source distribution or at GitHub.\ndiff --git a/_build/doc/contents.txt b/_build/doc/contents.txt\nnew file mode 100644\nindex 000000000..aca9fbd63\n--- /dev/null\n+++ b/_build/doc/contents.txt\n@@ -0,0 +1,130 @@\n+Sphinx documentation contents\n+*****************************\n+\n+* Using Sphinx\n+\n+  * Getting Started\n+\n+  * Installing Sphinx\n+\n+  * reStructuredText\n+\n+  * Markdown\n+\n+  * Configuration\n+\n+  * Builders\n+\n+  * Extensions\n+\n+  * HTML Theming\n+\n+  * Internationalization\n+\n+  * Setuptools integration\n+\n+  * Sphinx Web Support\n+\n+* Extending Sphinx\n+\n+  * Developing extensions overview\n+\n+  * Extension tutorials\n+\n+  * Configuring builders\n+\n+  * HTML theme development\n+\n+* Man Pages\n+\n+  * Core Applications\n+\n+  * Additional Applications\n+\n+* Templating\n+\n+  * Do I need to use Sphinx's templates to produce HTML?\n+\n+  * Jinja/Sphinx Templating Primer\n+\n+  * Working with the builtin templates\n+\n+* LaTeX customization\n+\n+  * The \"latex_elements\" configuration setting\n+\n+  * The \"sphinxsetup\" configuration setting\n+\n+  * LaTeX macros and environments\n+\n+* Developing extensions for Sphinx\n+\n+  * Important objects\n+\n+  * Build Phases\n+\n+  * Extension metadata\n+\n+  * APIs used for writing extensions\n+\n+* Sphinx internals\n+\n+  * Contributing to Sphinx\n+\n+  * Sphinx's release process\n+\n+  * Organization of the Sphinx project\n+\n+  * Sphinx Code of Conduct\n+\n+  * Sphinx authors\n+\n+* Sphinx FAQ\n+\n+  * How do I...\n+\n+  * Using Sphinx with...\n+\n+  * Sphinx vs. Docutils\n+\n+  * Epub info\n+\n+  * Texinfo info\n+\n+* Glossary\n+\n+* Changelog\n+\n+* Projects using Sphinx\n+\n+  * Documentation using the alabaster theme\n+\n+  * Documentation using the classic theme\n+\n+  * Documentation using the sphinxdoc theme\n+\n+  * Documentation using the nature theme\n+\n+  * Documentation using another builtin theme\n+\n+  * Documentation using sphinx_rtd_theme\n+\n+  * Documentation using sphinx_bootstrap_theme\n+\n+  * Documentation using a custom theme or integrated in a website\n+\n+  * Homepages and other non-documentation sites\n+\n+  * Books produced using Sphinx\n+\n+  * Theses produced using Sphinx\n+\n+  * Projects integrating Sphinx functionality\n+\n+\n+Indices and tables\n+******************\n+\n+* Module Index\n+\n+* Glossary\ndiff --git a/_build/doc/develop.txt b/_build/doc/develop.txt\nnew file mode 100644\nindex 000000000..aba19d6d4\n--- /dev/null\n+++ b/_build/doc/develop.txt\n@@ -0,0 +1,183 @@\n+Sphinx development\n+******************\n+\n+Sphinx is a maintained by a group of volunteers.  We value every\n+contribution!\n+\n+* The code can be found in a Git repository, at https://github.com\n+  /sphinx-doc/sphinx/.\n+\n+* Issues and feature requests should be raised in the tracker.\n+\n+* The mailing list for development is at Google Groups.\n+\n+* There is also the #sphinx-doc IRC channel on freenode.\n+\n+For more about our development process and methods, refer to\n+*/internals/index*.\n+\n+\n+Extensions\n+**********\n+\n+To learn how to write your own extension, see Developing extensions\n+for Sphinx.\n+\n+The sphinx-contrib repository contains many contributed extensions.\n+Some of them have their own releases on PyPI, others you can install\n+from a checkout.\n+\n+This is the current list of contributed extensions in that repository:\n+\n+* aafig: render embedded ASCII art as nice images using aafigure\n+\n+* actdiag: embed activity diagrams by using actdiag\n+\n+* adadomain: an extension for Ada support (Sphinx 1.0 needed)\n+\n+* ansi: parse ANSI color sequences inside documents\n+\n+* argdoc: automatically generate documentation for command-line\n+  arguments, descriptions and help text\n+\n+* astah: embed diagram by using astah\n+\n+* autoanysrc: Gather reST documentation from any source files\n+\n+* autorun: Execute code in a \"runblock\" directive\n+\n+* beamer: A builder for Beamer (LaTeX) output.\n+\n+* blockdiag: embed block diagrams by using blockdiag\n+\n+* cacoo: embed diagram from Cacoo\n+\n+* cf3domain: a domain for CFEngine 3 policies\n+\n+* cheader: The missing c:header directive for Sphinx's built-in C\n+  domain\n+\n+* cheeseshop: easily link to PyPI packages\n+\n+* clearquest: create tables from ClearQuest queries\n+\n+* cmakedomain: a domain for CMake\n+\n+* coffeedomain: a domain for (auto)documenting CoffeeScript source\n+  code\n+\n+* context: a builder for ConTeXt\n+\n+* disqus: embed Disqus comments in documents\n+\n+* documentedlist: converts a Python list to a table in the generated\n+  documentation\n+\n+* doxylink: Link to external Doxygen-generated HTML documentation\n+\n+* domaintools: A tool for easy domain creation\n+\n+* email: obfuscate email addresses\n+\n+* erlangdomain: an extension for Erlang support (Sphinx 1.0 needed)\n+\n+* exceltable: embed Excel spreadsheets into documents using exceltable\n+\n+* feed: an extension for creating syndication feeds and time-based\n+  overviews from your site content\n+\n+* findanything: an extension to add Sublime Text 2-like findanything\n+  panels to your documentation to find pages, sections and index\n+  entries while typing\n+\n+* gnuplot: produces images using gnuplot language\n+\n+* googleanalytics: track web visitor statistics by using Google\n+  Analytics\n+\n+* googlechart: embed charts by using Google Chart\n+\n+* googlemaps: embed maps by using Google Maps\n+\n+* httpdomain: a domain for documenting RESTful HTTP APIs\n+\n+* hyphenator: client-side hyphenation of HTML using hyphenator\n+\n+* imgur: embed Imgur images, albums, and metadata in documents\n+\n+* inlinesyntaxhighlight: inline syntax highlighting\n+\n+* lassodomain: a domain for documenting Lasso source code\n+\n+* libreoffice: an extension to include any drawing supported by\n+  LibreOffice (e.g. odg, vsd, ...)\n+\n+* lilypond: an extension inserting music scripts from Lilypond in PNG\n+  format\n+\n+* makedomain: a domain for GNU Make\n+\n+* matlabdomain: document MATLAB code\n+\n+* mockautodoc: mock imports\n+\n+* mscgen: embed mscgen-formatted MSC (Message Sequence Chart)s\n+\n+* napoleon: supports Google style and NumPy style docstrings\n+\n+* nicovideo: embed videos from nicovideo\n+\n+* nwdiag: embed network diagrams by using nwdiag\n+\n+* omegat: support tools to collaborate with OmegaT (Sphinx 1.1 needed)\n+\n+* osaka: convert standard Japanese doc to Osaka dialect (this is a\n+  joke extension)\n+\n+* paverutils: an alternate integration of Sphinx with Paver\n+\n+* phpdomain: an extension for PHP support\n+\n+* plantuml: embed UML diagram by using PlantUML\n+\n+* py_directive: Execute python code in a \"py\" directive and return a\n+  math node\n+\n+* rawfiles: copy raw files, like a CNAME\n+\n+* requirements: declare requirements wherever you need (e.g. in test\n+  docstrings), mark statuses and collect them in a single list\n+\n+* restbuilder: a builder for reST (reStructuredText) files\n+\n+* rubydomain: an extension for Ruby support (Sphinx 1.0 needed)\n+\n+* sadisplay: display SqlAlchemy model sadisplay\n+\n+* sdedit: an extension inserting sequence diagram by using Quick\n+  Sequence Diagram Editor (sdedit)\n+\n+* seqdiag: embed sequence diagrams by using seqdiag\n+\n+* slide: embed presentation slides on slideshare and other sites\n+\n+* swf: embed flash files\n+\n+* sword: an extension inserting Bible verses from Sword\n+\n+* tikz: draw pictures with the TikZ/PGF LaTeX package\n+\n+* traclinks: create TracLinks to a Trac instance from within Sphinx\n+\n+* versioning: Sphinx extension that allows building versioned docs for\n+  self-hosting\n+\n+* whooshindex: whoosh indexer extension\n+\n+* youtube: embed videos from YouTube\n+\n+* zopeext: provide an \"autointerface\" directive for using Zope\n+  interfaces\n+\n+See the *extension tutorials* on getting started with writing your own\n+extensions.\ndiff --git a/_build/doc/development/builders.txt b/_build/doc/development/builders.txt\nnew file mode 100644\nindex 000000000..43ea0983a\n--- /dev/null\n+++ b/_build/doc/development/builders.txt\n@@ -0,0 +1,32 @@\n+Configuring builders\n+********************\n+\n+\n+Discover builders by entry point\n+================================\n+\n+New in version 1.6.\n+\n+*builder* extensions can be discovered by means of entry points so\n+that they do not have to be listed in the >>:confval:`extensions`<<\n+configuration value.\n+\n+Builder extensions should define an entry point in the\n+\"sphinx.builders\" group. The name of the entry point needs to match\n+your builder's \"name\" attribute, which is the name passed to the\n+\"sphinx-build -b\" option. The entry point value should equal the\n+dotted name of the extension module. Here is an example of how an\n+entry point for 'mybuilder' can be defined in the extension's\n+\"setup.py\"\n+\n+   setup(\n+       # ...\n+       entry_points={\n+           'sphinx.builders': [\n+               'mybuilder = my.extension.module',\n+           ],\n+       }\n+   )\n+\n+Note that it is still necessary to register the builder using\n+\"add_builder()\" in the extension's \"setup()\" function.\ndiff --git a/_build/doc/development/index.txt b/_build/doc/development/index.txt\nnew file mode 100644\nindex 000000000..325b7fba2\n--- /dev/null\n+++ b/_build/doc/development/index.txt\n@@ -0,0 +1,34 @@\n+Extending Sphinx\n+****************\n+\n+This guide is aimed at those wishing to develop their own extensions\n+for Sphinx. Sphinx possesses significant extensibility capabilities\n+including the ability to hook into almost every point of the build\n+process.  If you simply wish to use Sphinx with existing extensions,\n+refer to */usage/index*.\n+\n+* Developing extensions overview\n+\n+  * Make an extension depend on another extension\n+\n+* Extension tutorials\n+\n+  * Developing a \"Hello world\" extension\n+\n+  * Developing a \"TODO\" extension\n+\n+  * Developing a \"recipe\" extension\n+\n+* Configuring builders\n+\n+  * Discover builders by entry point\n+\n+Theming\n+\n+* HTML theme development\n+\n+  * Creating themes\n+\n+  * Distribute your theme as a Python package\n+\n+  * Templating\ndiff --git a/_build/doc/development/overview.txt b/_build/doc/development/overview.txt\nnew file mode 100644\nindex 000000000..bdc4f5591\n--- /dev/null\n+++ b/_build/doc/development/overview.txt\n@@ -0,0 +1,30 @@\n+Developing extensions overview\n+******************************\n+\n+This page contains general information about developing Sphinx\n+extensions.\n+\n+\n+Make an extension depend on another extension\n+=============================================\n+\n+Sometimes your extension depends on the functionality of another\n+Sphinx extension. Most Sphinx extensions are activated in a project's\n+\"conf.py\" file, but this is not available to you as an extension\n+developer.\n+\n+To ensure that another extension is activated as a part of your own\n+extension, use the \"Sphinx.setup_extension()\" method. This will\n+activate another extension at run-time, ensuring that you have access\n+to its functionality.\n+\n+For example, the following code activates the \"recommonmark\"\n+extension:\n+\n+   def setup(app):\n+       app.setup_extension(\"recommonmark\")\n+\n+Note:\n+\n+  Since your extension will depend on another, make sure to include it\n+  as a part of your extension's installation requirements.\ndiff --git a/_build/doc/development/theming.txt b/_build/doc/development/theming.txt\nnew file mode 100644\nindex 000000000..26d4f1e4a\n--- /dev/null\n+++ b/_build/doc/development/theming.txt\n@@ -0,0 +1,327 @@\n+HTML theme development\n+**********************\n+\n+New in version 0.6.\n+\n+Note:\n+\n+  This document provides information about creating your own theme. If\n+  you simply wish to use a pre-existing HTML themes, refer to\n+  */usage/theming*.\n+\n+Sphinx supports changing the appearance of its HTML output via\n+*themes*.  A theme is a collection of HTML templates, stylesheet(s)\n+and other static files. Additionally, it has a configuration file\n+which specifies from which theme to inherit, which highlighting style\n+to use, and what options exist for customizing the theme's look and\n+feel.\n+\n+Themes are meant to be project-unaware, so they can be used for\n+different projects without change.\n+\n+Note:\n+\n+  See Developing extensions for Sphinx for more information that may\n+  be helpful in developing themes.\n+\n+\n+Creating themes\n+===============\n+\n+Themes take the form of either a directory or a zipfile (whose name is\n+the theme name), containing the following:\n+\n+* A \"theme.conf\" file.\n+\n+* HTML templates, if needed.\n+\n+* A \"static/\" directory containing any static files that will be\n+  copied to the output static directory on build.  These can be\n+  images, styles, script files.\n+\n+The \"theme.conf\" file is in INI format [1] (readable by the standard\n+Python \"ConfigParser\" module) and has the following structure:\n+\n+   [theme]\n+   inherit = base theme\n+   stylesheet = main CSS name\n+   pygments_style = stylename\n+   sidebars = localtoc.html, relations.html, sourcelink.html, searchbox.html\n+\n+   [options]\n+   variable = default value\n+\n+* The **inherit** setting gives the name of a \"base theme\", or \"none\".\n+  The base theme will be used to locate missing templates (most themes\n+  will not have to supply most templates if they use \"basic\" as the\n+  base theme), its options will be inherited, and all of its static\n+  files will be used as well. If you want to also inherit the\n+  stylesheet, include it via CSS' \"@import\" in your own.\n+\n+* The **stylesheet** setting gives the name of a CSS file which will\n+  be referenced in the HTML header.  If you need more than one CSS\n+  file, either include one from the other via CSS' \"@import\", or use a\n+  custom HTML template that adds \"<link rel=\"stylesheet\">\" tags as\n+  necessary.  Setting the >>:confval:`html_style`<< config value will\n+  override this setting.\n+\n+* The **pygments_style** setting gives the name of a Pygments style to\n+  use for highlighting.  This can be overridden by the user in the\n+  >>:confval:`pygments_style`<< config value.\n+\n+* The **pygments_dark_style** setting gives the name of a Pygments\n+  style to use for highlighting when the CSS media query \"(prefers-\n+  color-scheme: dark)\" evaluates to true. It is injected into the page\n+  using \"add_css_file()\".\n+\n+* The **sidebars** setting gives the comma separated list of sidebar\n+  templates for constructing sidebars.  This can be overridden by the\n+  user in the >>:confval:`html_sidebars`<< config value.\n+\n+* The **options** section contains pairs of variable names and default\n+  values. These options can be overridden by the user in\n+  >>:confval:`html_theme_options`<< and are accessible from all\n+  templates as \"theme_<name>\".\n+\n+New in version 1.7: sidebar settings\n+\n+\n+Distribute your theme as a Python package\n+=========================================\n+\n+As a way to distribute your theme, you can use Python package.  Python\n+package brings to users easy setting up ways.\n+\n+To distribute your theme as a Python package, please define an entry\n+point called \"sphinx.html_themes\" in your \"setup.py\" file, and write a\n+\"setup()\" function to register your themes using \"add_html_theme()\"\n+API in it:\n+\n+   # 'setup.py'\n+   setup(\n+       ...\n+       entry_points = {\n+           'sphinx.html_themes': [\n+               'name_of_theme = your_package',\n+           ]\n+       },\n+       ...\n+   )\n+\n+   # 'your_package.py'\n+   from os import path\n+\n+   def setup(app):\n+       app.add_html_theme('name_of_theme', path.abspath(path.dirname(__file__)))\n+\n+If your theme package contains two or more themes, please call\n+\"add_html_theme()\" twice or more.\n+\n+New in version 1.2: 'sphinx_themes' entry_points feature.\n+\n+Deprecated since version 1.6: \"sphinx_themes\" entry_points has been\n+deprecated.\n+\n+New in version 1.6: \"sphinx.html_themes\" entry_points feature.\n+\n+\n+Templating\n+==========\n+\n+The *guide to templating* is helpful if you want to write your own\n+templates.  What is important to keep in mind is the order in which\n+Sphinx searches for templates:\n+\n+* First, in the user's \"templates_path\" directories.\n+\n+* Then, in the selected theme.\n+\n+* Then, in its base theme, its base's base theme, etc.\n+\n+When extending a template in the base theme with the same name, use\n+the theme name as an explicit directory: \"{% extends\n+\"basic/layout.html\" %}\".  From a user \"templates_path\" template, you\n+can still use the \"exclamation mark\" syntax as described in the\n+templating document.\n+\n+\n+Static templates\n+----------------\n+\n+Since theme options are meant for the user to configure a theme more\n+easily, without having to write a custom stylesheet, it is necessary\n+to be able to template static files as well as HTML files.  Therefore,\n+Sphinx supports so-called \"static templates\", like this:\n+\n+If the name of a file in the \"static/\" directory of a theme (or in the\n+user's static path, for that matter) ends with \"_t\", it will be\n+processed by the template engine.  The \"_t\" will be left from the\n+final file name.  For example, the *classic* theme has a file\n+\"static/classic.css_t\" which uses templating to put the color options\n+into the stylesheet.  When a documentation is built with the classic\n+theme, the output directory will contain a \"_static/classic.css\" file\n+where all template tags have been processed.\n+\n+\n+Use custom page metadata in HTML templates\n+------------------------------------------\n+\n+Any key / value pairs in *field lists* that are placed *before* the\n+page's title will be available to the Jinja template when building the\n+page within the \"meta\" attribute. For example, if a page had the\n+following text before its first title:\n+\n+   :mykey: My value\n+\n+   My first title\n+   --------------\n+\n+Then it could be accessed within a Jinja template like so:\n+\n+   {%- if meta is mapping %}\n+       {{ meta.get(\"mykey\") }}\n+   {%- endif %}\n+\n+Note the check that \"meta\" is a dictionary (\"mapping\" in Jinja\n+terminology) to ensure that using it in this way is valid.\n+\n+\n+Defining custom template functions\n+----------------------------------\n+\n+Sometimes it is useful to define your own function in Python that you\n+wish to then use in a template. For example, if you'd like to insert a\n+template value with logic that depends on the user's configuration in\n+the project, or if you'd like to include non-trivial checks and\n+provide friendly error messages for incorrect configuration in the\n+template.\n+\n+To define your own template function, you'll need to define two\n+functions inside your module:\n+\n+* A **page context event handler** (or **registration**) function.\n+  This is connected to the \"Sphinx\" application via an event callback.\n+\n+* A **template function** that you will use in your Jinja template.\n+\n+First, define the registration function, which accepts the arguments\n+for >>:event:`html-page-context`<<.\n+\n+Within the registration function, define the template function that\n+you'd like to use within Jinja. The template function should return a\n+string or Python objects (lists, dictionaries) with strings inside\n+that Jinja uses in the templating process\n+\n+Note:\n+\n+  The template function will have access to all of the variables that\n+  are passed to the registration function.\n+\n+At the end of the registration function, add the template function to\n+the Sphinx application's context with \"context['template_func'] =\n+template_func\".\n+\n+Finally, in your extension's \"setup()\" function, add your registration\n+function as a callback for >>:event:`html-page-context`<<.\n+\n+   # The registration function\n+    def setup_my_func(app, pagename, templatename, context, doctree):\n+        # The template function\n+        def my_func(mystring):\n+            return \"Your string is %s\" % mystring\n+        # Add it to the page's context\n+        context['my_func'] = my_func\n+\n+    # Your extension's setup function\n+    def setup(app):\n+        app.connect(\"html-page-context\", setup_my_func)\n+\n+Now, you will have access to this function in jinja like so:\n+\n+   <div>\n+   {{ my_func(\"some string\") }}\n+   </div>\n+\n+\n+Add your own static files to the build assets\n+---------------------------------------------\n+\n+If you are packaging your own build assets with an extension (e.g., a\n+CSS or JavaScript file), you need to ensure that they are placed in\n+the \"_static/\" folder of HTML outputs. To do so, you may copy them\n+directly into a build's \"_static/\" folder at build time, generally via\n+an event hook. Here is some sample code to accomplish this:\n+\n+   def copy_custom_files(app, exc):\n+       if app.builder.format == 'html' and not exc:\n+           staticdir = path.join(app.builder.outdir, '_static')\n+           copy_asset_file('path/to/myextension/_static/myjsfile.js', staticdir)\n+\n+   def setup(app):\n+       app.connect('builder-inited', copy_custom_files)\n+\n+\n+Inject JavaScript based on user configuration\n+---------------------------------------------\n+\n+If your extension makes use of JavaScript, it can be useful to allow\n+users to control its behavior using their Sphinx configuration.\n+However, this can be difficult to do if your JavaScript comes in the\n+form of a static library (which will not be built with Jinja).\n+\n+There are two ways to inject variables into the JavaScript space based\n+on user configuration.\n+\n+First, you may append \"_t\" to the end of any static files included\n+with your extension. This will cause Sphinx to process these files\n+with the templating engine, allowing you to embed variables and\n+control behavior.\n+\n+For example, the following JavaScript structure:\n+\n+   mymodule/\n+   \u251c\u2500\u2500 _static\n+   \u2502\u00a0\u00a0 \u2514\u2500\u2500 myjsfile.js_t\n+   \u2514\u2500\u2500 mymodule.py\n+\n+Will result in the following static file placed in your HTML's build\n+output:\n+\n+   _build/\n+   \u2514\u2500\u2500 html\n+       \u2514\u2500\u2500 _static\n+    \u00a0\u00a0     \u2514\u2500\u2500 myjsfile.js\n+\n+See Static templates for more information.\n+\n+Second, you may use the \"Sphinx.add_js_file()\" method without pointing\n+it to a file. Normally, this method is used to insert a new JavaScript\n+file into your site. However, if you do *not* pass a file path, but\n+instead pass a string to the \"body\" argument, then this text will be\n+inserted as JavaScript into your site's head. This allows you to\n+insert variables into your project's JavaScript from Python.\n+\n+For example, the following code will read in a user-configured value\n+and then insert this value as a JavaScript variable, which your\n+extension's JavaScript code may use:\n+\n+   # This function reads in a variable and inserts it into JavaScript\n+   def add_js_variable(app):\n+       # This is a configuration that you've specified for users in `conf.py`\n+       js_variable = app.config['my_javascript_variable']\n+       js_text = \"var my_variable = '%s';\" % js_variable\n+       app.add_js_file(None, body=js_text)\n+   # We connect this function to the step after the builder is initialized\n+   def setup(app):\n+       # Tell Sphinx about this configuration variable\n+       app.add_config_value('my_javascript_variable')\n+       # Run the function after the builder is initialized\n+       app.connect('builder-inited', add_js_variable)\n+\n+As a result, in your theme you can use code that depends on the\n+presence of this variable. Users can control the variable's value by\n+defining it in their \"conf.py\" file.\n+\n+[1] It is not an executable Python file, as opposed to \"conf.py\",\n+    because that would pose an unnecessary security risk if themes are\n+    shared.\ndiff --git a/_build/doc/development/tutorials/examples/README.txt b/_build/doc/development/tutorials/examples/README.txt\nnew file mode 100644\nindex 000000000..bb8e3d402\n--- /dev/null\n+++ b/_build/doc/development/tutorials/examples/README.txt\n@@ -0,0 +1,9 @@\n+Tutorial examples\n+*****************\n+\n+This directory contains a number of examples used in the tutorials.\n+These are intended to be increasingly complex to demonstrate the\n+various features of Sphinx, but should aim to be as complicated as\n+necessary but no more. Individual sections are referenced by line\n+numbers, meaning if you make changes to the source files, you should\n+update the references in the documentation accordingly.\ndiff --git a/_build/doc/development/tutorials/helloworld.txt b/_build/doc/development/tutorials/helloworld.txt\nnew file mode 100644\nindex 000000000..9cb6210cd\n--- /dev/null\n+++ b/_build/doc/development/tutorials/helloworld.txt\n@@ -0,0 +1,192 @@\n+Developing a \"Hello world\" extension\n+************************************\n+\n+The objective of this tutorial is to create a very basic extension\n+that adds a new directive. This directive will output a paragraph\n+containing \"hello world\".\n+\n+Only basic information is provided in this tutorial. For more\n+information, refer to the other tutorials that go into more details.\n+\n+Warning:\n+\n+  For this extension, you will need some basic understanding of\n+  docutils and Python.\n+\n+\n+Overview\n+========\n+\n+We want the extension to add the following to Sphinx:\n+\n+* A \"helloworld\" directive, that will simply output the text \"hello\n+  world\".\n+\n+\n+Prerequisites\n+=============\n+\n+We will not be distributing this plugin via PyPI and will instead\n+include it as part of an existing project. This means you will need to\n+use an existing project or create a new one using **sphinx-\n+quickstart**.\n+\n+We assume you are using separate source (\"source\") and build (\"build\")\n+folders. Your extension file could be in any folder of your project.\n+In our case, let's do the following:\n+\n+1. Create an \"_ext\" folder in \"source\"\n+\n+2. Create a new Python file in the \"_ext\" folder called\n+   \"helloworld.py\"\n+\n+Here is an example of the folder structure you might obtain:\n+\n+   \u2514\u2500\u2500 source\n+    \u00a0\u00a0 \u251c\u2500\u2500 _ext\n+       \u2502 \u00a0 \u2514\u2500\u2500 helloworld.py\n+    \u00a0\u00a0 \u251c\u2500\u2500 _static\n+    \u00a0\u00a0 \u251c\u2500\u2500 conf.py\n+    \u00a0\u00a0 \u251c\u2500\u2500 somefolder\n+    \u00a0\u00a0 \u251c\u2500\u2500 index.rst\n+    \u00a0\u00a0 \u251c\u2500\u2500 somefile.rst\n+    \u00a0\u00a0 \u2514\u2500\u2500 someotherfile.rst\n+\n+\n+Writing the extension\n+=====================\n+\n+Open \"helloworld.py\" and paste the following code in it:\n+\n+   from docutils import nodes\n+   from docutils.parsers.rst import Directive\n+\n+\n+   class HelloWorld(Directive):\n+\n+       def run(self):\n+           paragraph_node = nodes.paragraph(text='Hello World!')\n+           return [paragraph_node]\n+\n+\n+   def setup(app):\n+       app.add_directive(\"helloworld\", HelloWorld)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+Some essential things are happening in this example, and you will see\n+them for all directives.\n+\n+-[ The directive class ]-\n+\n+Our new directive is declared in the \"HelloWorld\" class.\n+\n+   class HelloWorld(Directive):\n+\n+       def run(self):\n+           paragraph_node = nodes.paragraph(text='Hello World!')\n+           return [paragraph_node]\n+\n+This class extends the docutils' \"Directive\" class. All extensions\n+that create directives should extend this class.\n+\n+See also: The docutils documentation on creating directives\n+\n+This class contains a \"run\" method.  This method is a requirement and\n+it is part of every directive.  It contains the main logic of the\n+directive and it returns a list of docutils nodes to be processed by\n+Sphinx. These nodes are docutils' way of representing the content of a\n+document. There are many types of nodes available: text, paragraph,\n+reference, table, etc.\n+\n+See also: The docutils documentation on nodes\n+\n+The \"nodes.paragraph\" class creates a new paragraph node. A paragraph\n+node typically contains some text that we can set during instantiation\n+using the \"text\" parameter.\n+\n+-[ The \"setup\" function ]-\n+\n+This function is a requirement. We use it to plug our new directive\n+into Sphinx.\n+\n+   def setup(app):\n+       app.add_directive(\"helloworld\", HelloWorld)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+The simplest thing you can do it call the \"add_directive()\" method,\n+which is what we've done here. For this particular call, the first\n+argument is the name of the directive itself as used in a reST file.\n+In this case, we would use \"helloworld\". For example:\n+\n+   Some intro text here...\n+\n+   .. helloworld::\n+\n+   Some more text here...\n+\n+We also return the extension metadata that indicates the version of\n+our extension, along with the fact that it is safe to use the\n+extension for both parallel reading and writing.\n+\n+\n+Using the extension\n+===================\n+\n+The extension has to be declared in your \"conf.py\" file to make Sphinx\n+aware of it. There are two steps necessary here:\n+\n+1. Add the \"_ext\" directory to the Python path using\n+   \"sys.path.append\". This should be placed at the top of the file.\n+\n+2. Update or create the >>:confval:`extensions`<< list and add the\n+   extension file name to the list\n+\n+For example:\n+\n+   import os\n+   import sys\n+\n+   sys.path.append(os.path.abspath(\"./_ext\"))\n+\n+   extensions = ['helloworld']\n+\n+Tip:\n+\n+  We're not distributing this extension as a Python package, we need\n+  to modify the Python path so Sphinx can find our extension. This is\n+  why we need the call to \"sys.path.append\".\n+\n+You can now use the extension in a file. For example:\n+\n+   Some intro text here...\n+\n+   .. helloworld::\n+\n+   Some more text here...\n+\n+The sample above would generate:\n+\n+   Some intro text here...\n+\n+   Hello World!\n+\n+   Some more text here...\n+\n+\n+Further reading\n+===============\n+\n+This is the very basic principle of an extension that creates a new\n+directive.\n+\n+For a more advanced example, refer to Developing a \"TODO\" extension.\ndiff --git a/_build/doc/development/tutorials/index.txt b/_build/doc/development/tutorials/index.txt\nnew file mode 100644\nindex 000000000..60f66018a\n--- /dev/null\n+++ b/_build/doc/development/tutorials/index.txt\n@@ -0,0 +1,13 @@\n+Extension tutorials\n+*******************\n+\n+Refer to the following tutorials to get started with extension\n+development.\n+\n+Directive tutorials\n+\n+* Developing a \"Hello world\" extension\n+\n+* Developing a \"TODO\" extension\n+\n+* Developing a \"recipe\" extension\ndiff --git a/_build/doc/development/tutorials/recipe.txt b/_build/doc/development/tutorials/recipe.txt\nnew file mode 100644\nindex 000000000..84eaf5a69\n--- /dev/null\n+++ b/_build/doc/development/tutorials/recipe.txt\n@@ -0,0 +1,495 @@\n+Developing a \"recipe\" extension\n+*******************************\n+\n+The objective of this tutorial is to illustrate roles, directives and\n+domains. Once complete, we will be able to use this extension to\n+describe a recipe and reference that recipe from elsewhere in our\n+documentation.\n+\n+Note:\n+\n+  This tutorial is based on a guide first published on opensource.com\n+  and is provided here with the original author's permission.\n+\n+\n+Overview\n+========\n+\n+We want the extension to add the following to Sphinx:\n+\n+* A \"recipe\" *directive*, containing some content describing the\n+  recipe steps, along with a \":contains:\" option highlighting the main\n+  ingredients of the recipe.\n+\n+* A \"ref\" *role*, which provides a cross-reference to the recipe\n+  itself.\n+\n+* A \"recipe\" *domain*, which allows us to tie together the above role\n+  and domain, along with things like indices.\n+\n+For that, we will need to add the following elements to Sphinx:\n+\n+* A new directive called \"recipe\"\n+\n+* New indexes to allow us to reference ingredient and recipes\n+\n+* A new domain called \"recipe\", which will contain the \"recipe\"\n+  directive and \"ref\" role\n+\n+\n+Prerequisites\n+=============\n+\n+We need the same setup as in the previous extensions. This time, we\n+will be putting out extension in a file called \"recipe.py\".\n+\n+Here is an example of the folder structure you might obtain:\n+\n+   \u2514\u2500\u2500 source\n+    \u00a0\u00a0 \u251c\u2500\u2500 _ext\n+       \u2502 \u00a0 \u2514\u2500\u2500 recipe.py\n+    \u00a0\u00a0 \u251c\u2500\u2500 conf.py\n+    \u00a0\u00a0 \u2514\u2500\u2500 index.rst\n+\n+\n+Writing the extension\n+=====================\n+\n+Open \"recipe.py\" and paste the following code in it, all of which we\n+will explain in detail shortly:\n+\n+   from collections import defaultdict\n+\n+   from docutils.parsers.rst import directives\n+\n+   from sphinx import addnodes\n+   from sphinx.directives import ObjectDescription\n+   from sphinx.domains import Domain, Index\n+   from sphinx.roles import XRefRole\n+   from sphinx.util.nodes import make_refnode\n+\n+\n+   class RecipeDirective(ObjectDescription):\n+       \"\"\"A custom directive that describes a recipe.\"\"\"\n+\n+       has_content = True\n+       required_arguments = 1\n+       option_spec = {\n+           'contains': directives.unchanged_required,\n+       }\n+\n+       def handle_signature(self, sig, signode):\n+           signode += addnodes.desc_name(text=sig)\n+           return sig\n+\n+       def add_target_and_index(self, name_cls, sig, signode):\n+           signode['ids'].append('recipe' + '-' + sig)\n+           if 'noindex' not in self.options:\n+               ingredients = [\n+                   x.strip() for x in self.options.get('contains').split(',')]\n+\n+               recipes = self.env.get_domain('recipe')\n+               recipes.add_recipe(sig, ingredients)\n+\n+\n+   class IngredientIndex(Index):\n+       \"\"\"A custom index that creates an ingredient matrix.\"\"\"\n+\n+       name = 'ingredient'\n+       localname = 'Ingredient Index'\n+       shortname = 'Ingredient'\n+\n+       def generate(self, docnames=None):\n+           content = defaultdict(list)\n+\n+           recipes = {name: (dispname, typ, docname, anchor)\n+                      for name, dispname, typ, docname, anchor, _\n+                      in self.domain.get_objects()}\n+           recipe_ingredients = self.domain.data['recipe_ingredients']\n+           ingredient_recipes = defaultdict(list)\n+\n+           # flip from recipe_ingredients to ingredient_recipes\n+           for recipe_name, ingredients in recipe_ingredients.items():\n+               for ingredient in ingredients:\n+                   ingredient_recipes[ingredient].append(recipe_name)\n+\n+           # convert the mapping of ingredient to recipes to produce the expected\n+           # output, shown below, using the ingredient name as a key to group\n+           #\n+           # name, subtype, docname, anchor, extra, qualifier, description\n+           for ingredient, recipe_names in ingredient_recipes.items():\n+               for recipe_name in recipe_names:\n+                   dispname, typ, docname, anchor = recipes[recipe_name]\n+                   content[ingredient].append(\n+                       (dispname, 0, docname, anchor, docname, '', typ))\n+\n+           # convert the dict to the sorted list of tuples expected\n+           content = sorted(content.items())\n+\n+           return content, True\n+\n+\n+   class RecipeIndex(Index):\n+       \"\"\"A custom index that creates an recipe matrix.\"\"\"\n+\n+       name = 'recipe'\n+       localname = 'Recipe Index'\n+       shortname = 'Recipe'\n+\n+       def generate(self, docnames=None):\n+           content = defaultdict(list)\n+\n+           # sort the list of recipes in alphabetical order\n+           recipes = self.domain.get_objects()\n+           recipes = sorted(recipes, key=lambda recipe: recipe[0])\n+\n+           # generate the expected output, shown below, from the above using the\n+           # first letter of the recipe as a key to group thing\n+           #\n+           # name, subtype, docname, anchor, extra, qualifier, description\n+           for name, dispname, typ, docname, anchor, _ in recipes:\n+               content[dispname[0].lower()].append(\n+                   (dispname, 0, docname, anchor, docname, '', typ))\n+\n+           # convert the dict to the sorted list of tuples expected\n+           content = sorted(content.items())\n+\n+           return content, True\n+\n+\n+   class RecipeDomain(Domain):\n+\n+       name = 'recipe'\n+       label = 'Recipe Sample'\n+       roles = {\n+           'ref': XRefRole()\n+       }\n+       directives = {\n+           'recipe': RecipeDirective,\n+       }\n+       indices = {\n+           RecipeIndex,\n+           IngredientIndex\n+       }\n+       initial_data = {\n+           'recipes': [],  # object list\n+           'recipe_ingredients': {},  # name -> object\n+       }\n+\n+       def get_full_qualified_name(self, node):\n+           return '{}.{}'.format('recipe', node.arguments[0])\n+\n+       def get_objects(self):\n+           for obj in self.data['recipes']:\n+               yield(obj)\n+\n+       def resolve_xref(self, env, fromdocname, builder, typ, target, node,\n+                        contnode):\n+           match = [(docname, anchor)\n+                    for name, sig, typ, docname, anchor, prio\n+                    in self.get_objects() if sig == target]\n+\n+           if len(match) > 0:\n+               todocname = match[0][0]\n+               targ = match[0][1]\n+\n+               return make_refnode(builder, fromdocname, todocname, targ,\n+                                   contnode, targ)\n+           else:\n+               print('Awww, found nothing')\n+               return None\n+\n+       def add_recipe(self, signature, ingredients):\n+           \"\"\"Add a new recipe to the domain.\"\"\"\n+           name = '{}.{}'.format('recipe', signature)\n+           anchor = 'recipe-{}'.format(signature)\n+\n+           self.data['recipe_ingredients'][name] = ingredients\n+           # name, dispname, type, docname, anchor, priority\n+           self.data['recipes'].append(\n+               (name, signature, 'Recipe', self.env.docname, anchor, 0))\n+\n+\n+   def setup(app):\n+       app.add_domain(RecipeDomain)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+Let's look at each piece of this extension step-by-step to explain\n+what's going on.\n+\n+-[ The directive class ]-\n+\n+The first thing to examine is the \"RecipeDirective\" directive:\n+\n+   class RecipeDirective(ObjectDescription):\n+       \"\"\"A custom directive that describes a recipe.\"\"\"\n+\n+       has_content = True\n+       required_arguments = 1\n+       option_spec = {\n+           'contains': directives.unchanged_required,\n+       }\n+\n+       def handle_signature(self, sig, signode):\n+           signode += addnodes.desc_name(text=sig)\n+           return sig\n+\n+       def add_target_and_index(self, name_cls, sig, signode):\n+           signode['ids'].append('recipe' + '-' + sig)\n+           if 'noindex' not in self.options:\n+               ingredients = [\n+                   x.strip() for x in self.options.get('contains').split(',')]\n+\n+               recipes = self.env.get_domain('recipe')\n+               recipes.add_recipe(sig, ingredients)\n+\n+Unlike Developing a \"Hello world\" extension and Developing a \"TODO\"\n+extension, this directive doesn't derive from\n+\"docutils.parsers.rst.Directive\" and doesn't define a \"run\" method.\n+Instead, it derives from \"sphinx.directives.ObjectDescription\" and\n+defines  \"handle_signature\" and \"add_target_and_index\" methods. This\n+is because \"ObjectDescription\" is a special-purpose directive that's\n+intended for describing things like classes, functions, or, in our\n+case, recipes. More specifically, \"handle_signature\" implements\n+parsing the signature of the directive and passes on the object's name\n+and type to its superclass, while \"add_taget_and_index\" adds a target\n+(to link to) and an entry to the index for this node.\n+\n+We also see that this directive defines \"has_content\",\n+\"required_arguments\" and \"option_spec\". Unlike the \"TodoDirective\"\n+directive added in the previous tutorial, this directive takes a\n+single argument, the recipe name, and an option, \"contains\", in\n+addition to the nested reStructuredText in the body.\n+\n+-[ The index classes ]-\n+\n+   class IngredientIndex(Index):\n+       \"\"\"A custom index that creates an ingredient matrix.\"\"\"\n+\n+       name = 'ingredient'\n+       localname = 'Ingredient Index'\n+       shortname = 'Ingredient'\n+\n+       def generate(self, docnames=None):\n+           content = defaultdict(list)\n+\n+           recipes = {name: (dispname, typ, docname, anchor)\n+                      for name, dispname, typ, docname, anchor, _\n+                      in self.domain.get_objects()}\n+           recipe_ingredients = self.domain.data['recipe_ingredients']\n+           ingredient_recipes = defaultdict(list)\n+\n+           # flip from recipe_ingredients to ingredient_recipes\n+           for recipe_name, ingredients in recipe_ingredients.items():\n+               for ingredient in ingredients:\n+                   ingredient_recipes[ingredient].append(recipe_name)\n+\n+           # convert the mapping of ingredient to recipes to produce the expected\n+           # output, shown below, using the ingredient name as a key to group\n+           #\n+           # name, subtype, docname, anchor, extra, qualifier, description\n+           for ingredient, recipe_names in ingredient_recipes.items():\n+               for recipe_name in recipe_names:\n+                   dispname, typ, docname, anchor = recipes[recipe_name]\n+                   content[ingredient].append(\n+                       (dispname, 0, docname, anchor, docname, '', typ))\n+\n+           # convert the dict to the sorted list of tuples expected\n+           content = sorted(content.items())\n+\n+           return content, True\n+\n+   class RecipeIndex(Index):\n+       \"\"\"A custom index that creates an recipe matrix.\"\"\"\n+\n+       name = 'recipe'\n+       localname = 'Recipe Index'\n+       shortname = 'Recipe'\n+\n+       def generate(self, docnames=None):\n+           content = defaultdict(list)\n+\n+           # sort the list of recipes in alphabetical order\n+           recipes = self.domain.get_objects()\n+           recipes = sorted(recipes, key=lambda recipe: recipe[0])\n+\n+           # generate the expected output, shown below, from the above using the\n+           # first letter of the recipe as a key to group thing\n+           #\n+           # name, subtype, docname, anchor, extra, qualifier, description\n+           for name, dispname, typ, docname, anchor, _ in recipes:\n+               content[dispname[0].lower()].append(\n+                   (dispname, 0, docname, anchor, docname, '', typ))\n+\n+           # convert the dict to the sorted list of tuples expected\n+           content = sorted(content.items())\n+\n+           return content, True\n+\n+Both \"IngredientIndex\" and \"RecipeIndex\" are derived from \"Index\".\n+They implement custom logic to generate a tuple of values that define\n+the index. Note that \"RecipeIndex\" is a simple index that has only one\n+entry. Extending it to cover more object types is not yet part of the\n+code.\n+\n+Both indices use the method \"Index.generate()\" to do their work. This\n+method combines the information from our domain, sorts it, and returns\n+it in a list structure that will be accepted by Sphinx. This might\n+look complicated but all it really is is a list of tuples like\n+\"('tomato', 'TomatoSoup', 'test', 'rec-TomatoSoup',...)\". Refer to the\n+*domain API guide* for more information on this API.\n+\n+These index pages can be referred by combination of domain name and\n+its \"name\" using \"ref\" role.  For example, \"RecipeIndex\" can be\n+referred by \":ref:`recipe-recipe`\".\n+\n+-[ The domain ]-\n+\n+A Sphinx domain is a specialized container that ties together roles,\n+directives, and indices, among other things. Let's look at the domain\n+we're creating here.\n+\n+   class RecipeDomain(Domain):\n+\n+       name = 'recipe'\n+       label = 'Recipe Sample'\n+       roles = {\n+           'ref': XRefRole()\n+       }\n+       directives = {\n+           'recipe': RecipeDirective,\n+       }\n+       indices = {\n+           RecipeIndex,\n+           IngredientIndex\n+       }\n+       initial_data = {\n+           'recipes': [],  # object list\n+           'recipe_ingredients': {},  # name -> object\n+       }\n+\n+       def get_full_qualified_name(self, node):\n+           return '{}.{}'.format('recipe', node.arguments[0])\n+\n+       def get_objects(self):\n+           for obj in self.data['recipes']:\n+               yield(obj)\n+\n+       def resolve_xref(self, env, fromdocname, builder, typ, target, node,\n+                        contnode):\n+           match = [(docname, anchor)\n+                    for name, sig, typ, docname, anchor, prio\n+                    in self.get_objects() if sig == target]\n+\n+           if len(match) > 0:\n+               todocname = match[0][0]\n+               targ = match[0][1]\n+\n+               return make_refnode(builder, fromdocname, todocname, targ,\n+                                   contnode, targ)\n+           else:\n+               print('Awww, found nothing')\n+               return None\n+\n+       def add_recipe(self, signature, ingredients):\n+           \"\"\"Add a new recipe to the domain.\"\"\"\n+           name = '{}.{}'.format('recipe', signature)\n+           anchor = 'recipe-{}'.format(signature)\n+\n+           self.data['recipe_ingredients'][name] = ingredients\n+           # name, dispname, type, docname, anchor, priority\n+           self.data['recipes'].append(\n+               (name, signature, 'Recipe', self.env.docname, anchor, 0))\n+\n+There are some interesting things to note about this \"recipe\" domain\n+and domains in general. Firstly, we actually register our directives,\n+roles and indices here, via the \"directives\", \"roles\" and \"indices\"\n+attributes, rather than via calls later on in \"setup\". We can also\n+note that we aren't actually defining a custom role and are instead\n+reusing the \"sphinx.roles.XRefRole\" role and defining the\n+\"sphinx.domains.Domain.resolve_xref\" method. This method takes two\n+arguments, \"typ\" and \"target\", which refer to the cross-reference type\n+and its target name. We'll use \"target\" to resolve our destination\n+from our domain's \"recipes\" because we currently have only one type of\n+node.\n+\n+Moving on, we can see that we've defined \"initial_data\". The values\n+defined in \"initial_data\" will be copied to\n+\"env.domaindata[domain_name]\" as the initial data of the domain, and\n+domain instances can access it via \"self.data\". We see that we have\n+defined two items in \"initial_data\": \"recipes\" and\n+\"recipe2ingredient\". These contain a list of all objects defined (i.e.\n+all recipes) and a hash that maps a canonical ingredient name to the\n+list of objects. The way we name objects is common across our\n+extension and is defined in the \"get_full_qualified_name\" method. For\n+each object created, the canonical name is \"recipe.<recipename>\",\n+where \"<recipename>\" is the name the documentation writer gives the\n+object (a recipe). This enables the extension to use different object\n+types that share the same name. Having a canonical name and central\n+place for our objects is a huge advantage. Both our indices and our\n+cross-referencing code use this feature.\n+\n+-[ The \"setup\" function ]-\n+\n+As always, the \"setup\" function is a requirement and is used to hook\n+the various parts of our extension into Sphinx. Let's look at the\n+\"setup\" function for this extension.\n+\n+   def setup(app):\n+       app.add_domain(RecipeDomain)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+This looks a little different to what we're used to seeing. There are\n+no calls to \"add_directive()\" or even \"add_role()\". Instead, we have a\n+single call to \"add_domain()\" followed by some initialization of the\n+standard domain. This is because we had already registered our\n+directives, roles and indexes as part of the directive itself.\n+\n+\n+Using the extension\n+===================\n+\n+You can now use the extension throughout your project. For example:\n+\n+index.rst\n+\n+   Joe's Recipes\n+   =============\n+\n+   Below are a collection of my favourite recipes. I highly recommend the\n+   :recipe:ref:`TomatoSoup` recipe in particular!\n+\n+   .. toctree::\n+\n+      tomato-soup\n+\n+tomato-soup.rst\n+\n+   The recipe contains `tomato` and `cilantro`.\n+\n+   .. recipe:recipe:: TomatoSoup\n+     :contains: tomato cilantro salt pepper\n+\n+    This recipe is a tasty tomato soup, combine all ingredients\n+    and cook.\n+\n+The important things to note are the use of the \":recipe:ref:\" role to\n+cross-reference the recipe actually defined elsewhere (using the\n+\":recipe:recipe:\" directive.\n+\n+\n+Further reading\n+===============\n+\n+For more information, refer to the docutils documentation and\n+*/extdev/index*.\ndiff --git a/_build/doc/development/tutorials/todo.txt b/_build/doc/development/tutorials/todo.txt\nnew file mode 100644\nindex 000000000..aff6f5eb5\n--- /dev/null\n+++ b/_build/doc/development/tutorials/todo.txt\n@@ -0,0 +1,581 @@\n+Developing a \"TODO\" extension\n+*****************************\n+\n+The objective of this tutorial is to create a more comprehensive\n+extension than that created in Developing a \"Hello world\" extension.\n+Whereas that guide just covered writing a custom *directive*, this\n+guide adds multiple directives, along with custom nodes, additional\n+config values and custom event handlers. To this end, we will cover a\n+\"todo\" extension that adds capabilities to include todo entries in the\n+documentation, and to collect these in a central place. This is\n+similar the \"sphinxext.todo\" extension distributed with Sphinx.\n+\n+\n+Overview\n+========\n+\n+Note:\n+\n+  To understand the design of this extension, refer to Important\n+  objects and Build Phases.\n+\n+We want the extension to add the following to Sphinx:\n+\n+* A \"todo\" directive, containing some content that is marked with\n+  \"TODO\" and only shown in the output if a new config value is set.\n+  Todo entries should not be in the output by default.\n+\n+* A \"todolist\" directive that creates a list of all todo entries\n+  throughout the documentation.\n+\n+For that, we will need to add the following elements to Sphinx:\n+\n+* New directives, called \"todo\" and \"todolist\".\n+\n+* New document tree nodes to represent these directives,\n+  conventionally also called \"todo\" and \"todolist\".  We wouldn't need\n+  new nodes if the new directives only produced some content\n+  representable by existing nodes.\n+\n+* A new config value \"todo_include_todos\" (config value names should\n+  start with the extension name, in order to stay unique) that\n+  controls whether todo entries make it into the output.\n+\n+* New event handlers: one for the >>:event:`doctree-resolved`<< event,\n+  to replace the todo and todolist nodes, one for >>:event:`env-merge-\n+  info`<< to merge intermediate results from parallel builds, and one\n+  for >>:event:`env-purge-doc`<< (the reason for that will be covered\n+  later).\n+\n+\n+Prerequisites\n+=============\n+\n+As with Developing a \"Hello world\" extension, we will not be\n+distributing this plugin via PyPI so once again we need a Sphinx\n+project to call this from. You can use an existing project or create a\n+new one using **sphinx-quickstart**.\n+\n+We assume you are using separate source (\"source\") and build (\"build\")\n+folders. Your extension file could be in any folder of your project.\n+In our case, let's do the following:\n+\n+1. Create an \"_ext\" folder in \"source\"\n+\n+2. Create a new Python file in the \"_ext\" folder called \"todo.py\"\n+\n+Here is an example of the folder structure you might obtain:\n+\n+   \u2514\u2500\u2500 source\n+    \u00a0\u00a0 \u251c\u2500\u2500 _ext\n+       \u2502 \u00a0 \u2514\u2500\u2500 todo.py\n+    \u00a0\u00a0 \u251c\u2500\u2500 _static\n+    \u00a0\u00a0 \u251c\u2500\u2500 conf.py\n+    \u00a0\u00a0 \u251c\u2500\u2500 somefolder\n+    \u00a0\u00a0 \u251c\u2500\u2500 index.rst\n+    \u00a0\u00a0 \u251c\u2500\u2500 somefile.rst\n+    \u00a0\u00a0 \u2514\u2500\u2500 someotherfile.rst\n+\n+\n+Writing the extension\n+=====================\n+\n+Open \"todo.py\" and paste the following code in it, all of which we\n+will explain in detail shortly:\n+\n+   from docutils import nodes\n+   from docutils.parsers.rst import Directive\n+\n+   from sphinx.locale import _\n+   from sphinx.util.docutils import SphinxDirective\n+\n+\n+   class todo(nodes.Admonition, nodes.Element):\n+       pass\n+\n+\n+   class todolist(nodes.General, nodes.Element):\n+       pass\n+\n+\n+   def visit_todo_node(self, node):\n+       self.visit_admonition(node)\n+\n+\n+   def depart_todo_node(self, node):\n+       self.depart_admonition(node)\n+\n+\n+   class TodolistDirective(Directive):\n+\n+       def run(self):\n+           return [todolist('')]\n+\n+\n+   class TodoDirective(SphinxDirective):\n+\n+       # this enables content in the directive\n+       has_content = True\n+\n+       def run(self):\n+           targetid = 'todo-%d' % self.env.new_serialno('todo')\n+           targetnode = nodes.target('', '', ids=[targetid])\n+\n+           todo_node = todo('\\n'.join(self.content))\n+           todo_node += nodes.title(_('Todo'), _('Todo'))\n+           self.state.nested_parse(self.content, self.content_offset, todo_node)\n+\n+           if not hasattr(self.env, 'todo_all_todos'):\n+               self.env.todo_all_todos = []\n+\n+           self.env.todo_all_todos.append({\n+               'docname': self.env.docname,\n+               'lineno': self.lineno,\n+               'todo': todo_node.deepcopy(),\n+               'target': targetnode,\n+           })\n+\n+           return [targetnode, todo_node]\n+\n+\n+   def purge_todos(app, env, docname):\n+       if not hasattr(env, 'todo_all_todos'):\n+           return\n+\n+       env.todo_all_todos = [todo for todo in env.todo_all_todos\n+                             if todo['docname'] != docname]\n+\n+\n+   def merge_todos(app, env, docnames, other):\n+       if not hasattr(env, 'todo_all_todos'):\n+           env.todo_all_todos = []\n+       if hasattr(other, 'todo_all_todos'):\n+           env.todo_all_todos.extend(other.todo_all_todos)\n+\n+\n+   def process_todo_nodes(app, doctree, fromdocname):\n+       if not app.config.todo_include_todos:\n+           for node in doctree.traverse(todo):\n+               node.parent.remove(node)\n+\n+       # Replace all todolist nodes with a list of the collected todos.\n+       # Augment each todo with a backlink to the original location.\n+       env = app.builder.env\n+\n+       if not hasattr(env, 'todo_all_todos'):\n+           env.todo_all_todos = []\n+\n+       for node in doctree.traverse(todolist):\n+           if not app.config.todo_include_todos:\n+               node.replace_self([])\n+               continue\n+\n+           content = []\n+\n+           for todo_info in env.todo_all_todos:\n+               para = nodes.paragraph()\n+               filename = env.doc2path(todo_info['docname'], base=None)\n+               description = (\n+                   _('(The original entry is located in %s, line %d and can be found ') %\n+                   (filename, todo_info['lineno']))\n+               para += nodes.Text(description, description)\n+\n+               # Create a reference\n+               newnode = nodes.reference('', '')\n+               innernode = nodes.emphasis(_('here'), _('here'))\n+               newnode['refdocname'] = todo_info['docname']\n+               newnode['refuri'] = app.builder.get_relative_uri(\n+                   fromdocname, todo_info['docname'])\n+               newnode['refuri'] += '#' + todo_info['target']['refid']\n+               newnode.append(innernode)\n+               para += newnode\n+               para += nodes.Text('.)', '.)')\n+\n+               # Insert into the todolist\n+               content.append(todo_info['todo'])\n+               content.append(para)\n+\n+           node.replace_self(content)\n+\n+\n+   def setup(app):\n+       app.add_config_value('todo_include_todos', False, 'html')\n+\n+       app.add_node(todolist)\n+       app.add_node(todo,\n+                    html=(visit_todo_node, depart_todo_node),\n+                    latex=(visit_todo_node, depart_todo_node),\n+                    text=(visit_todo_node, depart_todo_node))\n+\n+       app.add_directive('todo', TodoDirective)\n+       app.add_directive('todolist', TodolistDirective)\n+       app.connect('doctree-resolved', process_todo_nodes)\n+       app.connect('env-purge-doc', purge_todos)\n+       app.connect('env-merge-info', merge_todos)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+This is far more extensive extension than the one detailed in\n+Developing a \"Hello world\" extension, however, we will will look at\n+each piece step-by-step to explain what's happening.\n+\n+-[ The node classes ]-\n+\n+Let's start with the node classes:\n+\n+   class todo(nodes.Admonition, nodes.Element):\n+       pass\n+\n+\n+   class todolist(nodes.General, nodes.Element):\n+       pass\n+\n+\n+   def visit_todo_node(self, node):\n+       self.visit_admonition(node)\n+\n+\n+   def depart_todo_node(self, node):\n+       self.depart_admonition(node)\n+\n+Node classes usually don't have to do anything except inherit from the\n+standard docutils classes defined in \"docutils.nodes\".  \"todo\"\n+inherits from \"Admonition\" because it should be handled like a note or\n+warning, \"todolist\" is just a \"general\" node.\n+\n+Note:\n+\n+  Many extensions will not have to create their own node classes and\n+  work fine with the nodes already provided by docutils and Sphinx.\n+\n+Attention:\n+\n+  It is important to know that while you can extend Sphinx without\n+  leaving your \"conf.py\", if you declare an inherited node right\n+  there, you'll hit an unobvious \"PickleError\". So if something goes\n+  wrong, please make sure that you put inherited nodes into a separate\n+  Python module.For more details, see:\n+\n+  * https://github.com/sphinx-doc/sphinx/issues/6751\n+\n+  * https://github.com/sphinx-doc/sphinx/issues/1493\n+\n+  * https://github.com/sphinx-doc/sphinx/issues/1424\n+\n+-[ The directive classes ]-\n+\n+A directive class is a class deriving usually from\n+\"docutils.parsers.rst.Directive\". The directive interface is also\n+covered in detail in the docutils documentation; the important thing\n+is that the class should have attributes that configure the allowed\n+markup, and a \"run\" method that returns a list of nodes.\n+\n+Looking first at the \"TodolistDirective\" directive:\n+\n+   class TodolistDirective(Directive):\n+\n+       def run(self):\n+           return [todolist('')]\n+\n+It's very simple, creating and returning an instance of our \"todolist\"\n+node class.  The \"TodolistDirective\" directive itself has neither\n+content nor arguments that need to be handled. That brings us to the\n+\"TodoDirective\" directive:\n+\n+   class TodoDirective(SphinxDirective):\n+\n+       # this enables content in the directive\n+       has_content = True\n+\n+       def run(self):\n+           targetid = 'todo-%d' % self.env.new_serialno('todo')\n+           targetnode = nodes.target('', '', ids=[targetid])\n+\n+           todo_node = todo('\\n'.join(self.content))\n+           todo_node += nodes.title(_('Todo'), _('Todo'))\n+           self.state.nested_parse(self.content, self.content_offset, todo_node)\n+\n+           if not hasattr(self.env, 'todo_all_todos'):\n+               self.env.todo_all_todos = []\n+\n+           self.env.todo_all_todos.append({\n+               'docname': self.env.docname,\n+               'lineno': self.lineno,\n+               'todo': todo_node.deepcopy(),\n+               'target': targetnode,\n+           })\n+\n+           return [targetnode, todo_node]\n+\n+Several important things are covered here. First, as you can see,\n+we're now subclassing the \"SphinxDirective\" helper class instead of\n+the usual \"Directive\" class. This gives us access to the build\n+environment instance using the \"self.env\" property. Without this, we'd\n+have to use the rather convoluted \"self.state.document.settings.env\".\n+Then, to act as a link target (from \"TodolistDirective\"), the\n+\"TodoDirective\" directive needs to return a target node in addition to\n+the \"todo\" node.  The target ID (in HTML, this will be the anchor\n+name) is generated by using \"env.new_serialno\" which returns a new\n+unique integer on each call and therefore leads to unique target\n+names. The target node is instantiated without any text (the first two\n+arguments).\n+\n+On creating admonition node, the content body of the directive are\n+parsed using \"self.state.nested_parse\".  The first argument gives the\n+content body, and the second one gives content offset.  The third\n+argument gives the parent node of parsed result, in our case the\n+\"todo\" node. Following this, the \"todo\" node is added to the\n+environment.  This is needed to be able to create a list of all todo\n+entries throughout the documentation, in the place where the author\n+puts a \"todolist\" directive.  For this case, the environment attribute\n+\"todo_all_todos\" is used (again, the name should be unique, so it is\n+prefixed by the extension name).  It does not exist when a new\n+environment is created, so the directive must check and create it if\n+necessary.  Various information about the todo entry's location are\n+stored along with a copy of the node.\n+\n+In the last line, the nodes that should be put into the doctree are\n+returned: the target node and the admonition node.\n+\n+The node structure that the directive returns looks like this:\n+\n+   +--------------------+\n+   | target node        |\n+   +--------------------+\n+   +--------------------+\n+   | todo node          |\n+   +--------------------+\n+     \\__+--------------------+\n+        | admonition title   |\n+        +--------------------+\n+        | paragraph          |\n+        +--------------------+\n+        | ...                |\n+        +--------------------+\n+\n+-[ The event handlers ]-\n+\n+Event handlers are one of Sphinx's most powerful features, providing a\n+way to do hook into any part of the documentation process. There are\n+many events provided by Sphinx itself, as detailed in the API guide,\n+and we're going to use a subset of them here.\n+\n+Let's look at the event handlers used in the above example.  First,\n+the one for the >>:event:`env-purge-doc`<< event:\n+\n+   def purge_todos(app, env, docname):\n+       if not hasattr(env, 'todo_all_todos'):\n+           return\n+\n+       env.todo_all_todos = [todo for todo in env.todo_all_todos\n+                             if todo['docname'] != docname]\n+\n+Since we store information from source files in the environment, which\n+is persistent, it may become out of date when the source file changes.\n+Therefore, before each source file is read, the environment's records\n+of it are cleared, and the >>:event:`env-purge-doc`<< event gives\n+extensions a chance to do the same. Here we clear out all todos whose\n+docname matches the given one from the \"todo_all_todos\" list.  If\n+there are todos left in the document, they will be added again during\n+parsing.\n+\n+The next handler, for the >>:event:`env-merge-info`<< event, is used\n+during parallel builds. As during parallel builds all threads have\n+their own \"env\", there's multiple \"todo_all_todos\" lists that need to\n+be merged:\n+\n+   def merge_todos(app, env, docnames, other):\n+       if not hasattr(env, 'todo_all_todos'):\n+           env.todo_all_todos = []\n+       if hasattr(other, 'todo_all_todos'):\n+           env.todo_all_todos.extend(other.todo_all_todos)\n+\n+The other handler belongs to the >>:event:`doctree-resolved`<< event:\n+\n+   def process_todo_nodes(app, doctree, fromdocname):\n+       if not app.config.todo_include_todos:\n+           for node in doctree.traverse(todo):\n+               node.parent.remove(node)\n+\n+       # Replace all todolist nodes with a list of the collected todos.\n+       # Augment each todo with a backlink to the original location.\n+       env = app.builder.env\n+\n+       if not hasattr(env, 'todo_all_todos'):\n+           env.todo_all_todos = []\n+\n+       for node in doctree.traverse(todolist):\n+           if not app.config.todo_include_todos:\n+               node.replace_self([])\n+               continue\n+\n+           content = []\n+\n+           for todo_info in env.todo_all_todos:\n+               para = nodes.paragraph()\n+               filename = env.doc2path(todo_info['docname'], base=None)\n+               description = (\n+                   _('(The original entry is located in %s, line %d and can be found ') %\n+                   (filename, todo_info['lineno']))\n+               para += nodes.Text(description, description)\n+\n+               # Create a reference\n+               newnode = nodes.reference('', '')\n+               innernode = nodes.emphasis(_('here'), _('here'))\n+               newnode['refdocname'] = todo_info['docname']\n+               newnode['refuri'] = app.builder.get_relative_uri(\n+                   fromdocname, todo_info['docname'])\n+               newnode['refuri'] += '#' + todo_info['target']['refid']\n+               newnode.append(innernode)\n+               para += newnode\n+               para += nodes.Text('.)', '.)')\n+\n+               # Insert into the todolist\n+               content.append(todo_info['todo'])\n+               content.append(para)\n+\n+           node.replace_self(content)\n+\n+The >>:event:`doctree-resolved`<< event is emitted at the end of phase\n+3 (resolving) and allows custom resolving to be done. The handler we\n+have written for this event is a bit more involved. If the\n+\"todo_include_todos\" config value (which we'll describe shortly) is\n+false, all \"todo\" and \"todolist\" nodes are removed from the documents.\n+If not, \"todo\" nodes just stay where and how they are.  \"todolist\"\n+nodes are replaced by a list of todo entries, complete with backlinks\n+to the location where they come from.  The list items are composed of\n+the nodes from the \"todo\" entry and docutils nodes created on the fly:\n+a paragraph for each entry, containing text that gives the location,\n+and a link (reference node containing an italic node) with the\n+backreference. The reference URI is built by\n+\"sphinx.builders.Builder.get_relative_uri()\" which creates a suitable\n+URI depending on the used builder, and appending the todo node's (the\n+target's) ID as the anchor name.\n+\n+-[ The \"setup\" function ]-\n+\n+As noted previously, the \"setup\" function is a requirement and is used\n+to plug directives into Sphinx. However, we also use it to hook up the\n+other parts of our extension. Let's look at our \"setup\" function:\n+\n+   def setup(app):\n+       app.add_config_value('todo_include_todos', False, 'html')\n+\n+       app.add_node(todolist)\n+       app.add_node(todo,\n+                    html=(visit_todo_node, depart_todo_node),\n+                    latex=(visit_todo_node, depart_todo_node),\n+                    text=(visit_todo_node, depart_todo_node))\n+\n+       app.add_directive('todo', TodoDirective)\n+       app.add_directive('todolist', TodolistDirective)\n+       app.connect('doctree-resolved', process_todo_nodes)\n+       app.connect('env-purge-doc', purge_todos)\n+       app.connect('env-merge-info', merge_todos)\n+\n+       return {\n+           'version': '0.1',\n+           'parallel_read_safe': True,\n+           'parallel_write_safe': True,\n+       }\n+\n+The calls in this function refer to the classes and functions we added\n+earlier. What the individual calls do is the following:\n+\n+* \"add_config_value()\" lets Sphinx know that it should recognize the\n+  new *config value* \"todo_include_todos\", whose default value should\n+  be \"False\" (this also tells Sphinx that it is a boolean value).\n+\n+  If the third argument was \"'html'\", HTML documents would be full\n+  rebuild if the config value changed its value.  This is needed for\n+  config values that influence reading (build phase 1 (reading)).\n+\n+* \"add_node()\" adds a new *node class* to the build system.  It also\n+  can specify visitor functions for each supported output format.\n+  These visitor functions are needed when the new nodes stay until\n+  phase 4 (writing). Since the \"todolist\" node is always replaced in\n+  phase 3 (resolving), it doesn't need any.\n+\n+* \"add_directive()\" adds a new *directive*, given by name and class.\n+\n+* Finally, \"connect()\" adds an *event handler* to the event whose name\n+  is given by the first argument.  The event handler function is\n+  called with several arguments which are documented with the event.\n+\n+With this, our extension is complete.\n+\n+\n+Using the extension\n+===================\n+\n+As before, we need to enable the extension by declaring it in our\n+\"conf.py\" file. There are two steps necessary here:\n+\n+1. Add the \"_ext\" directory to the Python path using\n+   \"sys.path.append\". This should be placed at the top of the file.\n+\n+2. Update or create the >>:confval:`extensions`<< list and add the\n+   extension file name to the list\n+\n+In addition, we may wish to set the \"todo_include_todos\" config value.\n+As noted above, this defaults to \"False\" but we can set it explicitly.\n+\n+For example:\n+\n+   import os\n+   import sys\n+\n+   sys.path.append(os.path.abspath(\"./_ext\"))\n+\n+   extensions = ['todo']\n+\n+   todo_include_todos = False\n+\n+You can now use the extension throughout your project. For example:\n+\n+index.rst\n+\n+   Hello, world\n+   ============\n+\n+   .. toctree::\n+      somefile.rst\n+      someotherfile.rst\n+\n+   Hello world. Below is the list of TODOs.\n+\n+   .. todolist::\n+\n+somefile.rst\n+\n+   foo\n+   ===\n+\n+   Some intro text here...\n+\n+   .. todo:: Fix this\n+\n+someotherfile.rst\n+\n+   bar\n+   ===\n+\n+   Some more text here...\n+\n+   .. todo:: Fix that\n+\n+Because we have configured \"todo_include_todos\" to \"False\", we won't\n+actually see anything rendered for the \"todo\" and \"todolist\"\n+directives. However, if we toggle this to true, we will see the output\n+described previously.\n+\n+\n+Further reading\n+===============\n+\n+For more information, refer to the docutils documentation and\n+*/extdev/index*.\ndiff --git a/_build/doc/examples.txt b/_build/doc/examples.txt\nnew file mode 100644\nindex 000000000..1c9cd24f9\n--- /dev/null\n+++ b/_build/doc/examples.txt\n@@ -0,0 +1,822 @@\n+Projects using Sphinx\n+*********************\n+\n+This is an (incomplete) alphabetic list of projects that use Sphinx or\n+are experimenting with using it for their documentation.  If you like\n+to be included, please mail to the Google group.\n+\n+I've grouped the list into sections to make it easier to find\n+interesting examples.\n+\n+\n+Documentation using the alabaster theme\n+=======================================\n+\n+* Alabaster\n+\n+* Blinker\n+\n+* Calibre\n+\n+* Click (customized)\n+\n+* coala (customized)\n+\n+* CodePy\n+\n+* Eve (Python REST API framework)\n+\n+* Fabric\n+\n+* Fityk\n+\n+* Flask\n+\n+* Flask-OpenID\n+\n+* Invoke\n+\n+* Jinja\n+\n+* Lino (customized)\n+\n+* marbl\n+\n+* MDAnalysis (customized)\n+\n+* MeshPy\n+\n+* Molecule\n+\n+* PyCUDA\n+\n+* PyOpenCL\n+\n+* PyLangAcq\n+\n+* pytest (customized)\n+\n+* python-apt\n+\n+* PyVisfile\n+\n+* Requests\n+\n+* searx\n+\n+* Spyder (customized)\n+\n+* Tablib\n+\n+* urllib3 (customized)\n+\n+* Werkzeug (customized)\n+\n+\n+Documentation using the classic theme\n+=====================================\n+\n+* Advanced Generic Widgets (customized)\n+\n+* Apache CouchDB (customized)\n+\n+* APSW\n+\n+* Arb\n+\n+* Bazaar (customized)\n+\n+* Beautiful Soup\n+\n+* Blender API\n+\n+* Bugzilla\n+\n+* Buildbot\n+\n+* CMake (customized)\n+\n+* Chaco (customized)\n+\n+* CORE\n+\n+* CORE Python modules\n+\n+* Cormoran\n+\n+* DEAP (customized)\n+\n+* Director\n+\n+* EZ-Draw (customized)\n+\n+* F2py\n+\n+* Generic Mapping Tools (GMT) (customized)\n+\n+* Genomedata\n+\n+* GetFEM++ (customized)\n+\n+* Glasgow Haskell Compiler (customized)\n+\n+* Grok (customized)\n+\n+* GROMACS\n+\n+* GSL Shell\n+\n+* Hands-on Python Tutorial\n+\n+* Kaa (customized)\n+\n+* Leo\n+\n+* LEPL (customized)\n+\n+* Mayavi (customized)\n+\n+* MediaGoblin (customized)\n+\n+* mpmath\n+\n+* OpenCV (customized)\n+\n+* OpenEXR\n+\n+* OpenGDA\n+\n+* Peach^3 (customized)\n+\n+* Plone (customized)\n+\n+* PyEMD\n+\n+* Pyevolve\n+\n+* Pygame (customized)\n+\n+* PyMQI\n+\n+* PyQt4 (customized)\n+\n+* PyQt5 (customized)\n+\n+* Python 2\n+\n+* Python 3 (customized)\n+\n+* Python Packaging Authority (customized)\n+\n+* Ring programming language (customized)\n+\n+* SageMath (customized)\n+\n+* Segway\n+\n+* simuPOP (customized)\n+\n+* Sprox (customized)\n+\n+* SymPy\n+\n+* TurboGears (customized)\n+\n+* tvtk\n+\n+* Varnish (customized, alabaster for index)\n+\n+* Waf\n+\n+* wxPython Phoenix (customized)\n+\n+* Yum\n+\n+* z3c\n+\n+* zc.async (customized)\n+\n+* Zope (customized)\n+\n+\n+Documentation using the sphinxdoc theme\n+=======================================\n+\n+* ABRT\n+\n+* cartopy\n+\n+* Jython\n+\n+* LLVM\n+\n+* Matplotlib\n+\n+* MDAnalysis Tutorial\n+\n+* NetworkX\n+\n+* PyCantonese\n+\n+* Pyre\n+\n+* pySPACE\n+\n+* Pysparse\n+\n+* PyTango\n+\n+* Python Wild Magic (customized)\n+\n+* RDKit\n+\n+* Reteisi (customized)\n+\n+* Sqlkit (customized)\n+\n+* Turbulenz\n+\n+\n+Documentation using the nature theme\n+====================================\n+\n+* Alembic\n+\n+* Cython\n+\n+* easybuild\n+\n+* jsFiddle\n+\n+* libLAS (customized)\n+\n+* Lmod\n+\n+* MapServer (customized)\n+\n+* Pandas\n+\n+* pyglet (customized)\n+\n+* Setuptools\n+\n+* Spring Python\n+\n+* StatsModels (customized)\n+\n+* Sylli\n+\n+\n+Documentation using another builtin theme\n+=========================================\n+\n+* Breathe (haiku)\n+\n+* MPipe (sphinx13)\n+\n+* NLTK (agogo)\n+\n+* Programmieren mit PyGTK und Glade (German) (agogo, customized)\n+\n+* PyPubSub (bizstyle)\n+\n+* Pylons (pyramid)\n+\n+* Pyramid web framework (pyramid)\n+\n+* Sphinx (sphinx13) :-)\n+\n+* Valence (haiku, customized)\n+\n+\n+Documentation using sphinx_rtd_theme\n+====================================\n+\n+* Annotator\n+\n+* Ansible (customized)\n+\n+* Arcade\n+\n+* aria2\n+\n+* ASE\n+\n+* Autofac\n+\n+* BigchainDB\n+\n+* Blender Reference Manual\n+\n+* Blocks\n+\n+* bootstrap-datepicker\n+\n+* Certbot\n+\n+* Chainer (customized)\n+\n+* CherryPy\n+\n+* cloud-init\n+\n+* CodeIgniter\n+\n+* Conda\n+\n+* Corda\n+\n+* Dask\n+\n+* Databricks (customized)\n+\n+* Dataiku DSS\n+\n+* DNF\n+\n+* Django-cas-ng\n+\n+* edX\n+\n+* Electrum\n+\n+* Elemental\n+\n+* ESWP3\n+\n+* Ethereum Homestead\n+\n+* Exhale\n+\n+* Faker\n+\n+* Fidimag\n+\n+* Flake8\n+\n+* Flatpak\n+\n+* FluidDyn\n+\n+* Fluidsim\n+\n+* Gallium\n+\n+* GeoNode\n+\n+* Glances\n+\n+* Godot\n+\n+* Graylog\n+\n+* GPAW (customized)\n+\n+* HDF5 for Python (h5py)\n+\n+* Hyperledger Fabric\n+\n+* Hyperledger Sawtooth\n+\n+* IdentityServer\n+\n+* Idris\n+\n+* javasphinx\n+\n+* Julia\n+\n+* Jupyter Notebook\n+\n+* Lasagne\n+\n+* latexindent.pl\n+\n+* Learning Apache Spark with Python\n+\n+* LibCEED\n+\n+* Linguistica\n+\n+* Linux kernel\n+\n+* Mailman\n+\n+* MathJax\n+\n+* MDTraj (customized)\n+\n+* micca - MICrobial Community Analysis\n+\n+* MicroPython\n+\n+* Minds (customized)\n+\n+* Mink\n+\n+* Mockery\n+\n+* mod_wsgi\n+\n+* MoinMoin\n+\n+* Mopidy\n+\n+* MyHDL\n+\n+* Nextflow\n+\n+* NICOS (customized)\n+\n+* OpenFAST\n+\n+* Pelican\n+\n+* picamera\n+\n+* Pillow\n+\n+* pip\n+\n+* Paver\n+\n+* peewee\n+\n+* Phinx\n+\n+* phpMyAdmin\n+\n+* PROS (customized)\n+\n+* Pushkin\n+\n+* Pweave\n+\n+* PyPy\n+\n+* python-sqlparse\n+\n+* PyVISA\n+\n+* pyvista\n+\n+* Read The Docs\n+\n+* Free your information from their silos (French) (customized)\n+\n+* Releases Sphinx extension\n+\n+* Qtile\n+\n+* Quex\n+\n+* QuTiP\n+\n+* Satchmo\n+\n+* Scapy\n+\n+* SimGrid\n+\n+* SimPy\n+\n+* six\n+\n+* SlamData\n+\n+* Solidity\n+\n+* Sonos Controller (SoCo)\n+\n+* Sphinx AutoAPI\n+\n+* sphinx-argparse\n+\n+* Sphinx-Gallery (customized)\n+\n+* Sphinx with Github Webpages\n+\n+* SpotBugs\n+\n+* StarUML\n+\n+* Sublime Text Unofficial Documentation\n+\n+* SunPy\n+\n+* Sylius\n+\n+* Syncthing\n+\n+* Tango Controls (customized)\n+\n+* Topshelf\n+\n+* Theano\n+\n+* ThreatConnect\n+\n+* Tuleap\n+\n+* TYPO3 (customized)\n+\n+* Veyon\n+\n+* uWSGI\n+\n+* virtualenv\n+\n+* Wagtail\n+\n+* Web Application Attack and Audit Framework (w3af)\n+\n+* Weblate\n+\n+* x265\n+\n+* ZeroNet\n+\n+* Zulip\n+\n+\n+Documentation using sphinx_bootstrap_theme\n+==========================================\n+\n+* Bootstrap Theme\n+\n+* C/C++ Software Development with Eclipse\n+\n+* Dataverse\n+\n+* e-cidadania\n+\n+* Hangfire\n+\n+* Hedge\n+\n+* ObsPy\n+\n+* Open Dylan\n+\n+* OPNFV\n+\n+* Pootle\n+\n+* PyUblas\n+\n+* seaborn\n+\n+\n+Documentation using a custom theme or integrated in a website\n+=============================================================\n+\n+* Apache Cassandra\n+\n+* Astropy\n+\n+* Bokeh\n+\n+* Boto 3\n+\n+* CakePHP\n+\n+* CasperJS\n+\n+* Ceph\n+\n+* Chef\n+\n+* CKAN\n+\n+* Confluent Platform\n+\n+* Django\n+\n+* Doctrine\n+\n+* Enterprise Toolkit for Acrobat products\n+\n+* Gameduino\n+\n+* gensim\n+\n+* GeoServer\n+\n+* gevent\n+\n+* GHC - Glasgow Haskell Compiler\n+\n+* Guzzle\n+\n+* H2O.ai\n+\n+* Heka\n+\n+* Istihza (Turkish Python documentation project)\n+\n+* Kombu\n+\n+* Lasso\n+\n+* Mako\n+\n+* MirrorBrain\n+\n+* Mitiq\n+\n+* MongoDB\n+\n+* Music21\n+\n+* MyHDL\n+\n+* ndnSIM\n+\n+* nose\n+\n+* ns-3\n+\n+* NumPy\n+\n+* ObjectListView\n+\n+* OpenERP\n+\n+* OpenCV\n+\n+* OpenLayers\n+\n+* OpenTURNS\n+\n+* Open vSwitch\n+\n+* PlatformIO\n+\n+* PyEphem\n+\n+* Pygments\n+\n+* Plone User Manual (German)\n+\n+* PSI4\n+\n+* PyMOTW\n+\n+* python-aspectlib (sphinx_py3doc_enhanced_theme)\n+\n+* QGIS\n+\n+* qooxdoo\n+\n+* Roundup\n+\n+* SaltStack\n+\n+* scikit-learn\n+\n+* SciPy\n+\n+* Scrapy\n+\n+* Seaborn\n+\n+* Selenium\n+\n+* Self\n+\n+* Substance D\n+\n+* Sulu\n+\n+* SQLAlchemy\n+\n+* tinyTiM\n+\n+* Twisted\n+\n+* Ubuntu Packaging Guide\n+\n+* WebFaction\n+\n+* WTForms\n+\n+\n+Homepages and other non-documentation sites\n+===========================================\n+\n+* Arizona State University PHY494/PHY598/CHM598 Simulation approaches\n+  to Bio-and Nanophysics (classic)\n+\n+* Benoit Boissinot (classic, customized)\n+\n+* Computer Networks, Parallelization, and Simulation Laboratory\n+  (CNPSLab) (sphinx_rtd_theme)\n+\n+* Deep Learning Tutorials (sphinxdoc)\n+\n+* Eric Holscher (alabaster)\n+\n+* Lei Ma's Statistical Mechanics lecture notes\n+  (sphinx_bootstrap_theme)\n+\n+* Loyola University Chicago COMP 339-439 Distributed Systems course\n+  (sphinx_bootstrap_theme)\n+\n+* Pylearn2 (sphinxdoc, customized)\n+\n+* PyXLL (sphinx_bootstrap_theme, customized)\n+\n+* SciPy Cookbook (sphinx_rtd_theme)\n+\n+* Tech writer at work blog (custom theme)\n+\n+* The Wine Cellar Book (sphinxdoc)\n+\n+* Thomas Cokelaer's Python, Sphinx and reStructuredText tutorials\n+  (standard)\n+\n+* UC Berkeley ME233 Advanced Control Systems II course (sphinxdoc)\n+\n+* \u017deljko Svedru\u017ei\u0107's Biomolecular Structure and Function Laboratory\n+  (BioSFLab) (sphinx_bootstrap_theme)\n+\n+\n+Books produced using Sphinx\n+===========================\n+\n+* \"The Art of Community\" (Japanese translation)\n+\n+* \"Die Wahrheit des Sehens. Der DEKALOG von Krzysztof Kie\u015blowski\"\n+\n+* \"Expert Python Programming\"\n+\n+* \"Expert Python Programming\" (Japanese translation)\n+\n+* \"Expert Python Programming 2nd Edition\" (Japanese translation)\n+\n+* \"The Hitchhiker's Guide to Python\"\n+\n+* \"LassoGuide\"\n+\n+* \"Learning Sphinx\" (in Japanese)\n+\n+* \"Learning System Programming with Go (Japanese)\"\n+\n+* \"Mercurial: the definitive guide (Second edition)\"\n+\n+* \"Mithril -- The fastest clientside MVC (Japanese)\"\n+\n+* \"Pioneers and Prominent Men of Utah\"\n+\n+* \"Pomodoro Technique Illustrated\" (Japanese translation)\n+\n+* \"Professional Software Development\"\n+\n+* \"Python Professional Programming\" (in Japanese)\n+\n+* \"Python Professional Programming 2nd Edition\" (in Japanese)\n+\n+* \"Python Professional Programming 3rd Edition\" (in Japanese)\n+\n+* Python Course by Yuri Petrov (Russian)\n+\n+* \"Real World HTTP -- Learning The Internet and Web Technology via its\n+  history and code (Japanese)\"\n+\n+* \"Redmine Primer 5th Edition (in Japanese)\"\n+\n+* \"The repoze.bfg Web Application Framework\"\n+\n+* \"The Self-Taught Programmer\" (Japanese translation)\n+\n+* \"Simple and Steady Way of Learning for Software Engineering\" (in\n+  Japanese)\n+\n+* \"Software-Dokumentation mit Sphinx\"\n+\n+* \"Theoretical Physics Reference\"\n+\n+* \"The Varnish Book\"\n+\n+\n+Theses produced using Sphinx\n+============================\n+\n+* \"A Web-Based System for Comparative Analysis of OpenStreetMap Data\n+  by the Use of CouchDB\"\n+\n+* \"Content Conditioning and Distribution for Dynamic Virtual Worlds\"\n+\n+* \"The Sphinx Thesis Resource\"\n+\n+\n+Projects integrating Sphinx functionality\n+=========================================\n+\n+* Read the Docs, a software-as-a-service documentation hosting\n+  platform, uses Sphinx to automatically build documentation updates\n+  that are pushed to GitHub.\n+\n+* Spyder, the Scientific Python Development Environment, uses Sphinx\n+  in its help pane to render rich documentation for functions, classes\n+  and methods automatically or on-demand.\ndiff --git a/_build/doc/extdev/appapi.txt b/_build/doc/extdev/appapi.txt\nnew file mode 100644\nindex 000000000..03f256740\n--- /dev/null\n+++ b/_build/doc/extdev/appapi.txt\n@@ -0,0 +1,867 @@\n+Application API\n+***************\n+\n+Each Sphinx extension is a Python module with at least a \"setup()\"\n+function.  This function is called at initialization time with one\n+argument, the application object representing the Sphinx process.\n+\n+class sphinx.application.Sphinx\n+\n+   This application object has the public API described in the\n+   following.\n+\n+\n+Extension setup\n+===============\n+\n+These methods are usually called in an extension's \"setup()\" function.\n+\n+Examples of using the Sphinx extension API can be seen in the\n+\"sphinx.ext\" package.\n+\n+Sphinx.setup_extension(name)\n+\n+   Import and setup a Sphinx extension module.\n+\n+   Load the extension given by the module *name*.  Use this if your\n+   extension needs the features provided by another extension.  No-op\n+   if called twice.\n+\n+Sphinx.require_sphinx(version)\n+\n+   Check the Sphinx version if requested.\n+\n+   Compare *version* (which must be a \"major.minor\" version string,\n+   e.g. \"'1.1'\") with the version of the running Sphinx, and abort the\n+   build when it is too old.\n+\n+   New in version 1.0.\n+\n+Sphinx.connect(event, callback)\n+\n+   Register *callback* to be called when *event* is emitted.\n+\n+   For details on available core events and the arguments of callback\n+   functions, please see Sphinx core events.\n+\n+   Registered callbacks will be invoked on event in the order of\n+   *priority* and registration.  The priority is ascending order.\n+\n+   The method returns a \"listener ID\" that can be used as an argument\n+   to \"disconnect()\".\n+\n+   Changed in version 3.0: Support *priority*\n+\n+Sphinx.disconnect(listener_id)\n+\n+   Unregister callback by *listener_id*.\n+\n+Sphinx.add_builder(builder)\n+\n+   Register a new builder.\n+\n+   *builder* must be a class that inherits from \"Builder\".\n+\n+   If *override* is True, the given *builder* is forcedly installed\n+   even if a builder having the same name is already installed.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_config_value(name, default, rebuild)\n+\n+   Register a configuration value.\n+\n+   This is necessary for Sphinx to recognize new values and set\n+   default values accordingly.  The *name* should be prefixed with the\n+   extension name, to avoid clashes.  The *default* value can be any\n+   Python object. The string value *rebuild* must be one of those\n+   values:\n+\n+   * \"'env'\" if a change in the setting only takes effect when a\n+     document is parsed -- this means that the whole environment must\n+     be rebuilt.\n+\n+   * \"'html'\" if a change in the setting needs a full rebuild of HTML\n+     documents.\n+\n+   * \"''\" if a change in the setting will not need any special\n+     rebuild.\n+\n+   Changed in version 0.6: Changed *rebuild* from a simple boolean\n+   (equivalent to \"''\" or \"'env'\") to a string.  However, booleans are\n+   still accepted and converted internally.\n+\n+   Changed in version 0.4: If the *default* value is a callable, it\n+   will be called with the config object as its argument in order to\n+   get the default value. This can be used to implement config values\n+   whose default depends on other values.\n+\n+Sphinx.add_event(name)\n+\n+   Register an event called *name*.\n+\n+   This is needed to be able to emit it.\n+\n+Sphinx.set_translator(name, translator_class)\n+\n+   Register or override a Docutils translator class.\n+\n+   This is used to register a custom output translator or to replace a\n+   builtin translator.  This allows extensions to use custom\n+   translator and define custom nodes for the translator (see\n+   \"add_node()\").\n+\n+   If *override* is True, the given *translator_class* is forcedly\n+   installed even if a translator for *name* is already installed.\n+\n+   New in version 1.3.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_node(node, \\*\\*kwds)\n+\n+   Register a Docutils node class.\n+\n+   This is necessary for Docutils internals.  It may also be used in\n+   the future to validate nodes in the parsed documents.\n+\n+   Node visitor functions for the Sphinx HTML, LaTeX, text and manpage\n+   writers can be given as keyword arguments: the keyword should be\n+   one or more of \"'html'\", \"'latex'\", \"'text'\", \"'man'\", \"'texinfo'\"\n+   or any other supported translators, the value a 2-tuple of \"(visit,\n+   depart)\" methods.  \"depart\" can be \"None\" if the \"visit\" function\n+   raises \"docutils.nodes.SkipNode\".  Example:\n+\n+      class math(docutils.nodes.Element): pass\n+\n+      def visit_math_html(self, node):\n+          self.body.append(self.starttag(node, 'math'))\n+      def depart_math_html(self, node):\n+          self.body.append('</math>')\n+\n+      app.add_node(math, html=(visit_math_html, depart_math_html))\n+\n+   Obviously, translators for which you don't specify visitor methods\n+   will choke on the node when encountered in a document to translate.\n+\n+   If *override* is True, the given *node* is forcedly installed even\n+   if a node having the same name is already installed.\n+\n+   Changed in version 0.5: Added the support for keyword arguments\n+   giving visit functions.\n+\n+Sphinx.add_enumerable_node(node, figtype, title_getter=None, \\*\\*kwds)\n+\n+   Register a Docutils node class as a numfig target.\n+\n+   Sphinx numbers the node automatically. And then the users can refer\n+   it using \"numref\".\n+\n+   *figtype* is a type of enumerable nodes.  Each figtypes have\n+   individual numbering sequences.  As a system figtypes, \"figure\",\n+   \"table\" and \"code-block\" are defined.  It is able to add custom\n+   nodes to these default figtypes.  It is also able to define new\n+   custom figtype if new figtype is given.\n+\n+   *title_getter* is a getter function to obtain the title of node.\n+   It takes an instance of the enumerable node, and it must return its\n+   title as string.  The title is used to the default title of\n+   references for \"ref\".  By default, Sphinx searches\n+   \"docutils.nodes.caption\" or \"docutils.nodes.title\" from the node as\n+   a title.\n+\n+   Other keyword arguments are used for node visitor functions. See\n+   the \"Sphinx.add_node()\" for details.\n+\n+   If *override* is True, the given *node* is forcedly installed even\n+   if a node having the same name is already installed.\n+\n+   New in version 1.4.\n+\n+Sphinx.add_directive(name, directiveclass)\n+\n+   Register a Docutils directive.\n+\n+   *name* must be the prospective directive name.  *cls* is a\n+   directive class which inherits \"docutils.parsers.rst.Directive\".\n+   For more details, see the Docutils docs .\n+\n+   For example, a custom directive named \"my-directive\" would be added\n+   like this:\n+\n+      from docutils.parsers.rst import Directive, directives\n+\n+      class MyDirective(Directive):\n+          has_content = True\n+          required_arguments = 1\n+          optional_arguments = 0\n+          final_argument_whitespace = True\n+          option_spec = {\n+              'class': directives.class_option,\n+              'name': directives.unchanged,\n+          }\n+\n+          def run(self):\n+              ...\n+\n+      def setup(app):\n+          add_directive('my-directive', MyDirective)\n+\n+   If *override* is True, the given *cls* is forcedly installed even\n+   if a directive named as *name* is already installed.\n+\n+   Changed in version 0.6: Docutils 0.5-style directive classes are\n+   now supported.\n+\n+   Deprecated since version 1.8: Docutils 0.4-style (function based)\n+   directives support is deprecated.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_role(name, role)\n+\n+   Register a Docutils role.\n+\n+   *name* must be the role name that occurs in the source, *role* the\n+   role function. Refer to the Docutils documentation for more\n+   information.\n+\n+   If *override* is True, the given *role* is forcedly installed even\n+   if a role named as *name* is already installed.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_generic_role(name, nodeclass)\n+\n+   Register a generic Docutils role.\n+\n+   Register a Docutils role that does nothing but wrap its contents in\n+   the node given by *nodeclass*.\n+\n+   If *override* is True, the given *nodeclass* is forcedly installed\n+   even if a role named as *name* is already installed.\n+\n+   New in version 0.6.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_domain(domain)\n+\n+   Register a domain.\n+\n+   Make the given *domain* (which must be a class; more precisely, a\n+   subclass of \"Domain\") known to Sphinx.\n+\n+   If *override* is True, the given *domain* is forcedly installed\n+   even if a domain having the same name is already installed.\n+\n+   New in version 1.0.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_directive_to_domain(domain, name, directiveclass)\n+\n+   Register a Docutils directive in a domain.\n+\n+   Like \"add_directive()\", but the directive is added to the domain\n+   named *domain*.\n+\n+   If *override* is True, the given *directive* is forcedly installed\n+   even if a directive named as *name* is already installed.\n+\n+   New in version 1.0.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_role_to_domain(domain, name, role)\n+\n+   Register a Docutils role in a domain.\n+\n+   Like \"add_role()\", but the role is added to the domain named\n+   *domain*.\n+\n+   If *override* is True, the given *role* is forcedly installed even\n+   if a role named as *name* is already installed.\n+\n+   New in version 1.0.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_index_to_domain(domain, index)\n+\n+   Register a custom index for a domain.\n+\n+   Add a custom *index* class to the domain named *domain*.  *index*\n+   must be a subclass of \"Index\".\n+\n+   If *override* is True, the given *index* is forcedly installed even\n+   if an index having the same name is already installed.\n+\n+   New in version 1.0.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_object_type(directivename, rolename, indextemplate='', parse_node=None, ref_nodeclass=None, objname='', doc_field_types=[])\n+\n+   Register a new object type.\n+\n+   This method is a very convenient way to add a new *object* type\n+   that can be cross-referenced.  It will do this:\n+\n+   * Create a new directive (called *directivename*) for documenting\n+     an object.  It will automatically add index entries if\n+     *indextemplate* is nonempty; if given, it must contain exactly\n+     one instance of \"%s\".  See the example below for how the template\n+     will be interpreted.\n+\n+   * Create a new role (called *rolename*) to cross-reference to these\n+     object descriptions.\n+\n+   * If you provide *parse_node*, it must be a function that takes a\n+     string and a docutils node, and it must populate the node with\n+     children parsed from the string.  It must then return the name of\n+     the item to be used in cross-referencing and index entries.  See\n+     the \"conf.py\" file in the source for this documentation for an\n+     example.\n+\n+   * The *objname* (if not given, will default to *directivename*)\n+     names the type of object.  It is used when listing objects, e.g.\n+     in search results.\n+\n+   For example, if you have this call in a custom Sphinx extension:\n+\n+      app.add_object_type('directive', 'dir', 'pair: %s; directive')\n+\n+   you can use this markup in your documents:\n+\n+      .. rst:directive:: function\n+\n+         Document a function.\n+\n+      <...>\n+\n+      See also the :rst:dir:`function` directive.\n+\n+   For the directive, an index entry will be generated as if you had\n+   prepended\n+\n+      .. index:: pair: function; directive\n+\n+   The reference node will be of class \"literal\" (so it will be\n+   rendered in a proportional font, as appropriate for code) unless\n+   you give the *ref_nodeclass* argument, which must be a docutils\n+   node class.  Most useful are \"docutils.nodes.emphasis\" or\n+   \"docutils.nodes.strong\" -- you can also use\n+   \"docutils.nodes.generated\" if you want no further text decoration.\n+   If the text should be treated as literal (e.g. no smart quote\n+   replacement), but not have typewriter styling, use\n+   \"sphinx.addnodes.literal_emphasis\" or\n+   \"sphinx.addnodes.literal_strong\".\n+\n+   For the role content, you have the same syntactical possibilities\n+   as for standard Sphinx roles (see Cross-referencing syntax).\n+\n+   If *override* is True, the given object_type is forcedly installed\n+   even if an object_type having the same name is already installed.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_crossref_type(directivename, rolename, indextemplate='', ref_nodeclass=None, objname='')\n+\n+   Register a new crossref object type.\n+\n+   This method is very similar to \"add_object_type()\" except that the\n+   directive it generates must be empty, and will produce no output.\n+\n+   That means that you can add semantic targets to your sources, and\n+   refer to them using custom roles instead of generic ones (like\n+   \"ref\").  Example call:\n+\n+      app.add_crossref_type('topic', 'topic', 'single: %s',\n+                            docutils.nodes.emphasis)\n+\n+   Example usage:\n+\n+      .. topic:: application API\n+\n+      The application API\n+      -------------------\n+\n+      Some random text here.\n+\n+      See also :topic:`this section <application API>`.\n+\n+   (Of course, the element following the \"topic\" directive needn't be\n+   a section.)\n+\n+   If *override* is True, the given crossref_type is forcedly\n+   installed even if a crossref_type having the same name is already\n+   installed.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_transform(transform)\n+\n+   Register a Docutils transform to be applied after parsing.\n+\n+   Add the standard docutils \"Transform\" subclass *transform* to the\n+   list of transforms that are applied after Sphinx parses a reST\n+   document.\n+\n+\n+   priority range categories for Sphinx transforms\n+   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | Priority             | Main purpose in Sphinx                                                           |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 0-99                 | Fix invalid nodes by docutils. Translate a doctree.                              |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 100-299              | Preparation                                                                      |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 300-399              | early                                                                            |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 400-699              | main                                                                             |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 700-799              | Post processing. Deadline to modify text and referencing.                        |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 800-899              | Collect referencing and referenced nodes. Domain processing.                     |\n+   +----------------------+----------------------------------------------------------------------------------+\n+   | 900-999              | Finalize and clean up.                                                           |\n+   +----------------------+----------------------------------------------------------------------------------+\n+\n+   refs: Transform Priority Range Categories\n+\n+Sphinx.add_post_transform(transform)\n+\n+   Register a Docutils transform to be applied before writing.\n+\n+   Add the standard docutils \"Transform\" subclass *transform* to the\n+   list of transforms that are applied before Sphinx writes a\n+   document.\n+\n+Sphinx.add_js_file(filename, **kwargs)\n+\n+   Register a JavaScript file to include in the HTML output.\n+\n+   Add *filename* to the list of JavaScript files that the default\n+   HTML template will include.  The filename must be relative to the\n+   HTML static path , or a full URI with scheme.  If the keyword\n+   argument \"body\" is given, its value will be added between the\n+   \"<script>\" tags. Extra keyword arguments are included as attributes\n+   of the \"<script>\" tag.\n+\n+   Example:\n+\n+      app.add_js_file('example.js')\n+      # => <script src=\"_static/example.js\"></script>\n+\n+      app.add_js_file('example.js', async=\"async\")\n+      # => <script src=\"_static/example.js\" async=\"async\"></script>\n+\n+      app.add_js_file(None, body=\"var myVariable = 'foo';\")\n+      # => <script>var myVariable = 'foo';</script>\n+\n+   New in version 0.5.\n+\n+   Changed in version 1.8: Renamed from \"app.add_javascript()\". And it\n+   allows keyword arguments as attributes of script tag.\n+\n+Sphinx.add_css_file(filename, **kwargs)\n+\n+   Register a stylesheet to include in the HTML output.\n+\n+   Add *filename* to the list of CSS files that the default HTML\n+   template will include.  The filename must be relative to the HTML\n+   static path, or a full URI with scheme.  The keyword arguments are\n+   also accepted for attributes of \"<link>\" tag.\n+\n+   Example:\n+\n+      app.add_css_file('custom.css')\n+      # => <link rel=\"stylesheet\" href=\"_static/custom.css\" type=\"text/css\" />\n+\n+      app.add_css_file('print.css', media='print')\n+      # => <link rel=\"stylesheet\" href=\"_static/print.css\"\n+      #          type=\"text/css\" media=\"print\" />\n+\n+      app.add_css_file('fancy.css', rel='alternate stylesheet', title='fancy')\n+      # => <link rel=\"alternate stylesheet\" href=\"_static/fancy.css\"\n+      #          type=\"text/css\" title=\"fancy\" />\n+\n+   New in version 1.0.\n+\n+   Changed in version 1.6: Optional \"alternate\" and/or \"title\"\n+   attributes can be supplied with the *alternate* (of boolean type)\n+   and *title* (a string) arguments. The default is no title and\n+   *alternate* = \"False\". For more information, refer to the\n+   documentation.\n+\n+   Changed in version 1.8: Renamed from \"app.add_stylesheet()\". And it\n+   allows keyword arguments as attributes of link tag.\n+\n+Sphinx.add_latex_package(packagename, options=None)\n+\n+   Register a package to include in the LaTeX source code.\n+\n+   Add *packagename* to the list of packages that LaTeX source code\n+   will include.  If you provide *options*, it will be taken to\n+   *usepackage* declaration.  If you set *after_hyperref* truthy, the\n+   package will be loaded after \"hyperref\" package.\n+\n+      app.add_latex_package('mypackage')\n+      # => \\usepackage{mypackage}\n+      app.add_latex_package('mypackage', 'foo,bar')\n+      # => \\usepackage[foo,bar]{mypackage}\n+\n+   New in version 1.3.\n+\n+   New in version 3.1: *after_hyperref* option.\n+\n+Sphinx.add_lexer(alias, lexer)\n+\n+   Register a new lexer for source code.\n+\n+   Use *lexer* to highlight code blocks with the given language\n+   *alias*.\n+\n+   New in version 0.6.\n+\n+   Changed in version 2.1: Take a lexer class as an argument.  An\n+   instance of lexers are still supported until Sphinx-3.x.\n+\n+Sphinx.add_autodocumenter(cls)\n+\n+   Register a new documenter class for the autodoc extension.\n+\n+   Add *cls* as a new documenter class for the \"sphinx.ext.autodoc\"\n+   extension.  It must be a subclass of\n+   \"sphinx.ext.autodoc.Documenter\".  This allows to auto-document new\n+   types of objects.  See the source of the autodoc module for\n+   examples on how to subclass \"Documenter\".\n+\n+   If *override* is True, the given *cls* is forcedly installed even\n+   if a documenter having the same name is already installed.\n+\n+   New in version 0.6.\n+\n+   Changed in version 2.2: Add *override* keyword.\n+\n+Sphinx.add_autodoc_attrgetter(type, getter)\n+\n+   Register a new \"getattr\"-like function for the autodoc extension.\n+\n+   Add *getter*, which must be a function with an interface compatible\n+   to the \"getattr()\" builtin, as the autodoc attribute getter for\n+   objects that are instances of *typ*.  All cases where autodoc needs\n+   to get an attribute of a type are then handled by this function\n+   instead of \"getattr()\".\n+\n+   New in version 0.6.\n+\n+Sphinx.add_search_language(cls)\n+\n+   Register a new language for the HTML search index.\n+\n+   Add *cls*, which must be a subclass of\n+   \"sphinx.search.SearchLanguage\", as a support language for building\n+   the HTML full-text search index.  The class must have a *lang*\n+   attribute that indicates the language it should be used for.  See\n+   >>:confval:`html_search_language`<<.\n+\n+   New in version 1.1.\n+\n+Sphinx.add_source_suffix(suffix, filetype)\n+\n+   Register a suffix of source files.\n+\n+   Same as >>:confval:`source_suffix`<<.  The users can override this\n+   using the setting.\n+\n+   If *override* is True, the given *suffix* is forcedly installed\n+   even if a same suffix is already installed.\n+\n+   New in version 1.8.\n+\n+Sphinx.add_source_parser(parser)\n+\n+   Register a parser class.\n+\n+   If *override* is True, the given *parser* is forcedly installed\n+   even if a parser for the same suffix is already installed.\n+\n+   New in version 1.4.\n+\n+   Changed in version 1.8: *suffix* argument is deprecated.  It only\n+   accepts *parser* argument. Use \"add_source_suffix()\" API to\n+   register suffix instead.\n+\n+   Changed in version 1.8: Add *override* keyword.\n+\n+Sphinx.add_env_collector(collector)\n+\n+   Register an environment collector class.\n+\n+   Refer to Environment Collector API.\n+\n+   New in version 1.6.\n+\n+Sphinx.add_html_theme(name, theme_path)\n+\n+   Register a HTML Theme.\n+\n+   The *name* is a name of theme, and *path* is a full path to the\n+   theme (refs: Distribute your theme as a Python package).\n+\n+   New in version 1.6.\n+\n+Sphinx.add_html_math_renderer(name, inline_renderers, block_renderers)\n+\n+   Register a math renderer for HTML.\n+\n+   The *name* is a name of math renderer.  Both *inline_renderers* and\n+   *block_renderers* are used as visitor functions for the HTML\n+   writer: the former for inline math node (\"nodes.math\"), the latter\n+   for block math node (\"nodes.math_block\").  Regarding visitor\n+   functions, see \"add_node()\" for details.\n+\n+   New in version 1.8.\n+\n+Sphinx.add_message_catalog(catalog, locale_dir)\n+\n+   Register a message catalog.\n+\n+   The *catalog* is a name of catalog, and *locale_dir* is a base path\n+   of message catalog.  For more details, see\n+   \"sphinx.locale.get_translation()\".\n+\n+   New in version 1.8.\n+\n+Sphinx.is_parallel_allowed(typ)\n+\n+   Check parallel processing is allowed or not.\n+\n+   \"typ\" is a type of processing; \"'read'\" or \"'write'\".\n+\n+exception sphinx.application.ExtensionError\n+\n+   All these methods raise this exception if something went wrong with\n+   the extension API.\n+\n+\n+Emitting events\n+===============\n+\n+class sphinx.application.Sphinx\n+\n+   emit(event, \\*arguments)\n+\n+      Emit *event* and pass *arguments* to the callback functions.\n+\n+      Return the return values of all callbacks as a list.  Do not\n+      emit core Sphinx events in extensions!\n+\n+      Changed in version 3.1: Added *allowed_exceptions* to specify\n+      path-through exceptions\n+\n+   emit_firstresult(event, \\*arguments)\n+\n+      Emit *event* and pass *arguments* to the callback functions.\n+\n+      Return the result of the first callback that doesn't return\n+      \"None\".\n+\n+      New in version 0.5.\n+\n+      Changed in version 3.1: Added *allowed_exceptions* to specify\n+      path-through exceptions\n+\n+\n+Sphinx runtime information\n+==========================\n+\n+The application object also provides runtime information as\n+attributes.\n+\n+Sphinx.project\n+\n+   Target project.  See \"Project\".\n+\n+Sphinx.srcdir\n+\n+   Source directory.\n+\n+Sphinx.confdir\n+\n+   Directory containing \"conf.py\".\n+\n+Sphinx.doctreedir\n+\n+   Directory for storing pickled doctrees.\n+\n+Sphinx.outdir\n+\n+   Directory for storing built document.\n+\n+\n+Sphinx core events\n+==================\n+\n+These events are known to the core.  The arguments shown are given to\n+the registered event handlers.  Use \"Sphinx.connect()\" in an\n+extension's \"setup\" function (note that \"conf.py\" can also have a\n+\"setup\" function) to connect handlers to the events.  Example:\n+\n+   def source_read_handler(app, docname, source):\n+       print('do something here...')\n+\n+   def setup(app):\n+       app.connect('source-read', source_read_handler)\n+\n+Below is an overview of each event that happens during a build. In the\n+list below, we include the event name, its callback parameters, and\n+the input and output type for that event:\n+\n+   1. event.config-inited(app,config)\n+   2. event.builder-inited(app)\n+   3. event.env-get-outdated(app, env, added, changed, removed)\n+   4. event.env-before-read-docs(app, env, docnames)\n+\n+   for docname in docnames:\n+      5.  event.env-purge-doc(app, env, docname)\n+      if doc changed and not removed:\n+         6. source-read(app, docname, source)\n+         7. run source parsers: text -> docutils.document (parsers can be added with the app.add_source_parser() API)\n+         8. apply transforms (by priority): docutils.document -> docutils.document\n+            - event.doctree-read(app, doctree) is called in the middly of transforms,\n+              transforms come before/after this event depending on their priority.\n+   9. (if running in parallel mode, for each process) event.env-merged-info(app, env, docnames, other)\n+   10. event.env-updated(app, env)\n+   11. event.env-get-updated(app, env)\n+   12. event.env-check-consistency(app, env)\n+\n+   # The updated-docs list can be builder dependent, but generally includes all new/changed documents,\n+   # plus any output from `env-get-updated`, and then all \"parent\" documents in the ToC tree\n+   # For builders that output a single page, they are first joined into a single doctree before post-transforms/doctree-resolved\n+   for docname in updated-docs:\n+      13. apply post-transforms (by priority): docutils.document -> docutils.document\n+      14. event.doctree-resolved(app, doctree, docname)\n+          - (for any reference node that fails to resolve) event.missing-reference(env, node, contnode)\n+          - (for any reference node that fails to resolve) event.warn-missing-reference(domain, node)\n+\n+   15. Generate output files\n+   16. event.build-finished(app, exception)\n+\n+Here is a more detailed list of these events.\n+\n+\n+Checking the Sphinx version\n+===========================\n+\n+Use this to adapt your extension to API changes in Sphinx.\n+\n+sphinx.version_info = (3, 5, 0, 'beta', 0)\n+\n+   Version info for better programmatic use.\n+\n+   A tuple of five elements; for Sphinx version 1.2.1 beta 3 this\n+   would be \"(1, 2, 1, 'beta', 3)\". The fourth element can be one of:\n+   \"alpha\", \"beta\", \"rc\", \"final\". \"final\" always has 0 as the last\n+   element.\n+\n+   New in version 1.2: Before version 1.2, check the string\n+   \"sphinx.__version__\".\n+\n+\n+The Config object\n+=================\n+\n+class sphinx.config.Config(config: Dict[str, Any] = {}, overrides: Dict[str, Any] = {})\n+\n+   Configuration file abstraction.\n+\n+   The config object makes the values of all config values available\n+   as attributes.\n+\n+   It is exposed via the \"sphinx.application.Application.config\" and\n+   \"sphinx.environment.Environment.config\" attributes. For example, to\n+   get the value of >>:confval:`language`<<, use either\n+   \"app.config.language\" or \"env.config.language\".\n+\n+\n+The template bridge\n+===================\n+\n+class sphinx.application.TemplateBridge\n+\n+   This class defines the interface for a \"template bridge\", that is,\n+   a class that renders templates given a template name and a context.\n+\n+   init(builder: Builder, theme: sphinx.theming.Theme = None, dirs: List[str] = None) -> None\n+\n+      Called by the builder to initialize the template system.\n+\n+      *builder* is the builder object; you'll probably want to look at\n+      the value of \"builder.config.templates_path\".\n+\n+      *theme* is a \"sphinx.theming.Theme\" object or None; in the\n+      latter case, *dirs* can be list of fixed directories to look for\n+      templates.\n+\n+   newest_template_mtime() -> float\n+\n+      Called by the builder to determine if output files are outdated\n+      because of template changes.  Return the mtime of the newest\n+      template file that was changed.  The default implementation\n+      returns \"0\".\n+\n+   render(template: str, context: Dict) -> None\n+\n+      Called by the builder to render a template given as a filename\n+      with a specified context (a Python dictionary).\n+\n+   render_string(template: str, context: Dict) -> str\n+\n+      Called by the builder to render a template given as a string\n+      with a specified context (a Python dictionary).\n+\n+\n+Exceptions\n+==========\n+\n+exception sphinx.errors.SphinxError\n+\n+   Base class for Sphinx errors.\n+\n+   This is the base class for \"nice\" exceptions.  When such an\n+   exception is raised, Sphinx will abort the build and present the\n+   exception category and message to the user.\n+\n+   Extensions are encouraged to derive from this exception for their\n+   custom errors.\n+\n+   Exceptions *not* derived from \"SphinxError\" are treated as\n+   unexpected and shown to the user with a part of the traceback (and\n+   the full traceback saved in a temporary file).\n+\n+   category\n+\n+      Description of the exception \"category\", used in converting the\n+      exception to a string (\"category: message\").  Should be set\n+      accordingly in subclasses.\n+\n+exception sphinx.errors.ConfigError\n+\n+   Configuration error.\n+\n+exception sphinx.errors.ExtensionError(message: str, orig_exc: Optional[Exception] = None)\n+\n+   Extension error.\n+\n+exception sphinx.errors.ThemeError\n+\n+   Theme error.\n+\n+exception sphinx.errors.VersionRequirementError\n+\n+   Incompatible Sphinx version error.\ndiff --git a/_build/doc/extdev/builderapi.txt b/_build/doc/extdev/builderapi.txt\nnew file mode 100644\nindex 000000000..6fbd99764\n--- /dev/null\n+++ b/_build/doc/extdev/builderapi.txt\n@@ -0,0 +1,113 @@\n+Builder API\n+***********\n+\n+class sphinx.builders.Builder\n+\n+   This is the base class for all builders.\n+\n+   These attributes should be set on builder classes:\n+\n+   name = ''\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = ''\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   epilog = ''\n+\n+      The message emitted upon successful build completion. This can\n+      be a printf-style template string with the following keys:\n+      \"outdir\", \"project\"\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   supported_remote_images = False\n+\n+      The builder supports remote images or not.\n+\n+   supported_data_uri_images = False\n+\n+      The builder supports data URIs or not.\n+\n+   default_translator_class: Type[nodes.NodeVisitor] = None\n+\n+      default translator class for the builder.  This can be\n+      overridden by \"app.set_translator()\".\n+\n+   These methods are predefined and will be called from the\n+   application:\n+\n+   get_relative_uri(from_: str, to: str, typ: Optional[str] = None) -> str\n+\n+      Return a relative URI between two source filenames.\n+\n+      May raise environment.NoUri if there's no way to return a\n+      sensible URI.\n+\n+   build_all() -> None\n+\n+      Build all source files.\n+\n+   build_specific(filenames: List[str]) -> None\n+\n+      Only rebuild as much as needed for changes in the *filenames*.\n+\n+   build_update() -> None\n+\n+      Only rebuild what was changed or added since last build.\n+\n+   build(docnames: Iterable[str], summary: Optional[str] = None, method: str = 'update') -> None\n+\n+      Main build method.\n+\n+      First updates the environment, and then calls \"write()\".\n+\n+   These methods can be overridden in concrete builder classes:\n+\n+   init() -> None\n+\n+      Load necessary templates and perform initialization.  The\n+      default implementation does nothing.\n+\n+   get_outdated_docs() -> Union[str, Iterable[str]]\n+\n+      Return an iterable of output files that are outdated, or a\n+      string describing what an update build will build.\n+\n+      If the builder does not output individual files corresponding to\n+      source files, return a string here.  If it does, return an\n+      iterable of those files that need to be written.\n+\n+   get_target_uri(docname: str, typ: Optional[str] = None) -> str\n+\n+      Return the target URI for a document name.\n+\n+      *typ* can be used to qualify the link characteristic for\n+      individual builders.\n+\n+   prepare_writing(docnames: Set[str]) -> None\n+\n+      A place where you can add logic before \"write_doc()\" is run\n+\n+   write_doc(docname: str, doctree: docutils.nodes.document) -> None\n+\n+      Where you actually write something to the filesystem.\n+\n+   finish() -> None\n+\n+      Finish the building process.\n+\n+      The default implementation does nothing.\n+\n+   **Attributes**\n+\n+   events\n+\n+      An \"EventManager\" object.\ndiff --git a/_build/doc/extdev/collectorapi.txt b/_build/doc/extdev/collectorapi.txt\nnew file mode 100644\nindex 000000000..96e9d7b9f\n--- /dev/null\n+++ b/_build/doc/extdev/collectorapi.txt\n@@ -0,0 +1,42 @@\n+Environment Collector API\n+*************************\n+\n+class sphinx.environment.collectors.EnvironmentCollector\n+\n+   An EnvironmentCollector is a specific data collector from each\n+   document.\n+\n+   It gathers data and stores \"BuildEnvironment\" as a database.\n+   Examples of specific data would be images, download files, section\n+   titles, metadatas, index entries and toctrees, etc.\n+\n+   clear_doc(app: Sphinx, env: sphinx.environment.BuildEnvironment, docname: str) -> None\n+\n+      Remove specified data of a document.\n+\n+      This method is called on the removal of the document.\n+\n+   get_outdated_docs(app: Sphinx, env: sphinx.environment.BuildEnvironment, added: Set[str], changed: Set[str], removed: Set[str]) -> List[str]\n+\n+      Return a list of docnames to re-read.\n+\n+      This methods is called before reading the documents.\n+\n+   get_updated_docs(app: Sphinx, env: sphinx.environment.BuildEnvironment) -> List[str]\n+\n+      Return a list of docnames to re-read.\n+\n+      This methods is called after reading the whole of documents\n+      (experimental).\n+\n+   merge_other(app: Sphinx, env: sphinx.environment.BuildEnvironment, docnames: Set[str], other: sphinx.environment.BuildEnvironment) -> None\n+\n+      Merge in specified data regarding docnames from a different\n+      *BuildEnvironment* object which coming from a subprocess in\n+      parallel builds.\n+\n+   process_doc(app: Sphinx, doctree: docutils.nodes.document) -> None\n+\n+      Process a document and gather specific data from it.\n+\n+      This method is called after the document is read.\ndiff --git a/_build/doc/extdev/deprecated.txt b/_build/doc/extdev/deprecated.txt\nnew file mode 100644\nindex 000000000..f40d274a3\n--- /dev/null\n+++ b/_build/doc/extdev/deprecated.txt\n@@ -0,0 +1,779 @@\n+Deprecated APIs\n+***************\n+\n+On developing Sphinx, we are always careful to the compatibility of\n+our APIs. But, sometimes, the change of interface are needed for some\n+reasons.  In such cases, we've marked them as deprecated. And they are\n+kept during the two major versions (for more details, please see\n+Deprecation policy).\n+\n+The following is a list of deprecated interfaces.\n+\n+\n+deprecated APIs\n+^^^^^^^^^^^^^^^\n+\n++------------------------------------------+------------+------------+------------------------------------------+\n+| Target                                   | Deprecated | (will\u00a0be)  | Alternatives                             |\n+|                                          |            | Removed    |                                          |\n+|==========================================|============|============|==========================================|\n+| \"sphinx.ext.autodoc.importer.get_module  | 3.5        | 5.0        | \"sphinx.ext.autodoc.ModuleDocumenter.ge  |\n+| _members()\"                              |            |            | t_module_members()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"follow_wrapped\" argument of         | 3.4        | 5.0        | N/A                                      |\n+| \"sphinx.util.inspect.signature()\"        |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"no_docstring\" argument of \"sphinx.  | 3.4        | 5.0        | \"sphinx.ext.autodoc.Documenter.get_doc(  |\n+| ext.autodoc.Documenter.add_content()\"    |            |            | )\"                                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.Documenter.get_obje  | 3.4        | 6.0        | \"sphinx.ext.autodoc.ClassDocumenter.get  |\n+| ct_members()\"                            |            |            | _object_members()\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.DataDeclarationDocu  | 3.4        | 5.0        | \"sphinx.ext.autodoc.DataDocumenter\"      |\n+| menter\"                                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.GenericAliasDocumen  | 3.4        | 5.0        | \"sphinx.ext.autodoc.DataDocumenter\"      |\n+| ter\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.InstanceAttributeDo  | 3.4        | 5.0        | \"sphinx.ext.autodoc.AttributeDocumenter\" |\n+| cumenter\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.SlotsAttributeDocum  | 3.4        | 5.0        | \"sphinx.ext.autodoc.AttributeDocumenter\" |\n+| enter\"                                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.TypeVarDocumenter\"   | 3.4        | 5.0        | \"sphinx.ext.autodoc.DataDocumenter\"      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer._getannota  | 3.4        | 4.0        | \"sphinx.util.inspect.getannotations()\"   |\n+| tions()\"                                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer._getmro()\"  | 3.4        | 4.0        | \"sphinx.util.inspect.getmro()\"           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.pycode.ModuleAnalyzer.parse()\"   | 3.4        | 5.0        | \"sphinx.pycode.ModuleAnalyzer.analyze()\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.movefile()\"          | 3.4        | 5.0        | \"os.replace()\"                           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.requests.is_ssl_error()\"    | 3.4        | 5.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.latex.LaTeXBuilder.use  | 3.3        | 5.0        | N/A                                      |\n+| packages\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.latex.LaTeXBuilder.use  | 3.3        | 5.0        | N/A                                      |\n+| packages_afger_hyperref\"                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.SingledispatchFunct  | 3.3        | 5.0        | \"sphinx.ext.autodoc.FunctionDocumenter\"  |\n+| ionDocumenter\"                           |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.SingledispatchMetho  | 3.3        | 5.0        | \"sphinx.ext.autodoc.MethodDocumenter\"    |\n+| dDocumenter\"                             |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.members_set_option(  | 3.2        | 5.0        | N/A                                      |\n+| )\"                                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.merge_special_membe  | 3.2        | 5.0        | \"sphinx.ext.autodoc.merge_members_optio  |\n+| rs_option()\"                             |            |            | n()\"                                     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.texinfo.TexinfoWriter.d  | 3.2        | 5.0        | \"sphinx.writers.texinfo.TexinfoWriter.d  |\n+| esc\"                                     |            |            | escs\"                                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The first argument for \"sphinx.ext.auto  | 3.1        | 5.0        | N/A                                      |\n+| summary.generate.AutosummaryRenderer\"    |            |            |                                          |\n+| has been changed to Sphinx object        |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.generate.Autosu  | 3.1        | 5.0        | N/A                                      |\n+| mmaryRenderer\" takes an object type as   |            |            |                                          |\n+| an argument                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"ignore\" argument of \"sphinx.ext.au  | 3.1        | 5.0        | N/A                                      |\n+| todoc.Documenter.get_doc()\"              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"template_dir\" argument of \"sphinx.  | 3.1        | 5.0        | N/A                                      |\n+| ext.autosummary.generate.AutosummaryRen  |            |            |                                          |\n+| derer\"                                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"module\" argument of \"sphinx.ext.au  | 3.0        | 5.0        | N/A                                      |\n+| tosummary.generate.find_autosummary_in_  |            |            |                                          |\n+| docstring()\"                             |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"builder\" argument of \"sphinx.ext.a  | 3.1        | 5.0        | N/A                                      |\n+| utosummary.generate.generate_autosummar  |            |            |                                          |\n+| y_docs()\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"template_dir\" argument of \"sphinx.  | 3.1        | 5.0        | N/A                                      |\n+| ext.autosummary.generate.generate_autos  |            |            |                                          |\n+| ummary_docs()\"                           |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.generate.Autosu  | 3.1        | 5.0        | N/A                                      |\n+| mmaryRenderer.exists()\"                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"ignore\" argument of \"sphinx.util.d  | 3.1        | 5.0        | N/A                                      |\n+| ocstring.prepare_docstring()\"            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.rpartition()\"               | 3.1        | 5.0        | \"str.rpartition()\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"desc_signature['first']\"                |            | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.DescDirective\"        | 3.0        | 5.0        | \"sphinx.directives.ObjectDescription\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.std.StandardDomain.add_  | 3.0        | 5.0        | \"sphinx.domains.std.StandardDomain.note  |\n+| object()\"                                |            |            | _object()\"                               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.python.PyDecoratorMixin\" | 3.0        | 5.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.get_documenters()\"   | 3.0        | 5.0        | \"sphinx.registry.documenters\"            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.process_autosum  | 3.0        | 5.0        | N/A                                      |\n+| mary_toc()\"                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.parsers.Parser.app\"              | 3.0        | 5.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.testing.path.Path.text()\"        | 3.0        | 5.0        | \"sphinx.testing.path.Path.read_text()\"   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.testing.path.Path.bytes()\"       | 3.0        | 5.0        | \"sphinx.testing.path.Path.read_bytes()\"  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.inspect.getargspec()\"       | 3.0        | 5.0        | \"inspect.getargspec()\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXWriter.forma  | 3.0        | 5.0        | LaTeX Themes                             |\n+| t_docclass()\"                            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"decode\" argument of                     | 2.4        | 4.0        | N/A                                      |\n+| \"sphinx.pycode.ModuleAnalyzer()\"         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.other.Index\"          | 2.4        | 4.0        | \"sphinx.domains.index.IndexDirective\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.environment.temp_data['gloss_en  | 2.4        | 4.0        | \"documents.nameids\"                      |\n+| tries']\"                                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.environment.BuildEnvironment.in  | 2.4        | 4.0        | \"sphinx.domains.index.IndexDomain\"       |\n+| dexentries\"                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.environment.collectors.indexent  | 2.4        | 4.0        | \"sphinx.domains.index.IndexDomain\"       |\n+| ries.IndexEntriesCollector\"              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.FiletypeNotFoundError\"        | 2.4        | 4.0        | \"sphinx.errors.FiletypeNotFoundError\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.apidoc.INITPY\"               | 2.4        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.apidoc.shall_skip()\"         | 2.4        | 4.0        | \"sphinx.ext.apidoc.is_skipped_package\"   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.get_filetype()\"               | 2.4        | 4.0        | \"sphinx.util.get_filetype()\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.pycode.ModuleAnalyzer.encoding\"  | 2.4        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.Index\"                     | 2.4        | 4.0        | \"sphinx.domains.index.IndexRole\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.detect_encoding()\"          | 2.4        | 4.0        | \"tokenize.detect_encoding()\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.get_module_source()\"        | 2.4        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.inspect.Signature\"          | 2.4        | 4.0        | \"sphinx.util.inspect.signature\" and \"sp  |\n+|                                          |            |            | hinx.util.inspect.stringify_signature()\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.inspect.safe_getmembers()\"  | 2.4        | 4.0        | \"inspect.getmembers()\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |\n+| ettings.author\"                          |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | \"document['contentsname']\"               |\n+| ettings.contentsname\"                    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | \"document['docclass']\"                   |\n+| ettings.docclass\"                        |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |\n+| ettings.docname\"                         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |\n+| ettings.title\"                           |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.ADDITIONAL_SETTIN  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.ADDITI  |\n+| GS\"                                      |            |            | ONAL_SETTINGS\"                           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.DEFAULT_SETTINGS\"  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.DEFAUL  |\n+|                                          |            |            | T_SETTINGS\"                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LUALATEX_DEFAULT_  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.LUALAT  |\n+| FONTPKG\"                                 |            |            | EX_DEFAULT_FONTPKG\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.PDFLATEX_DEFAULT_  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.PDFLAT  |\n+| FONTPKG\"                                 |            |            | EX_DEFAULT_FONTPKG\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.XELATEX_DEFAULT_F  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.XELATE  |\n+| ONTPKG\"                                  |            |            | X_DEFAULT_FONTPKG\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.XELATEX_GREEK_DEF  | 2.4        | 4.0        | \"sphinx.builders.latex.constants.XELATE  |\n+| AULT_FONTPKG\"                            |            |            | X_GREEK_DEFAULT_FONTPKG\"                 |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.gettext.POHEADER\"       | 2.3        | 4.0        | \"sphinx/templates/gettext/message.pot_t\" |\n+|                                          |            |            | (template file)                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxStandaloneReader.app\"   | 2.3        | 4.0        | \"sphinx.io.SphinxStandaloneReader.setup  |\n+|                                          |            |            | ()\"                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxStandaloneReader.env\"   | 2.3        | 4.0        | \"sphinx.io.SphinxStandaloneReader.setup  |\n+|                                          |            |            | ()\"                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.texescape.tex_escape_map\"   | 2.3        | 4.0        | \"sphinx.util.texescape.escape()\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.texescape.tex_hl_escape_ma  | 2.3        | 4.0        | \"sphinx.util.texescape.hlescape()\"       |\n+| p_new\"                                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.n  | 2.3        | 4.0        | N/A                                      |\n+| o_contractions\"                          |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.math.MathDomain.add_equ  | 2.2        | 4.0        | \"sphinx.domains.math.MathDomain.note_eq  |\n+| ation()\"                                 |            |            | uation()\"                                |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.math.MathDomain.get_nex  | 2.2        | 4.0        | \"sphinx.domains.math.MathDomain.note_eq  |\n+| t_equation_number()\"                     |            |            | uation()\"                                |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"info\" and \"warn\" arguments of \"sph  | 2.2        | 4.0        | \"logging.info()\" and \"logging.warning()\" |\n+| inx.ext.autosummary.generate.generate_a  |            |            |                                          |\n+| utosummary_docs()\"                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.generate._simpl  | 2.2        | 4.0        | \"logging.info()\"                         |\n+| e_info()\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.generate._simpl  | 2.2        | 4.0        | \"logging.warning()\"                      |\n+| e_warn()\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.todo.merge_info()\"           | 2.2        | 4.0        | \"sphinx.ext.todo.TodoDomain\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.todo.process_todo_nodes()\"   | 2.2        | 4.0        | \"sphinx.ext.todo.TodoDomain\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.todo.process_todos()\"        | 2.2        | 4.0        | \"sphinx.ext.todo.TodoDomain\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.todo.purge_todos()\"          | 2.2        | 4.0        | \"sphinx.ext.todo.TodoDomain\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.latex.LaTeXBuilder.app  | 2.1        | 4.0        | N/A                                      |\n+| ly_transforms()\"                         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders._epub_base.EpubBuilder  | 2.1        | 4.0        | \"html.escape()\"                          |\n+| .esc()\"                                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Acks\"                 | 2.1        | 4.0        | \"sphinx.directives.other.Acks\"           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Author\"               | 2.1        | 4.0        | \"sphinx.directives.other.Author\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Centered\"             | 2.1        | 4.0        | \"sphinx.directives.other.Centered\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Class\"                | 2.1        | 4.0        | \"sphinx.directives.other.Class\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.CodeBlock\"            | 2.1        | 4.0        | \"sphinx.directives.code.CodeBlock\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Figure\"               | 2.1        | 4.0        | \"sphinx.directives.patches.Figure\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.HList\"                | 2.1        | 4.0        | \"sphinx.directives.other.HList\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Highlight\"            | 2.1        | 4.0        | \"sphinx.directives.code.Highlight\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Include\"              | 2.1        | 4.0        | \"sphinx.directives.other.Include\"        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Index\"                | 2.1        | 4.0        | \"sphinx.directives.other.Index\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.LiteralInclude\"       | 2.1        | 4.0        | \"sphinx.directives.code.LiteralInclude\"  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Meta\"                 | 2.1        | 4.0        | \"sphinx.directives.patches.Meta\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.Only\"                 | 2.1        | 4.0        | \"sphinx.directives.other.Only\"           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.SeeAlso\"              | 2.1        | 4.0        | \"sphinx.directives.other.SeeAlso\"        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.TabularColumns\"       | 2.1        | 4.0        | \"sphinx.directives.other.TabularColumns\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.TocTree\"              | 2.1        | 4.0        | \"sphinx.directives.other.TocTree\"        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.VersionChange\"        | 2.1        | 4.0        | \"sphinx.directives.other.VersionChange\"  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.python.PyClassmember\"    | 2.1        | 4.0        | \"sphinx.domains.python.PyAttribute\",     |\n+|                                          |            |            | \"sphinx.domains.python.PyMethod\",        |\n+|                                          |            |            | \"sphinx.domains.python.PyClassMethod\",   |\n+|                                          |            |            | \"sphinx.domains.python.PyObject\" and     |\n+|                                          |            |            | \"sphinx.domains.python.PyStaticMethod\"   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.python.PyModulelevel\"    | 2.1        | 4.0        | \"sphinx.domains.python.PyFunction\",      |\n+|                                          |            |            | \"sphinx.domains.python.PyObject\" and     |\n+|                                          |            |            | \"sphinx.domains.python.PyVariable\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.std.StandardDomain._res  | 2.1        | 4.0        | \"sphinx.domains.citation.CitationDomain  |\n+| olve_citation_xref()\"                    |            |            | .resolve_xref()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | \"sphinx.domains.citation.CitationDomain  |\n+| _citations()\"                            |            |            | .note_citation()\"                        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | \"sphinx.domains.citation.CitationDomain  |\n+| _citation_refs()\"                        |            |            | .note_citation_reference()\"              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | \"sphinx.domains.std.StandardDomain.proc  |\n+| _labels()\"                               |            |            | ess_doc()\"                               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.environment.NoUri\"               | 2.1        | 4.0        | \"sphinx.errors.NoUri\"                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.apidoc.format_directive()\"   | 2.1        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.apidoc.format_heading()\"     | 2.1        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.apidoc.makename()\"           | 2.1        | 4.0        | \"sphinx.ext.apidoc.module_join()\"        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer.MockFinder\" | 2.1        | 4.0        | \"sphinx.ext.autodoc.mock.MockFinder\"     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer.MockLoader\" | 2.1        | 4.0        | \"sphinx.ext.autodoc.mock.MockLoader\"     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer.mock()\"     | 2.1        | 4.0        | \"sphinx.ext.autodoc.mock.mock()\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.autolink_role()\" | 2.1        | 4.0        | \"sphinx.ext.autosummary.AutoLink\"        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.imgmath.DOC_BODY\"            | 2.1        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.imgmath.DOC_BODY_PREVIEW\"    | 2.1        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.imgmath.DOC_HEAD\"            | 2.1        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.transforms.CitationReferences\"   | 2.1        | 4.0        | \"sphinx.domains.citation.CitationRefere  |\n+|                                          |            |            | nceTransform\"                            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.transforms.SmartQuotesSkipper\"   | 2.1        | 4.0        | \"sphinx.domains.citation.CitationDefini  |\n+|                                          |            |            | tionTransform\"                           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.docfields.DocFieldTransfor  | 2.1        | 4.0        | \"sphinx.directives.ObjectDescription.ge  |\n+| mer.preprocess_fieldtypes()\"             |            |            | t_field_type_map()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.node.find_source_node()\"    | 2.1        | 4.0        | \"sphinx.util.node.get_node_source()\"     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.i18n.find_catalog()\"        | 2.1        | 4.0        | \"sphinx.util.i18n.docname_to_domain()\"   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.i18n.find_catalog_files()\"  | 2.1        | 4.0        | \"sphinx.util.i18n.CatalogRepository\"     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.i18n.find_catalog_source_f  | 2.1        | 4.0        | \"sphinx.util.i18n.CatalogRepository\"     |\n+| iles()\"                                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"encoding\" argument of                   | 2.0        | 4.0        | N/A                                      |\n+| \"autodoc.Documenter.get_doc()\", \"autodo  |            |            |                                          |\n+| c.DocstringSignatureMixin.get_doc()\", \"  |            |            |                                          |\n+| autodoc.DocstringSignatureMixin._find_s  |            |            |                                          |\n+| ignature()\", and                         |            |            |                                          |\n+| \"autodoc.ClassDocumenter.get_doc()\"      |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| arguments of                             | 2.0        | 4.0        | N/A                                      |\n+| \"EpubBuilder.build_mimetype()\",          |            |            |                                          |\n+| \"EpubBuilder.build_container()\",         |            |            |                                          |\n+| \"EpubBuilder.build_content()\",           |            |            |                                          |\n+| \"EpubBuilder.build_toc()\" and            |            |            |                                          |\n+| \"EpubBuilder.build_epub()\"               |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| arguments of                             | 2.0        | 4.0        | N/A                                      |\n+| \"Epub3Builder.build_navigation_doc()\"    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"nodetype\" argument of \"sphinx.search.W  | 2.0        | 4.0        | N/A                                      |\n+| ordCollector.is_meta_keywords()\"         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"suffix\" argument of                     | 2.0        | 4.0        | N/A                                      |\n+| \"BuildEnvironment.doc2path()\"            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| string style \"base\" argument of          | 2.0        | 4.0        | \"os.path.join()\"                         |\n+| \"BuildEnvironment.doc2path()\"            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.addnodes.abbreviation\"           | 2.0        | 4.0        | \"docutils.nodes.abbreviation\"            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.applehelp\"              | 2.0        | 4.0        | \"sphinxcontrib.applehelp\"                |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.devhelp\"                | 2.0        | 4.0        | \"sphinxcontrib.devhelp\"                  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.epub3.Epub3Builder.val  | 2.0        | 4.0        | \"sphinx.builders.epub3.validate_config_  |\n+| idate_config_value()\"                    |            |            | values()\"                                |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.html.JSONHTMLBuilder\"   | 2.0        | 4.0        | \"sphinx.builders.serializinghtml.JSONHT  |\n+|                                          |            |            | MLBuilder\"                               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.html.PickleHTMLBuilder\" | 2.0        | 4.0        | \"sphinx.builders.serializinghtml.Pickle  |\n+|                                          |            |            | HTMLBuilder\"                             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.html.SerializingHTMLBu  | 2.0        | 4.0        | \"sphinx.builders.serializinghtml.Serial  |\n+| ilder\"                                   |            |            | izingHTMLBuilder\"                        |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.html.SingleFileHTMLBui  | 2.0        | 4.0        | \"sphinx.builders.singlehtml.SingleFileH  |\n+| lder\"                                    |            |            | TMLBuilder\"                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.html.WebHTMLBuilder\"    | 2.0        | 4.0        | \"sphinx.builders.serializinghtml.Pickle  |\n+|                                          |            |            | HTMLBuilder\"                             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.htmlhelp\"               | 2.0        | 4.0        | \"sphinxcontrib.htmlhelp\"                 |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.htmlhelp.HTMLHelpBuild  | 2.0        | 4.0        | \"open()\"                                 |\n+| er.open_file()\"                          |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.builders.qthelp\"                 | 2.0        | 4.0        | \"sphinxcontrib.qthelp\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.cmd.quickstart.term_decode()\"    | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.cmd.quickstart.TERM_ENCODING\"    | 2.0        | 4.0        | \"sys.stdin.encoding\"                     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.config.check_unicode()\"          | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.config.string_classes\"           | 2.0        | 4.0        | \"[str]\"                                  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.cpp.DefinitionError.des  | 2.0        | 4.0        | \"str(exc)\"                               |\n+| cription\"                                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.cpp.NoOldIdError.descri  | 2.0        | 4.0        | \"str(exc)\"                               |\n+| ption\"                                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.domains.cpp.UnsupportedMultiCha  | 2.0        | 4.0        | \"str(exc)\"                               |\n+| racterCharLiteral.decoded\"               |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.Autosummary.war  | 2.0        | 4.0        | N/A                                      |\n+| n()\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.Autosummary.gen  | 2.0        | 4.0        | N/A                                      |\n+| opt\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.Autosummary.war  | 2.0        | 4.0        | N/A                                      |\n+| nings\"                                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autosummary.Autosummary.res  | 2.0        | 4.0        | N/A                                      |\n+| ult\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.doctest.doctest_encode()\"    | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.jsmath\"                      | 2.0        | 4.0        | \"sphinxcontrib.jsmath\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.abbr_role()\"               | 2.0        | 4.0        | \"sphinx.roles.Abbreviation\"              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.emph_literal_role()\"       | 2.0        | 4.0        | \"sphinx.roles.EmphasizedLiteral\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.menusel_role()\"            | 2.0        | 4.0        | \"sphinx.roles.GUILabel\" or               |\n+|                                          |            |            | \"sphinx.roles.MenuSelection\"             |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.index_role()\"              | 2.0        | 4.0        | \"sphinx.roles.Index\"                     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.roles.indexmarkup_role()\"        | 2.0        | 4.0        | \"sphinx.roles.PEP\" or \"sphinx.roles.RFC\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.testing.util.remove_unicode_lit  | 2.0        | 4.0        | N/A                                      |\n+| eral()\"                                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.attrdict\"                   | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.force_decode()\"             | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.get_matching_docs()\"        | 2.0        | 4.0        | \"sphinx.util.get_matching_files()\"       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.inspect.Parameter\"          | 2.0        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.jsonimpl\"                   | 2.0        | 4.0        | \"sphinxcontrib.serializinghtml.jsonimpl\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.EEXIST\"              | 2.0        | 4.0        | \"errno.EEXIST\" or \"FileExistsError\"      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.EINVAL\"              | 2.0        | 4.0        | \"errno.EINVAL\"                           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.ENOENT\"              | 2.0        | 4.0        | \"errno.ENOENT\" or \"FileNotFoundError\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.EPIPE\"               | 2.0        | 4.0        | \"errno.ENOENT\" or \"BrokenPipeError\"      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.osutil.walk()\"              | 2.0        | 4.0        | \"os.walk()\"                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.NoneType\"          | 2.0        | 4.0        | \"sphinx.util.typing.NoneType\"            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.TextIOWrapper\"     | 2.0        | 4.0        | \"io.TextIOWrapper\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.UnicodeMixin\"      | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.htmlescape()\"      | 2.0        | 4.0        | \"html.escape()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.indent()\"          | 2.0        | 4.0        | \"textwrap.indent()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.sys_encoding\"      | 2.0        | 4.0        | \"sys.getdefaultencoding()\"               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.terminal_safe()\"   | 2.0        | 4.0        | \"sphinx.util.console.terminal_safe()\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.pycompat.u\"                 | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.PeekableIterator\"           | 2.0        | 4.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| Omitting the \"filename\" argument in an   | 2.0        | 4.0        | \"IndexBuilder.feed(docname, filename,    |\n+| overriddent \"IndexBuilder.feed()\"        |            |            | title, doctree)\"                         |\n+| method.                                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.ExtBabel\"          | 2.0        | 4.0        | \"sphinx.builders.latex.util.ExtBabel\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.b  | 2.0        | 4.0        | N/A                                      |\n+| abel_defmacro()\"                         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.application.Sphinx._setting_up_  | 2.0        | 3.0        | N/A                                      |\n+| extension\"                               |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The \"importer\" argument of \"sphinx.ext.  | 2.0        | 3.0        | N/A                                      |\n+| autodoc.importer._MockModule\"            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.importer._MockImpor  | 2.0        | 3.0        | N/A                                      |\n+| ter\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxBaseFileInput\"          | 2.0        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxFileInput.supported\"    | 2.0        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxRSTFileInput\"           | 2.0        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.registry.SphinxComponentRegistr  | 2.0        | 3.0        | N/A                                      |\n+| y.add_source_input()\"                    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator._  | 2.0        | 3.0        | N/A                                      |\n+| make_visit_admonition()\"                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.c  | 2.0        | 4.0        | N/A                                      |\n+| ollect_footnotes()\"                      |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.texinfo.TexinfoTranslat  | 2.0        | 3.0        | N/A                                      |\n+| or._make_visit_admonition()\"             |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.text.TextTranslator._ma  | 2.0        | 3.0        | N/A                                      |\n+| ke_depart_admonition()\"                  |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.g  | 2.0        | 4.0        | N/A                                      |\n+| enerate_numfig_format()\"                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"highlightlang\"                          | 1.8        | 4.0        | \"highlight\"                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"add_stylesheet()\"                       | 1.8        | 4.0        | \"add_css_file()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"add_javascript()\"                       | 1.8        | 4.0        | \"add_js_file()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| >>:confval:`autodoc_default_flags`<<     | 1.8        | 4.0        | >>:confval:`autodoc_default_options`<<   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"content\" arguments of                   | 1.8        | 3.0        | N/A                                      |\n+| \"sphinx.util.image.guess_mimetype()\"     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"gettext_compact\" arguments of \"sphinx.  | 1.8        | 3.0        | N/A                                      |\n+| util.i18n.find_catalog_source_files()\"   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxI18nReader.set_lineno_  | 1.8        | 3.0        | N/A                                      |\n+| for_reporter()\"                          |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.io.SphinxI18nReader.line\"        | 1.8        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.directives.other.VersionChanges\" | 1.8        | 3.0        | \"sphinx.domains.changeset.VersionChange  |\n+|                                          |            |            | s\"                                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.highlighting.PygmentsBridge.unh  | 1.8        | 3.0        | N/A                                      |\n+| ighlight()\"                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"trim_doctest_flags\" arguments of        | 1.8        | 3.0        | N/A                                      |\n+| \"sphinx.highlighting.PygmentsBridge\"     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase\"                    | 1.8        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.MathDomain\"         | 1.8        | 3.0        | \"sphinx.domains.math.MathDomain\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.MathDirective\"      | 1.8        | 3.0        | \"sphinx.directives.patches.MathDirectiv  |\n+|                                          |            |            | e\"                                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.math_role()\"        | 1.8        | 3.0        | \"docutils.parsers.rst.roles.math_role()\" |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.setup_math()\"       | 1.8        | 3.0        | \"add_html_math_renderer()\"               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.is_in_section_titl  | 1.8        | 3.0        | N/A                                      |\n+| e()\"                                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.get_node_equation_  | 1.8        | 3.0        | \"sphinx.util.math.get_node_equation_num  |\n+| number()\"                                |            |            | ber()\"                                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.wrap_displaymath()\" | 1.8        | 3.0        | \"sphinx.util.math.wrap_displaymath()\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.math\" (node)        | 1.8        | 3.0        | \"docutils.nodes.math\"                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.displaymath\" (node) | 1.8        | 3.0        | \"docutils.nodes.math_block\"              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.mathbase.eqref\" (node)       | 1.8        | 3.0        | \"sphinx.builders.latex.nodes.math_refer  |\n+|                                          |            |            | ence\"                                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"viewcode_import\" (config value)         | 1.8        | 3.0        | >>:confval:`viewcode_follow_imported_me  |\n+|                                          |            |            | mbers`<<                                 |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.Table.caption_foo  | 1.8        | 3.0        | N/A                                      |\n+| tnotetexts\"                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.Table.header_foot  | 1.8        | 3.0        | N/A                                      |\n+| notetexts\"                               |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.f  | 1.8        | 3.0        | N/A                                      |\n+| ootnotestack\"                            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.i  | 1.8        | 3.0        | N/A                                      |\n+| n_container_literal_block\"               |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.n  | 1.8        | 3.0        | N/A                                      |\n+| ext_section_ids\"                         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.n  | 1.8        | 3.0        | N/A                                      |\n+| ext_hyperlink_ids\"                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.r  | 1.8        | 3.0        | N/A                                      |\n+| estrict_footnote()\"                      |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.u  | 1.8        | 3.0        | N/A                                      |\n+| nrestrict_footnote()\"                    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.p  | 1.8        | 3.0        | N/A                                      |\n+| ush_hyperlink_ids()\"                     |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.p  | 1.8        | 3.0        | N/A                                      |\n+| op_hyperlink_ids()\"                      |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.b  | 1.8        | 3.0        | N/A                                      |\n+| ibitems\"                                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.h  | 1.8        | 3.0        | N/A                                      |\n+| lsettingstack\"                           |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.ExtBabel.get_shor  | 1.8        | 3.0        | N/A                                      |\n+| thandoff()\"                              |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |\n+| hlightlang()\"                            |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |\n+| hlightlang_base()\"                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |\n+| hlightlangopts()\"                        |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |\n+| hlightlinenothreshold()\"                 |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |\n+| ghlightlang()\"                           |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |\n+| ghlightlang_base()\"                      |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |\n+| ghlightlangopts()\"                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |\n+| ghlightlinenothreshold()\"                |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.writers.latex.LaTeXTranslator.c  | 1.8        | 3.0        | Nothing                                  |\n+| heck_latex_elements()\"                   |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.application.CONFIG_FILENAME\"     | 1.8        | 3.0        | \"sphinx.config.CONFIG_FILENAME\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Config.check_unicode()\"                 | 1.8        | 3.0        | \"sphinx.config.check_unicode()\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Config.check_types()\"                   | 1.8        | 3.0        | \"sphinx.config.check_confval_types()\"    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"dirname\", \"filename\" and \"tags\"         | 1.8        | 3.0        | \"Config.read()\"                          |\n+| arguments of \"Config.__init__()\"         |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| The value of                             | 1.8        | 3.0        | see >>:confval:`html_search_options`<<   |\n+| >>:confval:`html_search_options`<<       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.versioning.prepare()\"            | 1.8        | 3.0        | \"sphinx.versioning.UIDTransform\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx.override_domain()\"               | 1.8        | 3.0        | \"add_domain()\"                           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx.import_object()\"                 | 1.8        | 3.0        | \"sphinx.util.import_object()\"            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"suffix\" argument of                     | 1.8        | 3.0        | \"add_source_suffix()\"                    |\n+| \"add_source_parser()\"                    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.load()\"                | 1.8        | 3.0        | \"pickle.load()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.loads()\"               | 1.8        | 3.0        | \"pickle.loads()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.frompickle()\"          | 1.8        | 3.0        | \"pickle.load()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.dump()\"                | 1.8        | 3.0        | \"pickle.dump()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.dumps()\"               | 1.8        | 3.0        | \"pickle.dumps()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.topickle()\"            | 1.8        | 3.0        | \"pickle.dump()\"                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment._nitpick_ignore\"       | 1.8        | 3.0        | >>:confval:`nitpick_ignore`<<            |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.versionchanges\"        | 1.8        | 3.0        | N/A                                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.update()\"              | 1.8        | 3.0        | \"Builder.read()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.read_doc()\"            | 1.8        | 3.0        | \"Builder.read_doc()\"                     |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment._read_serial()\"        | 1.8        | 3.0        | \"Builder.read()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment._read_parallel()\"      | 1.8        | 3.0        | \"Builder.read()\"                         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.write_doctree()\"       | 1.8        | 3.0        | \"Builder.write_doctree()\"                |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.note_versionchange()\"  | 1.8        | 3.0        | \"ChangesDomain.note_changeset()\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"warn()\" (template helper function)      | 1.8        | 3.0        | \"warning()\"                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| >>:confval:`source_parsers`<<            | 1.8        | 3.0        | \"add_source_parser()\"                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.docutils.directive_helper(  | 1.8        | 3.0        | \"Directive\" class of docutils            |\n+| )\"                                       |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.cmdline\"                         | 1.8        | 3.0        | \"sphinx.cmd.build\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.make_mode\"                       | 1.8        | 3.0        | \"sphinx.cmd.make_mode\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.locale.l_()\"                     | 1.8        | 3.0        | \"sphinx.locale._()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.locale.lazy_gettext()\"           | 1.8        | 3.0        | \"sphinx.locale._()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.locale.mygettext()\"              | 1.8        | 3.0        | \"sphinx.locale._()\"                      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.copy_static_entry()\"        | 1.5        | 3.0        | \"sphinx.util.fileutil.copy_asset()\"      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.build_main()\"                    | 1.7        | 2.0        | \"sphinx.cmd.build.build_main()\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.intersphinx.debug()\"         | 1.7        | 2.0        | \"sphinx.ext.intersphinx.inspect_main()\"  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.format_annotation()\" | 1.7        | 2.0        | \"sphinx.util.inspect.Signature\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.formatargspec()\"     | 1.7        | 2.0        | \"sphinx.util.inspect.Signature\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.AutodocReporter\"     | 1.7        | 2.0        | \"sphinx.util.docutils.switch_source_inp  |\n+|                                          |            |            | ut()\"                                    |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.add_documenter()\"    | 1.7        | 2.0        | \"add_autodocumenter()\"                   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.ext.autodoc.AutoDirective._regi  | 1.7        | 2.0        | \"add_autodocumenter()\"                   |\n+| ster\"                                    |            |            |                                          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"AutoDirective._special_attrgetters\"     | 1.7        | 2.0        | \"add_autodoc_attrgetter()\"               |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx.warn()\", \"Sphinx.info()\"         | 1.6        | 2.0        | Logging API                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.set_warnfunc()\"        | 1.6        | 2.0        | Logging API                              |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.note_toctree()\"        | 1.6        | 2.0        | \"Toctree.note()\" (in                     |\n+|                                          |            |            | \"sphinx.environment.adapters.toctree\")   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.get_toc_for()\"         | 1.6        | 2.0        | \"Toctree.get_toc_for()\" (in              |\n+|                                          |            |            | \"sphinx.environment.adapters.toctree\")   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.get_toctree_for()\"     | 1.6        | 2.0        | \"Toctree.get_toctree_for()\" (in          |\n+|                                          |            |            | \"sphinx.environment.adapters.toctree\")   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"BuildEnvironment.create_index()\"        | 1.6        | 2.0        | \"IndexEntries.create_index()\" (in \"sphi  |\n+|                                          |            |            | nx.environment.adapters.indexentries\")   |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.websupport\"                      | 1.6        | 2.0        | sphinxcontrib-websupport                 |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"StandaloneHTMLBuilder.css_files\"        | 1.6        | 2.0        | \"add_stylesheet()\"                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"document.settings.gettext_compact\"      | 1.8        | 1.8        | >>:confval:`gettext_compact`<<           |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx.status_iterator()\"               | 1.6        | 1.7        | \"sphinx.util.status_iterator()\"          |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx.old_status_iterator()\"           | 1.6        | 1.7        | \"sphinx.util.old_status_iterator()\"      |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"Sphinx._directive_helper()\"             | 1.6        | 1.7        | \"sphinx.util.docutils.directive_helper(  |\n+|                                          |            |            | )\"                                       |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.compat.Directive\"           | 1.6        | 1.7        | \"docutils.parsers.rst.Directive\"         |\n++------------------------------------------+------------+------------+------------------------------------------+\n+| \"sphinx.util.compat.docutils_version\"    | 1.6        | 1.7        | \"sphinx.util.docutils.__version_info__\"  |\n++------------------------------------------+------------+------------+------------------------------------------+\n+\n+Note:\n+\n+  On deprecating on public APIs (internal functions and classes), we\n+  also follow the policy as much as possible.\ndiff --git a/_build/doc/extdev/domainapi.txt b/_build/doc/extdev/domainapi.txt\nnew file mode 100644\nindex 000000000..63469b387\n--- /dev/null\n+++ b/_build/doc/extdev/domainapi.txt\n@@ -0,0 +1,313 @@\n+Domain API\n+**********\n+\n+class sphinx.domains.Domain(env: BuildEnvironment)\n+\n+   A Domain is meant to be a group of \"object\" description directives\n+   for objects of a similar nature, and corresponding roles to create\n+   references to them.  Examples would be Python modules, classes,\n+   functions etc., elements of a templating language, Sphinx roles and\n+   directives, etc.\n+\n+   Each domain has a separate storage for information about existing\n+   objects and how to reference them in *self.data*, which must be a\n+   dictionary.  It also must implement several functions that expose\n+   the object information in a uniform way to parts of Sphinx that\n+   allow the user to reference or search for objects in a domain-\n+   agnostic way.\n+\n+   About *self.data*: since all object and cross-referencing\n+   information is stored on a BuildEnvironment instance, the\n+   *domain.data* object is also stored in the *env.domaindata* dict\n+   under the key *domain.name*.  Before the build process starts,\n+   every active domain is instantiated and given the environment\n+   object; the *domaindata* dict must then either be nonexistent or a\n+   dictionary whose 'version' key is equal to the domain class'\n+   \"data_version\" attribute.  Otherwise, *OSError* is raised and the\n+   pickled environment is discarded.\n+\n+   add_object_type(name: str, objtype: sphinx.domains.ObjType) -> None\n+\n+      Add an object type.\n+\n+   check_consistency() -> None\n+\n+      Do consistency checks (**experimental**).\n+\n+   clear_doc(docname: str) -> None\n+\n+      Remove traces of a document in the domain-specific inventories.\n+\n+   dangling_warnings: Dict[str, str] = {}\n+\n+      role name -> a warning message if reference is missing\n+\n+   data: Dict = None\n+\n+      data value\n+\n+   data_version = 0\n+\n+      data version, bump this when the format of *self.data* changes\n+\n+   directive(name: str) -> Callable\n+\n+      Return a directive adapter class that always gives the\n+      registered directive its full name ('domain:name') as\n+      \"self.name\".\n+\n+   directives: Dict[str, Any] = {}\n+\n+      directive name -> directive class\n+\n+   enumerable_nodes: Dict[Type[Node], Tuple[str, Callable]] = {}\n+\n+      node_class -> (enum_node_type, title_getter)\n+\n+   get_enumerable_node_type(node: docutils.nodes.Node) -> str\n+\n+      Get type of enumerable nodes (experimental).\n+\n+   get_full_qualified_name(node: docutils.nodes.Element) -> str\n+\n+      Return full qualified name for given node.\n+\n+   get_objects() -> Iterable[Tuple[str, str, str, str, str, int]]\n+\n+      Return an iterable of \"object descriptions\".\n+\n+      Object descriptions are tuples with six items:\n+\n+      \"name\"\n+         Fully qualified name.\n+\n+      \"dispname\"\n+         Name to display when searching/linking.\n+\n+      \"type\"\n+         Object type, a key in \"self.object_types\".\n+\n+      \"docname\"\n+         The document where it is to be found.\n+\n+      \"anchor\"\n+         The anchor name for the object.\n+\n+      \"priority\"\n+         How \"important\" the object is (determines placement in search\n+         results). One of:\n+\n+         \"1\"\n+            Default priority (placed before full-text matches).\n+\n+         \"0\"\n+            Object is important (placed before default-priority\n+            objects).\n+\n+         \"2\"\n+            Object is unimportant (placed after full-text matches).\n+\n+         \"-1\"\n+            Object should not show up in search at all.\n+\n+   get_type_name(type: sphinx.domains.ObjType, primary: bool = False) -> str\n+\n+      Return full name for given ObjType.\n+\n+   indices: List[Type[Index]] = []\n+\n+      a list of Index subclasses\n+\n+   initial_data: Dict = {}\n+\n+      data value for a fresh environment\n+\n+   label = ''\n+\n+      domain label: longer, more descriptive (used in messages)\n+\n+   merge_domaindata(docnames: List[str], otherdata: Dict) -> None\n+\n+      Merge in data regarding *docnames* from a different domaindata\n+      inventory (coming from a subprocess in parallel builds).\n+\n+   name = ''\n+\n+      domain name: should be short, but unique\n+\n+   object_types: Dict[str, ObjType] = {}\n+\n+      type (usually directive) name -> ObjType instance\n+\n+   process_doc(env: BuildEnvironment, docname: str, document: docutils.nodes.document) -> None\n+\n+      Process a document after it is read by the environment.\n+\n+   process_field_xref(pnode: sphinx.addnodes.pending_xref) -> None\n+\n+      Process a pending xref created in a doc field. For example,\n+      attach information about the current scope.\n+\n+   resolve_any_xref(env: BuildEnvironment, fromdocname: str, builder: Builder, target: str, node: sphinx.addnodes.pending_xref, contnode: docutils.nodes.Element) -> List[Tuple[str, docutils.nodes.Element]]\n+\n+      Resolve the pending_xref *node* with the given *target*.\n+\n+      The reference comes from an \"any\" or similar role, which means\n+      that we don't know the type.  Otherwise, the arguments are the\n+      same as for \"resolve_xref()\".\n+\n+      The method must return a list (potentially empty) of tuples\n+      \"('domain:role', newnode)\", where \"'domain:role'\" is the name of\n+      a role that could have created the same reference, e.g.\n+      \"'py:func'\". \"newnode\" is what \"resolve_xref()\" would return.\n+\n+      New in version 1.3.\n+\n+   resolve_xref(env: BuildEnvironment, fromdocname: str, builder: Builder, typ: str, target: str, node: sphinx.addnodes.pending_xref, contnode: docutils.nodes.Element) -> docutils.nodes.Element\n+\n+      Resolve the pending_xref *node* with the given *typ* and\n+      *target*.\n+\n+      This method should return a new node, to replace the xref node,\n+      containing the *contnode* which is the markup content of the\n+      cross-reference.\n+\n+      If no resolution can be found, None can be returned; the xref\n+      node will then given to the >>:event:`missing-reference`<<\n+      event, and if that yields no resolution, replaced by *contnode*.\n+\n+      The method can also raise \"sphinx.environment.NoUri\" to suppress\n+      the >>:event:`missing-reference`<< event being emitted.\n+\n+   role(name: str) -> Callable[[str, str, str, int, docutils.parsers.rst.states.Inliner, Dict[str, Any], List[str]], Tuple[List[docutils.nodes.Node], List[docutils.nodes.system_message]]]\n+\n+      Return a role adapter function that always gives the registered\n+      role its full name ('domain:name') as the first argument.\n+\n+   roles: Dict[str, Union[RoleFunction, XRefRole]] = {}\n+\n+      role name -> role callable\n+\n+   setup() -> None\n+\n+      Set up domain object.\n+\n+class sphinx.domains.ObjType(lname: str, *roles: Any, **attrs: Any)\n+\n+   An ObjType is the description for a type of object that a domain\n+   can document.  In the object_types attribute of Domain subclasses,\n+   object type names are mapped to instances of this class.\n+\n+   Constructor arguments:\n+\n+   * *lname*: localized name of the type (do not include domain name)\n+\n+   * *roles*: all the roles that can refer to an object of this type\n+\n+   * *attrs*: object attributes -- currently only \"searchprio\" is\n+     known, which defines the object's priority in the full-text\n+     search index, see \"Domain.get_objects()\".\n+\n+class sphinx.domains.Index(domain: sphinx.domains.Domain)\n+\n+   An Index is the description for a domain-specific index.  To add an\n+   index to a domain, subclass Index, overriding the three name\n+   attributes:\n+\n+   * *name* is an identifier used for generating file names. It is\n+     also used for a hyperlink target for the index. Therefore, users\n+     can refer the index page using \"ref\" role and a string which is\n+     combined domain name and \"name\" attribute (ex. \":ref:`py-\n+     modindex`\").\n+\n+   * *localname* is the section title for the index.\n+\n+   * *shortname* is a short name for the index, for use in the\n+     relation bar in HTML output.  Can be empty to disable entries in\n+     the relation bar.\n+\n+   and providing a \"generate()\" method.  Then, add the index class to\n+   your domain's *indices* list.  Extensions can add indices to\n+   existing domains using \"add_index_to_domain()\".\n+\n+   Changed in version 3.0: Index pages can be referred by domain name\n+   and index name via \"ref\" role.\n+\n+   generate(docnames: Optional[Iterable[str]] = None) -> Tuple[List[Tuple[str, List[sphinx.domains.IndexEntry]]], bool]\n+\n+      Get entries for the index.\n+\n+      If \"docnames\" is given, restrict to entries referring to these\n+      docnames.\n+\n+      The return value is a tuple of \"(content, collapse)\":\n+\n+      \"collapse\"\n+         A boolean that determines if sub-entries should start\n+         collapsed (for output formats that support collapsing sub-\n+         entries).\n+\n+      \"content\":\n+         A sequence of \"(letter, entries)\" tuples, where \"letter\" is\n+         the \"heading\" for the given \"entries\", usually the starting\n+         letter, and \"entries\" is a sequence of single entries. Each\n+         entry is a sequence \"[name, subtype, docname, anchor, extra,\n+         qualifier, descr]\". The items in this sequence have the\n+         following meaning:\n+\n+         \"name\"\n+            The name of the index entry to be displayed.\n+\n+         \"subtype\"\n+            The sub-entry related type. One of:\n+\n+            \"0\"\n+               A normal entry.\n+\n+            \"1\"\n+               An entry with sub-entries.\n+\n+            \"2\"\n+               A sub-entry.\n+\n+         \"docname\"\n+            *docname* where the entry is located.\n+\n+         \"anchor\"\n+            Anchor for the entry within \"docname\"\n+\n+         \"extra\"\n+            Extra info for the entry.\n+\n+         \"qualifier\"\n+            Qualifier for the description.\n+\n+         \"descr\"\n+            Description for the entry.\n+\n+      Qualifier and description are not rendered for some output\n+      formats such as LaTeX.\n+\n+\n+Python Domain\n+=============\n+\n+class sphinx.domains.python.PythonDomain(env: BuildEnvironment)\n+\n+   Python language domain.\n+\n+   objects\n+\n+   modules\n+\n+   note_object(name: str, objtype: str, node_id: str, location: Optional[Any] = None) -> None\n+\n+      Note a python object for cross reference.\n+\n+      New in version 2.1.\n+\n+   note_module(name: str, node_id: str, synopsis: str, platform: str, deprecated: bool) -> None\n+\n+      Note a python module for cross reference.\n+\n+      New in version 2.1.\ndiff --git a/_build/doc/extdev/envapi.txt b/_build/doc/extdev/envapi.txt\nnew file mode 100644\nindex 000000000..9de78f948\n--- /dev/null\n+++ b/_build/doc/extdev/envapi.txt\n@@ -0,0 +1,89 @@\n+Build environment API\n+*********************\n+\n+class sphinx.environment.BuildEnvironment\n+\n+   **Attributes**\n+\n+   app\n+\n+      Reference to the \"Sphinx\" (application) object.\n+\n+   config\n+\n+      Reference to the \"Config\" object.\n+\n+   project\n+\n+      Target project.  See \"Project\".\n+\n+   srcdir\n+\n+      Source directory.\n+\n+   doctreedir\n+\n+      Directory for storing pickled doctrees.\n+\n+   events\n+\n+      An \"EventManager\" object.\n+\n+   found_docs\n+\n+      A set of all existing docnames.\n+\n+   metadata\n+\n+      Dictionary mapping docnames to \"metadata\" (see File-wide\n+      metadata).\n+\n+   titles\n+\n+      Dictionary mapping docnames to the docutils node for their main\n+      title.\n+\n+   docname\n+\n+      Returns the docname of the document currently being parsed.\n+\n+   **Utility methods**\n+\n+   doc2path(docname: str, base: Union[bool, str] = True, suffix: Optional[str] = None) -> str\n+\n+      Return the filename for the document name.\n+\n+      If *base* is True, return absolute path under self.srcdir. If\n+      *base* is None, return relative path to self.srcdir. If *base*\n+      is a path string, return absolute path under that. If *suffix*\n+      is not None, add it instead of config.source_suffix.\n+\n+   relfn2path(filename: str, docname: Optional[str] = None) -> Tuple[str, str]\n+\n+      Return paths to a file referenced from a document, relative to\n+      documentation root and absolute.\n+\n+      In the input \"filename\", absolute filenames are taken as\n+      relative to the source dir, while relative filenames are\n+      relative to the dir of the containing document.\n+\n+   note_dependency(filename: str) -> None\n+\n+      Add *filename* as a dependency of the current document.\n+\n+      This means that the document will be rebuilt if this file\n+      changes.\n+\n+      *filename* should be absolute or relative to the source\n+      directory.\n+\n+   new_serialno(category: str = '') -> int\n+\n+      Return a serial number, e.g. for index entry targets.\n+\n+      The number is guaranteed to be unique in the current document.\n+\n+   note_reread() -> None\n+\n+      Add the current document to the list of documents that will\n+      automatically be re-read at the next build.\ndiff --git a/_build/doc/extdev/i18n.txt b/_build/doc/extdev/i18n.txt\nnew file mode 100644\nindex 000000000..6d8998a27\n--- /dev/null\n+++ b/_build/doc/extdev/i18n.txt\n@@ -0,0 +1,120 @@\n+i18n API\n+********\n+\n+sphinx.locale.init(locale_dirs: List[Optional[str]], language: str, catalog: str = 'sphinx', namespace: str = 'general') -> Tuple[gettext.NullTranslations, bool]\n+\n+   Look for message catalogs in *locale_dirs* and *ensure* that there\n+   is at least a NullTranslations catalog set in *translators*. If\n+   called multiple times or if several \".mo\" files are found, their\n+   contents are merged together (thus making \"init\" reentrant).\n+\n+sphinx.locale.init_console(locale_dir: str, catalog: str) -> Tuple[gettext.NullTranslations, bool]\n+\n+   Initialize locale for console.\n+\n+   New in version 1.8.\n+\n+sphinx.locale.get_translation(catalog: str, namespace: str = 'general') -> Callable\n+\n+   Get a translation function based on the *catalog* and *namespace*.\n+\n+   The extension can use this API to translate the messages on the\n+   extension:\n+\n+      import os\n+      from sphinx.locale import get_translation\n+\n+      MESSAGE_CATALOG_NAME = 'myextension'  # name of *.pot, *.po and *.mo files\n+      _ = get_translation(MESSAGE_CATALOG_NAME)\n+      text = _('Hello Sphinx!')\n+\n+\n+      def setup(app):\n+          package_dir = path.abspath(path.dirname(__file__))\n+          locale_dir = os.path.join(package_dir, 'locales')\n+          app.add_message_catalog(MESSAGE_CATALOG_NAME, locale_dir)\n+\n+   With this code, sphinx searches a message catalog from\n+   \"${package_dir}/locales/${language}/LC_MESSAGES/myextension.mo\".\n+   The >>:confval:`language`<< is used for the searching.\n+\n+   New in version 1.8.\n+\n+sphinx.locale._(message: str, *args: Any) -> str\n+\n+   Translation function for messages on documentation (menu, labels,\n+   themes and so on). This function follows >>:confval:`language`<<\n+   setting.\n+\n+sphinx.locale.__(message: str, *args: Any) -> str\n+\n+   Translation function for console messages This function follows\n+   locale setting (*LC_ALL*, *LC_MESSAGES* and so on).\n+\n+\n+Extension internationalization (*i18n*) and localization (*l10n*) using i18n API\n+================================================================================\n+\n+New in version 1.8.\n+\n+An extension may naturally come with message translations.  This is\n+briefly summarized in \"sphinx.locale.get_translation()\" help.\n+\n+In practice, you have to:\n+\n+1. Choose a name for your message catalog, which must be unique.\n+   Usually the name of your extension is used for the name of message\n+   catalog.\n+\n+2. Mark in your extension sources all messages as translatable, via\n+   \"sphinx.locale.get_translation()\" function, usually renamed \"_()\",\n+   e.g.:\n+\n+   src/__init__.py\n+\n+      from sphinx.locale import get_translation\n+\n+      MESSAGE_CATALOG_NAME = 'myextension'\n+      _ = get_translation(MESSAGE_CATALOG_NAME)\n+\n+      translated_text = _('Hello Sphinx!')\n+\n+3. Set up your extension to be aware of its dedicated translations:\n+\n+   src/__init__.py\n+\n+      def setup(app):\n+          package_dir = path.abspath(path.dirname(__file__))\n+          locale_dir = os.path.join(package_dir, 'locales')\n+          app.add_message_catalog(MESSAGE_CATALOG_NAME, locale_dir)\n+\n+4. Generate message catalog template \"*.pot\" file, usually in\n+   \"locale/\" source directory, for example via Babel:\n+\n+      $ pybabel extract --output=src/locale/myextension.pot src/\n+\n+5. Create message catalogs (\"*.po\") for each language which your\n+   extension will provide localization, for example via Babel:\n+\n+      $ pybabel init --input-file=src/locale/myextension.pot --domain=myextension --output-dir=src/locale --locale=fr_FR\n+\n+6. Translate message catalogs for each language manually\n+\n+7. Compile message catalogs into \"*.mo\" files, for example via Babel:\n+\n+      $ pybabel compile --directory=src/locale --domain=myextension\n+\n+8. Ensure that message catalog files are distributed when your package\n+   will be installed, by adding equivalent line in your extension\n+   \"MANIFEST.in\":\n+\n+   MANIFEST.in\n+\n+      recursive-include src *.pot *.po *.mo\n+\n+When the messages on your extension has been changed, you need to also\n+update message catalog template and message catalogs, for example via\n+Babel:\n+\n+   $ pybabel extract --output=src/locale/myextension.pot src/\n+   $ pybabel update --input-file=src/locale/myextension.pot --domain=myextension --output-dir=src/locale\ndiff --git a/_build/doc/extdev/index.txt b/_build/doc/extdev/index.txt\nnew file mode 100644\nindex 000000000..b204afcf6\n--- /dev/null\n+++ b/_build/doc/extdev/index.txt\n@@ -0,0 +1,262 @@\n+Developing extensions for Sphinx\n+********************************\n+\n+Since many projects will need special features in their documentation,\n+Sphinx is designed to be extensible on several levels.\n+\n+Here are a few things you can do in an extension:\n+\n+* Add new *builder*s to support new output formats or actions on the\n+  parsed documents.\n+\n+* Register custom reStructuredText roles and directives, extending the\n+  markup using the Docutils markup API.\n+\n+* Add custom code to so-called \"hook points\" at strategic places\n+  throughout the build process, allowing you to register a hook and\n+  run specialized code. For example, see the Sphinx core events.\n+\n+An extension is simply a Python module with a \"setup()\" function. A\n+user activates the extension by placing the extension's module name\n+(or a sub-module) in their >>:confval:`extensions`<< configuration\n+value.\n+\n+When **sphinx-build** is executed, Sphinx will attempt to import each\n+module that is listed, and execute \"yourmodule.setup(app)\". This\n+function is used to prepare the extension (e.g., by executing Python\n+code), linking resources that Sphinx uses in the build process (like\n+CSS or HTML files), and notifying Sphinx of everything the extension\n+offers (such as directive or role definitions). The \"app\" argument is\n+an instance of \"Sphinx\" and gives you control over most aspects of the\n+Sphinx build.\n+\n+Note:\n+\n+  The configuration file itself can be treated as an extension if it\n+  contains a \"setup()\" function.  All other extensions to load must be\n+  listed in the >>:confval:`extensions`<< configuration value.\n+\n+The rest of this page describes some high-level aspects of developing\n+extensions and various parts of Sphinx's behavior that you can\n+control. For some examples of how extensions can be built and used to\n+control different parts of Sphinx, see the Extension tutorials.\n+\n+\n+Important objects\n+=================\n+\n+There are several key objects whose API you will use while writing an\n+extension. These are:\n+\n+**Application**\n+   The application object (usually called \"app\") is an instance of\n+   \"Sphinx\".  It controls most high-level functionality, such as the\n+   setup of extensions, event dispatching and producing output\n+   (logging).\n+\n+   If you have the environment object, the application is available as\n+   \"env.app\".\n+\n+**Environment**\n+   The build environment object (usually called \"env\") is an instance\n+   of \"BuildEnvironment\".  It is responsible for parsing the source\n+   documents, stores all metadata about the document collection and is\n+   serialized to disk after each build.\n+\n+   Its API provides methods to do with access to metadata, resolving\n+   references, etc.  It can also be used by extensions to cache\n+   information that should persist for incremental rebuilds.\n+\n+   If you have the application or builder object, the environment is\n+   available as \"app.env\" or \"builder.env\".\n+\n+**Builder**\n+   The builder object (usually called \"builder\") is an instance of a\n+   specific subclass of \"Builder\".  Each builder class knows how to\n+   convert the parsed documents into an output format, or otherwise\n+   process them (e.g. check external links).\n+\n+   If you have the application object, the builder is available as\n+   \"app.builder\".\n+\n+**Config**\n+   The config object (usually called \"config\") provides the values of\n+   configuration values set in \"conf.py\" as attributes.  It is an\n+   instance of \"Config\".\n+\n+   The config is available as \"app.config\" or \"env.config\".\n+\n+To see an example of use of these objects, refer to Extension\n+tutorials.\n+\n+\n+Build Phases\n+============\n+\n+One thing that is vital in order to understand extension mechanisms is\n+the way in which a Sphinx project is built: this works in several\n+phases.\n+\n+**Phase 0: Initialization**\n+\n+   In this phase, almost nothing of interest to us happens.  The\n+   source directory is searched for source files, and extensions are\n+   initialized. Should a stored build environment exist, it is loaded,\n+   otherwise a new one is created.\n+\n+**Phase 1: Reading**\n+\n+   In Phase 1, all source files (and on subsequent builds, those that\n+   are new or changed) are read and parsed.  This is the phase where\n+   directives and roles are encountered by docutils, and the\n+   corresponding code is executed.  The output of this phase is a\n+   *doctree* for each source file; that is a tree of docutils nodes.\n+   For document elements that aren't fully known until all existing\n+   files are read, temporary nodes are created.\n+\n+   There are nodes provided by docutils, which are documented in the\n+   docutils documentation. Additional nodes are provided by Sphinx and\n+   documented here.\n+\n+   During reading, the build environment is updated with all meta- and\n+   cross reference data of the read documents, such as labels, the\n+   names of headings, described Python objects and index entries.\n+   This will later be used to replace the temporary nodes.\n+\n+   The parsed doctrees are stored on the disk, because it is not\n+   possible to hold all of them in memory.\n+\n+**Phase 2: Consistency checks**\n+\n+   Some checking is done to ensure no surprises in the built\n+   documents.\n+\n+**Phase 3: Resolving**\n+\n+   Now that the metadata and cross-reference data of all existing\n+   documents is known, all temporary nodes are replaced by nodes that\n+   can be converted into output using components called transforms.\n+   For example, links are created for object references that exist,\n+   and simple literal nodes are created for those that don't.\n+\n+**Phase 4: Writing**\n+\n+   This phase converts the resolved doctrees to the desired output\n+   format, such as HTML or LaTeX.  This happens via a so-called\n+   docutils writer that visits the individual nodes of each doctree\n+   and produces some output in the process.\n+\n+Note:\n+\n+  Some builders deviate from this general build plan, for example, the\n+  builder that checks external links does not need anything more than\n+  the parsed doctrees and therefore does not have phases 2--4.\n+\n+To see an example of application, refer to Developing a \"TODO\"\n+extension.\n+\n+\n+Extension metadata\n+==================\n+\n+New in version 1.3.\n+\n+The \"setup()\" function can return a dictionary.  This is treated by\n+Sphinx as metadata of the extension.  Metadata keys currently\n+recognized are:\n+\n+* \"'version'\": a string that identifies the extension version.  It is\n+  used for extension version requirement checking (see\n+  >>:confval:`needs_extensions`<<) and informational purposes.  If not\n+  given, \"\"unknown version\"\" is substituted.\n+\n+* \"'env_version'\": an integer that identifies the version of env data\n+  structure if the extension stores any data to environment.  It is\n+  used to detect the data structure has been changed from last build.\n+  The extensions have to increment the version when data structure has\n+  changed.  If not given, Sphinx considers the extension does not\n+  stores any data to environment.\n+\n+* \"'parallel_read_safe'\": a boolean that specifies if parallel reading\n+  of source files can be used when the extension is loaded.  It\n+  defaults to \"False\", i.e. you have to explicitly specify your\n+  extension to be parallel-read-safe after checking that it is.\n+\n+* \"'parallel_write_safe'\": a boolean that specifies if parallel\n+  writing of output files can be used when the extension is loaded.\n+  Since extensions usually don't negatively influence the process,\n+  this defaults to \"True\".\n+\n+\n+APIs used for writing extensions\n+================================\n+\n+These sections provide a more complete description of the tools at\n+your disposal when developing Sphinx extensions. Some are core to\n+Sphinx (such as the Application API) while others trigger specific\n+behavior (such as the i18n API)\n+\n+* Application API\n+\n+  * Extension setup\n+\n+  * Emitting events\n+\n+  * Sphinx runtime information\n+\n+  * Sphinx core events\n+\n+  * Checking the Sphinx version\n+\n+  * The Config object\n+\n+  * The template bridge\n+\n+  * Exceptions\n+\n+* Project API\n+\n+* Build environment API\n+\n+* Builder API\n+\n+* Environment Collector API\n+\n+* Docutils markup API\n+\n+  * Roles\n+\n+  * Directives\n+\n+* Domain API\n+\n+  * Python Domain\n+\n+* Parser API\n+\n+* Doctree node classes added by Sphinx\n+\n+  * Nodes for domain-specific object descriptions\n+\n+  * New admonition-like constructs\n+\n+  * Other paragraph-level nodes\n+\n+  * New inline nodes\n+\n+  * Special nodes\n+\n+* Logging API\n+\n+* i18n API\n+\n+  * Extension internationalization (*i18n*) and localization (*l10n*)\n+    using i18n API\n+\n+* Utilities\n+\n+  * Base classes for components\n+\n+  * Utility components\n+\n+* Deprecated APIs\ndiff --git a/_build/doc/extdev/logging.txt b/_build/doc/extdev/logging.txt\nnew file mode 100644\nindex 000000000..1828536a4\n--- /dev/null\n+++ b/_build/doc/extdev/logging.txt\n@@ -0,0 +1,107 @@\n+Logging API\n+***********\n+\n+sphinx.util.logging.getLogger(name)\n+\n+   Get logger wrapped by \"sphinx.util.logging.SphinxLoggerAdapter\".\n+\n+   Sphinx logger always uses \"sphinx.*\" namespace to be independent\n+   from settings of root logger.  It ensures logging is consistent\n+   even if a third-party extension or imported application resets\n+   logger settings.\n+\n+   Example usage:\n+\n+      >>> from sphinx.util import logging\n+      >>> logger = logging.getLogger(__name__)\n+      >>> logger.info('Hello, this is an extension!')\n+      Hello, this is an extension!\n+\n+class sphinx.util.logging.SphinxLoggerAdapter(logging.LoggerAdapter)\n+\n+   LoggerAdapter allowing \"type\" and \"subtype\" keywords.\n+\n+   error(msg, *args, **kwargs)\n+\n+   critical(msg, *args, **kwargs)\n+\n+   warning(msg, *args, **kwargs)\n+\n+      Logs a message on this logger with the specified level.\n+      Basically, the arguments are as with python's logging module.\n+\n+      In addition, Sphinx logger supports following keyword arguments:\n+\n+      **type**, ***subtype***\n+         Categories of warning logs.  It is used to suppress warnings\n+         by >>:confval:`suppress_warnings`<< setting.\n+\n+      **location**\n+         Where the warning happened.  It is used to include the path\n+         and line number in each log.  It allows docname, tuple of\n+         docname and line number and nodes:\n+\n+            logger = sphinx.util.logging.getLogger(__name__)\n+            logger.warning('Warning happened!', location='index')\n+            logger.warning('Warning happened!', location=('chapter1/index', 10))\n+            logger.warning('Warning happened!', location=some_node)\n+\n+      **color**\n+         The color of logs.  By default, error level logs are colored\n+         as \"\"darkred\"\", critical level ones is not colored, and\n+         warning level ones are colored as \"\"red\"\".\n+\n+   log(level, msg, *args, **kwargs)\n+\n+   info(msg, *args, **kwargs)\n+\n+   verbose(msg, *args, **kwargs)\n+\n+   debug(msg, *args, **kwargs)\n+\n+      Logs a message to this logger with the specified level.\n+      Basically, the arguments are as with python's logging module.\n+\n+      In addition, Sphinx logger supports following keyword arguments:\n+\n+      **nonl**\n+         If true, the logger does not fold lines at the end of the log\n+         message. The default is \"False\".\n+\n+      **location**\n+         Where the message emitted.  For more detail, see\n+         \"SphinxLoggerAdapter.warning()\".\n+\n+      **color**\n+         The color of logs.  By default, info and verbose level logs\n+         are not colored, and debug level ones are colored as\n+         \"\"darkgray\"\".\n+\n+sphinx.util.logging.pending_logging()\n+\n+   Contextmanager to pend logging all logs temporary.\n+\n+   For example:\n+\n+      >>> with pending_logging():\n+      >>>     logger.warning('Warning message!')  # not flushed yet\n+      >>>     some_long_process()\n+      >>>\n+      Warning message!  # the warning is flushed here\n+\n+sphinx.util.logging.pending_warnings()\n+\n+   Contextmanager to pend logging warnings temporary.\n+\n+   Similar to \"pending_logging()\".\n+\n+sphinx.util.logging.prefixed_warnings()\n+\n+   Prepend prefix to all records for a while.\n+\n+   For example:\n+\n+      >>> with prefixed_warnings(\"prefix:\"):\n+      >>>     logger.warning('Warning message!')  # => prefix: Warning message!\n+\n+   New in version 2.0.\ndiff --git a/_build/doc/extdev/markupapi.txt b/_build/doc/extdev/markupapi.txt\nnew file mode 100644\nindex 000000000..a4c852192\n--- /dev/null\n+++ b/_build/doc/extdev/markupapi.txt\n@@ -0,0 +1,163 @@\n+Docutils markup API\n+*******************\n+\n+This section describes the API for adding ReST markup elements (roles\n+and directives).\n+\n+\n+Roles\n+=====\n+\n+\n+Directives\n+==========\n+\n+Directives are handled by classes derived from\n+\"docutils.parsers.rst.Directive\".  They have to be registered by an\n+extension using \"Sphinx.add_directive()\" or\n+\"Sphinx.add_directive_to_domain()\".\n+\n+class docutils.parsers.rst.Directive\n+\n+   The markup syntax of the new directive is determined by the follow\n+   five class attributes:\n+\n+   required_arguments = 0\n+\n+      Number of required directive arguments.\n+\n+   optional_arguments = 0\n+\n+      Number of optional arguments after the required arguments.\n+\n+   final_argument_whitespace = False\n+\n+      May the final argument contain whitespace?\n+\n+   option_spec = None\n+\n+      Mapping of option names to validator functions.\n+\n+      Option validator functions take a single parameter, the option\n+      argument (or \"None\" if not given), and should validate it or\n+      convert it to the proper form.  They raise \"ValueError\" or\n+      \"TypeError\" to indicate failure.\n+\n+      There are several predefined and possibly useful validators in\n+      the \"docutils.parsers.rst.directives\" module.\n+\n+   has_content = False\n+\n+      May the directive have content?\n+\n+   New directives must implement the \"run()\" method:\n+\n+   run()\n+\n+      This method must process the directive arguments, options and\n+      content, and return a list of Docutils/Sphinx nodes that will be\n+      inserted into the document tree at the point where the directive\n+      was encountered.\n+\n+   Instance attributes that are always set on the directive are:\n+\n+   name\n+\n+      The directive name (useful when registering the same directive\n+      class under multiple names).\n+\n+   arguments\n+\n+      The arguments given to the directive, as a list.\n+\n+   options\n+\n+      The options given to the directive, as a dictionary mapping\n+      option names to validated/converted values.\n+\n+   content\n+\n+      The directive content, if given, as a \"ViewList\".\n+\n+   lineno\n+\n+      The absolute line number on which the directive appeared.  This\n+      is not always a useful value; use \"srcline\" instead.\n+\n+   content_offset\n+\n+      Internal offset of the directive content.  Used when calling\n+      \"nested_parse\" (see below).\n+\n+   block_text\n+\n+      The string containing the entire directive.\n+\n+   state\n+   state_machine\n+\n+      The state and state machine which controls the parsing.  Used\n+      for \"nested_parse\".\n+\n+\n+ViewLists\n+---------\n+\n+Docutils represents document source lines in a class\n+\"docutils.statemachine.ViewList\".  This is a list with extended\n+functionality -- for one, slicing creates views of the original list,\n+and also the list contains information about the source line numbers.\n+\n+The \"Directive.content\" attribute is a ViewList.  If you generate\n+content to be parsed as ReST, you have to create a ViewList yourself.\n+Important for content generation are the following points:\n+\n+* The constructor takes a list of strings (lines) and a source\n+  (document) name.\n+\n+* The \".append()\" method takes a line and a source name as well.\n+\n+\n+Parsing directive content as ReST\n+---------------------------------\n+\n+Many directives will contain more markup that must be parsed.  To do\n+this, use one of the following APIs from the \"Directive.run()\" method:\n+\n+* \"self.state.nested_parse\"\n+\n+* \"sphinx.util.nodes.nested_parse_with_titles()\" -- this allows titles\n+  in the parsed content.\n+\n+Both APIs parse the content into a given node. They are used like\n+this:\n+\n+   node = docutils.nodes.paragraph()\n+   # either\n+   nested_parse_with_titles(self.state, self.result, node)\n+   # or\n+   self.state.nested_parse(self.result, 0, node)\n+\n+Note:\n+\n+  \"sphinx.util.docutils.switch_source_input()\" allows to change a\n+  target file during nested_parse.  It is useful to mixed contents.\n+  For example, \"sphinx. ext.autodoc\" uses it to parse docstrings:\n+\n+     from sphinx.util.docutils import switch_source_input\n+\n+     # Switch source_input between parsing content.\n+     # Inside this context, all parsing errors and warnings are reported as\n+     # happened in new source_input (in this case, ``self.result``).\n+     with switch_source_input(self.state, self.result):\n+         node = docutils.nodes.paragraph()\n+         self.state.nested_parse(self.result, 0, node)\n+\n+  Deprecated since version 1.7: Until Sphinx-1.6,\n+  \"sphinx.ext.autodoc.AutodocReporter\" is used for this purpose.  For\n+  now, it is replaced by \"switch_source_input()\".\n+\n+If you don't need the wrapping node, you can use any concrete node\n+type and return \"node.children\" from the Directive.\n+\n+See also: Creating directives HOWTO of the Docutils documentation\ndiff --git a/_build/doc/extdev/nodes.txt b/_build/doc/extdev/nodes.txt\nnew file mode 100644\nindex 000000000..b03608cb0\n--- /dev/null\n+++ b/_build/doc/extdev/nodes.txt\n@@ -0,0 +1,175 @@\n+Doctree node classes added by Sphinx\n+************************************\n+\n+\n+Nodes for domain-specific object descriptions\n+=============================================\n+\n+class sphinx.addnodes.desc(rawsource='', *children, **attributes)\n+\n+   Node for object descriptions.\n+\n+   This node is similar to a \"definition list\" with one definition.\n+   It contains one or more \"desc_signature\" and a \"desc_content\".\n+\n+class sphinx.addnodes.desc_signature(rawsource='', text='', *children, **attributes)\n+\n+   Node for object signatures.\n+\n+   The \"term\" part of the custom Sphinx definition list.\n+\n+   As default the signature is a single line signature, but set\n+   \"is_multiline = True\" to describe a multi-line signature. In that\n+   case all child nodes must be \"desc_signature_line\" nodes.\n+\n+class sphinx.addnodes.desc_signature_line(rawsource='', text='', *children, **attributes)\n+\n+   Node for a line in a multi-line object signatures.\n+\n+   It should only be used in a \"desc_signature\" with \"is_multiline\"\n+   set. Set \"add_permalink = True\" for the line that should get the\n+   permalink.\n+\n+class sphinx.addnodes.desc_addname(rawsource='', text='', *children, **attributes)\n+\n+   Node for additional name parts (module name, class name).\n+\n+class sphinx.addnodes.desc_type(rawsource='', text='', *children, **attributes)\n+\n+   Node for return types or object type names.\n+\n+class sphinx.addnodes.desc_returns(rawsource='', text='', *children, **attributes)\n+\n+   Node for a \"returns\" annotation (a la -> in Python).\n+\n+class sphinx.addnodes.desc_name(rawsource='', text='', *children, **attributes)\n+\n+   Node for the main object name.\n+\n+class sphinx.addnodes.desc_parameterlist(rawsource='', text='', *children, **attributes)\n+\n+   Node for a general parameter list.\n+\n+class sphinx.addnodes.desc_parameter(rawsource='', text='', *children, **attributes)\n+\n+   Node for a single parameter.\n+\n+class sphinx.addnodes.desc_optional(rawsource='', text='', *children, **attributes)\n+\n+   Node for marking optional parts of the parameter list.\n+\n+class sphinx.addnodes.desc_annotation(rawsource='', text='', *children, **attributes)\n+\n+   Node for signature annotations (not Python 3-style annotations).\n+\n+class sphinx.addnodes.desc_content(rawsource='', *children, **attributes)\n+\n+   Node for object description content.\n+\n+   This is the \"definition\" part of the custom Sphinx definition list.\n+\n+\n+New admonition-like constructs\n+==============================\n+\n+class sphinx.addnodes.versionmodified(rawsource='', text='', *children, **attributes)\n+\n+   Node for version change entries.\n+\n+   Currently used for \"versionadded\", \"versionchanged\" and\n+   \"deprecated\" directives.\n+\n+class sphinx.addnodes.seealso(rawsource='', *children, **attributes)\n+\n+   Custom \"see also\" admonition.\n+\n+\n+Other paragraph-level nodes\n+===========================\n+\n+class sphinx.addnodes.compact_paragraph(rawsource='', text='', *children, **attributes)\n+\n+   Node for a compact paragraph (which never makes a <p> node).\n+\n+\n+New inline nodes\n+================\n+\n+class sphinx.addnodes.index(rawsource='', text='', *children, **attributes)\n+\n+   Node for index entries.\n+\n+   This node is created by the \"index\" directive and has one\n+   attribute, \"entries\".  Its value is a list of 5-tuples of\n+   \"(entrytype, entryname, target, ignored, key)\".\n+\n+   *entrytype* is one of \"single\", \"pair\", \"double\", \"triple\".\n+\n+   *key* is categorization characters (usually a single character) for\n+   general index page. For the details of this, please see also:\n+   \"glossary\" and issue #2320.\n+\n+class sphinx.addnodes.pending_xref(rawsource='', *children, **attributes)\n+\n+   Node for cross-references that cannot be resolved without complete\n+   information about all documents.\n+\n+   These nodes are resolved before writing output, in\n+   BuildEnvironment.resolve_references.\n+\n+class sphinx.addnodes.literal_emphasis(rawsource='', text='', *children, **attributes)\n+\n+   Node that behaves like *emphasis*, but further text processors are\n+   not applied (e.g. smartypants for HTML output).\n+\n+class sphinx.addnodes.abbreviation(rawsource: str = '', text: str = '', *children: docutils.nodes.Node, **attributes: Any)\n+\n+   Node for abbreviations with explanations.\n+\n+   Deprecated since version 2.0.\n+\n+class sphinx.addnodes.download_reference(rawsource='', text='', *children, **attributes)\n+\n+   Node for download references, similar to pending_xref.\n+\n+\n+Special nodes\n+=============\n+\n+class sphinx.addnodes.only(rawsource='', *children, **attributes)\n+\n+   Node for \"only\" directives (conditional inclusion based on tags).\n+\n+class sphinx.addnodes.meta(rawsource='', *children, **attributes)\n+\n+   Node for meta directive -- same as docutils' standard meta node,\n+   but pickleable.\n+\n+class sphinx.addnodes.highlightlang(rawsource='', *children, **attributes)\n+\n+   Inserted to set the highlight language and line number options for\n+   subsequent code blocks.\n+\n+You should not need to generate the nodes below in extensions.\n+\n+class sphinx.addnodes.glossary(rawsource='', *children, **attributes)\n+\n+   Node to insert a glossary.\n+\n+class sphinx.addnodes.toctree(rawsource='', *children, **attributes)\n+\n+   Node for inserting a \"TOC tree\".\n+\n+class sphinx.addnodes.start_of_file(rawsource='', *children, **attributes)\n+\n+   Node to mark start of a new file, used in the LaTeX builder only.\n+\n+class sphinx.addnodes.productionlist(rawsource='', *children, **attributes)\n+\n+   Node for grammar production lists.\n+\n+   Contains \"production\" nodes.\n+\n+class sphinx.addnodes.production(rawsource='', text='', *children, **attributes)\n+\n+   Node for a single grammar production rule.\ndiff --git a/_build/doc/extdev/parserapi.txt b/_build/doc/extdev/parserapi.txt\nnew file mode 100644\nindex 000000000..99c5ad778\n--- /dev/null\n+++ b/_build/doc/extdev/parserapi.txt\n@@ -0,0 +1,59 @@\n+Parser API\n+**********\n+\n+The docutils documentation describes parsers as follows:\n+\n+   The Parser analyzes the input document and creates a node tree\n+   representation.\n+\n+In Sphinx, the parser modules works as same as docutils.  The parsers\n+are registered to Sphinx by extensions using Application APIs;\n+\"Sphinx.add_source_suffix()\" and \"Sphinx.add_source_parser()\".\n+\n+The *source suffix* is a mapping from file suffix to file type.  For\n+example, \".rst\" file is mapped to \"'restructuredtext'\" type.  Sphinx\n+uses the file type to looking for parsers from registered list.  On\n+searching, Sphinx refers to the \"Parser.supported\" attribute and picks\n+up a parser which contains the file type in the attribute.\n+\n+The users can override the source suffix mappings using\n+>>:confval:`source_suffix`<< like following:\n+\n+   # a mapping from file suffix to file types\n+   source_suffix = {\n+       '.rst': 'restructuredtext',\n+       '.md': 'markdown',\n+   }\n+\n+You should indicate file types your parser supports. This will allow\n+users to configure their settings appropriately.\n+\n+class sphinx.parsers.Parser\n+\n+   A base class of source parsers.  The additional parsers should\n+   inherit this class instead of \"docutils.parsers.Parser\".  Compared\n+   with \"docutils.parsers.Parser\", this class improves accessibility\n+   to Sphinx APIs.\n+\n+   The subclasses can access following objects and functions:\n+\n+   self.app\n+      The application object (\"sphinx.application.Sphinx\")\n+\n+   self.config\n+      The config object (\"sphinx.config.Config\")\n+\n+   self.env\n+      The environment object (\"sphinx.environment.BuildEnvironment\")\n+\n+   self.warn()\n+      Emit a warning. (Same as \"sphinx.application.Sphinx.warn()\")\n+\n+   self.info()\n+      Emit a informational message. (Same as\n+      \"sphinx.application.Sphinx.info()\")\n+\n+   Deprecated since version 1.6: \"warn()\" and \"info()\" is deprecated.\n+   Use \"sphinx.util.logging\" instead.\n+\n+   Deprecated since version 3.0: parser.app is deprecated.\ndiff --git a/_build/doc/extdev/projectapi.txt b/_build/doc/extdev/projectapi.txt\nnew file mode 100644\nindex 000000000..bb1afbc07\n--- /dev/null\n+++ b/_build/doc/extdev/projectapi.txt\n@@ -0,0 +1,41 @@\n+Project API\n+***********\n+\n+class sphinx.project.Project(srcdir: str, source_suffix: Dict[str, str])\n+\n+   A project is source code set of Sphinx document.\n+\n+   discover(exclude_paths: List[str] = []) -> Set[str]\n+\n+      Find all document files in the source directory and put them in\n+      \"docnames\".\n+\n+   doc2path(docname: str, basedir: bool = True) -> str\n+\n+      Return the filename for the document name.\n+\n+      If *basedir* is True, return as an absolute path. Else, return\n+      as a relative path to the source directory.\n+\n+   docnames: Set[str]\n+\n+      The name of documents belongs to this project.\n+\n+   path2doc(filename: str) -> str\n+\n+      Return the docname for the filename if the file is document.\n+\n+      *filename* should be absolute or relative to the source\n+      directory.\n+\n+   restore(other: sphinx.project.Project) -> None\n+\n+      Take over a result of last build.\n+\n+   source_suffix\n+\n+      source_suffix. Same as >>:confval:`source_suffix`<<.\n+\n+   srcdir\n+\n+      Source directory.\ndiff --git a/_build/doc/extdev/utils.txt b/_build/doc/extdev/utils.txt\nnew file mode 100644\nindex 000000000..8bc2c6810\n--- /dev/null\n+++ b/_build/doc/extdev/utils.txt\n@@ -0,0 +1,239 @@\n+Utilities\n+*********\n+\n+Sphinx provides utility classes and functions to develop extensions.\n+\n+\n+Base classes for components\n+===========================\n+\n+These base classes are useful to allow your extensions to obtain\n+Sphinx components (e.g. \"Config\", \"BuildEnvironment\" and so on)\n+easily.\n+\n+Note:\n+\n+  The subclasses of them might not work with bare docutils because\n+  they are strongly coupled with Sphinx.\n+\n+class sphinx.transforms.SphinxTransform(document, startnode=None)\n+\n+   A base class of Transforms.\n+\n+   Compared with \"docutils.transforms.Transform\", this class improves\n+   accessibility to Sphinx APIs.\n+\n+   property app\n+\n+      Reference to the \"Sphinx\" object.\n+\n+   property config\n+\n+      Reference to the \"Config\" object.\n+\n+   property env\n+\n+      Reference to the \"BuildEnvironment\" object.\n+\n+class sphinx.transforms.post_transforms.SphinxPostTransform(document, startnode=None)\n+\n+   A base class of post-transforms.\n+\n+   Post transforms are invoked to modify the document to restructure\n+   it for outputting. They do resolving references, convert images,\n+   special transformation for each output formats and so on.  This\n+   class helps to implement these post transforms.\n+\n+   apply(**kwargs: Any) -> None\n+\n+      Override to apply the transform to the document tree.\n+\n+   is_supported() -> bool\n+\n+      Check this transform working for current builder.\n+\n+   run(**kwargs: Any) -> None\n+\n+      main method of post transforms.\n+\n+      Subclasses should override this method instead of \"apply()\".\n+\n+class sphinx.util.docutils.SphinxDirective(name, arguments, options, content, lineno, content_offset, block_text, state, state_machine)\n+\n+   A base class for Sphinx directives.\n+\n+   This class provides helper methods for Sphinx directives.\n+\n+   Note:\n+\n+     The subclasses of this class might not work with docutils. This\n+     class is strongly coupled with Sphinx.\n+\n+   property config\n+\n+      Reference to the \"Config\" object.\n+\n+   property env\n+\n+      Reference to the \"BuildEnvironment\" object.\n+\n+   get_source_info() -> Tuple[str, int]\n+\n+      Get source and line number.\n+\n+   set_source_info(node: docutils.nodes.Node) -> None\n+\n+      Set source and line number to the node.\n+\n+class sphinx.util.docutils.SphinxRole\n+\n+   A base class for Sphinx roles.\n+\n+   This class provides helper methods for Sphinx roles.\n+\n+   Note:\n+\n+     The subclasses of this class might not work with docutils. This\n+     class is strongly coupled with Sphinx.\n+\n+   property config\n+\n+      Reference to the \"Config\" object.\n+\n+   content = None\n+\n+      A list of strings, the directive content for customization\n+\n+   property env\n+\n+      Reference to the \"BuildEnvironment\" object.\n+\n+   inliner = None\n+\n+      The \"docutils.parsers.rst.states.Inliner\" object.\n+\n+   lineno = None\n+\n+      The line number where the interpreted text begins.\n+\n+   name = None\n+\n+      The role name actually used in the document.\n+\n+   options = None\n+\n+      A dictionary of directive options for customization\n+\n+   rawtext = None\n+\n+      A string containing the entire interpreted text input.\n+\n+   text = None\n+\n+      The interpreted text content.\n+\n+class sphinx.util.docutils.ReferenceRole\n+\n+   A base class for reference roles.\n+\n+   The reference roles can accpet \"link title <target>\" style as a\n+   text for the role.  The parsed result; link title and target will\n+   be stored to \"self.title\" and \"self.target\".\n+\n+   disabled = False\n+\n+      A boolean indicates the reference is disabled.\n+\n+   has_explicit_title = None\n+\n+      A boolean indicates the role has explicit title or not.\n+\n+   target = None\n+\n+      The link target for the interpreted text.\n+\n+   title = None\n+\n+      The link title for the interpreted text.\n+\n+class sphinx.transforms.post_transforms.images.ImageConverter(*args: Any, **kwargs: Any)\n+\n+   A base class for image converters.\n+\n+   An image converter is kind of Docutils transform module.  It is\n+   used to convert image files which does not supported by builder to\n+   appropriate format for that builder.\n+\n+   For example, \"LaTeX builder\" supports PDF, PNG and JPEG as image\n+   formats.  However it does not support SVG images. For such case, to\n+   use image converters allows to embed these unsupported images into\n+   the document.  One of image converters; sphinx.ext.imgconverter can\n+   convert a SVG image to PNG format using Imagemagick internally.\n+\n+   There are three steps to make your custom image converter:\n+\n+   1. Make a subclass of \"ImageConverter\" class\n+\n+   2. Override \"conversion_rules\", \"is_available()\" and \"convert()\"\n+\n+   3. Register your image converter to Sphinx using\n+      \"Sphinx.add_post_transform()\"\n+\n+   available: Optional[bool] = None\n+\n+      The converter is available or not.  Will be filled at the first\n+      call of the build.  The result is shared in the same process.\n+\n+   conversion_rules: List[Tuple[str, str]] = []\n+\n+      A conversion rules the image converter supports. It is\n+      represented as a list of pair of source image format (mimetype)\n+      and destination one:\n+\n+         conversion_rules = [\n+             ('image/svg+xml', 'image/png'),\n+             ('image/gif', 'image/png'),\n+             ('application/pdf', 'image/png'),\n+         ]\n+\n+   convert(_from: str, _to: str) -> bool\n+\n+      Convert a image file to expected format.\n+\n+      *_from* is a path for source image file, and *_to* is a path for\n+      destination file.\n+\n+   is_available() -> bool\n+\n+      Return the image converter is available or not.\n+\n+\n+Utility components\n+==================\n+\n+class sphinx.events.EventManager(app: Sphinx = None)\n+\n+   Event manager for Sphinx.\n+\n+   add(name: str) -> None\n+\n+      Register a custom Sphinx event.\n+\n+   connect(name: str, callback: Callable, priority: int) -> int\n+\n+      Connect a handler to specific event.\n+\n+   disconnect(listener_id: int) -> None\n+\n+      Disconnect a handler.\n+\n+   emit(name: str, *args: Any, allowed_exceptions: Tuple[Type[Exception], ...] = ()) -> List\n+\n+      Emit a Sphinx event.\n+\n+   emit_firstresult(name: str, *args: Any, allowed_exceptions: Tuple[Type[Exception], ...] = ()) -> Any\n+\n+      Emit a Sphinx event and returns first result.\n+\n+      This returns the result of the first handler that doesn't return\n+      \"None\".\ndiff --git a/_build/doc/faq.txt b/_build/doc/faq.txt\nnew file mode 100644\nindex 000000000..3b8366143\n--- /dev/null\n+++ b/_build/doc/faq.txt\n@@ -0,0 +1,336 @@\n+Sphinx FAQ\n+**********\n+\n+This is a list of Frequently Asked Questions about Sphinx.  Feel free\n+to suggest new entries!\n+\n+\n+How do I...\n+===========\n+\n+... create PDF files without LaTeX?\n+   rinohtype provides a PDF builder that can be used as a drop-in\n+   replacement for the LaTeX builder.\n+\n+... get section numbers?\n+   They are automatic in LaTeX output; for HTML, give a \":numbered:\"\n+   option to the \"toctree\" directive where you want to start\n+   numbering.\n+\n+... customize the look of the built HTML files?\n+   Use themes, see */usage/theming*.\n+\n+... add global substitutions or includes?\n+   Add them in the >>:confval:`rst_prolog`<< or\n+   >>:confval:`rst_epilog`<< config value.\n+\n+... display the whole TOC tree in the sidebar?\n+   Use the \"toctree\" callable in a custom layout template, probably in\n+   the \"sidebartoc\" block.\n+\n+... write my own extension?\n+   See the */development/tutorials/index*.\n+\n+... convert from my existing docs using MoinMoin markup?\n+   The easiest way is to convert to xhtml, then convert xhtml to reST.\n+   You'll still need to mark up classes and such, but the headings and\n+   code examples come through cleanly.\n+\n+For many more extensions and other contributed stuff, see the sphinx-\n+contrib repository.\n+\n+\n+Using Sphinx with...\n+====================\n+\n+Read the Docs\n+   Read the Docs is a documentation hosting service based around\n+   Sphinx.  They will host sphinx documentation, along with supporting\n+   a number of other features including version support, PDF\n+   generation, and more. The Getting Started guide is a good place to\n+   start.\n+\n+Epydoc\n+   There's a third-party extension providing an api role which refers\n+   to Epydoc's API docs for a given identifier.\n+\n+Doxygen\n+   Michael Jones is developing a reST/Sphinx bridge to doxygen called\n+   breathe.\n+\n+SCons\n+   Glenn Hutchings has written a SCons build script to build Sphinx\n+   documentation; it is hosted here: https://bitbucket.org/zondo\n+   /sphinx-scons\n+\n+PyPI\n+   Jannis Leidel wrote a setuptools command that automatically uploads\n+   Sphinx documentation to the PyPI package documentation area at\n+   https://pythonhosted.org/.\n+\n+GitHub Pages\n+   Please add \"sphinx.ext.githubpages\" to your project.  It allows you\n+   to publish your document in GitHub Pages.  It generates helper\n+   files for GitHub Pages on building HTML document automatically.\n+\n+MediaWiki\n+   See https://bitbucket.org/kevindunn/sphinx-wiki/wiki/Home, a\n+   project by Kevin Dunn.\n+\n+Google Analytics\n+   You can use a custom \"layout.html\" template, like this:\n+\n+      {% extends \"!layout.html\" %}\n+\n+      {%- block extrahead %}\n+      {{ super() }}\n+      <script>\n+        var _gaq = _gaq || [];\n+        _gaq.push(['_setAccount', 'XXX account number XXX']);\n+        _gaq.push(['_trackPageview']);\n+      </script>\n+      {% endblock %}\n+\n+      {% block footer %}\n+      {{ super() }}\n+      <div class=\"footer\">This page uses <a href=\"https://analytics.google.com/\">\n+      Google Analytics</a> to collect statistics. You can disable it by blocking\n+      the JavaScript coming from www.google-analytics.com.\n+      <script>\n+        (function() {\n+          var ga = document.createElement('script');\n+          ga.src = ('https:' == document.location.protocol ?\n+                    'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';\n+          ga.setAttribute('async', 'true');\n+          document.documentElement.firstChild.appendChild(ga);\n+        })();\n+      </script>\n+      </div>\n+      {% endblock %}\n+\n+Google Search\n+   To replace Sphinx's built-in search function with Google Search,\n+   proceed as follows:\n+\n+   1. Go to https://cse.google.com/cse/all to create the Google Search\n+      code snippet.\n+\n+   2. Copy the code snippet and paste it into\n+      \"_templates/searchbox.html\" in your Sphinx project:\n+\n+         <div>\n+            <h3>{{ _('Quick search') }}</h3>\n+            <script>\n+               (function() {\n+                  var cx = '......';\n+                  var gcse = document.createElement('script');\n+                  gcse.async = true;\n+                  gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\n+                  var s = document.getElementsByTagName('script')[0];\n+                  s.parentNode.insertBefore(gcse, s);\n+               })();\n+            </script>\n+           <gcse:search></gcse:search>\n+         </div>\n+\n+   3. Add \"searchbox.html\" to the >>:confval:`html_sidebars`<<\n+      configuration value.\n+\n+\n+Sphinx vs. Docutils\n+===================\n+\n+tl;dr: *docutils* converts reStructuredText to multiple output\n+formats. Sphinx builds upon docutils to allow construction of cross-\n+referenced and indexed bodies of documentation.\n+\n+docutils is a text processing system for converting plain text\n+documentation into other, richer formats. As noted in the docutils\n+documentation, docutils uses *readers* to read a document, *parsers*\n+for parsing plain text formats into an internal tree representation\n+made up of different types of *nodes*, and *writers* to output this\n+tree in various document formats.  docutils provides parsers for one\n+plain text format - reStructuredText - though other, *out-of-tree*\n+parsers have been implemented including Sphinx's *Markdown parser*. On\n+the other hand, it provides writers for many different formats\n+including HTML, LaTeX, man pages, Open Document Format and XML.\n+\n+docutils exposes all of its functionality through a variety of front-\n+end tools, such as \"rst2html\", \"rst2odt\" and \"rst2xml\". Crucially\n+though, all of these tools, and docutils itself, are concerned with\n+individual documents.  They don't support concepts such as cross-\n+referencing, indexing of documents, or the construction of a document\n+hierarchy (typically manifesting in a table of contents).\n+\n+Sphinx builds upon docutils by harnessing docutils' readers and\n+parsers and providing its own */usage/builders/index*. As a result,\n+Sphinx wraps some of the *writers* provided by docutils. This allows\n+Sphinx to provide many features that would simply not be possible with\n+docutils, such as those outlined above.\n+\n+\n+Epub info\n+=========\n+\n+The following list gives some hints for the creation of epub files:\n+\n+* Split the text into several files. The longer the individual HTML\n+  files are, the longer it takes the ebook reader to render them.  In\n+  extreme cases, the rendering can take up to one minute.\n+\n+* Try to minimize the markup.  This also pays in rendering time.\n+\n+* For some readers you can use embedded or external fonts using the\n+  CSS \"@font-face\" directive.  This is *extremely* useful for code\n+  listings which are often cut at the right margin.  The default\n+  Courier font (or variant) is quite wide and you can only display up\n+  to 60 characters on a line.  If you replace it with a narrower font,\n+  you can get more characters on a line.  You may even use FontForge\n+  and create narrow variants of some free font.  In my case I get up\n+  to 70 characters on a line.\n+\n+  You may have to experiment a little until you get reasonable\n+  results.\n+\n+* Test the created epubs. You can use several alternatives.  The ones\n+  I am aware of are Epubcheck, Calibre, FBreader (although it does not\n+  render the CSS), and Bookworm.  For Bookworm, you can download the\n+  source from https://code.google.com/archive/p/threepress and run\n+  your own local server.\n+\n+* Large floating divs are not displayed properly. If they cover more\n+  than one page, the div is only shown on the first page. In that case\n+  you can copy the \"epub.css\" from the \"sphinx/themes/epub/static/\"\n+  directory to your local \"_static/\" directory and remove the float\n+  settings.\n+\n+* Files that are inserted outside of the \"toctree\" directive must be\n+  manually included. This sometimes applies to appendixes, e.g. the\n+  glossary or the indices.  You can add them with the\n+  >>:confval:`epub_post_files`<< option.\n+\n+* The handling of the epub cover page differs from the\n+  reStructuredText procedure which automatically resolves image paths\n+  and puts the images into the \"_images\" directory.  For the epub\n+  cover page put the image in the >>:confval:`html_static_path`<<\n+  directory and reference it with its full path in the\n+  >>:confval:`epub_cover`<< config option.\n+\n+* kindlegen command can convert from epub3 resulting file to \".mobi\"\n+  file for Kindle. You can get \"yourdoc.mobi\" under \"_build/epub\"\n+  after the following command:\n+\n+     $ make epub\n+     $ kindlegen _build/epub/yourdoc.epub\n+\n+  The kindlegen command doesn't accept documents that have section\n+  titles surrounding \"toctree\" directive:\n+\n+     Section Title\n+     =============\n+\n+     .. toctree::\n+\n+        subdocument\n+\n+     Section After Toc Tree\n+     ======================\n+\n+  kindlegen assumes all documents order in line, but the resulting\n+  document has complicated order for kindlegen:\n+\n+     ``parent.xhtml`` -> ``child.xhtml`` -> ``parent.xhtml``\n+\n+  If you get the following error, fix your document structure:\n+\n+     Error(prcgen):E24011: TOC section scope is not included in the parent chapter:(title)\n+     Error(prcgen):E24001: The table of content could not be built.\n+\n+\n+Texinfo info\n+============\n+\n+There are two main programs for reading Info files, \"info\" and GNU\n+Emacs.  The \"info\" program has less features but is available in most\n+Unix environments and can be quickly accessed from the terminal.\n+Emacs provides better font and color display and supports extensive\n+customization (of course).\n+\n+\n+Displaying Links\n+----------------\n+\n+One noticeable problem you may encounter with the generated Info files\n+is how references are displayed.  If you read the source of an Info\n+file, a reference to this section would look like:\n+\n+   * note Displaying Links: target-id\n+\n+In the stand-alone reader, \"info\", references are displayed just as\n+they appear in the source.  Emacs, on the other-hand, will by default\n+replace \"*note:\" with \"see\" and hide the \"target-id\".  For example:\n+\n+   Displaying Links\n+\n+The exact behavior of how Emacs displays references is dependent on\n+the variable \"Info-hide-note-references\".  If set to the value of\n+\"hide\", Emacs will hide both the \"*note:\" part and the \"target-id\".\n+This is generally the best way to view Sphinx-based documents since\n+they often make frequent use of links and do not take this limitation\n+into account.  However, changing this variable affects how all Info\n+documents are displayed and most do take this behavior into account.\n+\n+If you want Emacs to display Info files produced by Sphinx using the\n+value \"hide\" for \"Info-hide-note-references\" and the default value for\n+all other Info files, try adding the following Emacs Lisp code to your\n+start-up file, \"~/.emacs.d/init.el\".\n+\n+   (defadvice info-insert-file-contents (after\n+                                         sphinx-info-insert-file-contents\n+                                         activate)\n+     \"Hack to make `Info-hide-note-references' buffer-local and\n+   automatically set to `hide' iff it can be determined that this file\n+   was created from a Texinfo file generated by Docutils or Sphinx.\"\n+     (set (make-local-variable 'Info-hide-note-references)\n+          (default-value 'Info-hide-note-references))\n+     (save-excursion\n+       (save-restriction\n+         (widen) (goto-char (point-min))\n+         (when (re-search-forward\n+                \"^Generated by \\\\(Sphinx\\\\|Docutils\\\\)\"\n+                (save-excursion (search-forward \"\\x1f\" nil t)) t)\n+           (set (make-local-variable 'Info-hide-note-references)\n+                'hide)))))\n+\n+\n+Notes\n+-----\n+\n+The following notes may be helpful if you want to create Texinfo\n+files:\n+\n+* Each section corresponds to a different \"node\" in the Info file.\n+\n+* Colons (\":\") cannot be properly escaped in menu entries and xrefs.\n+  They will be replaced with semicolons (\";\").\n+\n+* Links to external Info files can be created using the somewhat\n+  official URI scheme \"info\".  For example:\n+\n+     info:Texinfo#makeinfo_options\n+\n+* Inline markup\n+\n+  The standard formatting for \"*strong*\" and \"_emphasis_\" can result\n+  in ambiguous output when used to markup parameter names and other\n+  values.  Since this is a fairly common practice, the default\n+  formatting has been changed so that \"emphasis\" and \"strong\" are now\n+  displayed like \"`literal'\"s.\n+\n+  The standard formatting can be re-enabled by adding the following to\n+  your \"conf.py\":\n+\n+     texinfo_elements = {'preamble': \"\"\"\n+     @definfoenclose strong,*,*\n+     @definfoenclose emph,_,_\n+     \"\"\"}\ndiff --git a/_build/doc/glossary.txt b/_build/doc/glossary.txt\nnew file mode 100644\nindex 000000000..b7fef8193\n--- /dev/null\n+++ b/_build/doc/glossary.txt\n@@ -0,0 +1,96 @@\n+Glossary\n+********\n+\n+builder\n+   A class (inheriting from \"Builder\") that takes parsed documents and\n+   performs an action on them.  Normally, builders translate the\n+   documents to an output format, but it is also possible to use\n+   builders that e.g. check for broken links in the documentation, or\n+   build coverage information.\n+\n+   See */usage/builders/index* for an overview over Sphinx's built-in\n+   builders.\n+\n+configuration directory\n+   The directory containing \"conf.py\".  By default, this is the same\n+   as the *source directory*, but can be set differently with the\n+   **-c** command-line option.\n+\n+directive\n+   A reStructuredText markup element that allows marking a block of\n+   content with special meaning.  Directives are supplied not only by\n+   docutils, but Sphinx and custom extensions can add their own.  The\n+   basic directive syntax looks like this:\n+\n+      .. directivename:: argument ...\n+         :option: value\n+\n+         Content of the directive.\n+\n+   See Directives for more information.\n+\n+document name\n+   Since reST source files can have different extensions (some people\n+   like \".txt\", some like \".rst\" -- the extension can be configured\n+   with >>:confval:`source_suffix`<<) and different OSes have\n+   different path separators, Sphinx abstracts them: *document names*\n+   are always relative to the *source directory*, the extension is\n+   stripped, and path separators are converted to slashes.  All\n+   values, parameters and such referring to \"documents\" expect such\n+   document names.\n+\n+   Examples for document names are \"index\", \"library/zipfile\", or\n+   \"reference/datamodel/types\".  Note that there is no leading or\n+   trailing slash.\n+\n+domain\n+   A domain is a collection of markup (reStructuredText *directive*s\n+   and *role*s) to describe and link to *object*s belonging together,\n+   e.g. elements of a programming language.  Directive and role names\n+   in a domain have names like \"domain:name\", e.g. \"py:function\".\n+\n+   Having domains means that there are no naming problems when one set\n+   of documentation wants to refer to e.g. C++ and Python classes.  It\n+   also means that extensions that support the documentation of whole\n+   new languages are much easier to write.\n+\n+   For more information, refer to */usage/restructuredtext/domains*.\n+\n+environment\n+   A structure where information about all documents under the root is\n+   saved, and used for cross-referencing.  The environment is pickled\n+   after the parsing stage, so that successive runs only need to read\n+   and parse new and changed documents.\n+\n+extension\n+   A custom *role*, *directive* or other aspect of Sphinx that allows\n+   users to modify any aspect of the build process within Sphinx.\n+\n+   For more information, refer to */usage/extensions/index*.\n+\n+master document\n+   The document that contains the root \"toctree\" directive.\n+\n+object\n+   The basic building block of Sphinx documentation.  Every \"object\n+   directive\" (e.g. \"function\" or \"object\") creates such a block; and\n+   most objects can be cross-referenced to.\n+\n+RemoveInSphinxXXXWarning\n+   The feature which is warned will be removed in Sphinx-XXX version.\n+   It usually caused from Sphinx extensions which is using deprecated.\n+   See also Deprecation Warnings.\n+\n+role\n+   A reStructuredText markup element that allows marking a piece of\n+   text. Like directives, roles are extensible.  The basic syntax\n+   looks like this: \":rolename:`content`\".  See Inline markup for\n+   details.\n+\n+source directory\n+   The directory which, including its subdirectories, contains all\n+   source files for one Sphinx project.\n+\n+reStructuredText\n+   An easy-to-read, what-you-see-is-what-you-get plaintext markup\n+   syntax and parser system.\ndiff --git a/_build/doc/internals/authors.txt b/_build/doc/internals/authors.txt\nnew file mode 100644\nindex 000000000..33208ac45\n--- /dev/null\n+++ b/_build/doc/internals/authors.txt\n@@ -0,0 +1,180 @@\n+Sphinx authors\n+**************\n+\n+Sphinx is written and maintained by Georg Brandl <georg@python.org>.\n+\n+Substantial parts of the templates were written by Armin Ronacher\n+<armin.ronacher@active-4.com>.\n+\n+Other co-maintainers:\n+\n+* Takayuki Shimizukawa <shimizukawa@gmail.com>\n+\n+* Daniel Neuh\u00e4user <@DasIch>\n+\n+* Jon Waltman <@jonwaltman>\n+\n+* Rob Ruana <@RobRuana>\n+\n+* Robert Lehmann <@lehmannro>\n+\n+* Roland Meister <@rolmei>\n+\n+* Takeshi Komiya <@tk0miya>\n+\n+* Jean-Fran\u00e7ois Burnol <@jfbu>\n+\n+* Yoshiki Shibukawa <@shibu_jp>\n+\n+* Timotheus Kampik - <@TimKam>\n+\n+Other contributors, listed alphabetically, are:\n+\n+* Alastair Houghton -- Apple Help builder\n+\n+* Alexander Todorov -- inheritance_diagram tests and improvements\n+\n+* Andi Albrecht -- agogo theme\n+\n+* Jakob Lykke Andersen -- Rewritten C++ domain\n+\n+* Henrique Bastos -- SVG support for graphviz extension\n+\n+* Daniel B\u00fcltmann -- todo extension\n+\n+* Marco Buttu -- doctest extension (pyversion option)\n+\n+* Nathan Damon -- bugfix in validation of static paths in html\n+  builders\n+\n+* Etienne Desautels -- apidoc module\n+\n+* Michael Droettboom -- inheritance_diagram extension\n+\n+* Charles Duffy -- original graphviz extension\n+\n+* Kevin Dunn -- MathJax extension\n+\n+* Josip Dzolonga -- coverage builder\n+\n+* Buck Evan -- dummy builder\n+\n+* Matthew Fernandez -- todo extension fix\n+\n+* Hernan Grecco -- search improvements\n+\n+* Horst Gutmann -- internationalization support\n+\n+* Martin Hans -- autodoc improvements\n+\n+* Zac Hatfield-Dodds -- doctest reporting improvements, intersphinx\n+  performance\n+\n+* Doug Hellmann -- graphviz improvements\n+\n+* Tim Hoffmann -- theme improvements\n+\n+* Antti Kaihola -- doctest extension (skipif option)\n+\n+* Dave Kuhlman -- original LaTeX writer\n+\n+* Blaise Laflamme -- pyramid theme\n+\n+* Chris Lamb -- reproducibility fixes\n+\n+* Thomas Lamb -- linkcheck builder\n+\n+* \u0141ukasz Langa -- partial support for autodoc\n+\n+* Martin Larralde -- additional napoleon admonitions\n+\n+* Ian Lee -- quickstart improvements\n+\n+* Robert Lehmann -- gettext builder (GSOC project)\n+\n+* Dan MacKinlay -- metadata fixes\n+\n+* Martin Mahner -- nature theme\n+\n+* Will Maier -- directory HTML builder\n+\n+* Jacob Mason -- websupport library (GSOC project)\n+\n+* Glenn Matthews -- python domain signature improvements\n+\n+* Kurt McKee -- documentation updates\n+\n+* Roland Meister -- epub builder\n+\n+* Ezio Melotti -- collapsible sidebar JavaScript\n+\n+* Bruce Mitchener -- Minor epub improvement\n+\n+* Daniel Neuh\u00e4user -- JavaScript domain, Python 3 support (GSOC)\n+\n+* Julien Palard -- Colspan and rowspan in text builder\n+\n+* Christopher Perkins -- autosummary integration\n+\n+* Benjamin Peterson -- unittests\n+\n+* T. Powers -- HTML output improvements\n+\n+* Jeppe Pihl -- literalinclude improvements\n+\n+* Rob Ruana -- napoleon extension\n+\n+* Vince Salvino -- JavaScript search improvements\n+\n+* Stefan Seefeld -- toctree improvements\n+\n+* Gregory Szorc -- performance improvements\n+\n+* Taku Shimizu -- epub3 builder\n+\n+* Antonio Valentino -- qthelp builder, docstring inheritance\n+\n+* Filip Vavera -- napoleon todo directive\n+\n+* Pauli Virtanen -- autodoc improvements, autosummary extension\n+\n+* Eric N. Vander Weele -- autodoc improvements\n+\n+* Stefan van der Walt -- autosummary extension\n+\n+* Thomas Waldmann -- apidoc module fixes\n+\n+* John Waltman -- Texinfo builder\n+\n+* Barry Warsaw -- setup command improvements\n+\n+* Sebastian Wiesner -- image handling, distutils support\n+\n+* Michael Wilson -- Intersphinx HTTP basic auth support\n+\n+* Matthew Woodcraft -- text output improvements\n+\n+* Joel Wurtz -- cellspanning support in LaTeX\n+\n+* Hong Xu -- svg support in imgmath extension and various bug fixes\n+\n+* Stephen Finucane -- setup command improvements and documentation\n+\n+* Daniel Pizetta -- inheritance diagram improvements\n+\n+* KINEBUCHI Tomohiko -- typing Sphinx as well as docutils\n+\n+* Adri\u00e1n Chaves (Gallaecio) -- coverage builder improvements\n+\n+* Lars Hupfeldt Nielsen - OpenSSL FIPS mode md5 bug fix\n+\n+Many thanks for all contributions!\n+\n+There are also a few modules or functions incorporated from other\n+authors and projects:\n+\n+* sphinx.util.jsdump uses the basestring encoding from simplejson,\n+  written by Bob Ippolito, released under the MIT license\n+\n+* sphinx.util.stemmer was written by Vivake Gupta, placed in the\n+  Public Domain\ndiff --git a/_build/doc/internals/code-of-conduct.txt b/_build/doc/internals/code-of-conduct.txt\nnew file mode 100644\nindex 000000000..6d5c08a29\n--- /dev/null\n+++ b/_build/doc/internals/code-of-conduct.txt\n@@ -0,0 +1,79 @@\n+Sphinx Code of Conduct\n+**********************\n+\n+Like the technical community as a whole, the Sphinx team and community\n+is made up of volunteers from all over the world. Diversity is a\n+strength, but it can also lead to communication issues and\n+unhappiness. To that end, we have a few ground rules that we ask\n+people to adhere to.\n+\n+* **Be friendly and patient.**\n+\n+* **Be welcoming.** We strive to be a community that welcomes and\n+  supports people of all backgrounds and identities. This includes,\n+  but is not limited to members of any race, ethnicity, culture,\n+  national origin, colour, immigration status, social and economic\n+  class, educational level, sex, sexual orientation, gender identity\n+  and expression, age, size, family status, political belief,\n+  religion, and mental and physical ability.\n+\n+* **Be considerate.** Your work will be used by other people, and you\n+  in turn will depend on the work of others. Any decision you take\n+  will affect users and colleagues, and you should take those\n+  consequences into account when making decisions. Remember that we're\n+  a world-wide community, so you might not be communicating in someone\n+  else's primary language.\n+\n+* **Be respectful.** Not all of us will agree all the time, but\n+  disagreement is no excuse for poor behavior and poor manners. We\n+  might all experience some frustration now and then, but we cannot\n+  allow that frustration to turn into a personal attack. It's\n+  important to remember that a community where people feel\n+  uncomfortable or threatened is not a productive one. Members of the\n+  Sphinx community should be respectful when dealing with other\n+  members as well as with people outside the Sphinx community.\n+\n+* **Be careful in the words that you choose.** We are a community of\n+  professionals, and we conduct ourselves professionally. Be kind to\n+  others. Do not insult or put down other participants. Harassment and\n+  other exclusionary behavior aren't acceptable. This includes, but is\n+  not limited to:\n+\n+  * Violent threats or language directed against another person.\n+\n+  * Discriminatory jokes and language.\n+\n+  * Posting sexually explicit or violent material.\n+\n+  * Posting (or threatening to post) other people's personally\n+    identifying information (\"doxing\").\n+\n+  * Personal insults, especially those using racist or sexist terms.\n+\n+  * Unwelcome sexual attention.\n+\n+  * Advocating for, or encouraging, any of the above behavior.\n+\n+  * Repeated harassment of others. In general, if someone asks you to\n+    stop, then stop.\n+\n+* **When we disagree, try to understand why.** Disagreements, both\n+  social and technical, happen all the time and Sphinx is no\n+  exception. It is important that we resolve disagreements and\n+  differing views constructively. Remember that we're different.\n+  Different people have different perspectives on issues. Being unable\n+  to understand why someone holds a viewpoint doesn't mean that\n+  they're wrong. Don't forget that it is human to err and blaming each\n+  other doesn't get us anywhere. Instead, focus on helping to resolve\n+  issues and learning from mistakes.\n+\n+This isn't an exhaustive list of things that you can't do. Rather,\n+take it in the spirit in which it's intended - a guide to make it\n+easier to enrich all of us and the technical communities in which we\n+participate. This code of conduct applies to all spaces of the Sphinx\n+community.\n+\n+-[ Attribution ]-\n+\n+Original text courtesy of the Speak Up! project:\n+http://web.archive.org/web/20141109123859/http://speakup.io/coc.html.\ndiff --git a/_build/doc/internals/contributing.txt b/_build/doc/internals/contributing.txt\nnew file mode 100644\nindex 000000000..ce102f754\n--- /dev/null\n+++ b/_build/doc/internals/contributing.txt\n@@ -0,0 +1,303 @@\n+Contributing to Sphinx\n+**********************\n+\n+There are many ways you can contribute to Sphinx, be it filing bug\n+reports or feature requests, writing new documentation or submitting\n+patches for new or fixed behavior. This guide serves to illustrate how\n+you can get started with this.\n+\n+\n+Getting help\n+============\n+\n+The Sphinx community maintains a number of mailing lists and IRC\n+channels.\n+\n+Stack Overflow with tag python-sphinx\n+   Questions and answers about use and development.\n+\n+sphinx-users <sphinx-users@googlegroups.com>\n+   Mailing list for user support.\n+\n+sphinx-dev <sphinx-dev@googlegroups.com>\n+   Mailing list for development related discussions.\n+\n+#sphinx-doc on irc.freenode.net\n+   IRC channel for development questions and user support.\n+\n+\n+Bug Reports and Feature Requests\n+================================\n+\n+If you have encountered a problem with Sphinx or have an idea for a\n+new feature, please submit it to the issue tracker on GitHub or\n+discuss it on the sphinx-dev mailing list.\n+\n+For bug reports, please include the output produced during the build\n+process and also the log file Sphinx creates after it encounters an\n+unhandled exception.  The location of this file should be shown\n+towards the end of the error message.\n+\n+Including or providing a link to the source files involved may help us\n+fix the issue.  If possible, try to create a minimal project that\n+produces the error and post that instead.\n+\n+\n+Writing code\n+============\n+\n+The Sphinx source code is managed using Git and is hosted on GitHub.\n+The recommended way for new contributors to submit code to Sphinx is\n+to fork this repository and submit a pull request after committing\n+changes to their fork. The pull request will then need to be approved\n+by one of the core developers before it is merged into the main\n+repository.\n+\n+\n+Getting started\n+---------------\n+\n+Before starting on a patch, we recommend checking for open issues or\n+open a fresh issue to start a discussion around a feature idea or a\n+bug. If you feel uncomfortable or uncertain about an issue or your\n+changes, feel free to email the *sphinx-dev* mailing list.\n+\n+These are the basic steps needed to start developing on Sphinx.\n+\n+1. Create an account on GitHub.\n+\n+2. Fork the main Sphinx repository (sphinx-doc/sphinx) using the\n+   GitHub interface.\n+\n+3. Clone the forked repository to your machine.\n+\n+      git clone https://github.com/USERNAME/sphinx\n+      cd sphinx\n+\n+4. Checkout the appropriate branch.\n+\n+   Sphinx adopts Semantic Versioning 2.0.0 (refs: https://semver.org/\n+   ).\n+\n+   For changes that preserves backwards-compatibility of API and\n+   features, they should be included in the next MINOR release, use\n+   the \"A.x\" branch.\n+\n+      git checkout A.x\n+\n+   For incompatible or other substantial changes that should wait\n+   until the next MAJOR release, use the \"master\" branch.\n+\n+   For urgent release, a new PATCH branch must be branched from the\n+   newest release tag (see Sphinx's release process for detail).\n+\n+5. Setup a virtual environment.\n+\n+   This is not necessary for unit testing, thanks to \"tox\", but it is\n+   necessary if you wish to run \"sphinx-build\" locally or run unit\n+   tests without the help of \"tox\":\n+\n+      virtualenv ~/.venv\n+      . ~/.venv/bin/activate\n+      pip install -e .\n+\n+6. Create a new working branch. Choose any name you like.\n+\n+      git checkout -b feature-xyz\n+\n+7. Hack, hack, hack.\n+\n+   Write your code along with tests that shows that the bug was fixed\n+   or that the feature works as expected.\n+\n+8. Add a bullet point to \"CHANGES\" if the fix or feature is not\n+   trivial (small doc updates, typo fixes), then commit:\n+\n+      git commit -m '#42: Add useful new feature that does this.'\n+\n+   GitHub recognizes certain phrases that can be used to automatically\n+   update the issue tracker. For example:\n+\n+      git commit -m 'Closes #42: Fix invalid markup in docstring of Foo.bar.'\n+\n+   would close issue #42.\n+\n+9. Push changes in the branch to your forked repository on GitHub:\n+\n+      git push origin feature-xyz\n+\n+10. Submit a pull request from your branch to the respective branch\n+    (\"master\" or \"A.x\").\n+\n+11. Wait for a core developer to review your changes.\n+\n+\n+Coding style\n+------------\n+\n+Please follow these guidelines when writing code for Sphinx:\n+\n+* Try to use the same code style as used in the rest of the project.\n+  See the Pocoo Styleguide for more information.\n+\n+* For non-trivial changes, please update the \"CHANGES\" file.  If your\n+  changes alter existing behavior, please document this.\n+\n+* New features should be documented.  Include examples and use cases\n+  where appropriate.  If possible, include a sample that is displayed\n+  in the generated output.\n+\n+* When adding a new configuration variable, be sure to document it and\n+  update \"sphinx/cmd/quickstart.py\" if it's important enough.\n+\n+* Add appropriate unit tests.\n+\n+Style and type checks can be run using \"tox\":\n+\n+   tox -e mypy\n+   tox -e flake8\n+\n+\n+Unit tests\n+----------\n+\n+Sphinx is tested using pytest for Python code and Karma for\n+JavaScript.\n+\n+To run Python unit tests, we recommend using \"tox\", which provides a\n+number of targets and allows testing against multiple different Python\n+environments:\n+\n+* To list all possible targets:\n+\n+     tox -av\n+\n+* To run unit tests for a specific Python version, such as Python 3.6:\n+\n+     tox -e py36\n+\n+* To run unit tests for a specific Python version and turn on\n+  deprecation warnings on so they're shown in the test output:\n+\n+     PYTHONWARNINGS=all tox -e py36\n+\n+* Arguments to \"pytest\" can be passed via \"tox\", e.g. in order to run\n+  a particular test:\n+\n+     tox -e py36 tests/test_module.py::test_new_feature\n+\n+You can also test by installing dependencies in your local\n+environment:\n+\n+   pip install .[test]\n+\n+To run JavaScript tests, use \"npm\":\n+\n+   npm install\n+   npm run test\n+\n+New unit tests should be included in the \"tests\" directory where\n+necessary:\n+\n+* For bug fixes, first add a test that fails without your changes and\n+  passes after they are applied.\n+\n+* Tests that need a \"sphinx-build\" run should be integrated in one of\n+  the existing test modules if possible.  New tests that to\n+  \"@with_app\" and then \"build_all\" for a few assertions are not good\n+  since *the test suite should not take more than a minute to run*.\n+\n+New in version 1.8: Sphinx also runs JavaScript tests.\n+\n+New in version 1.6: \"sphinx.testing\" is added as a experimental.\n+\n+Changed in version 1.5.2: Sphinx was switched from nose to pytest.\n+\n+Utility functions and pytest fixtures for testing are provided in\n+\"sphinx.testing\". If you are a developer of Sphinx extensions, you can\n+write unit tests with using pytest. At this time, \"sphinx.testing\"\n+will help your test implementation.\n+\n+How to use pytest fixtures that are provided by \"sphinx.testing\"?  You\n+can require \"'sphinx.testing.fixtures'\" in your test modules or\n+\"conftest.py\" files like this:\n+\n+   pytest_plugins = 'sphinx.testing.fixtures'\n+\n+If you want to know more detailed usage, please refer to\n+\"tests/conftest.py\" and other \"test_*.py\" files under \"tests\"\n+directory.\n+\n+\n+Writing documentation\n+=====================\n+\n+You can build documentation using \"tox\":\n+\n+   tox -e docs\n+\n+\n+Translations\n+------------\n+\n+The parts of messages in Sphinx that go into builds are translated\n+into several locales.  The translations are kept as gettext \".po\"\n+files translated from the master template \"sphinx/locale/sphinx.pot\".\n+\n+Sphinx uses Babel to extract messages and maintain the catalog files.\n+It is integrated in \"setup.py\":\n+\n+* Use \"python setup.py extract_messages\" to update the \".pot\"\n+  template.\n+\n+* Use \"python setup.py update_catalog\" to update all existing language\n+  catalogs in \"sphinx/locale/*/LC_MESSAGES\" with the current messages\n+  in the template file.\n+\n+* Use \"python setup.py compile_catalog\" to compile the \".po\" files to\n+  binary \".mo\" files and \".js\" files.\n+\n+When an updated \".po\" file is submitted, run compile_catalog to commit\n+both the source and the compiled catalogs.\n+\n+When a new locale is submitted, add a new directory with the ISO 639-1\n+language identifier and put \"sphinx.po\" in there.  Don't forget to\n+update the possible values for >>:confval:`language`<< in\n+\"doc/usage/configuration.rst\".\n+\n+The Sphinx core messages can also be translated on Transifex.  There\n+\"tx\" client tool, which is provided by the \"transifex_client\" Python\n+package, can be used to pull translations in \".po\" format from\n+Transifex.  To do this, go to \"sphinx/locale\" and then run \"tx pull -f\n+-l LANG\" where \"LANG\" is an existing language identifier.  It is good\n+practice to run \"python setup.py update_catalog\" afterwards to make\n+sure the \".po\" file has the canonical Babel formatting.\n+\n+\n+Debugging tips\n+==============\n+\n+* Delete the build cache before building documents if you make changes\n+  in the code by running the command \"make clean\" or using the\n+  \"sphinx-build -E\" option.\n+\n+* Use the \"sphinx-build -P\" option to run \"pdb\" on exceptions.\n+\n+* Use \"node.pformat()\" and \"node.asdom().toxml()\" to generate a\n+  printable representation of the document structure.\n+\n+* Set the configuration variable >>:confval:`keep_warnings`<< to\n+  \"True\" so warnings will be displayed in the generated output.\n+\n+* Set the configuration variable >>:confval:`nitpicky`<< to \"True\" so\n+  that Sphinx will complain about references without a known target.\n+\n+* Set the debugging options in the Docutils configuration file.\n+\n+* JavaScript stemming algorithms in \"sphinx/search/*.py\" (except\n+  \"en.py\") are generated by this modified snowballcode generator.\n+  Generated JSX files are in this repository.  You can get the\n+  resulting JavaScript files using the following command:\n+\n+     npm install\n+     node_modules/.bin/grunt build # -> dest/*.global.js\ndiff --git a/_build/doc/internals/index.txt b/_build/doc/internals/index.txt\nnew file mode 100644\nindex 000000000..61c96d359\n--- /dev/null\n+++ b/_build/doc/internals/index.txt\n@@ -0,0 +1,38 @@\n+Sphinx internals\n+****************\n+\n+This guide contains information about the Sphinx open source project\n+itself. This is where you can find information about how Sphinx is\n+managed and learn how to contribute to the project.\n+\n+* Contributing to Sphinx\n+\n+  * Getting help\n+\n+  * Bug Reports and Feature Requests\n+\n+  * Writing code\n+\n+  * Writing documentation\n+\n+  * Debugging tips\n+\n+* Sphinx's release process\n+\n+  * Branch Model\n+\n+  * Deprecating a feature\n+\n+  * Deprecation policy\n+\n+  * Release procedures\n+\n+* Organization of the Sphinx project\n+\n+  * Core developers\n+\n+  * Other contributors\n+\n+* Sphinx Code of Conduct\n+\n+* Sphinx authors\ndiff --git a/_build/doc/internals/organization.txt b/_build/doc/internals/organization.txt\nnew file mode 100644\nindex 000000000..ad616c71e\n--- /dev/null\n+++ b/_build/doc/internals/organization.txt\n@@ -0,0 +1,64 @@\n+Organization of the Sphinx project\n+**********************************\n+\n+The guide explains how the Sphinx project is organized.\n+\n+\n+Core developers\n+===============\n+\n+The core developers of Sphinx have write access to the main\n+repository.  They can commit changes, accept/reject pull requests, and\n+manage items on the issue tracker.\n+\n+\n+Guidelines\n+----------\n+\n+The following are some general guidelines for core developers:\n+\n+* Questionable or extensive changes should be submitted as a pull\n+  request instead of being committed directly to the main repository.\n+  The pull request should be reviewed by another core developer before\n+  it is merged.\n+\n+* Trivial changes can be committed directly but be sure to keep the\n+  repository in a good working state and that all tests pass before\n+  pushing your changes.\n+\n+* When committing code written by someone else, please attribute the\n+  original author in the commit message and any relevant \"CHANGES\"\n+  entry.\n+\n+\n+Membership\n+----------\n+\n+Core membership is predicated on continued active contribution to the\n+project. In general, prospective cores should demonstrate:\n+\n+* a good understanding of one of more components of Sphinx\n+\n+* a history of helpful, constructive contributions\n+\n+* a willingness to invest time improving Sphinx\n+\n+Refer to Contributing to Sphinx for more information on how you can\n+get started.\n+\n+\n+Other contributors\n+==================\n+\n+You do not need to be a core developer or have write access to be\n+involved in the development of Sphinx.  You can submit patches or\n+create pull requests from forked repositories and have a core\n+developer add the changes for you.\n+\n+Similarly, contributions are not limited to code patches. We also\n+welcome help triaging bugs, input on design decisions, reviews of\n+existing patches and documentation improvements. More information can\n+be found in Contributing to Sphinx.\n+\n+A list of people that have contributed to Sphinx can be found in\n+Sphinx authors.\ndiff --git a/_build/doc/internals/release-process.txt b/_build/doc/internals/release-process.txt\nnew file mode 100644\nindex 000000000..08c0eca9c\n--- /dev/null\n+++ b/_build/doc/internals/release-process.txt\n@@ -0,0 +1,109 @@\n+Sphinx's release process\n+************************\n+\n+\n+Branch Model\n+============\n+\n+Sphinx project uses following branches for developing that conforms to\n+Semantic Versioning 2.0.0 (refs: https://semver.org/ ).\n+\n+\"master\"\n+   Development for MAJOR version. All changes including incompatible\n+   behaviors and public API updates are allowed.\n+\n+\"A.x\" (ex. \"2.x\")\n+   Where \"A.x\" is the \"MAJOR.MINOR\" release.  Used to maintain current\n+   MINOR release. All changes are allowed if the change preserves\n+   backwards-compatibility of API and features.\n+\n+   Only the most recent \"MAJOR.MINOR\" branch is currently retained.\n+   When a new MAJOR version is released, the old \"MAJOR.MINOR\" branch\n+   will be deleted and replaced by an equivalent tag.\n+\n+\"A.B.x\" (ex. \"2.4.x\")\n+   Where \"A.B.x\" is the \"MAJOR.MINOR.PATCH\" release.  Only backwards-\n+   compatible bug fixes are allowed. In Sphinx project, PATCH version\n+   is used for urgent bug fix.\n+\n+   \"MAJOR.MINOR.PATCH\" branch will be branched from the \"v\" prefixed\n+   release tag (ex. make 2.3.1 that branched from v2.3.0) when a\n+   urgent release is needed. When new PATCH version is released, the\n+   branch will be deleted and replaced by an equivalent tag (ex.\n+   v2.3.1).\n+\n+\n+Deprecating a feature\n+=====================\n+\n+There are a couple reasons that code in Sphinx might be deprecated:\n+\n+* If a feature has been improved or modified in a backwards-\n+  incompatible way, the old feature or behavior will be deprecated.\n+\n+* Sometimes Sphinx will include a backport of a Python library that's\n+  not included in a version of Python that Sphinx currently supports.\n+  When Sphinx no longer needs to support the older version of Python\n+  that doesn't include the library, the library will be deprecated in\n+  Sphinx.\n+\n+As the Deprecation policy describes, the first release of Sphinx that\n+deprecates a feature (\"A.B\") should raise a \"RemovedInSphinxXXWarning\"\n+(where \"XX\" is the Sphinx version where the feature will be removed)\n+when the deprecated feature is invoked. Assuming we have good test\n+coverage, these warnings are converted to errors when running the test\n+suite with warnings enabled:\n+\n+   pytest -Wall\n+\n+Thus, when adding a \"RemovedInSphinxXXWarning\" you need to eliminate\n+or silence any warnings generated when running the tests.\n+\n+\n+Deprecation policy\n+==================\n+\n+MAJOR and MINOR releases may deprecate certain features from previous\n+releases. If a feature is deprecated in a release A.x, it will\n+continue to work in all A.x.x versions (for all versions of x). It\n+will continue to work in all B.x.x versions but raise deprecation\n+warnings. Deprecated features will be removed at the C.0.0. It means\n+the deprecated feature will work during 2 MAJOR releases at least.\n+\n+So, for example, if we decided to start the deprecation of a function\n+in Sphinx 2.x:\n+\n+* Sphinx 2.x will contain a backwards-compatible replica of the\n+  function which will raise a \"RemovedInSphinx40Warning\". This is a\n+  subclass of \"python:PendingDeprecationWarning\", i.e. it will not get\n+  displayed by default.\n+\n+* Sphinx 3.x will still contain the backwards-compatible replica, but\n+  \"RemovedInSphinx40Warning\" will be a subclass of\n+  \"python:DeprecationWarning\" then, and gets displayed by default.\n+\n+* Sphinx 4.0 will remove the feature outright.\n+\n+\n+Deprecation warnings\n+--------------------\n+\n+Sphinx will enable its \"RemovedInNextVersionWarning\" warnings by\n+default, if \"python:PYTHONWARNINGS\" is not set.  Therefore you can\n+disable them using:\n+\n+* \"PYTHONWARNINGS= make html\" (Linux/Mac)\n+\n+* \"export PYTHONWARNINGS=\" and do \"make html\" (Linux/Mac)\n+\n+* \"set PYTHONWARNINGS=\" and do \"make html\" (Windows)\n+\n+But you can also explicitly enable the pending ones using e.g.\n+\"PYTHONWARNINGS=default\" (see the *Python docs on configuring\n+warnings*) for more details.\n+\n+\n+Release procedures\n+==================\n+\n+The release procedures are listed in \"utils/release-checklist\".\ndiff --git a/_build/doc/latex.txt b/_build/doc/latex.txt\nnew file mode 100644\nindex 000000000..5e18696d5\n--- /dev/null\n+++ b/_build/doc/latex.txt\n@@ -0,0 +1,1001 @@\n+LaTeX customization\n+*******************\n+\n+Unlike the HTML builders, the \"latex\" builder does not benefit from\n+prepared themes. The Options for LaTeX output, and particularly the\n+latex_elements variable, provides much of the interface for\n+customization. For example:\n+\n+   # inside conf.py\n+   latex_engine = 'xelatex'\n+   latex_elements = {\n+       'fontpkg': r'''\n+   \\setmainfont{DejaVu Serif}\n+   \\setsansfont{DejaVu Sans}\n+   \\setmonofont{DejaVu Sans Mono}\n+   ''',\n+       'preamble': r'''\n+   \\usepackage[titles]{tocloft}\n+   \\cftsetpnumwidth {1.25cm}\\cftsetrmarg{1.5cm}\n+   \\setlength{\\cftchapnumwidth}{0.75cm}\n+   \\setlength{\\cftsecindent}{\\cftchapnumwidth}\n+   \\setlength{\\cftsecnumwidth}{1.25cm}\n+   ''',\n+       'fncychap': r'\\usepackage[Bjornstrup]{fncychap}',\n+       'printindex': r'\\footnotesize\\raggedright\\printindex',\n+   }\n+   latex_show_urls = 'footnote'\n+\n+Note:\n+\n+  Keep in mind that backslashes must be doubled in Python string\n+  literals to avoid interpretation as escape sequences. Alternatively,\n+  you may use raw strings as is done above.\n+\n+\n+The \"latex_elements\" configuration setting\n+==========================================\n+\n+A dictionary that contains LaTeX snippets overriding those Sphinx\n+usually puts into the generated \".tex\" files.  Its \"'sphinxsetup'\" key\n+is described separately.\n+\n+Keys that you may want to override include:\n+\n+\"'papersize'\"\n+   Paper size option of the document class (\"'a4paper'\" or\n+   \"'letterpaper'\")\n+\n+   Default: \"'letterpaper'\"\n+\n+\"'pointsize'\"\n+   Point size option of the document class (\"'10pt'\", \"'11pt'\" or\n+   \"'12pt'\")\n+\n+   Default: \"'10pt'\"\n+\n+\"'pxunit'\"\n+   The value of the \"px\" when used in image attributes \"width\" and\n+   \"height\". The default value is \"'0.75bp'\" which achieves \"96px=1in\"\n+   (in TeX \"1in = 72bp = 72.27pt\".) To obtain for example \"100px=1in\"\n+   use \"'0.01in'\" or \"'0.7227pt'\" (the latter leads to TeX computing a\n+   more precise value, due to the smaller unit used in the\n+   specification); for \"72px=1in\", simply use \"'1bp'\"; for \"90px=1in\",\n+   use \"'0.8bp'\" or \"'0.803pt'\".\n+\n+   Default: \"'0.75bp'\"\n+\n+   New in version 1.5.\n+\n+\"'passoptionstopackages'\"\n+   A string which will be positioned early in the preamble, designed\n+   to contain \"\\\\PassOptionsToPackage{options}{foo}\" commands.\n+\n+   Default: \"''\"\n+\n+   New in version 1.4.\n+\n+\"'babel'\"\n+   \"babel\" package inclusion, default \"'\\\\usepackage{babel}'\" (the\n+   suitable document language string is passed as class option, and\n+   \"english\" is used if no language.) For Japanese documents, the\n+   default is the empty string.\n+\n+   With XeLaTeX and LuaLaTeX, Sphinx configures the LaTeX document to\n+   use polyglossia, but one should be aware that current babel has\n+   improved its support for Unicode engines in recent years and for\n+   some languages it may make sense to prefer \"babel\" over\n+   \"polyglossia\".\n+\n+   Hint:\n+\n+     After modifiying a core LaTeX key like this one, clean up the\n+     LaTeX build repertory before next PDF build, else left-over\n+     auxiliary files are likely to break the build.\n+\n+   Default:  \"'\\\\usepackage{babel}'\" (\"''\" for Japanese documents)\n+\n+   Changed in version 1.5: For >>:confval:`latex_engine`<< set to\n+   \"'xelatex'\", the default is\n+   \"'\\\\usepackage{polyglossia}\\n\\\\setmainlanguage{<language>}'\".\n+\n+   Changed in version 1.6: \"'lualatex'\" uses same default setting as\n+   \"'xelatex'\"\n+\n+   Changed in version 1.7.6: For French, \"xelatex\" and \"lualatex\"\n+   default to using \"babel\", not \"polyglossia\".\n+\n+\"'fontpkg'\"\n+   Font package inclusion. The default of \"'\\\\usepackage{times}'\" uses\n+   Times for text, Helvetica for sans serif and Courier for monospace.\n+\n+   In order to support occasional Cyrillic (\u0444\u0438\u0437\u0438\u043a\u0430 \u0447\u0430\u0441\u0442\u0438\u0446) or Greek\n+   letters (\u03a3\u03c9\u03bc\u03b1\u03c4\u03b9\u03b4\u03b9\u03b1\u03ba\u03ae \u03c6\u03c5\u03c3\u03b9\u03ba\u03ae) in a document whose language is\n+   English or a Latin European one, the default set-up is enhanced\n+   (only for \"'pdflatex'\" engine) to do:\n+\n+      \\substitutefont{LGR}{\\rmdefault}{cmr}\n+      \\substitutefont{LGR}{\\sfdefault}{cmss}\n+      \\substitutefont{LGR}{\\ttdefault}{cmtt}\n+      \\substitutefont{X2}{\\rmdefault}{cmr}\n+      \\substitutefont{X2}{\\sfdefault}{cmss}\n+      \\substitutefont{X2}{\\ttdefault}{cmtt}\n+\n+   This is activated only under the condition that the \"'fontenc'\" key\n+   is configured to load the \"LGR\" (Greek) and/or \"X2\" (Cyrillic)\n+   pdflatex-font encodings (if the >>:confval:`language`<< is set to a\n+   Cyrillic language, this \"'fontpkg'\" key must be used as \"times\"\n+   package has no direct support for it; then keep only \"LGR\" lines\n+   from the above, if support is needed for Greek in the text).\n+\n+   The \"\\substitutefont\" command is from the eponymous LaTeX package,\n+   which is loaded by Sphinx if needed (on Ubuntu Xenial it is part of\n+   \"texlive-latex-extra\" which is a Sphinx requirement).\n+\n+   Only if the document actually does contain Unicode Greek letters\n+   (in text) or Cyrillic letters, will the above default set-up cause\n+   additional requirements for the PDF build. On Ubuntu Xenial, these\n+   are the \"texlive-lang-greek\", \"texlive-lang-cyrillic\", and (with\n+   the above choice of fonts) the \"cm-super\" (or \"cm-super-minimal\")\n+   packages.\n+\n+   For \"'xelatex'\" and \"'lualatex'\", the default is to use the\n+   FreeFont family: this OpenType font family supports both Cyrillic\n+   and Greek scripts and is available as separate Ubuntu Xenial\n+   package \"fonts-freefont-otf\". It is not necessary to install the\n+   much larger \"texlive-fonts-extra\" package.\n+\n+   \"'platex'\" (Japanese documents) engine supports individual Cyrillic\n+   and Greek letters with no need of extra user set-up.\n+\n+   Default: \"'\\\\usepackage{times}'\" (or \"''\" when using a Cyrillic\n+   script)\n+\n+   Changed in version 1.2: Defaults to \"''\" when the\n+   >>:confval:`language`<< uses the Cyrillic script.\n+\n+   Changed in version 2.0: Added support for individual Greek and\n+   Cyrillic letters:\n+\n+\"'fncychap'\"\n+   Inclusion of the \"fncychap\" package (which makes fancy chapter\n+   titles), default \"'\\\\usepackage[Bjarne]{fncychap}'\" for English\n+   documentation (this option is slightly customized by Sphinx),\n+   \"'\\\\usepackage[Sonny]{fncychap}'\" for internationalized docs\n+   (because the \"Bjarne\" style uses numbers spelled out in English).\n+   Other \"fncychap\" styles you can try are \"Lenny\", \"Glenn\", \"Conny\",\n+   \"Rejne\" and \"Bjornstrup\".  You can also set this to \"''\" to disable\n+   fncychap.\n+\n+   Default: \"'\\\\usepackage[Bjarne]{fncychap}'\" for English documents,\n+      \"'\\\\usepackage[Sonny]{fncychap}'\" for internationalized\n+      documents, and \"''\" for Japanese documents.\n+\n+\"'preamble'\"\n+   Additional preamble content.  One may move all needed macros into\n+   some file \"mystyle.tex.txt\" of the project source repertory, and\n+   get LaTeX to import it at run time:\n+\n+      'preamble': r'\\input{mystyle.tex.txt}',\n+      # or, if the \\ProvidesPackage LaTeX macro is used in a file mystyle.sty\n+      'preamble': r'\\usepackage{mystyle}',\n+\n+   It is then needed to set appropriately\n+   >>:confval:`latex_additional_files`<<, for example:\n+\n+      latex_additional_files = [\"mystyle.sty\"]\n+\n+   Default: \"''\"\n+\n+\"'figure_align'\"\n+   Latex figure float alignment. Whenever an image doesn't fit into\n+   the current page, it will be 'floated' into the next page but may\n+   be preceded by any other text.  If you don't like this behavior,\n+   use 'H' which will disable floating and position figures strictly\n+   in the order they appear in the source.\n+\n+   Default: \"'htbp'\" (here, top, bottom, page)\n+\n+   New in version 1.3.\n+\n+\"'atendofbody'\"\n+   Additional document content (right before the indices).\n+\n+   Default: \"''\"\n+\n+   New in version 1.5.\n+\n+\"'extrapackages'\"\n+   Additional LaTeX packages.  For example:\n+\n+      latex_elements = {\n+          'packages': r'\\usepackage{isodate}'\n+      }\n+\n+   The specified LaTeX packages will be loaded before hyperref package\n+   and packages loaded from Sphinx extensions.\n+\n+   Hint:\n+\n+     If you'd like to load additional LaTeX packages after hyperref,\n+     use \"'preamble'\" key instead.\n+\n+   Default: \"''\"\n+\n+   New in version 2.3.\n+\n+\"'footer'\"\n+   Additional footer content (before the indices).\n+\n+   Default: \"''\"\n+\n+   Deprecated since version 1.5: Use \"'atendofbody'\" key instead.\n+\n+Keys that don't need to be overridden unless in special cases are:\n+\n+\"'extraclassoptions'\"\n+   The default is the empty string. Example: \"'extraclassoptions':\n+   'openany'\" will allow chapters (for documents of the \"'manual'\"\n+   type) to start on any page.\n+\n+   Default: \"''\"\n+\n+   New in version 1.2.\n+\n+   Changed in version 1.6: Added this documentation.\n+\n+\"'maxlistdepth'\"\n+   LaTeX allows by default at most 6 levels for nesting list and\n+   quote-like environments, with at most 4 enumerated lists, and 4\n+   bullet lists. Setting this key for example to \"'10'\" (as a string)\n+   will allow up to 10 nested levels (of all sorts). Leaving it to the\n+   empty string means to obey the LaTeX default.\n+\n+   Warning:\n+\n+     * Using this key may prove incompatible with some LaTeX packages\n+       or special document classes which do their own list\n+       customization.\n+\n+     * The key setting is silently *ignored* if\n+       \"\\usepackage{enumitem}\" is executed inside the document\n+       preamble. Use then rather the dedicated commands of this LaTeX\n+       package.\n+\n+   Default: \"6\"\n+\n+   New in version 1.5.\n+\n+\"'inputenc'\"\n+   \"inputenc\" package inclusion.\n+\n+   Default: \"'\\\\usepackage[utf8]{inputenc}'\" when using pdflatex, else\n+      \"''\"\n+\n+   Changed in version 1.4.3: Previously\n+   \"'\\\\usepackage[utf8]{inputenc}'\" was used for all compilers.\n+\n+\"'cmappkg'\"\n+   \"cmap\" package inclusion.\n+\n+   Default: \"'\\\\usepackage{cmap}'\"\n+\n+   New in version 1.2.\n+\n+\"'fontenc'\"\n+   \"fontenc\" package inclusion.\n+\n+   If \"'pdflatex'\" is the >>:confval:`latex_engine`<<, one can add\n+   \"LGR\" for support of Greek letters in the document, and also \"X2\"\n+   (or \"T2A\") for Cyrillic letters, like this:\n+\n+      r'\\usepackage[LGR,X2,T1]{fontenc}'\n+\n+   Attention:\n+\n+     If Greek is main language, do not use this key.  Since Sphinx\n+     2.2.1, \"xelatex\" will be used automatically as\n+     >>:confval:`latex_engine`<<. Formerly, Sphinx did not support\n+     producing PDF via LaTeX with Greek as main language.Prior to 2.0,\n+     Unicode Greek letters were escaped to use LaTeX math mark-up.\n+     This is not the case anymore, and the above must be used (only in\n+     case of \"'pdflatex'\" engine) if the source contains such Unicode\n+     Greek.On Ubuntu xenial, packages \"texlive-lang-greek\" and \"cm-\n+     super\" (for the latter, only if the \"'fontpkg'\" setting is left\n+     to its default) are needed for \"LGR\" to work.  In place of \"cm-\n+     super\" one can install smaller \"cm-super-minimal\", but it\n+     requires the LaTeX document to execute\n+     \"\\usepackage[10pt]{type1ec}\" before loading \"fontenc\".  Thus, use\n+     this key with this extra at its start if needed.\n+\n+   Default: \"'\\\\usepackage[T1]{fontenc}'\"\n+\n+   Changed in version 1.5: Defaults to \"'\\\\usepackage{fontspec}'\" when\n+   >>:confval:`latex_engine`<< is \"'xelatex'\".\n+\n+   Changed in version 1.6: \"'lualatex'\" uses \"fontspec\" per default\n+   like \"'xelatex'\".\n+\n+   Changed in version 2.0: \"'lualatex'\" executes\n+   \"\\defaultfontfeatures[\\rmfamily,\\sffamily]{}\" to disable TeX\n+   ligatures transforming *<<* and *>>* as escaping working with\n+   \"pdflatex/xelatex\" failed with \"lualatex\".\n+\n+   Changed in version 2.0: Detection of \"LGR\", \"T2A\", \"X2\" to trigger\n+   support of occasional Greek or Cyrillic (\"'pdflatex'\" only, as this\n+   support is provided natively by \"'platex'\" and only requires\n+   suitable font with \"'xelatex'/'lualatex'\").\n+\n+   Changed in version 2.3.0: \"'xelatex'\" also executes\n+   \"\\defaultfontfeatures[\\rmfamily,\\sffamily]{}\" in order to avoid\n+   contractions of \"--\" into en-dash or transforms of straight quotes\n+   into curly ones in PDF (in non-literal text paragraphs) despite\n+   >>:confval:`smartquotes`<< being set to \"False\".\n+\n+\"'textgreek'\"\n+   This is needed for \"pdflatex\" to support Unicode input of Greek\n+   letters such as \u03c6\u03cd\u03c3\u03b9\u03c2.  Expert users may want to load the\n+   \"textalpha\" package with its option \"normalize-symbols\".\n+\n+   Hint:\n+\n+     Unicode Greek (but no further Unicode symbols) in \"math\" can be\n+     supported by \"'pdflatex'\" from setting this key to\n+     \"r'\\usepackage{textalpha,alphabeta}'\".  Then \":math:`\u03b1`\" (U+03B1)\n+     will render as \\alpha.  For wider Unicode support in math input,\n+     see the discussion of >>:confval:`latex_engine`<<.\n+\n+   With \"'platex'\" (Japanese),  \"'xelatex'\" or \"'lualatex'\", this key\n+   is ignored.\n+\n+   Default: \"'\\\\usepackage{textalpha}'\" or \"''\" if \"fontenc\" does not\n+      include the \"LGR\" option.\n+\n+   New in version 2.0.\n+\n+\"'geometry'\"\n+   \"geometry\" package inclusion, the default definition is:\n+\n+      \"'\\\\usepackage{geometry}'\"\n+\n+   with an additional \"[dvipdfm]\" for Japanese documents. The Sphinx\n+   LaTeX style file executes:\n+\n+      \"\\PassOptionsToPackage{hmargin=1in,vmargin=1in,marginpar=0.5in}\n+      {geometry}\"\n+\n+   which can be customized via corresponding 'sphinxsetup' options.\n+\n+   Default: \"'\\\\usepackage{geometry}'\" (or\n+      \"'\\\\usepackage[dvipdfm]{geometry}'\" for Japanese documents)\n+\n+   New in version 1.5.\n+\n+   Changed in version 1.5.2: \"dvipdfm\" option if\n+   >>:confval:`latex_engine`<< is \"'platex'\".\n+\n+   New in version 1.5.3: The 'sphinxsetup' keys for the margins.\n+\n+   Changed in version 1.5.3: The location in the LaTeX file has been\n+   moved to after \"\\usepackage{sphinx}\" and \"\\sphinxsetup{..}\", hence\n+   also after insertion of \"'fontpkg'\" key. This is in order to handle\n+   the paper layout options in a special way for Japanese documents:\n+   the text width will be set to an integer multiple of the *zenkaku*\n+   width, and the text height to an integer multiple of the baseline.\n+   See the hmargin documentation for more.\n+\n+\"'hyperref'\"\n+   \"hyperref\" package inclusion; also loads package \"hypcap\" and\n+   issues \"\\urlstyle{same}\". This is done after \"sphinx.sty\" file is\n+   loaded and before executing the contents of \"'preamble'\" key.\n+\n+   Attention:\n+\n+     Loading of packages \"hyperref\" and \"hypcap\" is mandatory.\n+\n+   New in version 1.5: Previously this was done from inside\n+   \"sphinx.sty\".\n+\n+\"'maketitle'\"\n+   \"maketitle\" call. Override if you want to generate a differently\n+   styled title page.\n+\n+   Hint:\n+\n+     If the key value is set to\n+     \"r'\\newcommand\\sphinxbackoftitlepage{<Extra\n+     material>}\\sphinxmaketitle'\", then \"<Extra material>\" will be\n+     typeset on back of title page (\"'manual'\" docclass only).\n+\n+   Default: \"'\\\\sphinxmaketitle'\"\n+\n+   Changed in version 1.8.3: Original \"\\maketitle\" from document class\n+   is not overwritten, hence is re-usable as part of some custom\n+   setting for this key.\n+\n+   New in version 1.8.3: \"\\sphinxbackoftitlepage\" optional macro.  It\n+   can also be defined inside \"'preamble'\" key rather than this one.\n+\n+\"'releasename'\"\n+   Value that prefixes \"'release'\" element on title page.  As for\n+   *title* and *author* used in the tuples of\n+   >>:confval:`latex_documents`<<, it is inserted as LaTeX markup.\n+\n+   Default: \"'Release'\"\n+\n+\"'tableofcontents'\"\n+   \"tableofcontents\" call. The default of \"'\\\\sphinxtableofcontents'\"\n+   is a wrapper of unmodified \"\\tableofcontents\", which may itself be\n+   customized by user loaded packages. Override if you want to\n+   generate a different table of contents or put content between the\n+   title page and the TOC.\n+\n+   Default: \"'\\\\sphinxtableofcontents'\"\n+\n+   Changed in version 1.5: Previously the meaning of\n+   \"\\tableofcontents\" itself was modified by Sphinx. This created an\n+   incompatibility with dedicated packages modifying it also such as\n+   \"tocloft\" or \"etoc\".\n+\n+\"'transition'\"\n+   Commands used to display transitions. Override if you want to\n+   display transitions differently.\n+\n+   Default: \"'\\n\\n\\\\bigskip\\\\hrule\\\\bigskip\\n\\n'\"\n+\n+   New in version 1.2.\n+\n+   Changed in version 1.6: Remove unneeded \"{}\" after \"\\\\hrule\".\n+\n+\"'printindex'\"\n+   \"printindex\" call, the last thing in the file. Override if you want\n+   to generate the index differently or append some content after the\n+   index. For example \"'\\\\footnotesize\\\\raggedright\\\\printindex'\" is\n+   advisable when the index is full of long entries.\n+\n+   Default: \"'\\\\printindex'\"\n+\n+\"'fvset'\"\n+   Customization of \"fancyvrb\" LaTeX package. The default value of\n+   \"'\\\\fvset{fontsize=\\\\small}'\" is used to adjust for the large\n+   character width of the monospace font, used in code-blocks.  You\n+   may need to modify this if you use custom fonts.\n+\n+   Default: \"'\\\\fvset{fontsize=\\\\small}'\"\n+\n+   New in version 1.8.\n+\n+   Changed in version 2.0: Due to new default font choice for\n+   \"'xelatex'\" and \"'lualatex'\" (FreeFont), Sphinx does\n+   \"\\\\fvset{fontsize=\\\\small}\" also with these engines (and not\n+   \"\\\\fvset{fontsize=auto}\").\n+\n+Keys that are set by other options and therefore should not be\n+overridden are:\n+\n+\"'docclass'\" \"'classoptions'\" \"'title'\" \"'release'\" \"'author'\"\n+\"'makeindex'\"\n+\n+\n+The \"sphinxsetup\" configuration setting\n+=======================================\n+\n+New in version 1.5.\n+\n+The \"'sphinxsetup'\" key of latex_elements provides a LaTeX-type\n+customization interface:\n+\n+   latex_elements = {\n+       'sphinxsetup': 'key1=value1, key2=value2, ...',\n+   }\n+\n+It defaults to empty.  If non-empty, it will be passed as argument to\n+the \"\\sphinxsetup\" macro inside the document preamble, like this:\n+\n+   \\usepackage{sphinx}\n+   \\sphinxsetup{key1=value1, key2=value2,...}\n+\n+The colors used in the above are provided by the \"svgnames\" option of\n+the \"xcolor\" package:\n+\n+   latex_elements = {\n+       'passoptionstopackages': r'\\PassOptionsToPackage{svgnames}{xcolor}',\n+   }\n+\n+It is possible to insert further uses of the \"\\sphinxsetup\" LaTeX\n+macro directly into the body of the document, via the help of the\n+\"raw\" directive. This chapter is styled in the PDF output using the\n+following at the start of the chaper:\n+\n+   .. raw:: latex\n+\n+      \\begingroup\n+      \\sphinxsetup{%\n+            verbatimwithframe=false,\n+            VerbatimColor={named}{OldLace},\n+            TitleColor={named}{DarkGoldenrod},\n+            hintBorderColor={named}{LightCoral},\n+            attentionborder=3pt,\n+            attentionBorderColor={named}{Crimson},\n+            attentionBgColor={named}{FloralWhite},\n+            noteborder=2pt,\n+            noteBorderColor={named}{Olive},\n+            cautionborder=3pt,\n+            cautionBorderColor={named}{Cyan},\n+            cautionBgColor={named}{LightCyan}}\n+\n+The below is included at the end of the chapter:\n+\n+   .. raw:: latex\n+\n+      \\endgroup\n+\n+LaTeX boolean keys require *lowercase* \"true\" or \"false\" values.\n+Spaces around the commas and equal signs are ignored, spaces inside\n+LaTeX macros may be significant.\n+\n+\"hmargin, vmargin\"\n+   The dimensions of the horizontal (resp. vertical) margins, passed\n+   as \"hmargin\" (resp. \"vmargin\") option to the \"geometry\" package.\n+   Example:\n+\n+      'sphinxsetup': 'hmargin={2in,1.5in}, vmargin={1.5in,2in}, marginpar=1in',\n+\n+   Japanese documents currently accept only the one-dimension format\n+   for these parameters. The \"geometry\" package is then passed\n+   suitable options to get the text width set to an exact multiple of\n+   the *zenkaku* width, and the text height set to an integer multiple\n+   of the baselineskip, with the closest fit for the margins.\n+\n+   Default: \"1in\" (equivalent to \"{1in,1in}\")\n+\n+   Hint:\n+\n+     For Japanese \"'manual'\" docclass with pointsize \"11pt\" or \"12pt\",\n+     use the \"nomag\" extra document class option (cf.\n+     \"'extraclassoptions'\" key of >>:confval:`latex_elements`<<) or\n+     so-called TeX \"true\" units:\n+\n+        'sphinxsetup': 'hmargin=1.5truein, vmargin=1.5truein, marginpar=5zw',\n+\n+   New in version 1.5.3.\n+\n+\"marginpar\"\n+   The \"\\marginparwidth\" LaTeX dimension. For Japanese documents, the\n+   value is modified to be the closest integer multiple of the\n+   *zenkaku* width.\n+\n+   Default: \"0.5in\"\n+\n+   New in version 1.5.3.\n+\n+\"verbatimwithframe\"\n+   Boolean to specify if \"code-block\"s and literal includes are\n+   framed. Setting it to \"false\" does not deactivate use of package\n+   \"framed\", because it is still in use for the optional background\n+   colour.\n+\n+   Default: \"true\".\n+\n+\"verbatimwrapslines\"\n+   Boolean to specify if long lines in \"code-block\"'s contents are\n+   wrapped.\n+\n+   Default: \"true\"\n+\n+\"literalblockcappos\"\n+   Decides the caption position: either \"b\" (\"bottom\") or \"t\" (\"top\").\n+\n+   Default: \"t\"\n+\n+   New in version 1.7.\n+\n+\"verbatimhintsturnover\"\n+   Boolean to specify if code-blocks display \"continued on next page\"\n+   and \"continued from previous page\" hints in case of pagebreaks.\n+\n+   Default: \"true\"\n+\n+   New in version 1.6.3.\n+\n+   Changed in version 1.7: the default changed from \"false\" to \"true\".\n+\n+\"verbatimcontinuedalign\", \"verbatimcontinuesalign\"\n+   Horizontal position relative to the framed contents: either \"l\"\n+   (left aligned), \"r\" (right aligned) or \"c\" (centered).\n+\n+   Default: \"r\"\n+\n+   New in version 1.7.\n+\n+\"parsedliteralwraps\"\n+   Boolean to specify if long lines in >>:dudir:`parsed-literal`<<'s\n+   contents should wrap.\n+\n+   Default: \"true\"\n+\n+   New in version 1.5.2: set this option value to \"false\" to recover\n+   former behaviour.\n+\n+\"inlineliteralwraps\"\n+   Boolean to specify if line breaks are allowed inside inline\n+   literals: but extra potential break-points (additionally to those\n+   allowed by LaTeX at spaces or for hyphenation) are currently\n+   inserted only after the characters \". , ; ? ! /\" and \"\\\". Due to\n+   TeX internals, white space in the line will be stretched (or\n+   shrunk) in order to accommodate the linebreak.\n+\n+   Default: \"true\"\n+\n+   New in version 1.5: set this option value to \"false\" to recover\n+   former behaviour.\n+\n+   Changed in version 2.3.0: added potential breakpoint at \"\\\"\n+   characters.\n+\n+\"verbatimvisiblespace\"\n+   When a long code line is split, the last space character from the\n+   source code line right before the linebreak location is typeset\n+   using this.\n+\n+   Default: \"\\textcolor{red}{\\textvisiblespace}\"\n+\n+\"verbatimcontinued\"\n+   A LaTeX macro inserted at start of continuation code lines. Its\n+   (complicated...) default typesets a small red hook pointing to the\n+   right:\n+\n+      \\makebox[2\\fontcharwd\\font`\\x][r]{\\textcolor{red}{\\tiny$\\hookrightarrow$}}\n+\n+   Changed in version 1.5: The breaking of long code lines was added\n+   at 1.4.2. The default definition of the continuation symbol was\n+   changed at 1.5 to accomodate various font sizes (e.g. code-blocks\n+   can be in footnotes).\n+\n+\"TitleColor\"\n+   The colour for titles (as configured via use of package\n+   \"titlesec\".)\n+\n+   Default: \"{rgb}{0.126,0.263,0.361}\"\n+\n+Warning:\n+\n+  Colours set via \"'sphinxsetup'\"  must obey the syntax of the\n+  argument of the \"color/xcolor\" packages \"\\definecolor\" command.\n+\n+\"InnerLinkColor\"\n+   A colour passed to \"hyperref\" as value of \"linkcolor\"  and\n+   \"citecolor\".\n+\n+   Default: \"{rgb}{0.208,0.374,0.486}\".\n+\n+\"OuterLinkColor\"\n+   A colour passed to \"hyperref\" as value of \"filecolor\", \"menucolor\",\n+   and \"urlcolor\".\n+\n+   Default: \"{rgb}{0.216,0.439,0.388}\"\n+\n+\"VerbatimColor\"\n+   The background colour for \"code-block\"s.\n+\n+   Default: \"{rgb}{1,1,1}\" (white)\n+\n+\"VerbatimBorderColor\"\n+   The frame color.\n+\n+   Default: \"{rgb}{0,0,0}\" (black)\n+\n+\"VerbatimHighlightColor\"\n+   The color for highlighted lines.\n+\n+   Default: \"{rgb}{0.878,1,1}\"\n+\n+   New in version 1.6.6.\n+\n+Note:\n+\n+  Starting with this colour key, and for all others coming next, the\n+  actual names declared to \"color\" or \"xcolor\" are prefixed with\n+  \"sphinx\".\n+\n+\"verbatimsep\"\n+   The separation between code lines and the frame.\n+\n+   Default: \"\\fboxsep\"\n+\n+\"verbatimborder\"\n+   The width of the frame around \"code-block\"s.\n+\n+   Default: \"\\fboxrule\"\n+\n+\"shadowsep\"\n+   The separation between contents and frame for >>:dudir:`contents`<<\n+   and >>:dudir:`topic`<< boxes.\n+\n+   Default: \"5pt\"\n+\n+\"shadowsize\"\n+   The width of the lateral \"shadow\" to the right.\n+\n+   Default: \"4pt\"\n+\n+\"shadowrule\"\n+   The width of the frame around >>:dudir:`topic`<< boxes.\n+\n+   Default: \"\\fboxrule\"\n+\n+\"noteBorderColor\", \"hintBorderColor\", \"importantBorderColor\",\n+\"tipBorderColor\"\n+   The colour for the two horizontal rules used by Sphinx in LaTeX for\n+   styling a >>:dudir:`note`<< type admonition.\n+\n+   Default: \"{rgb}{0,0,0}\" (black)\n+\n+\"noteborder\", \"hintborder\", \"importantborder\", \"tipborder\"\n+   The width of the two horizontal rules.\n+\n+   Default: \"0.5pt\"\n+\n+\"warningBorderColor\", \"cautionBorderColor\", \"attentionBorderColor\",\n+\"dangerBorderColor\", \"errorBorderColor\"\n+   The colour for the admonition frame.\n+\n+   Default: \"{rgb}{0,0,0}\" (black)\n+\n+\"warningBgColor\", \"cautionBgColor\", \"attentionBgColor\",\n+\"dangerBgColor\", \"errorBgColor\"\n+   The background colours for the respective admonitions.\n+\n+   Default: \"{rgb}{1,1,1}\" (white)\n+\n+\"warningborder\", \"cautionborder\", \"attentionborder\", \"dangerborder\",\n+\"errorborder\"\n+   The width of the frame.\n+\n+   Default: \"1pt\"\n+\n+\"AtStartFootnote\"\n+   LaTeX macros inserted at the start of the footnote text at bottom\n+   of page, after the footnote number.\n+\n+   Default: \"\\mbox{ }\"\n+\n+\"BeforeFootnote\"\n+   LaTeX macros inserted before the footnote mark. The default removes\n+   possible space before it (else, TeX could insert a line break\n+   there).\n+\n+   Default: \"\\leavevmode\\unskip\"\n+\n+   New in version 1.5.\n+\n+\"HeaderFamily\"\n+   default \"\\sffamily\\bfseries\". Sets the font used by headings.\n+\n+\n+LaTeX macros and environments\n+=============================\n+\n+Here are some macros from the package file \"sphinx.sty\" and class\n+files \"sphinxhowto.cls\", \"sphinxmanual.cls\", which have public names\n+thus allowing redefinitions. Check the respective files for the\n+defaults.\n+\n+\n+Macros\n+------\n+\n+* Text styling commands:\n+\n+  * \"\\sphinxstrong\",\n+\n+  * \"\\sphinxbfcode\",\n+\n+  * \"\\sphinxemail\",\n+\n+  * \"\\sphinxtablecontinued\",\n+\n+  * \"\\sphinxtitleref\",\n+\n+  * \"\\sphinxmenuselection\",\n+\n+  * \"\\sphinxaccelerator\",\n+\n+  * \"\\sphinxcrossref\",\n+\n+  * \"\\sphinxtermref\",\n+\n+  * \"\\sphinxoptional\".\n+\n+  New in version 1.4.5: Use of \"\\sphinx\" prefixed macro names to limit\n+  possibilities of conflict with LaTeX packages.\n+\n+* More text styling:\n+\n+  * \"\\sphinxstyleindexentry\",\n+\n+  * \"\\sphinxstyleindexextra\",\n+\n+  * \"\\sphinxstyleindexpageref\",\n+\n+  * \"\\sphinxstyletopictitle\",\n+\n+  * \"\\sphinxstylesidebartitle\",\n+\n+  * \"\\sphinxstyleothertitle\",\n+\n+  * \"\\sphinxstylesidebarsubtitle\",\n+\n+  * \"\\sphinxstyletheadfamily\",\n+\n+  * \"\\sphinxstyleemphasis\",\n+\n+  * \"\\sphinxstyleliteralemphasis\",\n+\n+  * \"\\sphinxstylestrong\",\n+\n+  * \"\\sphinxstyleliteralstrong\",\n+\n+  * \"\\sphinxstyleabbreviation\",\n+\n+  * \"\\sphinxstyleliteralintitle\",\n+\n+  * \"\\sphinxstylecodecontinued\",\n+\n+  * \"\\sphinxstylecodecontinues\".\n+\n+  New in version 1.5: These macros were formerly hard-coded as non\n+  customizable \"\\texttt\", \"\\emph\", etc...\n+\n+  New in version 1.6: \"\\sphinxstyletheadfamily\" which defaults to\n+  \"\\sffamily\" and allows multiple paragraphs in header cells of\n+  tables.\n+\n+  New in version 1.6.3: \"\\sphinxstylecodecontinued\" and\n+  \"\\sphinxstylecodecontinues\".\n+\n+  New in version 3.0: \"\\sphinxkeyboard\"\n+\n+* \"\\sphinxtableofcontents\": A wrapper (defined differently in\n+  \"sphinxhowto.cls\" and in \"sphinxmanual.cls\") of standard\n+  \"\\tableofcontents\".  The macro \"\\sphinxtableofcontentshook\" is\n+  executed during its expansion right before \"\\tableofcontents\"\n+  itself.\n+\n+  Changed in version 1.5: Formerly, the meaning of \"\\tableofcontents\"\n+  was modified by Sphinx.\n+\n+  Changed in version 2.0: Hard-coded redefinitions of \"\\l@section\" and\n+  \"\\l@subsection\" formerly done during loading of \"'manual'\" docclass\n+  are now executed later via \"\\sphinxtableofcontentshook\".  This macro\n+  is also executed by the \"'howto'\" docclass, but defaults to empty\n+  with it.\n+\n+* \"\\sphinxmaketitle\": Used as the default setting of the \"'maketitle'\"\n+  >>:confval:`latex_elements`<< key. Defined in the class files\n+  \"sphinxmanual.cls\" and \"sphinxhowto.cls\".\n+\n+  Changed in version 1.8.3: Formerly, \"\\maketitle\" from LaTeX document\n+  class was modified by Sphinx.\n+\n+* \"\\sphinxbackoftitlepage\": For \"'manual'\" docclass, and if it is\n+  defined, it gets executed at end of \"\\sphinxmaketitle\", before the\n+  final \"\\clearpage\".  Use either the \"'maketitle'\" key or the\n+  \"'preamble'\" key of >>:confval:`latex_elements`<< to add a custom\n+  definition of \"\\sphinxbackoftitlepage\".\n+\n+  New in version 1.8.3.\n+\n+* \"\\sphinxcite\": A wrapper of standard \"\\cite\" for citation\n+  references.\n+\n+\n+Environments\n+------------\n+\n+* A >>:dudir:`figure`<< may have an optional legend with arbitrary\n+  body elements: they are rendered in a \"sphinxlegend\" environment.\n+  The default definition issues \"\\small\", and ends with \"\\par\".\n+\n+  New in version 1.5.6: Formerly, the \"\\small\" was hardcoded in LaTeX\n+  writer and the ending \"\\par\" was lacking.\n+\n+* Environments associated with admonitions:\n+\n+  * \"sphinxnote\",\n+\n+  * \"sphinxhint\",\n+\n+  * \"sphinximportant\",\n+\n+  * \"sphinxtip\",\n+\n+  * \"sphinxwarning\",\n+\n+  * \"sphinxcaution\",\n+\n+  * \"sphinxattention\",\n+\n+  * \"sphinxdanger\",\n+\n+  * \"sphinxerror\".\n+\n+  They may be \"\\renewenvironment\" 'd individually, and must then be\n+  defined with one argument (it is the heading of the notice, for\n+  example \"Warning:\" for >>:dudir:`warning`<< directive, if English is\n+  the document language). Their default definitions use either the\n+  *sphinxheavybox* (for the last 5 ones) or the *sphinxlightbox*\n+  environments, configured to use the parameters (colours, border\n+  thickness) specific to each type, which can be set via\n+  \"'sphinxsetup'\" string.\n+\n+  Changed in version 1.5: Use of public environment names, separate\n+  customizability of the parameters, such as \"noteBorderColor\",\n+  \"noteborder\", \"warningBgColor\", \"warningBorderColor\",\n+  \"warningborder\", ...\n+\n+* The >>:dudir:`contents`<< directive (with \":local:\" option) and the\n+  >>:dudir:`topic`<< directive are implemented by environment\n+  \"sphinxShadowBox\".\n+\n+  New in version 1.4.2: Former code refactored into an environment\n+  allowing page breaks.\n+\n+  Changed in version 1.5: Options \"shadowsep\", \"shadowsize\",\n+  \"shadowrule\".\n+\n+* The literal blocks (via \"::\" or \"code-block\"), are implemented using\n+  \"sphinxVerbatim\" environment which is a wrapper of \"Verbatim\"\n+  environment from package \"fancyvrb.sty\". It adds the handling of the\n+  top caption and the wrapping of long lines, and a frame which allows\n+  pagebreaks. Inside tables the used environment is\n+  \"sphinxVerbatimintable\" (it does not draw a frame, but allows a\n+  caption).\n+\n+  Changed in version 1.5: \"Verbatim\" keeps exact same meaning as in\n+  \"fancyvrb.sty\" (also under the name \"OriginalVerbatim\");\n+  \"sphinxVerbatimintable\" is used inside tables.\n+\n+  New in version 1.5: Options \"verbatimwithframe\",\n+  \"verbatimwrapslines\", \"verbatimsep\", \"verbatimborder\".\n+\n+  New in version 1.6.6: Support for \":emphasize-lines:\" option\n+\n+  New in version 1.6.6: Easier customizability of the formatting via\n+  exposed to user LaTeX macros such as \"\\sphinxVerbatimHighlightLine\".\n+\n+* The bibliography uses \"sphinxthebibliography\" and the Python Module\n+  index as well as the general index both use \"sphinxtheindex\"; these\n+  environments are wrappers of the \"thebibliography\" and respectively\n+  \"theindex\" environments as provided by the document class (or\n+  packages).\n+\n+  Changed in version 1.5: Formerly, the original environments were\n+  modified by Sphinx.\n+\n+\n+Miscellany\n+----------\n+\n+* The section, subsection, ... headings are set using  *titlesec*'s\n+  \"\\titleformat\" command.\n+\n+* For the \"'manual'\" docclass, the chapter headings can be customized\n+  using *fncychap*'s commands \"\\ChNameVar\", \"\\ChNumVar\",\n+  \"\\ChTitleVar\". File \"sphinx.sty\" has custom re-definitions in case\n+  of *fncychap* option \"Bjarne\".\n+\n+  Changed in version 1.5: Formerly, use of *fncychap* with other\n+  styles than \"Bjarne\" was dysfunctional.\n+\n+Hint:\n+\n+  As an experimental feature, Sphinx can use user-defined template\n+  file for LaTeX source if you have a file named\n+  \"_templates/latex.tex_t\" in your project.Additional files\n+  \"longtable.tex_t\", \"tabulary.tex_t\" and \"tabular.tex_t\" can be added\n+  to \"_templates/\" to configure some aspects of table rendering (such\n+  as the caption position).\n+\n+  New in version 1.6: currently all template variables are unstable\n+  and undocumented.\ndiff --git a/_build/doc/man/index.txt b/_build/doc/man/index.txt\nnew file mode 100644\nindex 000000000..5e774e0b4\n--- /dev/null\n+++ b/_build/doc/man/index.txt\n@@ -0,0 +1,60 @@\n+Man Pages\n+*********\n+\n+These are the applications provided as part of Sphinx.\n+\n+\n+Core Applications\n+=================\n+\n+* sphinx-quickstart\n+\n+  * Synopsis\n+\n+  * Description\n+\n+  * Options\n+\n+  * See also\n+\n+* sphinx-build\n+\n+  * Synopsis\n+\n+  * Description\n+\n+  * Options\n+\n+  * Environment Variables\n+\n+  * Deprecation Warnings\n+\n+  * See also\n+\n+\n+Additional Applications\n+=======================\n+\n+* sphinx-apidoc\n+\n+  * Synopsis\n+\n+  * Description\n+\n+  * Options\n+\n+  * Environment\n+\n+  * See also\n+\n+* sphinx-autogen\n+\n+  * Synopsis\n+\n+  * Description\n+\n+  * Options\n+\n+  * Example\n+\n+  * See also\ndiff --git a/_build/doc/man/sphinx-apidoc.txt b/_build/doc/man/sphinx-apidoc.txt\nnew file mode 100644\nindex 000000000..01457c4c4\n--- /dev/null\n+++ b/_build/doc/man/sphinx-apidoc.txt\n@@ -0,0 +1,183 @@\n+sphinx-apidoc\n+*************\n+\n+\n+Synopsis\n+========\n+\n+**sphinx-apidoc** [*OPTIONS*] -o <*OUTPUT_PATH*> <*MODULE_PATH*>\n+[*EXCLUDE_PATTERN* ...]\n+\n+\n+Description\n+===========\n+\n+**sphinx-apidoc** is a tool for automatic generation of Sphinx sources\n+that, using the \"autodoc\" extension, document a whole package in the\n+style of other automatic API documentation tools.\n+\n+*MODULE_PATH* is the path to a Python package to document, and\n+*OUTPUT_PATH* is the directory where the generated sources are placed.\n+Any *EXCLUDE_PATTERN*s given are fnmatch-style file and/or directory\n+patterns that will be excluded from generation.\n+\n+Warning:\n+\n+  \"sphinx-apidoc\" generates source files that use \"sphinx.ext.autodoc\"\n+  to document all found modules.  If any modules have side effects on\n+  import, these will be executed by \"autodoc\" when \"sphinx-build\" is\n+  run.If you document scripts (as opposed to library modules), make\n+  sure their main routine is protected by a \"if __name__ ==\n+  '__main__'\" condition.\n+\n+\n+Options\n+=======\n+\n+-o <OUTPUT_PATH>\n+\n+   Directory to place the output files. If it does not exist, it is\n+   created.\n+\n+-q\n+\n+   Do not output anything on standard output, only write warnings and\n+   errors to standard error.\n+\n+-f, --force\n+\n+   Force overwriting of any existing generated files.\n+\n+-l, --follow-links\n+\n+   Follow symbolic links.\n+\n+-n, --dry-run\n+\n+   Do not create any files.\n+\n+-s <suffix>\n+\n+   Suffix for the source files generated. Defaults to \"rst\".\n+\n+-d <MAXDEPTH>\n+\n+   Maximum depth for the generated table of contents file.\n+\n+--tocfile\n+\n+   Filename for a table of contents file. Defaults to \"modules\".\n+\n+-T, --no-toc\n+\n+   Do not create a table of contents file. Ignored when \"--full\" is\n+   provided.\n+\n+-F, --full\n+\n+   Generate a full Sphinx project (\"conf.py\", \"Makefile\" etc.) using\n+   the same mechanism as **sphinx-quickstart**.\n+\n+-e, --separate\n+\n+   Put documentation for each module on its own page.\n+\n+   New in version 1.2.\n+\n+-E, --no-headings\n+\n+   Do not create headings for the modules/packages. This is useful,\n+   for example, when docstrings already contain headings.\n+\n+-P, --private\n+\n+   Include \"_private\" modules.\n+\n+   New in version 1.2.\n+\n+--implicit-namespaces\n+\n+   By default sphinx-apidoc processes sys.path searching for modules\n+   only. Python 3.3 introduced **PEP 420** implicit namespaces that\n+   allow module path structures such as \"foo/bar/module.py\" or\n+   \"foo/bar/baz/__init__.py\" (notice that \"bar\" and \"foo\" are\n+   namespaces, not modules).\n+\n+   Interpret paths recursively according to PEP-0420.\n+\n+-M, --module-first\n+\n+   Put module documentation before submodule documentation.\n+\n+These options are used when \"--full\" is specified:\n+\n+-a\n+\n+   Append module_path to sys.path.\n+\n+-H <project>\n+\n+   Sets the project name to put in generated files (see\n+   >>:confval:`project`<<).\n+\n+-A <author>\n+\n+   Sets the author name(s) to put in generated files (see\n+   >>:confval:`copyright`<<).\n+\n+-V <version>\n+\n+   Sets the project version to put in generated files (see\n+   >>:confval:`version`<<).\n+\n+-R <release>\n+\n+   Sets the project release to put in generated files (see\n+   >>:confval:`release`<<).\n+\n+-[ Project templating ]-\n+\n+New in version 2.2: Project templating options for sphinx-apidoc\n+\n+-t, --templatedir=TEMPLATEDIR\n+\n+   Template directory for template files.  You can modify the\n+   templates of sphinx project files generated by apidoc.  Following\n+   Jinja2 template files are allowed:\n+\n+   * \"module.rst_t\"\n+\n+   * \"package.rst_t\"\n+\n+   * \"toc.rst_t\"\n+\n+   * \"master_doc.rst_t\"\n+\n+   * \"conf.py_t\"\n+\n+   * \"Makefile_t\"\n+\n+   * \"Makefile.new_t\"\n+\n+   * \"make.bat_t\"\n+\n+   * \"make.bat.new_t\"\n+\n+   In detail, please refer the system template files Sphinx provides.\n+   (\"sphinx/templates/apidoc\" and \"sphinx/templates/quickstart\")\n+\n+\n+Environment\n+===========\n+\n+SPHINX_APIDOC_OPTIONS\n+\n+   A comma-separated list of option to append to generated\n+   \"automodule\" directives. Defaults to \"members,undoc-members,show-\n+   inheritance\".\n+\n+\n+See also\n+========\n+\n+*sphinx-build(1)*, *sphinx-autogen(1)*\ndiff --git a/_build/doc/man/sphinx-autogen.txt b/_build/doc/man/sphinx-autogen.txt\nnew file mode 100644\nindex 000000000..493e6f415\n--- /dev/null\n+++ b/_build/doc/man/sphinx-autogen.txt\n@@ -0,0 +1,92 @@\n+sphinx-autogen\n+**************\n+\n+\n+Synopsis\n+========\n+\n+**sphinx-autogen** [*options*] <sourcefile> ...\n+\n+\n+Description\n+===========\n+\n+**sphinx-autogen** is a tool for automatic generation of Sphinx\n+sources that, using the \"autodoc\" extension, document items included\n+in \"autosummary\" listing(s).\n+\n+*sourcefile* is the path to one or more reStructuredText documents\n+containing \"autosummary\" entries with the \":toctree::\" option set.\n+*sourcefile* can be an \"fnmatch\"-style pattern.\n+\n+\n+Options\n+=======\n+\n+-o <outputdir>\n+\n+   Directory to place the output file. If it does not exist, it is\n+   created. Defaults to the value passed to the \":toctree:\" option.\n+\n+-s <suffix>, --suffix <suffix>\n+\n+   Default suffix to use for generated files. Defaults to \"rst\".\n+\n+-t <templates>, --templates <templates>\n+\n+   Custom template directory. Defaults to \"None\".\n+\n+-i, --imported-members\n+\n+   Document imported members.\n+\n+\n+Example\n+=======\n+\n+Given the following directory structure:\n+\n+   docs\n+   \u251c\u2500\u2500 index.rst\n+   \u2514\u2500\u2500 ...\n+   foobar\n+   \u251c\u2500\u2500 foo\n+   \u2502   \u2514\u2500\u2500 __init__.py\n+   \u2514\u2500\u2500 bar\n+       \u251c\u2500\u2500 __init__.py\n+       \u2514\u2500\u2500 baz\n+           \u2514\u2500\u2500 __init__.py\n+\n+and assuming \"docs/index.rst\" contained the following:\n+\n+   Modules\n+   =======\n+\n+   .. autosummary::\n+      :toctree: modules\n+\n+      foobar.foo\n+      foobar.bar\n+      foobar.bar.baz\n+\n+If you run the following:\n+\n+   $ PYTHONPATH=. sphinx-autogen docs/index.rst\n+\n+then the following stub files will be created in \"docs\":\n+\n+   docs\n+   \u251c\u2500\u2500 index.rst\n+   \u2514\u2500\u2500 modules\n+       \u251c\u2500\u2500 foobar.bar.rst\n+       \u251c\u2500\u2500 foobar.bar.baz.rst\n+       \u2514\u2500\u2500 foobar.foo.rst\n+\n+and each of those files will contain a \"autodoc\" directive and some\n+other information.\n+\n+\n+See also\n+========\n+\n+*sphinx-build(1)*, *sphinx-apidoc(1)*\ndiff --git a/_build/doc/man/sphinx-build.txt b/_build/doc/man/sphinx-build.txt\nnew file mode 100644\nindex 000000000..32996197a\n--- /dev/null\n+++ b/_build/doc/man/sphinx-build.txt\n@@ -0,0 +1,332 @@\n+sphinx-build\n+************\n+\n+\n+Synopsis\n+========\n+\n+**sphinx-build** [*options*] <*sourcedir*> <*outputdir*> [*filenames*\n+...]\n+\n+\n+Description\n+===========\n+\n+**sphinx-build** generates documentation from the files in\n+\"<sourcedir>\" and places it in the \"<outputdir>\".\n+\n+**sphinx-build** looks for \"<sourcedir>/conf.py\" for the configuration\n+settings.  *sphinx-quickstart(1)* may be used to generate template\n+files, including \"conf.py\".\n+\n+**sphinx-build** can create documentation in different formats.  A\n+format is selected by specifying the builder name on the command line;\n+it defaults to HTML.  Builders can also perform other tasks related to\n+documentation processing.\n+\n+By default, everything that is outdated is built.  Output only for\n+selected files can be built by specifying individual filenames.\n+\n+For a list of available options, refer to \"sphinx-build -b\".\n+\n+\n+Options\n+=======\n+\n+-b buildername\n+\n+   The most important option: it selects a builder.  The most common\n+   builders are:\n+\n+   **html**\n+      Build HTML pages.  This is the default builder.\n+\n+   **dirhtml**\n+      Build HTML pages, but with a single directory per document.\n+      Makes for prettier URLs (no \".html\") if served from a webserver.\n+\n+   **singlehtml**\n+      Build a single HTML with the whole content.\n+\n+   **htmlhelp**, **qthelp**, **devhelp**, **epub**\n+      Build HTML files with additional information for building a\n+      documentation collection in one of these formats.\n+\n+   **applehelp**\n+      Build an Apple Help Book.  Requires **hiutil** and **codesign**,\n+      which are not Open Source and presently only available on Mac OS\n+      X 10.6 and higher.\n+\n+   **latex**\n+      Build LaTeX sources that can be compiled to a PDF document using\n+      **pdflatex**.\n+\n+   **man**\n+      Build manual pages in groff format for UNIX systems.\n+\n+   **texinfo**\n+      Build Texinfo files that can be processed into Info files using\n+      **makeinfo**.\n+\n+   **text**\n+      Build plain text files.\n+\n+   **gettext**\n+      Build gettext-style message catalogs (\".pot\" files).\n+\n+   **doctest**\n+      Run all doctests in the documentation, if the \"doctest\"\n+      extension is enabled.\n+\n+   **linkcheck**\n+      Check the integrity of all external links.\n+\n+   **xml**\n+      Build Docutils-native XML files.\n+\n+   **pseudoxml**\n+      Build compact pretty-printed \"pseudo-XML\" files displaying the\n+      internal structure of the intermediate document trees.\n+\n+   See */usage/builders/index* for a list of all builders shipped with\n+   Sphinx.  Extensions can add their own builders.\n+\n+-M buildername\n+\n+   Alternative to \"-b\". Uses the Sphinx **make_mode** module, which\n+   provides the same build functionality as a default Makefile or\n+   Make.bat. In addition to all Sphinx */usage/builders/index*, the\n+   following build pipelines are available:\n+\n+   **latexpdf**\n+      Build LaTeX files and run them through **pdflatex**, or as per\n+      >>:confval:`latex_engine`<< setting. If >>:confval:`language`<<\n+      is set to \"'ja'\", will use automatically the **platex/dvipdfmx**\n+      latex to PDF pipeline.\n+\n+   **info**\n+      Build Texinfo files and run them through **makeinfo**.\n+\n+   Important:\n+\n+     Sphinx only recognizes the \"-M\" option if it is placed first.\n+\n+   New in version 1.2.1.\n+\n+-a\n+\n+   If given, always write all output files. The default is to only\n+   write output files for new and changed source files. (This may not\n+   apply to all builders.)\n+\n+-E\n+\n+   Don't use a saved *environment* (the structure caching all cross-\n+   references), but rebuild it completely.  The default is to only\n+   read and parse source files that are new or have changed since the\n+   last run.\n+\n+-t tag\n+\n+   Define the tag *tag*.  This is relevant for \"only\" directives that\n+   only include their content if this tag is set.\n+\n+   New in version 0.6.\n+\n+-d path\n+\n+   Since Sphinx has to read and parse all source files before it can\n+   write an output file, the parsed source files are cached as\n+   \"doctree pickles\". Normally, these files are put in a directory\n+   called \".doctrees\" under the build directory; with this option you\n+   can select a different cache directory (the doctrees can be shared\n+   between all builders).\n+\n+-j N\n+\n+   Distribute the build over *N* processes in parallel, to make\n+   building on multiprocessor machines more effective.  Note that not\n+   all parts and not all builders of Sphinx can be parallelized.  If\n+   \"auto\" argument is given, Sphinx uses the number of CPUs as *N*.\n+\n+   New in version 1.2: This option should be considered\n+   *experimental*.\n+\n+   Changed in version 1.7: Support \"auto\" argument.\n+\n+-c path\n+\n+   Don't look for the \"conf.py\" in the source directory, but use the\n+   given configuration directory instead.  Note that various other\n+   files and paths given by configuration values are expected to be\n+   relative to the configuration directory, so they will have to be\n+   present at this location too.\n+\n+   New in version 0.3.\n+\n+-C\n+\n+   Don't look for a configuration file; only take options via the \"-D\"\n+   option.\n+\n+   New in version 0.5.\n+\n+-D setting=value\n+\n+   Override a configuration value set in the \"conf.py\" file.  The\n+   value must be a number, string, list or dictionary value.\n+\n+   For lists, you can separate elements with a comma like this: \"-D\n+   html_theme_path=path1,path2\".\n+\n+   For dictionary values, supply the setting name and key like this:\n+   \"-D latex_elements.docclass=scrartcl\".\n+\n+   For boolean values, use \"0\" or \"1\" as the value.\n+\n+   Changed in version 0.6: The value can now be a dictionary value.\n+\n+   Changed in version 1.3: The value can now also be a list value.\n+\n+-A name=value\n+\n+   Make the *name* assigned to *value* in the HTML templates.\n+\n+   New in version 0.5.\n+\n+-n\n+\n+   Run in nit-picky mode.  Currently, this generates warnings for all\n+   missing references.  See the config value\n+   >>:confval:`nitpick_ignore`<< for a way to exclude some references\n+   as \"known missing\".\n+\n+-N\n+\n+   Do not emit colored output.\n+\n+-v\n+\n+   Increase verbosity (loglevel).  This option can be given up to\n+   three times to get more debug logging output.  It implies \"-T\".\n+\n+   New in version 1.2.\n+\n+-q\n+\n+   Do not output anything on standard output, only write warnings and\n+   errors to standard error.\n+\n+-Q\n+\n+   Do not output anything on standard output, also suppress warnings.\n+   Only errors are written to standard error.\n+\n+-w file\n+\n+   Write warnings (and errors) to the given file, in addition to\n+   standard error.\n+\n+-W\n+\n+   Turn warnings into errors.  This means that the build stops at the\n+   first warning and \"sphinx-build\" exits with exit status 1.\n+\n+--keep-going\n+\n+   With -W option, keep going processing when getting warnings to the\n+   end of build, and \"sphinx-build\" exits with exit status 1.\n+\n+   New in version 1.8.\n+\n+-T\n+\n+   Display the full traceback when an unhandled exception occurs.\n+   Otherwise, only a summary is displayed and the traceback\n+   information is saved to a file for further analysis.\n+\n+   New in version 1.2.\n+\n+-P\n+\n+   (Useful for debugging only.)  Run the Python debugger, \"pdb\", if an\n+   unhandled exception occurs while building.\n+\n+-h, --help, --version\n+\n+   Display usage summary or Sphinx version.\n+\n+   New in version 1.2.\n+\n+You can also give one or more filenames on the command line after the\n+source and build directories. Sphinx will then try to build only these\n+output files (and their dependencies).\n+\n+\n+Environment Variables\n+=====================\n+\n+The **sphinx-build** refers following environment variables:\n+\n+MAKE\n+\n+   A path to make command.  A command name is also allowed. **sphinx-\n+   build** uses it to invoke sub-build process on make-mode.\n+\n+-[ Makefile Options ]-\n+\n+The \"Makefile\" and \"make.bat\" files created by **sphinx-quickstart**\n+usually run **sphinx-build** only with the \"-b\" and \"-d\" options.\n+However, they support the following variables to customize behavior:\n+\n+PAPER\n+\n+   This sets the \"'papersize'\" key of >>:confval:`latex_elements`<<:\n+   i.e. \"PAPER=a4\" sets it to \"'a4paper'\" and \"PAPER=letter\" to\n+   \"'letterpaper'\".\n+\n+   Note:\n+\n+     Usage of this environment variable got broken at Sphinx 1.5 as\n+     \"a4\" or \"letter\" ended up as option to LaTeX document in place of\n+     the needed \"a4paper\", resp. \"letterpaper\".  Fixed at 1.7.7.\n+\n+SPHINXBUILD\n+\n+   The command to use instead of \"sphinx-build\".\n+\n+BUILDDIR\n+\n+   The build directory to use instead of the one chosen in **sphinx-\n+   quickstart**.\n+\n+SPHINXOPTS\n+\n+   Additional options for **sphinx-build**. These options can also be\n+   set via the shortcut variable **O** (capital 'o').\n+\n+\n+Deprecation Warnings\n+====================\n+\n+If any deprecation warning like \"RemovedInSphinxXXXWarning\" are\n+displayed when building a user's document, some Sphinx extension is\n+using deprecated features. In that case, please report it to author of\n+the extension.\n+\n+To disable the deprecation warnings, please set \"PYTHONWARNINGS=\"\n+environment variable to your environment. For example:\n+\n+* \"PYTHONWARNINGS= make html\" (Linux/Mac)\n+\n+* \"export PYTHONWARNINGS=\" and do \"make html\" (Linux/Mac)\n+\n+* \"set PYTHONWARNINGS=\" and do \"make html\" (Windows)\n+\n+* modify your Makefile/make.bat and set the environment variable\n+\n+\n+See also\n+========\n+\n+*sphinx-quickstart(1)*\ndiff --git a/_build/doc/man/sphinx-quickstart.txt b/_build/doc/man/sphinx-quickstart.txt\nnew file mode 100644\nindex 000000000..32b51d489\n--- /dev/null\n+++ b/_build/doc/man/sphinx-quickstart.txt\n@@ -0,0 +1,174 @@\n+sphinx-quickstart\n+*****************\n+\n+\n+Synopsis\n+========\n+\n+**sphinx-quickstart**\n+\n+\n+Description\n+===========\n+\n+**sphinx-quickstart** is an interactive tool that asks some questions\n+about your project and then generates a complete documentation\n+directory and sample Makefile to be used with *sphinx-build(1)*.\n+\n+\n+Options\n+=======\n+\n+-q, --quiet\n+\n+   Quiet mode that skips the interactive wizard for specifying\n+   options. This option requires *-p*, *-a* and *-v* options.\n+\n+-h, --help, --version\n+\n+   Display usage summary or Sphinx version.\n+\n+-[ Structure Options ]-\n+\n+--sep\n+\n+   If specified, separate source and build directories.\n+\n+--no-sep\n+\n+   If specified, create build directroy under source directroy.\n+\n+--dot=DOT\n+\n+   Inside the root directory, two more directories will be created;\n+   \"_templates\" for custom HTML templates and \"_static\" for custom\n+   stylesheets and other static files. You can enter another prefix\n+   (such as \".\") to replace the underscore.\n+\n+-[ Project Basic Options ]-\n+\n+-p PROJECT, --project=PROJECT\n+\n+   Project name will be set. (see >>:confval:`project`<<).\n+\n+-a AUTHOR, --author=AUTHOR\n+\n+   Author names. (see >>:confval:`copyright`<<).\n+\n+-v VERSION\n+\n+   Version of project. (see >>:confval:`version`<<).\n+\n+-r RELEASE, --release=RELEASE\n+\n+   Release of project. (see >>:confval:`release`<<).\n+\n+-l LANGUAGE, --language=LANGUAGE\n+\n+   Document language. (see >>:confval:`language`<<).\n+\n+--suffix=SUFFIX\n+\n+   Source file suffix. (see >>:confval:`source_suffix`<<).\n+\n+--master=MASTER\n+\n+   Master document name. (see >>:confval:`master_doc`<<).\n+\n+-[ Extension Options ]-\n+\n+--ext-autodoc\n+\n+   Enable *sphinx.ext.autodoc* extension.\n+\n+--ext-doctest\n+\n+   Enable *sphinx.ext.doctest* extension.\n+\n+--ext-intersphinx\n+\n+   Enable *sphinx.ext.intersphinx* extension.\n+\n+--ext-todo\n+\n+   Enable *sphinx.ext.todo* extension.\n+\n+--ext-coverage\n+\n+   Enable *sphinx.ext.coverage* extension.\n+\n+--ext-imgmath\n+\n+   Enable *sphinx.ext.imgmath* extension.\n+\n+--ext-mathjax\n+\n+   Enable *sphinx.ext.mathjax* extension.\n+\n+--ext-ifconfig\n+\n+   Enable *sphinx.ext.ifconfig* extension.\n+\n+--ext-viewcode\n+\n+   Enable *sphinx.ext.viewcode* extension.\n+\n+--ext-githubpages\n+\n+   Enable *sphinx.ext.githubpages* extension.\n+\n+--extensions=EXTENSIONS\n+\n+   Enable arbitrary extensions.\n+\n+-[ Makefile and Batchfile Creation Options ]-\n+\n+--use-make-mode (-m), --no-use-make-mode (-M)\n+\n+   \"Makefile/make.bat\" uses (or doesn't use) make-mode. Default is\n+   \"use\", which generates a more concise \"Makefile/make.bat\".\n+\n+   Changed in version 1.5: make-mode is default.\n+\n+--makefile, --no-makefile\n+\n+   Create (or not create) makefile.\n+\n+--batchfile, --no-batchfile\n+\n+   Create (or not create) batchfile\n+\n+-[ Project templating ]-\n+\n+New in version 1.5: Project templating options for sphinx-quickstart\n+\n+-t, --templatedir=TEMPLATEDIR\n+\n+   Template directory for template files.  You can modify the\n+   templates of sphinx project files generated by quickstart.\n+   Following Jinja2 template files are allowed:\n+\n+   * \"master_doc.rst_t\"\n+\n+   * \"conf.py_t\"\n+\n+   * \"Makefile_t\"\n+\n+   * \"Makefile.new_t\"\n+\n+   * \"make.bat_t\"\n+\n+   * \"make.bat.new_t\"\n+\n+   In detail, please refer the system template files Sphinx provides.\n+   (\"sphinx/templates/quickstart\")\n+\n+-d NAME=VALUE\n+\n+   Define a template variable\n+\n+\n+See also\n+========\n+\n+*sphinx-build(1)*\ndiff --git a/_build/doc/templating.txt b/_build/doc/templating.txt\nnew file mode 100644\nindex 000000000..2846e0f27\n--- /dev/null\n+++ b/_build/doc/templating.txt\n@@ -0,0 +1,449 @@\n+Templating\n+**********\n+\n+Sphinx uses the Jinja templating engine for its HTML templates.  Jinja\n+is a text-based engine, inspired by Django templates, so anyone having\n+used Django will already be familiar with it.  It also has excellent\n+documentation for those who need to make themselves familiar with it.\n+\n+\n+Do I need to use Sphinx's templates to produce HTML?\n+====================================================\n+\n+No.  You have several other options:\n+\n+* You can write a \"TemplateBridge\" subclass that calls your template\n+  engine of choice, and set the >>:confval:`template_bridge`<<\n+  configuration value accordingly.\n+\n+* You can write a custom builder that derives from\n+  \"StandaloneHTMLBuilder\" and calls your template engine of choice.\n+\n+* You can use the \"PickleHTMLBuilder\" that produces pickle files with\n+  the page contents, and postprocess them using a custom tool, or use\n+  them in your Web application.\n+\n+\n+Jinja/Sphinx Templating Primer\n+==============================\n+\n+The default templating language in Sphinx is Jinja.  It's\n+Django/Smarty inspired and easy to understand.  The most important\n+concept in Jinja is *template inheritance*, which means that you can\n+overwrite only specific blocks within a template, customizing it while\n+also keeping the changes at a minimum.\n+\n+To customize the output of your documentation you can override all the\n+templates (both the layout templates and the child templates) by\n+adding files with the same name as the original filename into the\n+template directory of the structure the Sphinx quickstart generated\n+for you.\n+\n+Sphinx will look for templates in the folders of\n+>>:confval:`templates_path`<< first, and if it can't find the template\n+it's looking for there, it falls back to the selected theme's\n+templates.\n+\n+A template contains **variables**, which are replaced with values when\n+the template is evaluated, **tags**, which control the logic of the\n+template and **blocks** which are used for template inheritance.\n+\n+Sphinx's *basic* theme provides base templates with a couple of blocks\n+it will fill with data.  These are located in the \"themes/basic\"\n+subdirectory of the Sphinx installation directory, and used by all\n+builtin Sphinx themes. Templates with the same name in the\n+>>:confval:`templates_path`<< override templates supplied by the\n+selected theme.\n+\n+For example, to add a new link to the template area containing related\n+links all you have to do is to add a new template called \"layout.html\"\n+with the following contents:\n+\n+   {% extends \"!layout.html\" %}\n+   {% block rootrellink %}\n+       <li><a href=\"https://project.invalid/\">Project Homepage</a> &raquo;</li>\n+       {{ super() }}\n+   {% endblock %}\n+\n+By prefixing the name of the overridden template with an exclamation\n+mark, Sphinx will load the layout template from the underlying HTML\n+theme.\n+\n+Important:\n+\n+  If you override a block, call \"{{ super() }}\" somewhere to render\n+  the block's original content in the extended template -- unless you\n+  don't want that content to show up.\n+\n+\n+Working with the builtin templates\n+==================================\n+\n+The builtin **basic** theme supplies the templates that all builtin\n+Sphinx themes are based on.  It has the following elements you can\n+override or use:\n+\n+\n+Blocks\n+------\n+\n+The following blocks exist in the \"layout.html\" template:\n+\n+\"doctype\"\n+   The doctype of the output format.  By default this is XHTML 1.0\n+   Transitional as this is the closest to what Sphinx and Docutils\n+   generate and it's a good idea not to change it unless you want to\n+   switch to HTML 5 or a different but compatible XHTML doctype.\n+\n+\"linktags\"\n+   This block adds a couple of \"<link>\" tags to the head section of\n+   the template.\n+\n+\"extrahead\"\n+   This block is empty by default and can be used to add extra\n+   contents into the \"<head>\" tag of the generated HTML file.  This is\n+   the right place to add references to JavaScript or extra CSS files.\n+\n+\"relbar1\", \"relbar2\"\n+   This block contains the *relation bar*, the list of related links\n+   (the parent documents on the left, and the links to index, modules\n+   etc. on the right).  \"relbar1\" appears before the document,\n+   \"relbar2\" after the document.  By default, both blocks are filled;\n+   to show the relbar only before the document, you would override\n+   *relbar2* like this:\n+\n+      {% block relbar2 %}{% endblock %}\n+\n+\"rootrellink\", \"relbaritems\"\n+   Inside the relbar there are three sections: The \"rootrellink\", the\n+   links from the documentation and the custom \"relbaritems\".  The\n+   \"rootrellink\" is a block that by default contains a list item\n+   pointing to the master document by default, the \"relbaritems\" is an\n+   empty block.  If you override them to add extra links into the bar\n+   make sure that they are list items and end with the \"reldelim1\".\n+\n+\"document\"\n+   The contents of the document itself.  It contains the block \"body\"\n+   where the individual content is put by subtemplates like\n+   \"page.html\".\n+\n+   Note:\n+\n+     In order for the built-in JavaScript search to show a page\n+     preview on the results page, the document or body content should\n+     be wrapped in an HTML element containing the \"role=\"main\"\"\n+     attribute. For example:\n+\n+        <div role=\"main\">\n+          {% block document %}{% endblock %}\n+        </div>\n+\n+\"sidebar1\", \"sidebar2\"\n+   A possible location for a sidebar.  \"sidebar1\" appears before the\n+   document and is empty by default, \"sidebar2\" after the document and\n+   contains the default sidebar.  If you want to swap the sidebar\n+   location override this and call the \"sidebar\" helper:\n+\n+      {% block sidebar1 %}{{ sidebar() }}{% endblock %}\n+      {% block sidebar2 %}{% endblock %}\n+\n+   (The \"sidebar2\" location for the sidebar is needed by the\n+   \"sphinxdoc.css\" stylesheet, for example.)\n+\n+\"sidebarlogo\"\n+   The logo location within the sidebar.  Override this if you want to\n+   place some content at the top of the sidebar.\n+\n+\"footer\"\n+   The block for the footer div.  If you want a custom footer or\n+   markup before or after it, override this one.\n+\n+The following four blocks are *only* used for pages that do not have\n+assigned a list of custom sidebars in the >>:confval:`html_sidebars`<<\n+config value.  Their use is deprecated in favor of separate sidebar\n+templates, which can be included via >>:confval:`html_sidebars`<<.\n+\n+\"sidebartoc\"\n+   The table of contents within the sidebar.\n+\n+   Deprecated since version 1.0.\n+\n+\"sidebarrel\"\n+   The relation links (previous, next document) within the sidebar.\n+\n+   Deprecated since version 1.0.\n+\n+\"sidebarsourcelink\"\n+   The \"Show source\" link within the sidebar (normally only shown if\n+   this is enabled by >>:confval:`html_show_sourcelink`<<).\n+\n+   Deprecated since version 1.0.\n+\n+\"sidebarsearch\"\n+   The search box within the sidebar.  Override this if you want to\n+   place some content at the bottom of the sidebar.\n+\n+   Deprecated since version 1.0.\n+\n+\n+Configuration Variables\n+-----------------------\n+\n+Inside templates you can set a couple of variables used by the layout\n+template using the \"{% set %}\" tag:\n+\n+reldelim1\n+\n+   The delimiter for the items on the left side of the related bar.\n+   This defaults to \"' &raquo;'\" Each item in the related bar ends\n+   with the value of this variable.\n+\n+reldelim2\n+\n+   The delimiter for the items on the right side of the related bar.\n+   This defaults to \"' |'\".  Each item except of the last one in the\n+   related bar ends with the value of this variable.\n+\n+Overriding works like this:\n+\n+   {% extends \"!layout.html\" %}\n+   {% set reldelim1 = ' &gt;' %}\n+\n+script_files\n+\n+   Add additional script files here, like this:\n+\n+      {% set script_files = script_files + [\"_static/myscript.js\"] %}\n+\n+   Deprecated since version 1.8.0: Please use \".Sphinx.add_js_file()\"\n+   instead.\n+\n+\n+Helper Functions\n+----------------\n+\n+Sphinx provides various Jinja functions as helpers in the template.\n+You can use them to generate links or output multiply used elements.\n+\n+pathto(document)\n+\n+   Return the path to a Sphinx document as a URL.  Use this to refer\n+   to built documents.\n+\n+pathto(file, 1)\n+\n+   Return the path to a *file* which is a filename relative to the\n+   root of the generated output.  Use this to refer to static files.\n+\n+hasdoc(document)\n+\n+   Check if a document with the name *document* exists.\n+\n+sidebar()\n+\n+   Return the rendered sidebar.\n+\n+relbar()\n+\n+   Return the rendered relation bar.\n+\n+warning(message)\n+\n+   Emit a warning message.\n+\n+\n+Global Variables\n+----------------\n+\n+These global variables are available in every template and are safe to\n+use. There are more, but most of them are an implementation detail and\n+might change in the future.\n+\n+builder\n+\n+   The name of the builder (e.g. \"html\" or \"htmlhelp\").\n+\n+copyright\n+\n+   The value of >>:confval:`copyright`<<.\n+\n+docstitle\n+\n+   The title of the documentation (the value of\n+   >>:confval:`html_title`<<), except when the \"single-file\" builder\n+   is used, when it is set to \"None\".\n+\n+embedded\n+\n+   True if the built HTML is meant to be embedded in some viewing\n+   application that handles navigation, not the web browser, such as\n+   for HTML help or Qt help formats.  In this case, the sidebar is not\n+   included.\n+\n+favicon\n+\n+   The path to the HTML favicon in the static path, or \"''\".\n+\n+file_suffix\n+\n+   The value of the builder's \"out_suffix\" attribute, i.e. the file\n+   name extension that the output files will get.  For a standard HTML\n+   builder, this is usually \".html\".\n+\n+has_source\n+\n+   True if the reST document sources are copied (if\n+   >>:confval:`html_copy_source`<< is \"True\").\n+\n+language\n+\n+   The value of >>:confval:`language`<<.\n+\n+last_updated\n+\n+   The build date.\n+\n+logo\n+\n+   The path to the HTML logo image in the static path, or \"''\".\n+\n+master_doc\n+\n+   The value of >>:confval:`master_doc`<<, for usage with \"pathto()\".\n+\n+pagename\n+\n+   The \"page name\" of the current file, i.e. either the document name\n+   if the file is generated from a reST source, or the equivalent\n+   hierarchical name relative to the output directory\n+   (\"[directory/]filename_without_extension\").\n+\n+project\n+\n+   The value of >>:confval:`project`<<.\n+\n+release\n+\n+   The value of >>:confval:`release`<<.\n+\n+rellinks\n+\n+   A list of links to put at the left side of the relbar, next to\n+   \"next\" and \"prev\".  This usually contains links to the general\n+   index and other indices, such as the Python module index.  If you\n+   add something yourself, it must be a tuple \"(pagename, link title,\n+   accesskey, link text)\".\n+\n+shorttitle\n+\n+   The value of >>:confval:`html_short_title`<<.\n+\n+show_source\n+\n+   True if >>:confval:`html_show_sourcelink`<< is \"True\".\n+\n+sphinx_version\n+\n+   The version of Sphinx used to build.\n+\n+style\n+\n+   The name of the main stylesheet, as given by the theme or\n+   >>:confval:`html_style`<<.\n+\n+title\n+\n+   The title of the current document, as used in the \"<title>\" tag.\n+\n+use_opensearch\n+\n+   The value of >>:confval:`html_use_opensearch`<<.\n+\n+version\n+\n+   The value of >>:confval:`version`<<.\n+\n+In addition to these values, there are also all **theme options**\n+available (prefixed by \"theme_\"), as well as the values given by the\n+user in >>:confval:`html_context`<<.\n+\n+In documents that are created from source files (as opposed to\n+automatically-generated files like the module index, or documents that\n+already are in HTML form), these variables are also available:\n+\n+body\n+\n+   A string containing the content of the page in HTML form as\n+   produced by the HTML builder, before the theme is applied.\n+\n+display_toc\n+\n+   A boolean that is True if the toc contains more than one entry.\n+\n+meta\n+\n+   Document metadata (a dictionary), see File-wide metadata.\n+\n+metatags\n+\n+   A string containing the page's HTML >>:dudir:`meta`<< tags.\n+\n+next\n+\n+   The next document for the navigation.  This variable is either\n+   false or has two attributes *link* and *title*.  The title contains\n+   HTML markup.  For example, to generate a link to the next page, you\n+   can use this snippet:\n+\n+      {% if next %}\n+      <a href=\"{{ next.link|e }}\">{{ next.title }}</a>\n+      {% endif %}\n+\n+page_source_suffix\n+\n+   The suffix of the file that was rendered. Since we support a list\n+   of >>:confval:`source_suffix`<<, this will allow you to properly\n+   link to the original source file.\n+\n+parents\n+\n+   A list of parent documents for navigation, structured like the\n+   \"next\" item.\n+\n+prev\n+\n+   Like \"next\", but for the previous page.\n+\n+sourcename\n+\n+   The name of the copied source file for the current document.  This\n+   is only nonempty if the >>:confval:`html_copy_source`<< value is\n+   \"True\". This has empty value on creating automatically-generated\n+   files.\n+\n+toc\n+\n+   The local table of contents for the current page, rendered as HTML\n+   bullet lists.\n+\n+toctree\n+\n+   A callable yielding the global TOC tree containing the current\n+   page, rendered as HTML bullet lists.  Optional keyword arguments:\n+\n+   \"collapse\"\n+      If true, all TOC entries that are not ancestors of the current\n+      page are collapsed. \"True\" by default.\n+\n+   \"maxdepth\"\n+      The maximum depth of the tree. Set it to \"-1\" to allow unlimited\n+      depth. Defaults to the max depth selected in the toctree\n+      directive.\n+\n+   \"titles_only\"\n+      If true, put only top-level document titles in the tree. \"False\"\n+      by default.\n+\n+   \"includehidden\"\n+      If true, the ToC tree will also contain hidden entries. \"False\"\n+      by default.\ndiff --git a/_build/doc/usage/advanced/intl.txt b/_build/doc/usage/advanced/intl.txt\nnew file mode 100644\nindex 000000000..11f4e83f2\n--- /dev/null\n+++ b/_build/doc/usage/advanced/intl.txt\n@@ -0,0 +1,306 @@\n+Internationalization\n+********************\n+\n+New in version 1.1.\n+\n+Complementary to translations provided for Sphinx-generated messages\n+such as navigation bars, Sphinx provides mechanisms facilitating the\n+translation of *documents*.  See the Options for internationalization\n+for details on configuration.\n+\n+   [image]Workflow visualization of translations in Sphinx.  (The\n+   figure is created by plantuml.)\n+\n+* Sphinx internationalization details\n+\n+* Translating with sphinx-intl\n+\n+  * Quick guide\n+\n+  * Translating\n+\n+  * Update your po files by new pot files\n+\n+* Using Transifex service for team translation\n+\n+* Contributing to Sphinx reference translation\n+\n+\n+Sphinx internationalization details\n+===================================\n+\n+**gettext** [1] is an established standard for internationalization\n+and localization.  It naively maps messages in a program to a\n+translated string. Sphinx uses these facilities to translate whole\n+documents.\n+\n+Initially project maintainers have to collect all translatable strings\n+(also referred to as *messages*) to make them known to translators.\n+Sphinx extracts these through invocation of \"sphinx-build -b gettext\".\n+\n+Every single element in the doctree will end up in a single message\n+which results in lists being equally split into different chunks while\n+large paragraphs will remain as coarsely-grained as they were in the\n+original document.  This grants seamless document updates while still\n+providing a little bit of context for translators in free-text\n+passages.  It is the maintainer's task to split up paragraphs which\n+are too large as there is no sane automated way to do that.\n+\n+After Sphinx successfully ran the \"MessageCatalogBuilder\" you will\n+find a collection of \".pot\" files in your output directory.  These are\n+**catalog templates** and contain messages in your original language\n+*only*.\n+\n+They can be delivered to translators which will transform them to\n+\".po\" files --- so called **message catalogs** --- containing a\n+mapping from the original messages to foreign-language strings.\n+\n+*gettext* compiles them into a binary format known as **binary\n+catalogs** through **msgfmt** for efficiency reasons.  If you make\n+these files discoverable with >>:confval:`locale_dirs`<< for your\n+>>:confval:`language`<<, Sphinx will pick them up automatically.\n+\n+An example: you have a document \"usage.rst\" in your Sphinx project.\n+The *gettext* builder will put its messages into \"usage.pot\".  Imagine\n+you have Spanish translations [2] stored in \"usage.po\" --- for your\n+builds to be translated you need to follow these instructions:\n+\n+* Compile your message catalog to a locale directory, say \"locale\", so\n+  it ends up in \"./locale/es/LC_MESSAGES/usage.mo\" in your source\n+  directory (where \"es\" is the language code for Spanish.)\n+\n+     msgfmt \"usage.po\" -o \"locale/es/LC_MESSAGES/usage.mo\"\n+\n+* Set >>:confval:`locale_dirs`<< to \"[\"locale/\"]\".\n+\n+* Set >>:confval:`language`<< to \"es\" (also possible via \"-D\").\n+\n+* Run your desired build.\n+\n+\n+Translating with sphinx-intl\n+============================\n+\n+\n+Quick guide\n+-----------\n+\n+sphinx-intl is a useful tool to work with Sphinx translation flow.\n+This section describe an easy way to translate with *sphinx-intl*.\n+\n+1. Install sphinx-intl.\n+\n+      $ pip install sphinx-intl\n+\n+2. Add configurations to \"conf.py\".\n+\n+      locale_dirs = ['locale/']   # path is example but recommended.\n+      gettext_compact = False     # optional.\n+\n+   This case-study assumes that BUILDDIR is set to \"_build\",\n+   >>:confval:`locale_dirs`<< is set to \"locale/\" and\n+   >>:confval:`gettext_compact`<< is set to \"False\" (the Sphinx\n+   document is already configured as such).\n+\n+3. Extract translatable messages into pot files.\n+\n+      $ make gettext\n+\n+   The generated pot files will be placed in the \"_build/gettext\"\n+   directory.\n+\n+4. Generate po files.\n+\n+   We'll use the pot files generated in the above step.\n+\n+      $ sphinx-intl update -p _build/gettext -l de -l ja\n+\n+   Once completed, the generated po files will be placed in the below\n+   directories:\n+\n+   * \"./locale/de/LC_MESSAGES/\"\n+\n+   * \"./locale/ja/LC_MESSAGES/\"\n+\n+5. Translate po files.\n+\n+   AS noted above, these are located in the\n+   \"./locale/<lang>/LC_MESSAGES\" directory.  An example of one such\n+   file, from Sphinx, \"builders.po\", is given below.\n+\n+      # a5600c3d2e3d48fc8c261ea0284db79b\n+      #: ../../builders.rst:4\n+      msgid \"Available builders\"\n+      msgstr \"<FILL HERE BY TARGET LANGUAGE>\"\n+\n+   Another case, msgid is multi-line text and contains\n+   reStructuredText syntax:\n+\n+      # 302558364e1d41c69b3277277e34b184\n+      #: ../../builders.rst:9\n+      msgid \"\"\n+      \"These are the built-in Sphinx builders. More builders can be added by \"\n+      \":ref:`extensions <extensions>`.\"\n+      msgstr \"\"\n+      \"FILL HERE BY TARGET LANGUAGE FILL HERE BY TARGET LANGUAGE FILL HERE \"\n+      \"BY TARGET LANGUAGE :ref:`EXTENSIONS <extensions>` FILL HERE.\"\n+\n+   Please be careful not to break reST notation.  Most po-editors will\n+   help you with that.\n+\n+6. Build translated document.\n+\n+   You need a >>:confval:`language`<< parameter in \"conf.py\" or you\n+   may also specify the parameter on the command line.\n+\n+   For for BSD/GNU make, run:\n+\n+      $ make -e SPHINXOPTS=\"-D language='de'\" html\n+\n+   For Windows **cmd.exe**, run:\n+\n+      > set SPHINXOPTS=-D language=de\n+      > .\\make.bat html\n+\n+   For PowerShell, run:\n+\n+      > Set-Item env:SPHINXOPTS \"-D language=de\"\n+      > .\\make.bat html\n+\n+Congratulations! You got the translated documentation in the\n+\"_build/html\" directory.\n+\n+New in version 1.3: **sphinx-build** that is invoked by make command\n+will build po files into mo files.If you are using 1.2.x or earlier,\n+please invoke **sphinx-intl build** command before **make** command.\n+\n+\n+Translating\n+-----------\n+\n+\n+Update your po files by new pot files\n+-------------------------------------\n+\n+If a document is updated, it is necessary to generate updated pot\n+files and to apply differences to translated po files.  In order to\n+apply the updates from a pot file to the po file, use the **sphinx-\n+intl update** command.\n+\n+   $ sphinx-intl update -p _build/locale\n+\n+\n+Using Transifex service for team translation\n+============================================\n+\n+Transifex is one of several services that allow collaborative\n+translation via a web interface.  It has a nifty Python-based command\n+line client that makes it easy to fetch and push translations.\n+\n+1. Install transifex-client.\n+\n+   You need **tx** command to upload resources (pot files).\n+\n+      $ pip install transifex-client\n+\n+   See also: Transifex Client documentation\n+\n+2. Create your transifex account and create new project for your\n+   document.\n+\n+   Currently, transifex does not allow for a translation project to\n+   have more than one version of the document, so you'd better include\n+   a version number in your project name.\n+\n+   For example:\n+\n+   Project ID:\n+      \"sphinx-document-test_1_0\"\n+\n+   Project URL:\n+      \"https://www.transifex.com/projects/p/sphinx-document-test_1_0/\"\n+\n+3. Create config files for **tx** command.\n+\n+   This process will create \".tx/config\" in the current directory, as\n+   well as a \"~/.transifexrc\" file that includes auth information.\n+\n+      $ tx init\n+      Creating .tx folder...\n+      Transifex instance [https://www.transifex.com]:\n+      ...\n+      Please enter your transifex username: <transifex-username>\n+      Password: <transifex-password>\n+      ...\n+      Done.\n+\n+4. Upload pot files to transifex service.\n+\n+   Register pot files to \".tx/config\" file:\n+\n+      $ cd /your/document/root\n+      $ sphinx-intl update-txconfig-resources --pot-dir _build/locale \\\n+        --transifex-project-name sphinx-document-test_1_0\n+\n+   and upload pot files:\n+\n+      $ tx push -s\n+      Pushing translations for resource sphinx-document-test_1_0.builders:\n+      Pushing source file (locale/pot/builders.pot)\n+      Resource does not exist.  Creating...\n+      ...\n+      Done.\n+\n+5. Forward the translation on transifex.\n+\n+6. Pull translated po files and make translated HTML.\n+\n+   Get translated catalogs and build mo files. For example, to build\n+   mo files for German (de):\n+\n+      $ cd /your/document/root\n+      $ tx pull -l de\n+      Pulling translations for resource sphinx-document-test_1_0.builders (...)\n+       -> de: locale/de/LC_MESSAGES/builders.po\n+      ...\n+      Done.\n+\n+   Invoke **make html** (for BSD/GNU make):\n+\n+      $ make -e SPHINXOPTS=\"-D language='de'\" html\n+\n+That's all!\n+\n+Tip:\n+\n+  Translating locally and on TransifexIf you want to push all\n+  language's po files, you can be done by using **tx push -t**\n+  command.  Watch out! This operation overwrites translations in\n+  transifex.In other words, if you have updated each in the service\n+  and local po files, it would take much time and effort to integrate\n+  them.\n+\n+\n+Contributing to Sphinx reference translation\n+============================================\n+\n+The recommended way for new contributors to translate Sphinx reference\n+is to join the translation team on Transifex.\n+\n+There is sphinx translation page for Sphinx (master) documentation.\n+\n+1. Login to transifex service.\n+\n+2. Go to sphinx translation page.\n+\n+3. Click \"Request language\" and fill form.\n+\n+4. Wait acceptance by transifex sphinx translation maintainers.\n+\n+5. (After acceptance) Translate on transifex.\n+\n+-[ Footnotes ]-\n+\n+[1] See the GNU gettext utilities for details on that software suite.\n+\n+[2] Because nobody expects the Spanish Inquisition!\ndiff --git a/_build/doc/usage/advanced/setuptools.txt b/_build/doc/usage/advanced/setuptools.txt\nnew file mode 100644\nindex 000000000..c56c8c6a8\n--- /dev/null\n+++ b/_build/doc/usage/advanced/setuptools.txt\n@@ -0,0 +1,59 @@\n+Setuptools integration\n+**********************\n+\n+Sphinx supports integration with setuptools and distutils through a\n+custom command - \"BuildDoc\".\n+\n+\n+Using setuptools integration\n+============================\n+\n+The Sphinx build can then be triggered from distutils, and some Sphinx\n+options can be set in \"setup.py\" or \"setup.cfg\" instead of Sphinx's\n+own configuration file.\n+\n+For instance, from \"setup.py\":\n+\n+   # this is only necessary when not using setuptools/distribute\n+   from sphinx.setup_command import BuildDoc\n+   cmdclass = {'build_sphinx': BuildDoc}\n+\n+   name = 'My project'\n+   version = '1.2'\n+   release = '1.2.0'\n+   setup(\n+       name=name,\n+       author='Bernard Montgomery',\n+       version=release,\n+       cmdclass=cmdclass,\n+       # these are optional and override conf.py settings\n+       command_options={\n+           'build_sphinx': {\n+               'project': ('setup.py', name),\n+               'version': ('setup.py', version),\n+               'release': ('setup.py', release),\n+               'source_dir': ('setup.py', 'doc')}},\n+   )\n+\n+Note:\n+\n+  If you set Sphinx options directly in the \"setup()\" command, replace\n+  hyphens in variable names with underscores. In the example above,\n+  \"source-dir\" becomes \"source_dir\".\n+\n+Or add this section in \"setup.cfg\":\n+\n+   [build_sphinx]\n+   project = 'My project'\n+   version = 1.2\n+   release = 1.2.0\n+   source-dir = 'doc'\n+\n+Once configured, call this by calling the relevant command on\n+\"setup.py\":\n+\n+   $ python setup.py build_sphinx\n+\n+\n+Options for setuptools integration\n+==================================\ndiff --git a/_build/doc/usage/advanced/websupport/api.txt b/_build/doc/usage/advanced/websupport/api.txt\nnew file mode 100644\nindex 000000000..d06e339da\n--- /dev/null\n+++ b/_build/doc/usage/advanced/websupport/api.txt\n@@ -0,0 +1,65 @@\n+The WebSupport Class\n+********************\n+\n+class sphinxcontrib.websupport.WebSupport\n+\n+   The main API class for the web support package.  All interactions\n+   with the web support package should occur through this class.\n+\n+   The class takes the following keyword arguments:\n+\n+   srcdir\n+      The directory containing reStructuredText source files.\n+\n+   builddir\n+      The directory that build data and static files should be placed\n+      in.  This should be used when creating a \"WebSupport\" object\n+      that will be used to build data.\n+\n+   datadir\n+      The directory that the web support data is in.  This should be\n+      used when creating a \"WebSupport\" object that will be used to\n+      retrieve data.\n+\n+   search\n+      This may contain either a string (e.g. 'xapian') referencing a\n+      built-in search adapter to use, or an instance of a subclass of\n+      \"BaseSearch\".\n+\n+   storage\n+      This may contain either a string representing a database uri, or\n+      an instance of a subclass of \"StorageBackend\".  If this is not\n+      provided, a new sqlite database will be created.\n+\n+   moderation_callback\n+      A callable to be called when a new comment is added that is not\n+      displayed.  It must accept one argument: a dictionary\n+      representing the comment that was added.\n+\n+   staticdir\n+      If the static files should be created in a different location\n+      **and not in** \"'/static'\", this should be a string with the\n+      name of that location (e.g. \"builddir + '/static_files'\").\n+\n+      Note:\n+\n+        If you specify \"staticdir\", you will typically want to adjust\n+        \"staticroot\" accordingly.\n+\n+   staticroot\n+      If the static files are not served from \"'/static'\", this should\n+      be a string with the name of that location (e.g.\n+      \"'/static_files'\").\n+\n+   docroot\n+      If the documentation is not served from the base path of a URL,\n+      this should be a string specifying that path (e.g. \"'docs'\").\n+\n+Changed in version 1.6: WebSupport class is moved to\n+sphinxcontrib.websupport from sphinx.websupport. Please add\n+\"sphinxcontrib-websupport\" package in your dependency and use moved\n+class instead.\n+\n+\n+Methods\n+=======\ndiff --git a/_build/doc/usage/advanced/websupport/index.txt b/_build/doc/usage/advanced/websupport/index.txt\nnew file mode 100644\nindex 000000000..713de5b99\n--- /dev/null\n+++ b/_build/doc/usage/advanced/websupport/index.txt\n@@ -0,0 +1,34 @@\n+Sphinx Web Support\n+******************\n+\n+New in version 1.1.\n+\n+Sphinx provides a Python API to easily integrate Sphinx documentation\n+into your web application.  To learn more read the Web Support Quick\n+Start.\n+\n+* Web Support Quick Start\n+\n+  * Building Documentation Data\n+\n+  * Integrating Sphinx Documents Into Your Webapp\n+\n+    * Authentication\n+\n+  * Performing Searches\n+\n+  * Comments & Proposals\n+\n+  * Comment Moderation\n+\n+* The WebSupport Class\n+\n+  * Methods\n+\n+* Search Adapters\n+\n+  * Methods\n+\n+* Storage Backends\n+\n+  * Methods\ndiff --git a/_build/doc/usage/advanced/websupport/quickstart.txt b/_build/doc/usage/advanced/websupport/quickstart.txt\nnew file mode 100644\nindex 000000000..7c0436a8b\n--- /dev/null\n+++ b/_build/doc/usage/advanced/websupport/quickstart.txt\n@@ -0,0 +1,259 @@\n+Web Support Quick Start\n+***********************\n+\n+\n+Building Documentation Data\n+===========================\n+\n+To make use of the web support package in your application you'll need\n+to build the data it uses.  This data includes pickle files\n+representing documents, search indices, and node data that is used to\n+track where comments and other things are in a document.  To do this\n+you will need to create an instance of the \"WebSupport\" class and call\n+its \"build()\" method:\n+\n+   from sphinxcontrib.websupport import WebSupport\n+\n+   support = WebSupport(srcdir='/path/to/rst/sources/',\n+                        builddir='/path/to/build/outdir',\n+                        search='xapian')\n+\n+   support.build()\n+\n+This will read reStructuredText sources from \"srcdir\" and place the\n+necessary data in \"builddir\".  The \"builddir\" will contain two sub-\n+directories: one named \"data\" that contains all the data needed to\n+display documents, search through documents, and add comments to\n+documents.  The other directory will be called \"static\" and contains\n+static files that should be served from \"/static\".\n+\n+Note:\n+\n+  If you wish to serve static files from a path other than \"/static\",\n+  you can do so by providing the *staticdir* keyword argument when\n+  creating the \"WebSupport\" object.\n+\n+\n+Integrating Sphinx Documents Into Your Webapp\n+=============================================\n+\n+Now that the data is built, it's time to do something useful with it.\n+Start off by creating a \"WebSupport\" object for your application:\n+\n+   from sphinxcontrib.websupport import WebSupport\n+\n+   support = WebSupport(datadir='/path/to/the/data',\n+                        search='xapian')\n+\n+You'll only need one of these for each set of documentation you will\n+be working with.  You can then call its \"get_document()\" method to\n+access individual documents:\n+\n+   contents = support.get_document('contents')\n+\n+This will return a dictionary containing the following items:\n+\n+* **body**: The main body of the document as HTML\n+\n+* **sidebar**: The sidebar of the document as HTML\n+\n+* **relbar**: A div containing links to related documents\n+\n+* **title**: The title of the document\n+\n+* **css**: Links to CSS files used by Sphinx\n+\n+* **script**: JavaScript containing comment options\n+\n+This dict can then be used as context for templates.  The goal is to\n+be easy to integrate with your existing templating system.  An example\n+using Jinja2 is:\n+\n+   {%- extends \"layout.html\" %}\n+\n+   {%- block title %}\n+       {{ document.title }}\n+   {%- endblock %}\n+\n+   {% block css %}\n+       {{ super() }}\n+       {{ document.css|safe }}\n+       <link rel=\"stylesheet\" href=\"/static/websupport-custom.css\" type=\"text/css\">\n+   {% endblock %}\n+\n+   {%- block script %}\n+       {{ super() }}\n+       {{ document.script|safe }}\n+   {%- endblock %}\n+\n+   {%- block relbar %}\n+       {{ document.relbar|safe }}\n+   {%- endblock %}\n+\n+   {%- block body %}\n+       {{ document.body|safe }}\n+   {%- endblock %}\n+\n+   {%- block sidebar %}\n+       {{ document.sidebar|safe }}\n+   {%- endblock %}\n+\n+\n+Authentication\n+--------------\n+\n+To use certain features such as voting, it must be possible to\n+authenticate users.  The details of the authentication are left to\n+your application.  Once a user has been authenticated you can pass the\n+user's details to certain \"WebSupport\" methods using the *username*\n+and *moderator* keyword arguments.  The web support package will store\n+the username with comments and votes.  The only caveat is that if you\n+allow users to change their username you must update the websupport\n+package's data:\n+\n+   support.update_username(old_username, new_username)\n+\n+*username* should be a unique string which identifies a user, and\n+*moderator* should be a boolean representing whether the user has\n+moderation privileges. The default value for *moderator* is \"False\".\n+\n+An example Flask function that checks whether a user is logged in and\n+then retrieves a document is:\n+\n+   from sphinxcontrib.websupport.errors import *\n+\n+   @app.route('/<path:docname>')\n+   def doc(docname):\n+       username = g.user.name if g.user else ''\n+       moderator = g.user.moderator if g.user else False\n+       try:\n+           document = support.get_document(docname, username, moderator)\n+       except DocumentNotFoundError:\n+           abort(404)\n+       return render_template('doc.html', document=document)\n+\n+The first thing to notice is that the *docname* is just the request\n+path.  This makes accessing the correct document easy from a single\n+view.  If the user is authenticated, then the username and moderation\n+status are passed along with the docname to \"get_document()\".  The web\n+support package will then add this data to the \"COMMENT_OPTIONS\" that\n+are used in the template.\n+\n+Note:\n+\n+  This only works if your documentation is served from your document\n+  root. If it is served from another directory, you will need to\n+  prefix the url route with that directory, and give the *docroot*\n+  keyword argument when creating the web support object:\n+\n+     support = WebSupport(..., docroot='docs')\n+\n+     @app.route('/docs/<path:docname>')\n+\n+\n+Performing Searches\n+===================\n+\n+To use the search form built-in to the Sphinx sidebar, create a\n+function to handle requests to the URL 'search' relative to the\n+documentation root.  The user's search query will be in the GET\n+parameters, with the key *q*.  Then use the \"get_search_results()\"\n+method to retrieve search results. In Flask that would be like this:\n+\n+   @app.route('/search')\n+   def search():\n+       q = request.args.get('q')\n+       document = support.get_search_results(q)\n+       return render_template('doc.html', document=document)\n+\n+Note that we used the same template to render our search results as we\n+did to render our documents.  That's because \"get_search_results()\"\n+returns a context dict in the same format that \"get_document()\" does.\n+\n+\n+Comments & Proposals\n+====================\n+\n+Now that this is done it's time to define the functions that handle\n+the AJAX calls from the script.  You will need three functions.  The\n+first function is used to add a new comment, and will call the web\n+support method \"add_comment()\":\n+\n+   @app.route('/docs/add_comment', methods=['POST'])\n+   def add_comment():\n+       parent_id = request.form.get('parent', '')\n+       node_id = request.form.get('node', '')\n+       text = request.form.get('text', '')\n+       proposal = request.form.get('proposal', '')\n+       username = g.user.name if g.user is not None else 'Anonymous'\n+       comment = support.add_comment(text, node_id='node_id',\n+                                     parent_id='parent_id',\n+                                     username=username, proposal=proposal)\n+       return jsonify(comment=comment)\n+\n+You'll notice that both a \"parent_id\" and \"node_id\" are sent with the\n+request. If the comment is being attached directly to a node,\n+\"parent_id\" will be empty. If the comment is a child of another\n+comment, then \"node_id\" will be empty. Then next function handles the\n+retrieval of comments for a specific node, and is aptly named\n+\"get_data()\":\n+\n+   @app.route('/docs/get_comments')\n+   def get_comments():\n+       username = g.user.name if g.user else None\n+       moderator = g.user.moderator if g.user else False\n+       node_id = request.args.get('node', '')\n+       data = support.get_data(node_id, username, moderator)\n+       return jsonify(**data)\n+\n+The final function that is needed will call \"process_vote()\", and will\n+handle user votes on comments:\n+\n+   @app.route('/docs/process_vote', methods=['POST'])\n+   def process_vote():\n+       if g.user is None:\n+           abort(401)\n+       comment_id = request.form.get('comment_id')\n+       value = request.form.get('value')\n+       if value is None or comment_id is None:\n+           abort(400)\n+       support.process_vote(comment_id, g.user.id, value)\n+       return \"success\"\n+\n+\n+Comment Moderation\n+==================\n+\n+By default, all comments added through \"add_comment()\" are\n+automatically displayed.  If you wish to have some form of moderation,\n+you can pass the \"displayed\" keyword argument:\n+\n+   comment = support.add_comment(text, node_id='node_id',\n+                                 parent_id='parent_id',\n+                                 username=username, proposal=proposal,\n+                                 displayed=False)\n+\n+You can then create a new view to handle the moderation of comments.\n+It will be called when a moderator decides a comment should be\n+accepted and displayed:\n+\n+   @app.route('/docs/accept_comment', methods=['POST'])\n+   def accept_comment():\n+       moderator = g.user.moderator if g.user else False\n+       comment_id = request.form.get('id')\n+       support.accept_comment(comment_id, moderator=moderator)\n+       return 'OK'\n+\n+Rejecting comments happens via comment deletion.\n+\n+To perform a custom action (such as emailing a moderator) when a new\n+comment is added but not displayed, you can pass callable to the\n+\"WebSupport\" class when instantiating your support object:\n+\n+   def moderation_callback(comment):\n+       \"\"\"Do something...\"\"\"\n+\n+   support = WebSupport(..., moderation_callback=moderation_callback)\n+\n+The moderation callback must take one argument, which will be the same\n+comment dict that is returned by \"add_comment()\".\ndiff --git a/_build/doc/usage/advanced/websupport/searchadapters.txt b/_build/doc/usage/advanced/websupport/searchadapters.txt\nnew file mode 100644\nindex 000000000..e64a1e595\n--- /dev/null\n+++ b/_build/doc/usage/advanced/websupport/searchadapters.txt\n@@ -0,0 +1,30 @@\n+Search Adapters\n+***************\n+\n+To create a custom search adapter you will need to subclass the\n+\"BaseSearch\" class.  Then create an instance of the new class and pass\n+that as the *search* keyword argument when you create the \"WebSupport\"\n+object:\n+\n+   support = WebSupport(srcdir=srcdir,\n+                        builddir=builddir,\n+                        search=MySearch())\n+\n+For more information about creating a custom search adapter, please\n+see the documentation of the \"BaseSearch\" class below.\n+\n+class sphinxcontrib.websupport.search.BaseSearch\n+\n+   Defines an interface for search adapters.\n+\n+Changed in version 1.6: BaseSearch class is moved to\n+sphinxcontrib.websupport.search from sphinx.websupport.search.\n+\n+\n+Methods\n+=======\n+\n+The following methods are defined in the BaseSearch class. Some\n+methods do not need to be overridden, but some (\"add_document()\" and\n+\"handle_query()\") must be overridden in your subclass. For a working\n+example, look at the built-in adapter for whoosh.\ndiff --git a/_build/doc/usage/advanced/websupport/storagebackends.txt b/_build/doc/usage/advanced/websupport/storagebackends.txt\nnew file mode 100644\nindex 000000000..7d12ab8f3\n--- /dev/null\n+++ b/_build/doc/usage/advanced/websupport/storagebackends.txt\n@@ -0,0 +1,25 @@\n+Storage Backends\n+****************\n+\n+To create a custom storage backend you will need to subclass the\n+\"StorageBackend\" class.  Then create an instance of the new class and\n+pass that as the *storage* keyword argument when you create the\n+\"WebSupport\" object:\n+\n+   support = WebSupport(srcdir=srcdir,\n+                        builddir=builddir,\n+                        storage=MyStorage())\n+\n+For more information about creating a custom storage backend, please\n+see the documentation of the \"StorageBackend\" class below.\n+\n+class sphinxcontrib.websupport.storage.StorageBackend\n+\n+   Defines an interface for storage backends.\n+\n+Changed in version 1.6: StorageBackend class is moved to\n+sphinxcontrib.websupport.storage from sphinx.websupport.storage.\n+\n+\n+Methods\n+=======\ndiff --git a/_build/doc/usage/builders/index.txt b/_build/doc/usage/builders/index.txt\nnew file mode 100644\nindex 000000000..a16df0f29\n--- /dev/null\n+++ b/_build/doc/usage/builders/index.txt\n@@ -0,0 +1,717 @@\n+Builders\n+********\n+\n+These are the built-in Sphinx builders.  More builders can be added by\n+*extensions*.\n+\n+The builder's \"name\" must be given to the **-b** command-line option\n+of **sphinx-build** to select a builder.\n+\n+class sphinx.builders.html.StandaloneHTMLBuilder\n+\n+   This is the standard HTML builder.  Its output is a directory with\n+   HTML files, complete with style sheets and optionally the reST\n+   sources.  There are quite a few configuration values that customize\n+   the output of this builder, see the chapter Options for HTML output\n+   for details.\n+\n+   name = 'html'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+class sphinx.builders.dirhtml.DirectoryHTMLBuilder\n+\n+   This is a subclass of the standard HTML builder.  Its output is a\n+   directory with HTML files, where each file is called \"index.html\"\n+   and placed in a subdirectory named like its page name.  For\n+   example, the document \"markup/rest.rst\" will not result in an\n+   output file \"markup/rest.html\", but \"markup/rest/index.html\".  When\n+   generating links between pages, the \"index.html\" is omitted, so\n+   that the URL would look like \"markup/rest/\".\n+\n+   name = 'dirhtml'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 0.6.\n+\n+class sphinx.builders.singlehtml.SingleFileHTMLBuilder\n+\n+   This is an HTML builder that combines the whole project in one\n+   output file. (Obviously this only works with smaller projects.)\n+   The file is named like the master document.  No indices will be\n+   generated.\n+\n+   name = 'singlehtml'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.0.\n+\n+class sphinxcontrib.htmlhelp.HTMLHelpBuilder\n+\n+   This builder produces the same output as the standalone HTML\n+   builder, but also generates HTML Help support files that allow the\n+   Microsoft HTML Help Workshop to compile them into a CHM file.\n+\n+   name = 'htmlhelp'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+class sphinxcontrib.qthelp.QtHelpBuilder\n+\n+   This builder produces the same output as the standalone HTML\n+   builder, but also generates Qt help collection support files that\n+   allow the Qt collection generator to compile them.\n+\n+   Changed in version 2.0: Moved to sphinxcontrib.qthelp from\n+   sphinx.builders package.\n+\n+   name = 'qthelp'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+class sphinxcontrib.applehelp.AppleHelpBuilder\n+\n+   This builder produces an Apple Help Book based on the same output\n+   as the standalone HTML builder.\n+\n+   If the source directory contains any \".lproj\" folders, the one\n+   corresponding to the selected language will have its contents\n+   merged with the generated output.  These folders will be ignored by\n+   all other documentation types.\n+\n+   In order to generate a valid help book, this builder requires the\n+   command line tool **hiutil**, which is only available on Mac OS X\n+   10.6 and above.  You can disable the indexing step by setting\n+   >>:confval:`applehelp_disable_external_tools`<< to \"True\", in which\n+   case the output will not be valid until **hiutil** has been run on\n+   all of the \".lproj\" folders within the bundle.\n+\n+   name = 'applehelp'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg', 'image/tiff', 'image/jp2', 'image/svg+xml']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.3.\n+\n+   Changed in version 2.0: Moved to sphinxcontrib.applehelp from\n+   sphinx.builders package.\n+\n+class sphinxcontrib.devhelp.DevhelpBuilder\n+\n+   This builder produces the same output as the standalone HTML\n+   builder, but also generates GNOME Devhelp support file that allows\n+   the GNOME Devhelp reader to view them.\n+\n+   name = 'devhelp'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   Changed in version 2.0: Moved to sphinxcontrib.devhelp from\n+   sphinx.builders package.\n+\n+class sphinx.builders.epub3.Epub3Builder\n+\n+   This builder produces the same output as the standalone HTML\n+   builder, but also generates an *epub* file for ebook readers.  See\n+   Epub info for details about it.  For definition of the epub format,\n+   have a look at http://idpf.org/epub or\n+   https://en.wikipedia.org/wiki/EPUB. The builder creates *EPUB 3*\n+   files.\n+\n+   name = 'epub'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.4.\n+\n+   Changed in version 1.5: Since Sphinx-1.5, the epub3 builder is used\n+   for the default builder of epub.\n+\n+class sphinx.builders.latex.LaTeXBuilder\n+\n+   This builder produces a bunch of LaTeX files in the output\n+   directory.  You have to specify which documents are to be included\n+   in which LaTeX files via the >>:confval:`latex_documents`<<\n+   configuration value.  There are a few configuration values that\n+   customize the output of this builder, see the chapter Options for\n+   LaTeX output for details.\n+\n+   The produced LaTeX file uses several LaTeX packages that may not be\n+   present in a \"minimal\" TeX distribution installation.\n+\n+   On Ubuntu xenial, the following packages need to be installed for\n+   successful PDF builds:\n+\n+   * \"texlive-latex-recommended\"\n+\n+   * \"texlive-fonts-recommended\"\n+\n+   * \"texlive-latex-extra\"\n+\n+   * \"latexmk\" (this is a Sphinx requirement on GNU/Linux and MacOS X\n+     for functioning of \"make latexpdf\")\n+\n+   Additional packages are needed in some circumstances (see the\n+   discussion of the \"'fontpkg'\" key of >>:confval:`latex_elements`<<\n+   for more information):\n+\n+   * to support occasional Cyrillic letters or words, and a fortiori\n+     if >>:confval:`language`<< is set to a Cyrillic language, the\n+     package \"texlive-lang-cyrillic\" is required, and, with unmodified\n+     \"'fontpkg'\", also \"cm-super\" or \"cm-super-minimal\",\n+\n+   * to support occasional Greek letters or words (in text, not in\n+     \"math\" directive contents), \"texlive-lang-greek\" is required,\n+     and, with unmodified \"'fontpkg'\", also \"cm-super\" or \"cm-super-\n+     minimal\",\n+\n+   * for \"'xelatex'\" or \"'lualatex'\" (see\n+     >>:confval:`latex_engine`<<), \"texlive-xetex\" resp. \"texlive-\n+     luatex\", and, if leaving unchanged \"'fontpkg'\", \"fonts-freefont-\n+     otf\".\n+\n+   The testing of Sphinx LaTeX is done on Ubuntu xenial whose TeX\n+   distribution is based on a TeXLive 2015 snapshot dated March 2016.\n+\n+   Changed in version 1.6: Formerly, testing had been done on Ubuntu\n+   precise (TeXLive 2009).\n+\n+   Changed in version 2.0: Formerly, testing had been done on Ubuntu\n+   trusty (TeXLive 2013).\n+\n+   Note:\n+\n+     Since 1.6, \"make latexpdf\" uses \"latexmk\" (not on Windows).  This\n+     makes sure the needed number of runs is automatically executed to\n+     get the cross-references, bookmarks, indices, and tables of\n+     contents right.One can pass to \"latexmk\" options via the\n+     \"LATEXMKOPTS\" Makefile variable. For example:\n+\n+        make latexpdf LATEXMKOPTS=\"-silent\"\n+\n+     reduces console output to a minimum.Also, if \"latexmk\" is at\n+     version 4.52b or higher (January 2017) \"LATEXMKOPTS=\"-xelatex\"\"\n+     speeds up PDF builds via XeLateX in case of numerous graphics\n+     inclusions.To pass options directly to the \"(pdf|xe|lua)latex\"\n+     binary, use variable \"LATEXOPTS\", for example:\n+\n+        make latexpdf LATEXOPTS=\"--halt-on-error\"\n+\n+   name = 'latex'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'latex'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['application/pdf', 'image/png', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+Note that a direct PDF builder is being provided by rinohtype. The\n+builder's name is \"rinoh\". Refer to the rinohtype manual for details.\n+\n+class sphinx.builders.text.TextBuilder\n+\n+   This builder produces a text file for each reST file -- this is\n+   almost the same as the reST source, but with much of the markup\n+   stripped for better readability.\n+\n+   name = 'text'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'text'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 0.4.\n+\n+class sphinx.builders.manpage.ManualPageBuilder\n+\n+   This builder produces manual pages in the groff format.  You have\n+   to specify which documents are to be included in which manual pages\n+   via the >>:confval:`man_pages`<< configuration value.\n+\n+   name = 'man'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'man'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.0.\n+\n+class sphinx.builders.texinfo.TexinfoBuilder\n+\n+   This builder produces Texinfo files that can be processed into Info\n+   files by the **makeinfo** program.  You have to specify which\n+   documents are to be included in which Texinfo files via the\n+   >>:confval:`texinfo_documents`<< configuration value.\n+\n+   The Info format is the basis of the on-line help system used by GNU\n+   Emacs and the terminal-based program **info**.  See Texinfo info\n+   for more details.  The Texinfo format is the official documentation\n+   system used by the GNU project.  More information on Texinfo can be\n+   found at https://www.gnu.org/software/texinfo/.\n+\n+   name = 'texinfo'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'texinfo'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/png', 'image/jpeg', 'image/gif']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.1.\n+\n+class sphinxcontrib.serializinghtml.SerializingHTMLBuilder\n+\n+   This builder uses a module that implements the Python serialization\n+   API (*pickle*, *simplejson*, *phpserialize*, and others) to dump\n+   the generated HTML documentation.  The pickle builder is a subclass\n+   of it.\n+\n+   A concrete subclass of this builder serializing to the PHP\n+   serialization format could look like this:\n+\n+      import phpserialize\n+\n+      class PHPSerializedBuilder(SerializingHTMLBuilder):\n+          name = 'phpserialized'\n+          implementation = phpserialize\n+          out_suffix = '.file.phpdump'\n+          globalcontext_filename = 'globalcontext.phpdump'\n+          searchindex_filename = 'searchindex.phpdump'\n+\n+   implementation\n+\n+      A module that implements *dump()*, *load()*, *dumps()* and\n+      *loads()* functions that conform to the functions with the same\n+      names from the pickle module.  Known modules implementing this\n+      interface are *simplejson*, *phpserialize*, *plistlib*, and\n+      others.\n+\n+   out_suffix\n+\n+      The suffix for all regular files.\n+\n+   globalcontext_filename\n+\n+      The filename for the file that contains the \"global context\".\n+      This is a dict with some general configuration values such as\n+      the name of the project.\n+\n+   searchindex_filename\n+\n+      The filename for the search index Sphinx generates.\n+\n+   See Serialization builder details for details about the output\n+   format.\n+\n+   New in version 0.5.\n+\n+class sphinxcontrib.serializinghtml.PickleHTMLBuilder\n+\n+   This builder produces a directory with pickle files containing\n+   mostly HTML fragments and TOC information, for use of a web\n+   application (or custom postprocessing tool) that doesn't use the\n+   standard HTML templates.\n+\n+   See Serialization builder details for details about the output\n+   format.\n+\n+   name = 'pickle'\n+\n+      The builder's name, for the -b command line option.\n+\n+      The old name \"web\" still works as well.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   The file suffix is \".fpickle\".  The global context is called\n+   \"globalcontext.pickle\", the search index \"searchindex.pickle\".\n+\n+class sphinxcontrib.serializinghtml.JSONHTMLBuilder\n+\n+   This builder produces a directory with JSON files containing mostly\n+   HTML fragments and TOC information, for use of a web application\n+   (or custom postprocessing tool) that doesn't use the standard HTML\n+   templates.\n+\n+   See Serialization builder details for details about the output\n+   format.\n+\n+   name = 'json'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'html'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   The file suffix is \".fjson\".  The global context is called\n+   \"globalcontext.json\", the search index \"searchindex.json\".\n+\n+   New in version 0.5.\n+\n+class sphinx.builders.gettext.MessageCatalogBuilder\n+\n+   This builder produces gettext-style message catalogs.  Each top-\n+   level file or subdirectory grows a single \".pot\" catalog template.\n+\n+   See the documentation on Internationalization for further\n+   reference.\n+\n+   name = 'gettext'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = ''\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.1.\n+\n+class sphinx.builders.changes.ChangesBuilder\n+\n+   This builder produces an HTML overview of all \"versionadded\",\n+   \"versionchanged\" and \"deprecated\" directives for the current\n+   >>:confval:`version`<<.  This is useful to generate a ChangeLog\n+   file, for example.\n+\n+   name = 'changes'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = ''\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+class sphinx.builders.dummy.DummyBuilder\n+\n+   This builder produces no output.  The input is only parsed and\n+   checked for consistency.  This is useful for linting purposes.\n+\n+   name = 'dummy'\n+\n+      The builder's name, for the -b command line option.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.4.\n+\n+class sphinx.builders.linkcheck.CheckExternalLinksBuilder\n+\n+   This builder scans all documents for external links, tries to open\n+   them with \"requests\", and writes an overview which ones are broken\n+   and redirected to standard output and to \"output.txt\" in the output\n+   directory.\n+\n+   name = 'linkcheck'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = ''\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   Changed in version 1.5: Since Sphinx-1.5, the linkcheck builder\n+   comes to use requests module.\n+\n+   Changed in version 3.4: The linkcheck builder retries links when\n+   servers apply rate limits.\n+\n+class sphinx.builders.xml.XMLBuilder\n+\n+   This builder produces Docutils-native XML files.  The output can be\n+   transformed with standard XML tools such as XSLT processors into\n+   arbitrary final forms.\n+\n+   name = 'xml'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'xml'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.2.\n+\n+class sphinx.builders.xml.PseudoXMLBuilder\n+\n+   This builder is used for debugging the Sphinx/Docutils \"Reader to\n+   Transform to Writer\" pipeline. It produces compact pretty-printed\n+   \"pseudo-XML\", files where nesting is indicated by indentation (no\n+   end-tags). External attributes for all elements are output, and\n+   internal attributes for any leftover \"pending\" elements are also\n+   given.\n+\n+   name = 'pseudoxml'\n+\n+      The builder's name, for the -b command line option.\n+\n+   format = 'pseudoxml'\n+\n+      The builder's output format, or '' if no document output is\n+      produced.\n+\n+   supported_image_types: List[str] = []\n+\n+      The list of MIME types of image formats supported by the\n+      builder. Image files are searched in the order in which they\n+      appear here.\n+\n+   New in version 1.2.\n+\n+Built-in Sphinx extensions that offer more builders are:\n+\n+* \"doctest\"\n+\n+* \"coverage\"\n+\n+\n+Serialization builder details\n+=============================\n+\n+All serialization builders outputs one file per source file and a few\n+special files.  They also copy the reST source files in the directory\n+\"_sources\" under the output directory.\n+\n+The \"PickleHTMLBuilder\" is a builtin subclass that implements the\n+pickle serialization interface.\n+\n+The files per source file have the extensions of \"out_suffix\", and are\n+arranged in directories just as the source files are.  They\n+unserialize to a dictionary (or dictionary like structure) with these\n+keys:\n+\n+\"body\"\n+   The HTML \"body\" (that is, the HTML rendering of the source file),\n+   as rendered by the HTML translator.\n+\n+\"title\"\n+   The title of the document, as HTML (may contain markup).\n+\n+\"toc\"\n+   The table of contents for the file, rendered as an HTML \"<ul>\".\n+\n+\"display_toc\"\n+   A boolean that is \"True\" if the \"toc\" contains more than one entry.\n+\n+\"current_page_name\"\n+   The document name of the current file.\n+\n+\"parents\", \"prev\" and \"next\"\n+   Information about related chapters in the TOC tree.  Each relation\n+   is a dictionary with the keys \"link\" (HREF for the relation) and\n+   \"title\" (title of the related document, as HTML).  \"parents\" is a\n+   list of relations, while \"prev\" and \"next\" are a single relation.\n+\n+\"sourcename\"\n+   The name of the source file under \"_sources\".\n+\n+The special files are located in the root output directory.  They are:\n+\n+\"SerializingHTMLBuilder.globalcontext_filename\"\n+   A pickled dict with these keys:\n+\n+   \"project\", \"copyright\", \"release\", \"version\"\n+      The same values as given in the configuration file.\n+\n+   \"style\"\n+      >>:confval:`html_style`<<.\n+\n+   \"last_updated\"\n+      Date of last build.\n+\n+   \"builder\"\n+      Name of the used builder, in the case of pickles this is always\n+      \"'pickle'\".\n+\n+   \"titles\"\n+      A dictionary of all documents' titles, as HTML strings.\n+\n+\"SerializingHTMLBuilder.searchindex_filename\"\n+   An index that can be used for searching the documentation.  It is a\n+   pickled list with these entries:\n+\n+   * A list of indexed docnames.\n+\n+   * A list of document titles, as HTML strings, in the same order as\n+     the first list.\n+\n+   * A dict mapping word roots (processed by an English-language\n+     stemmer) to a list of integers, which are indices into the first\n+     list.\n+\n+\"environment.pickle\"\n+   The build environment.  This is always a pickle file, independent\n+   of the builder and a copy of the environment that was used when the\n+   builder was started.\n+\n+   Unlike the other pickle files this pickle file requires that the\n+   \"sphinx\" package is available on unpickling.\ndiff --git a/_build/doc/usage/configuration.txt b/_build/doc/usage/configuration.txt\nnew file mode 100644\nindex 000000000..2a193a487\n--- /dev/null\n+++ b/_build/doc/usage/configuration.txt\n@@ -0,0 +1,170 @@\n+Configuration\n+*************\n+\n+The *configuration directory* must contain a file named \"conf.py\".\n+This file (containing Python code) is called the \"build configuration\n+file\" and contains (almost) all configuration needed to customize\n+Sphinx input and output behavior.\n+\n+   An optional file docutils.conf can be added to the configuration\n+   directory to adjust Docutils configuration if not otherwise\n+   overridden or set by Sphinx.\n+\n+The configuration file is executed as Python code at build time (using\n+\"execfile()\", and with the current directory set to its containing\n+directory), and therefore can execute arbitrarily complex code.\n+Sphinx then reads simple names from the file's namespace as its\n+configuration.\n+\n+Important points to note:\n+\n+* If not otherwise documented, values must be strings, and their\n+  default is the empty string.\n+\n+* The term \"fully-qualified name\" refers to a string that names an\n+  importable Python object inside a module; for example, the FQN\n+  \"\"sphinx.builders.Builder\"\" means the \"Builder\" class in the\n+  \"sphinx.builders\" module.\n+\n+* Remember that document names use \"/\" as the path separator and don't\n+  contain the file name extension.\n+\n+* Since \"conf.py\" is read as a Python file, the usual rules apply for\n+  encodings and Unicode support.\n+\n+* The contents of the config namespace are pickled (so that Sphinx can\n+  find out when configuration changes), so it may not contain\n+  unpickleable values -- delete them from the namespace with \"del\" if\n+  appropriate.  Modules are removed automatically, so you don't need\n+  to \"del\" your imports after use.\n+\n+* There is a special object named \"tags\" available in the config file.\n+  It can be used to query and change the tags (see Including content\n+  based on tags).  Use \"tags.has('tag')\" to query, \"tags.add('tag')\"\n+  and \"tags.remove('tag')\" to change. Only tags set via the \"-t\"\n+  command-line option or via \"tags.add('tag')\" can be queried using\n+  \"tags.has('tag')\". Note that the current builder tag is not\n+  available in \"conf.py\", as it is created *after* the builder is\n+  initialized.\n+\n+\n+Project information\n+===================\n+\n+\n+General configuration\n+=====================\n+\n+\n+Options for internationalization\n+================================\n+\n+These options influence Sphinx's *Native Language Support*.  See the\n+documentation on Internationalization for details.\n+\n+\n+Options for Math\n+================\n+\n+These options influence Math notations.\n+\n+\n+Options for HTML output\n+=======================\n+\n+These options influence HTML as well as HTML Help output, and other\n+builders that use Sphinx's HTMLWriter class.\n+\n+\n+Options for Single HTML output\n+==============================\n+\n+\n+Options for HTML help output\n+============================\n+\n+\n+Options for Apple Help output\n+=============================\n+\n+New in version 1.3.\n+\n+These options influence the Apple Help output.  This builder derives\n+from the HTML builder, so the HTML options also apply where\n+appropriate.\n+\n+Note:\n+\n+  Apple Help output will only work on Mac OS X 10.6 and higher, as it\n+  requires the **hiutil** and **codesign** command line tools, neither\n+  of which are Open Source.You can disable the use of these tools\n+  using >>:confval:`applehelp_disable_external_tools`<<, but the\n+  result will not be a valid help book until the indexer is run over\n+  the \".lproj\" folders within the bundle.\n+\n+\n+Options for epub output\n+=======================\n+\n+These options influence the epub output.  As this builder derives from\n+the HTML builder, the HTML options also apply where appropriate.  The\n+actual values for some of the options is not really important, they\n+just have to be entered into the Dublin Core metadata.\n+\n+\n+Options for LaTeX output\n+========================\n+\n+These options influence LaTeX output.\n+\n+\n+Options for text output\n+=======================\n+\n+These options influence text output.\n+\n+\n+Options for manual page output\n+==============================\n+\n+These options influence manual page output.\n+\n+\n+Options for Texinfo output\n+==========================\n+\n+These options influence Texinfo output.\n+\n+\n+Options for QtHelp output\n+=========================\n+\n+These options influence qthelp output.  As this builder derives from\n+the HTML builder, the HTML options also apply where appropriate.\n+\n+\n+Options for the linkcheck builder\n+=================================\n+\n+\n+Options for the XML builder\n+===========================\n+\n+-[ Footnotes ]-\n+\n+[1] A note on available globbing syntax: you can use the standard\n+    shell constructs \"*\", \"?\", \"[...]\" and \"[!...]\" with the feature\n+    that these all don't match slashes.  A double star \"**\" can be\n+    used to match any sequence of characters *including* slashes.\n+\n+\n+Options for the C domain\n+========================\n+\n+\n+Options for the C++ domain\n+==========================\n+\n+\n+Example of configuration file\n+-----------------------------\ndiff --git a/_build/doc/usage/extensions/autodoc.txt b/_build/doc/usage/extensions/autodoc.txt\nnew file mode 100644\nindex 000000000..d8012e13a\n--- /dev/null\n+++ b/_build/doc/usage/extensions/autodoc.txt\n@@ -0,0 +1,431 @@\n+\"sphinx.ext.autodoc\" -- Include documentation from docstrings\n+*************************************************************\n+\n+This extension can import the modules you are documenting, and pull in\n+documentation from docstrings in a semi-automatic way.\n+\n+Note:\n+\n+  For Sphinx (actually, the Python interpreter that executes Sphinx)\n+  to find your module, it must be importable.  That means that the\n+  module or the package must be in one of the directories on\n+  \"sys.path\" -- adapt your \"sys.path\" in the configuration file\n+  accordingly.\n+\n+Warning:\n+\n+  \"autodoc\" **imports** the modules to be documented.  If any modules\n+  have side effects on import, these will be executed by \"autodoc\"\n+  when \"sphinx-build\" is run.If you document scripts (as opposed to\n+  library modules), make sure their main routine is protected by a \"if\n+  __name__ == '__main__'\" condition.\n+\n+For this to work, the docstrings must of course be written in correct\n+reStructuredText.  You can then use all of the usual Sphinx markup in\n+the docstrings, and it will end up correctly in the documentation.\n+Together with hand-written documentation, this technique eases the\n+pain of having to maintain two locations for documentation, while at\n+the same time avoiding auto-generated-looking pure API documentation.\n+\n+If you prefer NumPy or Google style docstrings over reStructuredText,\n+you can also enable the \"napoleon\" extension. \"napoleon\" is a\n+preprocessor that converts your docstrings to correct reStructuredText\n+before \"autodoc\" processes them.\n+\n+\n+Directives\n+==========\n+\n+\"autodoc\" provides several directives that are versions of the usual\n+\"py:module\", \"py:class\" and so forth.  On parsing time, they import\n+the corresponding module and extract the docstring of the given\n+objects, inserting them into the page source under a suitable\n+\"py:module\", \"py:class\" etc.  directive.\n+\n+Note:\n+\n+  Just as \"py:class\" respects the current \"py:module\", \"autoclass\"\n+  will also do so.  Likewise, \"automethod\" will respect the current\n+  \"py:class\".\n+\n+.. automodule::\n+.. autoclass::\n+.. autoexception::\n+\n+   Document a module, class or exception.  All three directives will\n+   by default only insert the docstring of the object itself:\n+\n+      .. autoclass:: Noodle\n+\n+   will produce source like this:\n+\n+      .. class:: Noodle\n+\n+         Noodle's docstring.\n+\n+   The \"auto\" directives can also contain content of their own, it\n+   will be inserted into the resulting non-auto directive source after\n+   the docstring (but before any automatic member documentation).\n+\n+   Therefore, you can also mix automatic and non-automatic member\n+   documentation, like so:\n+\n+      .. autoclass:: Noodle\n+         :members: eat, slurp\n+\n+         .. method:: boil(time=10)\n+\n+            Boil the noodle *time* minutes.\n+\n+   **Options and advanced usage**\n+\n+   * If you want to automatically document members, there's a\n+     \"members\" option:\n+\n+        .. automodule:: noodle\n+           :members:\n+\n+     will document all module members (recursively), and\n+\n+        .. autoclass:: Noodle\n+           :members:\n+\n+     will document all non-private member functions and properties\n+     (that is, those whose name doesn't start with \"_\").\n+\n+     For modules, \"__all__\" will be respected when looking for members\n+     unless you give the \"ignore-module-all\" flag option.  Without\n+     \"ignore-module-all\", the order of the members will also be the\n+     order in \"__all__\".\n+\n+     You can also give an explicit list of members; only these will\n+     then be documented:\n+\n+        .. autoclass:: Noodle\n+           :members: eat, slurp\n+\n+   * If you want to make the \"members\" option (or other options\n+     described below) the default, see\n+     >>:confval:`autodoc_default_options`<<.\n+\n+     Tip:\n+\n+       You can use a negated form, \"'no-*flag*'\", as an option of\n+       autodoc directive, to disable it temporarily.  For example:\n+\n+          .. automodule:: foo\n+             :no-undoc-members:\n+\n+   * Members without docstrings will be left out, unless you give the\n+     \"undoc-members\" flag option:\n+\n+        .. automodule:: noodle\n+           :members:\n+           :undoc-members:\n+\n+   * \"Private\" members (that is, those named like \"_private\" or\n+     \"__private\") will be included if the \"private-members\" flag\n+     option is given:\n+\n+        .. automodule:: noodle\n+           :members:\n+           :private-members:\n+\n+     It can also take an explicit list of member names to be\n+     documented as arguments:\n+\n+        .. automodule:: noodle\n+           :members:\n+           :private-members: _spicy, _garlickly\n+\n+     New in version 1.1.\n+\n+     Changed in version 3.2: The option can now take arguments.\n+\n+   * autodoc considers a member private if its docstring contains\n+     \":meta private:\" in its Info field lists. For example:\n+\n+        def my_function(my_arg, my_other_arg):\n+            \"\"\"blah blah blah\n+\n+            :meta private:\n+            \"\"\"\n+\n+     New in version 3.0.\n+\n+   * autodoc considers a member public if its docstring contains\n+     \":meta public:\" in its Info field lists, even if it starts with\n+     an underscore. For example:\n+\n+        def _my_function(my_arg, my_other_arg):\n+            \"\"\"blah blah blah\n+\n+            :meta public:\n+            \"\"\"\n+\n+     New in version 3.1.\n+\n+   * autodoc considers a variable member does not have any default\n+     value if its docstring contains \":meta hide-value:\" in its Info\n+     field lists. Example:\n+\n+        var1 = None  #: :meta hide-value:\n+\n+     New in version 3.5.\n+\n+   * Python \"special\" members (that is, those named like\n+     \"__special__\") will be included if the \"special-members\" flag\n+     option is given:\n+\n+        .. autoclass:: my.Class\n+           :members:\n+           :private-members:\n+           :special-members:\n+\n+     would document both \"private\" and \"special\" members of the class.\n+\n+     New in version 1.1.\n+\n+     Changed in version 1.2: The option can now take arguments, i.e.\n+     the special members to document.\n+\n+   * For classes and exceptions, members inherited from base classes\n+     will be left out when documenting all members, unless you give\n+     the \"inherited-members\" option, in addition to \"members\":\n+\n+        .. autoclass:: Noodle\n+           :members:\n+           :inherited-members:\n+\n+     This can be combined with \"undoc-members\" to document *all*\n+     available members of the class or module.\n+\n+     It can take an ancestor class not to document inherited members\n+     from it. By default, members of \"object\" class are not\n+     documented.  To show them all, give \"None\" to the option.\n+\n+     For example; If your class \"Foo\" is derived from \"list\" class and\n+     you don't want to document \"list.__len__()\", you should specify a\n+     option \":inherited-members: list\" to avoid special members of\n+     list class.\n+\n+     Another example; If your class Foo has \"__str__\" special method\n+     and autodoc directive has both \"inherited-members\" and \"special-\n+     members\", \"__str__\" will be documented as in the past, but other\n+     special method that are not implemented in your class \"Foo\".\n+\n+     Note: this will lead to markup errors if the inherited members\n+     come from a module whose docstrings are not reST formatted.\n+\n+     New in version 0.3.\n+\n+     Changed in version 3.0: It takes an ancestor class name as an\n+     argument.\n+\n+   * It's possible to override the signature for explicitly documented\n+     callable objects (functions, methods, classes) with the regular\n+     syntax that will override the signature gained from\n+     introspection:\n+\n+        .. autoclass:: Noodle(type)\n+\n+           .. automethod:: eat(persona)\n+\n+     This is useful if the signature from the method is hidden by a\n+     decorator.\n+\n+     New in version 0.4.\n+\n+   * The \"automodule\", \"autoclass\" and \"autoexception\" directives also\n+     support a flag option called \"show-inheritance\".  When given, a\n+     list of base classes will be inserted just below the class\n+     signature (when used with \"automodule\", this will be inserted for\n+     every class that is documented in the module).\n+\n+     New in version 0.4.\n+\n+   * All autodoc directives support the \"noindex\" flag option that has\n+     the same effect as for standard \"py:function\" etc. directives: no\n+     index entries are generated for the documented object (and all\n+     autodocumented members).\n+\n+     New in version 0.4.\n+\n+   * \"automodule\" also recognizes the \"synopsis\", \"platform\" and\n+     \"deprecated\" options that the standard \"py:module\" directive\n+     supports.\n+\n+     New in version 0.5.\n+\n+   * \"automodule\" and \"autoclass\" also has an \"member-order\" option\n+     that can be used to override the global value of\n+     >>:confval:`autodoc_member_order`<< for one directive.\n+\n+     New in version 0.6.\n+\n+   * The directives supporting member documentation also have a\n+     \"exclude-members\" option that can be used to exclude single\n+     member names from documentation, if all members are to be\n+     documented.\n+\n+     New in version 0.6.\n+\n+   * In an \"automodule\" directive with the \"members\" option set, only\n+     module members whose \"__module__\" attribute is equal to the\n+     module name as given to \"automodule\" will be documented.  This is\n+     to prevent documentation of imported classes or functions.  Set\n+     the \"imported-members\" option if you want to prevent this\n+     behavior and document all available members.  Note that\n+     attributes from imported modules will not be documented, because\n+     attribute documentation is discovered by parsing the source file\n+     of the current module.\n+\n+     New in version 1.2.\n+\n+   * Add a list of modules in the >>:confval:`autodoc_mock_imports`<<\n+     to prevent import errors to halt the building process when some\n+     external dependencies are not importable at build time.\n+\n+     New in version 1.3.\n+\n+   * As a hint to autodoc extension, you can put a \"::\" separator in\n+     between module name and object name to let autodoc know the\n+     correct module name if it is ambiguous.\n+\n+        .. autoclass:: module.name::Noodle\n+\n+.. autofunction::\n+.. autodecorator::\n+.. autodata::\n+.. automethod::\n+.. autoattribute::\n+\n+   These work exactly like \"autoclass\" etc., but do not offer the\n+   options used for automatic member documentation.\n+\n+   \"autodata\" and \"autoattribute\" support the \"annotation\" option.\n+   The option controls how the value of variable is shown.  If\n+   specified without arguments, only the name of the variable will be\n+   printed, and its value is not shown:\n+\n+      .. autodata:: CD_DRIVE\n+         :annotation:\n+\n+   If the option specified with arguments, it is printed after the\n+   name as a value of the variable:\n+\n+      .. autodata:: CD_DRIVE\n+         :annotation: = your CD device name\n+\n+   By default, without \"annotation\" option, Sphinx tries to obtain the\n+   value of the variable and print it after the name.\n+\n+   The \"no-value\" option can be used instead of a blank \"annotation\"\n+   to show the type hint but not the value:\n+\n+      .. autodata:: CD_DRIVE\n+         :no-value:\n+\n+   If both the \"annotation\" and \"no-value\" options are used, \"no-\n+   value\" has no effect.\n+\n+   For module data members and class attributes, documentation can\n+   either be put into a comment with special formatting (using a \"#:\"\n+   to start the comment instead of just \"#\"), or in a docstring\n+   *after* the definition.  Comments need to be either on a line of\n+   their own *before* the definition, or immediately after the\n+   assignment *on the same line*.  The latter form is restricted to\n+   one line only.\n+\n+   This means that in the following class definition, all attributes\n+   can be autodocumented:\n+\n+      class Foo:\n+          \"\"\"Docstring for class Foo.\"\"\"\n+\n+          #: Doc comment for class attribute Foo.bar.\n+          #: It can have multiple lines.\n+          bar = 1\n+\n+          flox = 1.5   #: Doc comment for Foo.flox. One line only.\n+\n+          baz = 2\n+          \"\"\"Docstring for class attribute Foo.baz.\"\"\"\n+\n+          def __init__(self):\n+              #: Doc comment for instance attribute qux.\n+              self.qux = 3\n+\n+              self.spam = 4\n+              \"\"\"Docstring for instance attribute spam.\"\"\"\n+\n+   Changed in version 0.6: \"autodata\" and \"autoattribute\" can now\n+   extract docstrings.\n+\n+   Changed in version 1.1: Comment docs are now allowed on the same\n+   line after an assignment.\n+\n+   Changed in version 1.2: \"autodata\" and \"autoattribute\" have an\n+   \"annotation\" option.\n+\n+   Changed in version 2.0: \"autodecorator\" added.\n+\n+   Changed in version 3.4: \"autodata\" and \"autoattribute\" now have a\n+   \"no-value\" option.\n+\n+   Note:\n+\n+     If you document decorated functions or methods, keep in mind that\n+     autodoc retrieves its docstrings by importing the module and\n+     inspecting the \"__doc__\" attribute of the given function or\n+     method.  That means that if a decorator replaces the decorated\n+     function with another, it must copy the original \"__doc__\" to the\n+     new function.\n+\n+\n+Configuration\n+=============\n+\n+There are also config values that you can set:\n+\n+\n+Docstring preprocessing\n+=======================\n+\n+autodoc provides the following additional events:\n+\n+The \"sphinx.ext.autodoc\" module provides factory functions for\n+commonly needed docstring processing in event >>:event:`autodoc-\n+process-docstring`<<:\n+\n+sphinx.ext.autodoc.cut_lines(pre: int, post: int = 0, what: Optional[str] = None) -> Callable\n+\n+   Return a listener that removes the first *pre* and last *post*\n+   lines of every docstring.  If *what* is a sequence of strings, only\n+   docstrings of a type in *what* will be processed.\n+\n+   Use like this (e.g. in the \"setup()\" function of \"conf.py\"):\n+\n+      from sphinx.ext.autodoc import cut_lines\n+      app.connect('autodoc-process-docstring', cut_lines(4, what=['module']))\n+\n+   This can (and should) be used in place of\n+   >>:confval:`automodule_skip_lines`<<.\n+\n+sphinx.ext.autodoc.between(marker: str, what: Optional[Sequence[str]] = None, keepempty: bool = False, exclude: bool = False) -> Callable\n+\n+   Return a listener that either keeps, or if *exclude* is True\n+   excludes, lines between lines that match the *marker* regular\n+   expression.  If no line matches, the resulting docstring would be\n+   empty, so no change will be made unless *keepempty* is true.\n+\n+   If *what* is a sequence of strings, only docstrings of a type in\n+   *what* will be processed.\n+\n+\n+Skipping members\n+================\n+\n+autodoc allows the user to define a custom method for determining\n+whether a member should be included in the documentation by using the\n+following event:\ndiff --git a/_build/doc/usage/extensions/autosectionlabel.txt b/_build/doc/usage/extensions/autosectionlabel.txt\nnew file mode 100644\nindex 000000000..b7ed6b572\n--- /dev/null\n+++ b/_build/doc/usage/extensions/autosectionlabel.txt\n@@ -0,0 +1,26 @@\n+\"sphinx.ext.autosectionlabel\" -- Allow reference sections using its title\n+*************************************************************************\n+\n+New in version 1.4.\n+\n+This extension allows you to refer sections its title.  This affects\n+to the reference role (\"ref\").\n+\n+For example:\n+\n+   A Plain Title\n+   -------------\n+\n+   This is the text of the section.\n+\n+   It refers to the section title, see :ref:`A Plain Title`.\n+\n+Internally, this extension generates the labels for each section.  If\n+same section names are used in whole of document, any one is used for\n+a target by default. The \"autosectionlabel_prefix_document\"\n+configuration variable can be used to make headings which appear\n+multiple times but in different documents unique.\n+\n+\n+Configuration\n+=============\ndiff --git a/_build/doc/usage/extensions/autosummary.txt b/_build/doc/usage/extensions/autosummary.txt\nnew file mode 100644\nindex 000000000..c69ea21fd\n--- /dev/null\n+++ b/_build/doc/usage/extensions/autosummary.txt\n@@ -0,0 +1,267 @@\n+\"sphinx.ext.autosummary\" -- Generate autodoc summaries\n+******************************************************\n+\n+New in version 0.6.\n+\n+This extension generates function/method/attribute summary lists,\n+similar to those output e.g. by Epydoc and other API doc generation\n+tools.  This is especially useful when your docstrings are long and\n+detailed, and putting each one of them on a separate page makes them\n+easier to read.\n+\n+The \"sphinx.ext.autosummary\" extension does this in two parts:\n+\n+1. There is an \"autosummary\" directive for generating summary listings\n+   that contain links to the documented items, and short summary\n+   blurbs extracted from their docstrings.\n+\n+2. Optionally, the convenience script **sphinx-autogen** or the new\n+   >>:confval:`autosummary_generate`<< config value can be used to\n+   generate short \"stub\" files for the entries listed in the\n+   \"autosummary\" directives. These files by default contain only the\n+   corresponding \"sphinx.ext.autodoc\" directive, but can be customized\n+   with templates.\n+\n+.. autosummary::\n+\n+   Insert a table that contains links to documented items, and a short\n+   summary blurb (the first sentence of the docstring) for each of\n+   them.\n+\n+   The \"autosummary\" directive can also optionally serve as a\n+   \"toctree\" entry for the included items. Optionally, stub \".rst\"\n+   files for these items can also be automatically generated when\n+   >>:confval:`autosummary_generate`<< is *True*.\n+\n+   For example,\n+\n+      .. currentmodule:: sphinx\n+\n+      .. autosummary::\n+\n+         environment.BuildEnvironment\n+         util.relative_uri\n+\n+   produces a table like this:\n+\n+   Autosummary preprocesses the docstrings and signatures with the\n+   same >>:event:`autodoc-process-docstring`<< and >>:event:`autodoc-\n+   process-signature`<< hooks as \"autodoc\".\n+\n+   **Options**\n+\n+   * If you want the \"autosummary\" table to also serve as a \"toctree\"\n+     entry, use the \"toctree\" option, for example:\n+\n+        .. autosummary::\n+           :toctree: DIRNAME\n+\n+           sphinx.environment.BuildEnvironment\n+           sphinx.util.relative_uri\n+\n+     The \"toctree\" option also signals to the **sphinx-autogen**\n+     script that stub pages should be generated for the entries listed\n+     in this directive.  The option accepts a directory name as an\n+     argument; **sphinx-autogen** will by default place its output in\n+     this directory. If no argument is given, output is placed in the\n+     same directory as the file that contains the directive.\n+\n+     You can also use \"caption\" option to give a caption to the\n+     toctree.\n+\n+     New in version 3.1: caption option added.\n+\n+   * If you don't want the \"autosummary\" to show function signatures\n+     in the listing, include the \"nosignatures\" option:\n+\n+        .. autosummary::\n+           :nosignatures:\n+\n+           sphinx.environment.BuildEnvironment\n+           sphinx.util.relative_uri\n+\n+   * You can specify a custom template with the \"template\" option. For\n+     example,\n+\n+        .. autosummary::\n+           :template: mytemplate.rst\n+\n+           sphinx.environment.BuildEnvironment\n+\n+     would use the template \"mytemplate.rst\" in your\n+     >>:confval:`templates_path`<< to generate the pages for all\n+     entries listed. See Customizing templates below.\n+\n+     New in version 1.0.\n+\n+   * You can specify the \"recursive\" option to generate documents for\n+     modules and sub-packages recursively.  It defaults to disabled.\n+     For example,\n+\n+        .. autosummary::\n+           :recursive:\n+\n+           sphinx.environment.BuildEnvironment\n+\n+     New in version 3.1.\n+\n+\n+**sphinx-autogen** -- generate autodoc stub pages\n+=================================================\n+\n+The **sphinx-autogen** script can be used to conveniently generate\n+stub documentation pages for items included in \"autosummary\" listings.\n+\n+For example, the command\n+\n+   $ sphinx-autogen -o generated *.rst\n+\n+will read all \"autosummary\" tables in the \"*.rst\" files that have the\n+\":toctree:\" option set, and output corresponding stub pages in\n+directory \"generated\" for all documented items.  The generated pages\n+by default contain text of the form:\n+\n+   sphinx.util.relative_uri\n+   ========================\n+\n+   .. autofunction:: sphinx.util.relative_uri\n+\n+If the \"-o\" option is not given, the script will place the output\n+files in the directories specified in the \":toctree:\" options.\n+\n+For more information, refer to the *sphinx-autogen documentation*\n+\n+\n+Generating stub pages automatically\n+===================================\n+\n+If you do not want to create stub pages with **sphinx-autogen**, you\n+can also use these config values:\n+\n+\n+Customizing templates\n+=====================\n+\n+New in version 1.0.\n+\n+You can customize the stub page templates, in a similar way as the\n+HTML Jinja templates, see Templating. (\"TemplateBridge\" is not\n+supported.)\n+\n+Note:\n+\n+  If you find yourself spending much time tailoring the stub\n+  templates, this may indicate that it's a better idea to write custom\n+  narrative documentation instead.\n+\n+Autosummary uses the following Jinja template files:\n+\n+* \"autosummary/base.rst\" -- fallback template\n+\n+* \"autosummary/module.rst\" -- template for modules\n+\n+* \"autosummary/class.rst\" -- template for classes\n+\n+* \"autosummary/function.rst\" -- template for functions\n+\n+* \"autosummary/attribute.rst\" -- template for class attributes\n+\n+* \"autosummary/method.rst\" -- template for class methods\n+\n+The following variables available in the templates:\n+\n+name\n+\n+   Name of the documented object, excluding the module and class\n+   parts.\n+\n+objname\n+\n+   Name of the documented object, excluding the module parts.\n+\n+fullname\n+\n+   Full name of the documented object, including module and class\n+   parts.\n+\n+module\n+\n+   Name of the module the documented object belongs to.\n+\n+class\n+\n+   Name of the class the documented object belongs to.  Only available\n+   for methods and attributes.\n+\n+underline\n+\n+   A string containing \"len(full_name) * '='\". Use the \"underline\"\n+   filter instead.\n+\n+members\n+\n+   List containing names of all members of the module or class.  Only\n+   available for modules and classes.\n+\n+inherited_members\n+\n+   List containing names of all inherited members of class.  Only\n+   available for classes.\n+\n+   New in version 1.8.0.\n+\n+functions\n+\n+   List containing names of \"public\" functions in the module.  Here,\n+   \"public\" here means that the name does not start with an\n+   underscore. Only available for modules.\n+\n+classes\n+\n+   List containing names of \"public\" classes in the module.  Only\n+   available for modules.\n+\n+exceptions\n+\n+   List containing names of \"public\" exceptions in the module.  Only\n+   available for modules.\n+\n+methods\n+\n+   List containing names of \"public\" methods in the class.  Only\n+   available for classes.\n+\n+attributes\n+\n+   List containing names of \"public\" attributes in the class/module.\n+   Only available for classes and modules.\n+\n+      Changed in version 3.1: Attributes of modules are supported.\n+\n+modules\n+\n+   List containing names of \"public\" modules in the package.  Only\n+   available for modules that are packages.\n+\n+   New in version 3.1.\n+\n+Additionally, the following filters are available\n+\n+escape(s)\n+\n+   Escape any special characters in the text to be used in formatting\n+   RST contexts. For instance, this prevents asterisks making things\n+   bold. This replaces the builtin Jinja escape filter that does html-\n+   escaping.\n+\n+underline(s, line='=')\n+\n+   Add a title underline to a piece of text.\n+\n+For instance, \"{{ fullname | escape | underline }}\" should be used to\n+produce the title of a page.\n+\n+Note:\n+\n+  You can use the \"autosummary\" directive in the stub pages. Stub\n+  pages are generated also based on these directives.\ndiff --git a/_build/doc/usage/extensions/coverage.txt b/_build/doc/usage/extensions/coverage.txt\nnew file mode 100644\nindex 000000000..5758e86e8\n--- /dev/null\n+++ b/_build/doc/usage/extensions/coverage.txt\n@@ -0,0 +1,12 @@\n+\"sphinx.ext.coverage\" -- Collect doc coverage stats\n+***************************************************\n+\n+This extension features one additional builder, the \"CoverageBuilder\".\n+\n+class sphinx.ext.coverage.CoverageBuilder\n+\n+   To use this builder, activate the coverage extension in your\n+   configuration file and give \"-b coverage\" on the command line.\n+\n+Several configuration values can be used to specify what the builder\n+should check:\ndiff --git a/_build/doc/usage/extensions/doctest.txt b/_build/doc/usage/extensions/doctest.txt\nnew file mode 100644\nindex 000000000..8bf5acbae\n--- /dev/null\n+++ b/_build/doc/usage/extensions/doctest.txt\n@@ -0,0 +1,294 @@\n+\"sphinx.ext.doctest\" -- Test snippets in the documentation\n+**********************************************************\n+\n+It is often helpful to include snippets of code in your documentation\n+and demonstrate the results of executing them. But it is important to\n+ensure that the documentation stays up-to-date with the code.\n+\n+This extension allows you to test such code snippets in the\n+documentation in a natural way.  If you mark the code blocks as shown\n+here, the \"doctest\" builder will collect them and run them as doctest\n+tests.\n+\n+Within each document, you can assign each snippet to a *group*. Each\n+group consists of:\n+\n+* zero or more *setup code* blocks (e.g. importing the module to test)\n+\n+* one or more *test* blocks\n+\n+When building the docs with the \"doctest\" builder, groups are\n+collected for each document and run one after the other, first\n+executing setup code blocks, then the test blocks in the order they\n+appear in the file.\n+\n+There are two kinds of test blocks:\n+\n+* *doctest-style* blocks mimic interactive sessions by interleaving\n+  Python code (including the interpreter prompt) and output.\n+\n+* *code-output-style* blocks consist of an ordinary piece of Python\n+  code, and optionally, a piece of output for that code.\n+\n+\n+Directives\n+==========\n+\n+The *group* argument below is interpreted as follows: if it is empty,\n+the block is assigned to the group named \"default\".  If it is \"*\", the\n+block is assigned to all groups (including the \"default\" group).\n+Otherwise, it must be a comma-separated list of group names.\n+\n+.. testsetup:: [group]\n+\n+   A setup code block.  This code is not shown in the output for other\n+   builders, but executed before the doctests of the group(s) it\n+   belongs to.\n+\n+.. testcleanup:: [group]\n+\n+   A cleanup code block.  This code is not shown in the output for\n+   other builders, but executed after the doctests of the group(s) it\n+   belongs to.\n+\n+   New in version 1.1.\n+\n+.. doctest:: [group]\n+\n+   A doctest-style code block.  You can use standard \"doctest\" flags\n+   for controlling how actual output is compared with what you give as\n+   output.  The default set of flags is specified by the\n+   >>:confval:`doctest_default_flags`<< configuration variable.\n+\n+   This directive supports five options:\n+\n+   * \"hide\", a flag option, hides the doctest block in other builders.\n+     By default it is shown as a highlighted doctest block.\n+\n+   * \"options\", a string option, can be used to give a comma-separated\n+     list of doctest flags that apply to each example in the tests.\n+     (You still can give explicit flags per example, with doctest\n+     comments, but they will show up in other builders too.)\n+\n+   * \"pyversion\", a string option, can be used to specify the required\n+     Python version for the example to be tested. For instance, in the\n+     following case the example will be tested only for Python\n+     versions greater than 3.3:\n+\n+        .. doctest::\n+           :pyversion: > 3.3\n+\n+     The following operands are supported:\n+\n+     * \"~=\": Compatible release clause\n+\n+     * \"==\": Version matching clause\n+\n+     * \"!=\": Version exclusion clause\n+\n+     * \"<=\", \">=\": Inclusive ordered comparison clause\n+\n+     * \"<\", \">\": Exclusive ordered comparison clause\n+\n+     * \"===\": Arbitrary equality clause.\n+\n+     \"pyversion\" option is followed PEP-440: Version Specifiers.\n+\n+     New in version 1.6.\n+\n+     Changed in version 1.7: Supported PEP-440 operands and notations\n+\n+   * \"trim-doctest-flags\" and \"no-trim-doctest-flags\", a flag option,\n+     doctest flags (comments looking like \"# doctest: FLAG, ...\") at\n+     the ends of lines and \"<BLANKLINE>\" markers are removed (or not\n+     removed) individually.  Default is \"trim-doctest-flags\".\n+\n+   Note that like with standard doctests, you have to use\n+   \"<BLANKLINE>\" to signal a blank line in the expected output.  The\n+   \"<BLANKLINE>\" is removed when building presentation output (HTML,\n+   LaTeX etc.).\n+\n+   Also, you can give inline doctest options, like in doctest:\n+\n+      >>> datetime.date.now()   # doctest: +SKIP\n+      datetime.date(2008, 1, 1)\n+\n+   They will be respected when the test is run, but stripped from\n+   presentation output.\n+\n+.. testcode:: [group]\n+\n+   A code block for a code-output-style test.\n+\n+   This directive supports three options:\n+\n+   * \"hide\", a flag option, hides the code block in other builders.\n+     By default it is shown as a highlighted code block.\n+\n+   * \"trim-doctest-flags\" and \"no-trim-doctest-flags\", a flag option,\n+     doctest flags (comments looking like \"# doctest: FLAG, ...\") at\n+     the ends of lines and \"<BLANKLINE>\" markers are removed (or not\n+     removed) individually.  Default is \"trim-doctest-flags\".\n+\n+   Note:\n+\n+     Code in a \"testcode\" block is always executed all at once, no\n+     matter how many statements it contains.  Therefore, output will\n+     *not* be generated for bare expressions -- use \"print\".  Example:\n+\n+        .. testcode::\n+\n+           1+1         # this will give no output!\n+           print(2+2)  # this will give output\n+\n+        .. testoutput::\n+\n+           4\n+\n+     Also, please be aware that since the doctest module does not\n+     support mixing regular output and an exception message in the\n+     same snippet, this applies to testcode/testoutput as well.\n+\n+.. testoutput:: [group]\n+\n+   The corresponding output, or the exception message, for the last\n+   \"testcode\" block.\n+\n+   This directive supports four options:\n+\n+   * \"hide\", a flag option, hides the output block in other builders.\n+     By default it is shown as a literal block without highlighting.\n+\n+   * \"options\", a string option, can be used to give doctest flags\n+     (comma-separated) just like in normal doctest blocks.\n+\n+   * \"trim-doctest-flags\" and \"no-trim-doctest-flags\", a flag option,\n+     doctest flags (comments looking like \"# doctest: FLAG, ...\") at\n+     the ends of lines and \"<BLANKLINE>\" markers are removed (or not\n+     removed) individually.  Default is \"trim-doctest-flags\".\n+\n+   Example:\n+\n+      .. testcode::\n+\n+         print('Output     text.')\n+\n+      .. testoutput::\n+         :hide:\n+         :options: -ELLIPSIS, +NORMALIZE_WHITESPACE\n+\n+         Output text.\n+\n+The following is an example for the usage of the directives.  The test\n+via \"doctest\" and the test via \"testcode\" and \"testoutput\" are\n+equivalent.\n+\n+   The parrot module\n+   =================\n+\n+   .. testsetup:: *\n+\n+      import parrot\n+\n+   The parrot module is a module about parrots.\n+\n+   Doctest example:\n+\n+   .. doctest::\n+\n+      >>> parrot.voom(3000)\n+      This parrot wouldn't voom if you put 3000 volts through it!\n+\n+   Test-Output example:\n+\n+   .. testcode::\n+\n+      parrot.voom(3000)\n+\n+   This would output:\n+\n+   .. testoutput::\n+\n+      This parrot wouldn't voom if you put 3000 volts through it!\n+\n+\n+Skipping tests conditionally\n+============================\n+\n+\"skipif\", a string option, can be used to skip directives\n+conditionally. This may be useful e.g. when a different set of tests\n+should be run depending on the environment (hardware, network/VPN,\n+optional dependencies or different versions of dependencies). The\n+\"skipif\" option is supported by all of the doctest directives. Below\n+are typical use cases for \"skipif\" when used for different directives:\n+\n+* \"testsetup\" and \"testcleanup\"\n+\n+  * conditionally skip test setup and/or cleanup\n+\n+  * customize setup/cleanup code per environment\n+\n+* \"doctest\"\n+\n+  * conditionally skip both a test and its output verification\n+\n+* \"testcode\"\n+\n+  * conditionally skip a test\n+\n+  * customize test code per environment\n+\n+* \"testoutput\"\n+\n+  * conditionally skip output assertion for a skipped test\n+\n+  * expect different output depending on the environment\n+\n+The value of the \"skipif\" option is evaluated as a Python expression.\n+If the result is a true value, the directive is omitted from the test\n+run just as if it wasn't present in the file at all.\n+\n+Instead of repeating an expression, the\n+>>:confval:`doctest_global_setup`<< configuration option can be used\n+to assign it to a variable which can then be used instead.\n+\n+Here's an example which skips some tests if Pandas is not installed:\n+\n+conf.py\n+\n+   extensions = ['sphinx.ext.doctest']\n+   doctest_global_setup = '''\n+   try:\n+       import pandas as pd\n+   except ImportError:\n+       pd = None\n+   '''\n+\n+contents.rst\n+\n+   .. testsetup::\n+      :skipif: pd is None\n+\n+      data = pd.Series([42])\n+\n+   .. doctest::\n+      :skipif: pd is None\n+\n+      >>> data.iloc[0]\n+      42\n+\n+   .. testcode::\n+      :skipif: pd is None\n+\n+      print(data.iloc[-1])\n+\n+   .. testoutput::\n+      :skipif: pd is None\n+\n+      42\n+\n+\n+Configuration\n+=============\n+\n+The doctest extension uses the following configuration values:\ndiff --git a/_build/doc/usage/extensions/duration.txt b/_build/doc/usage/extensions/duration.txt\nnew file mode 100644\nindex 000000000..d67331ff3\n--- /dev/null\n+++ b/_build/doc/usage/extensions/duration.txt\n@@ -0,0 +1,8 @@\n+\"sphinx.ext.duration\" -- Measure durations of Sphinx processing\n+***************************************************************\n+\n+New in version 2.4.\n+\n+This extension measures durations of Sphinx processing and show its\n+result at end of the build.  It is useful for inspecting what document\n+is slowly built.\ndiff --git a/_build/doc/usage/extensions/example_google.txt b/_build/doc/usage/extensions/example_google.txt\nnew file mode 100644\nindex 000000000..ed38f89ae\n--- /dev/null\n+++ b/_build/doc/usage/extensions/example_google.txt\n@@ -0,0 +1,319 @@\n+Example Google Style Python Docstrings\n+**************************************\n+\n+See also: Example NumPy Style Python Docstrings\n+\n+   \"\"\"Example Google style docstrings.\n+\n+   This module demonstrates documentation as specified by the `Google Python\n+   Style Guide`_. Docstrings may extend over multiple lines. Sections are created\n+   with a section header and a colon followed by a block of indented text.\n+\n+   Example:\n+       Examples can be given using either the ``Example`` or ``Examples``\n+       sections. Sections support any reStructuredText formatting, including\n+       literal blocks::\n+\n+           $ python example_google.py\n+\n+   Section breaks are created by resuming unindented text. Section breaks\n+   are also implicitly created anytime a new section starts.\n+\n+   Attributes:\n+       module_level_variable1 (int): Module level variables may be documented in\n+           either the ``Attributes`` section of the module docstring, or in an\n+           inline docstring immediately following the variable.\n+\n+           Either form is acceptable, but the two should not be mixed. Choose\n+           one convention to document module level variables and be consistent\n+           with it.\n+\n+   Todo:\n+       * For module TODOs\n+       * You have to also use ``sphinx.ext.todo`` extension\n+\n+   .. _Google Python Style Guide:\n+      https://google.github.io/styleguide/pyguide.html\n+\n+   \"\"\"\n+\n+   module_level_variable1 = 12345\n+\n+   module_level_variable2 = 98765\n+   \"\"\"int: Module level variable documented inline.\n+\n+   The docstring may span multiple lines. The type may optionally be specified\n+   on the first line, separated by a colon.\n+   \"\"\"\n+\n+\n+   def function_with_types_in_docstring(param1, param2):\n+       \"\"\"Example function with types documented in the docstring.\n+\n+       `PEP 484`_ type annotations are supported. If attribute, parameter, and\n+       return types are annotated according to `PEP 484`_, they do not need to be\n+       included in the docstring:\n+\n+       Args:\n+           param1 (int): The first parameter.\n+           param2 (str): The second parameter.\n+\n+       Returns:\n+           bool: The return value. True for success, False otherwise.\n+\n+       .. _PEP 484:\n+           https://www.python.org/dev/peps/pep-0484/\n+\n+       \"\"\"\n+\n+\n+   def function_with_pep484_type_annotations(param1: int, param2: str) -> bool:\n+       \"\"\"Example function with PEP 484 type annotations.\n+\n+       Args:\n+           param1: The first parameter.\n+           param2: The second parameter.\n+\n+       Returns:\n+           The return value. True for success, False otherwise.\n+\n+       \"\"\"\n+\n+\n+   def module_level_function(param1, param2=None, *args, **kwargs):\n+       \"\"\"This is an example of a module level function.\n+\n+       Function parameters should be documented in the ``Args`` section. The name\n+       of each parameter is required. The type and description of each parameter\n+       is optional, but should be included if not obvious.\n+\n+       If ``*args`` or ``**kwargs`` are accepted,\n+       they should be listed as ``*args`` and ``**kwargs``.\n+\n+       The format for a parameter is::\n+\n+           name (type): description\n+               The description may span multiple lines. Following\n+               lines should be indented. The \"(type)\" is optional.\n+\n+               Multiple paragraphs are supported in parameter\n+               descriptions.\n+\n+       Args:\n+           param1 (int): The first parameter.\n+           param2 (:obj:`str`, optional): The second parameter. Defaults to None.\n+               Second line of description should be indented.\n+           *args: Variable length argument list.\n+           **kwargs: Arbitrary keyword arguments.\n+\n+       Returns:\n+           bool: True if successful, False otherwise.\n+\n+           The return type is optional and may be specified at the beginning of\n+           the ``Returns`` section followed by a colon.\n+\n+           The ``Returns`` section may span multiple lines and paragraphs.\n+           Following lines should be indented to match the first line.\n+\n+           The ``Returns`` section supports any reStructuredText formatting,\n+           including literal blocks::\n+\n+               {\n+                   'param1': param1,\n+                   'param2': param2\n+               }\n+\n+       Raises:\n+           AttributeError: The ``Raises`` section is a list of all exceptions\n+               that are relevant to the interface.\n+           ValueError: If `param2` is equal to `param1`.\n+\n+       \"\"\"\n+       if param1 == param2:\n+           raise ValueError('param1 may not be equal to param2')\n+       return True\n+\n+\n+   def example_generator(n):\n+       \"\"\"Generators have a ``Yields`` section instead of a ``Returns`` section.\n+\n+       Args:\n+           n (int): The upper limit of the range to generate, from 0 to `n` - 1.\n+\n+       Yields:\n+           int: The next number in the range of 0 to `n` - 1.\n+\n+       Examples:\n+           Examples should be written in doctest format, and should illustrate how\n+           to use the function.\n+\n+           >>> print([i for i in example_generator(4)])\n+           [0, 1, 2, 3]\n+\n+       \"\"\"\n+       for i in range(n):\n+           yield i\n+\n+\n+   class ExampleError(Exception):\n+       \"\"\"Exceptions are documented in the same way as classes.\n+\n+       The __init__ method may be documented in either the class level\n+       docstring, or as a docstring on the __init__ method itself.\n+\n+       Either form is acceptable, but the two should not be mixed. Choose one\n+       convention to document the __init__ method and be consistent with it.\n+\n+       Note:\n+           Do not include the `self` parameter in the ``Args`` section.\n+\n+       Args:\n+           msg (str): Human readable string describing the exception.\n+           code (:obj:`int`, optional): Error code.\n+\n+       Attributes:\n+           msg (str): Human readable string describing the exception.\n+           code (int): Exception error code.\n+\n+       \"\"\"\n+\n+       def __init__(self, msg, code):\n+           self.msg = msg\n+           self.code = code\n+\n+\n+   class ExampleClass:\n+       \"\"\"The summary line for a class docstring should fit on one line.\n+\n+       If the class has public attributes, they may be documented here\n+       in an ``Attributes`` section and follow the same formatting as a\n+       function's ``Args`` section. Alternatively, attributes may be documented\n+       inline with the attribute's declaration (see __init__ method below).\n+\n+       Properties created with the ``@property`` decorator should be documented\n+       in the property's getter method.\n+\n+       Attributes:\n+           attr1 (str): Description of `attr1`.\n+           attr2 (:obj:`int`, optional): Description of `attr2`.\n+\n+       \"\"\"\n+\n+       def __init__(self, param1, param2, param3):\n+           \"\"\"Example of docstring on the __init__ method.\n+\n+           The __init__ method may be documented in either the class level\n+           docstring, or as a docstring on the __init__ method itself.\n+\n+           Either form is acceptable, but the two should not be mixed. Choose one\n+           convention to document the __init__ method and be consistent with it.\n+\n+           Note:\n+               Do not include the `self` parameter in the ``Args`` section.\n+\n+           Args:\n+               param1 (str): Description of `param1`.\n+               param2 (:obj:`int`, optional): Description of `param2`. Multiple\n+                   lines are supported.\n+               param3 (list(str)): Description of `param3`.\n+\n+           \"\"\"\n+           self.attr1 = param1\n+           self.attr2 = param2\n+           self.attr3 = param3  #: Doc comment *inline* with attribute\n+\n+           #: list(str): Doc comment *before* attribute, with type specified\n+           self.attr4 = ['attr4']\n+\n+           self.attr5 = None\n+           \"\"\"str: Docstring *after* attribute, with type specified.\"\"\"\n+\n+       @property\n+       def readonly_property(self):\n+           \"\"\"str: Properties should be documented in their getter method.\"\"\"\n+           return 'readonly_property'\n+\n+       @property\n+       def readwrite_property(self):\n+           \"\"\"list(str): Properties with both a getter and setter\n+           should only be documented in their getter method.\n+\n+           If the setter method contains notable behavior, it should be\n+           mentioned here.\n+           \"\"\"\n+           return ['readwrite_property']\n+\n+       @readwrite_property.setter\n+       def readwrite_property(self, value):\n+           value\n+\n+       def example_method(self, param1, param2):\n+           \"\"\"Class methods are similar to regular functions.\n+\n+           Note:\n+               Do not include the `self` parameter in the ``Args`` section.\n+\n+           Args:\n+               param1: The first parameter.\n+               param2: The second parameter.\n+\n+           Returns:\n+               True if successful, False otherwise.\n+\n+           \"\"\"\n+           return True\n+\n+       def __special__(self):\n+           \"\"\"By default special members with docstrings are not included.\n+\n+           Special members are any methods or attributes that start with and\n+           end with a double underscore. Any special member with a docstring\n+           will be included in the output, if\n+           ``napoleon_include_special_with_doc`` is set to True.\n+\n+           This behavior can be enabled by changing the following setting in\n+           Sphinx's conf.py::\n+\n+               napoleon_include_special_with_doc = True\n+\n+           \"\"\"\n+           pass\n+\n+       def __special_without_docstring__(self):\n+           pass\n+\n+       def _private(self):\n+           \"\"\"By default private members are not included.\n+\n+           Private members are any methods or attributes that start with an\n+           underscore and are *not* special. By default they are not included\n+           in the output.\n+\n+           This behavior can be changed such that private members *are* included\n+           by changing the following setting in Sphinx's conf.py::\n+\n+               napoleon_include_private_with_doc = True\n+\n+           \"\"\"\n+           pass\n+\n+       def _private_without_docstring(self):\n+           pass\n+\n+   class ExamplePEP526Class:\n+       \"\"\"The summary line for a class docstring should fit on one line.\n+\n+       If the class has public attributes, they may be documented here\n+       in an ``Attributes`` section and follow the same formatting as a\n+       function's ``Args`` section. If ``napoleon_attr_annotations``\n+       is True, types can be specified in the class body using ``PEP 526``\n+       annotations.\n+\n+       Attributes:\n+           attr1: Description of `attr1`.\n+           attr2: Description of `attr2`.\n+\n+       \"\"\"\n+\n+       attr1: str\n+       attr2: int\ndiff --git a/_build/doc/usage/extensions/example_numpy.txt b/_build/doc/usage/extensions/example_numpy.txt\nnew file mode 100644\nindex 000000000..727e75c37\n--- /dev/null\n+++ b/_build/doc/usage/extensions/example_numpy.txt\n@@ -0,0 +1,360 @@\n+Example NumPy Style Python Docstrings\n+*************************************\n+\n+See also: Example Google Style Python Docstrings\n+\n+   \"\"\"Example NumPy style docstrings.\n+\n+   This module demonstrates documentation as specified by the `NumPy\n+   Documentation HOWTO`_. Docstrings may extend over multiple lines. Sections\n+   are created with a section header followed by an underline of equal length.\n+\n+   Example\n+   -------\n+   Examples can be given using either the ``Example`` or ``Examples``\n+   sections. Sections support any reStructuredText formatting, including\n+   literal blocks::\n+\n+       $ python example_numpy.py\n+\n+\n+   Section breaks are created with two blank lines. Section breaks are also\n+   implicitly created anytime a new section starts. Section bodies *may* be\n+   indented:\n+\n+   Notes\n+   -----\n+       This is an example of an indented section. It's like any other section,\n+       but the body is indented to help it stand out from surrounding text.\n+\n+   If a section is indented, then a section break is created by\n+   resuming unindented text.\n+\n+   Attributes\n+   ----------\n+   module_level_variable1 : int\n+       Module level variables may be documented in either the ``Attributes``\n+       section of the module docstring, or in an inline docstring immediately\n+       following the variable.\n+\n+       Either form is acceptable, but the two should not be mixed. Choose\n+       one convention to document module level variables and be consistent\n+       with it.\n+\n+\n+   .. _NumPy Documentation HOWTO:\n+      https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt\n+\n+   \"\"\"\n+\n+   module_level_variable1 = 12345\n+\n+   module_level_variable2 = 98765\n+   \"\"\"int: Module level variable documented inline.\n+\n+   The docstring may span multiple lines. The type may optionally be specified\n+   on the first line, separated by a colon.\n+   \"\"\"\n+\n+\n+   def function_with_types_in_docstring(param1, param2):\n+       \"\"\"Example function with types documented in the docstring.\n+\n+       `PEP 484`_ type annotations are supported. If attribute, parameter, and\n+       return types are annotated according to `PEP 484`_, they do not need to be\n+       included in the docstring:\n+\n+       Parameters\n+       ----------\n+       param1 : int\n+           The first parameter.\n+       param2 : str\n+           The second parameter.\n+\n+       Returns\n+       -------\n+       bool\n+           True if successful, False otherwise.\n+\n+       .. _PEP 484:\n+           https://www.python.org/dev/peps/pep-0484/\n+\n+       \"\"\"\n+\n+\n+   def function_with_pep484_type_annotations(param1: int, param2: str) -> bool:\n+       \"\"\"Example function with PEP 484 type annotations.\n+\n+       The return type must be duplicated in the docstring to comply\n+       with the NumPy docstring style.\n+\n+       Parameters\n+       ----------\n+       param1\n+           The first parameter.\n+       param2\n+           The second parameter.\n+\n+       Returns\n+       -------\n+       bool\n+           True if successful, False otherwise.\n+\n+       \"\"\"\n+\n+\n+   def module_level_function(param1, param2=None, *args, **kwargs):\n+       \"\"\"This is an example of a module level function.\n+\n+       Function parameters should be documented in the ``Parameters`` section.\n+       The name of each parameter is required. The type and description of each\n+       parameter is optional, but should be included if not obvious.\n+\n+       If ``*args`` or ``**kwargs`` are accepted,\n+       they should be listed as ``*args`` and ``**kwargs``.\n+\n+       The format for a parameter is::\n+\n+           name : type\n+               description\n+\n+               The description may span multiple lines. Following lines\n+               should be indented to match the first line of the description.\n+               The \": type\" is optional.\n+\n+               Multiple paragraphs are supported in parameter\n+               descriptions.\n+\n+       Parameters\n+       ----------\n+       param1 : int\n+           The first parameter.\n+       param2 : :obj:`str`, optional\n+           The second parameter.\n+       *args\n+           Variable length argument list.\n+       **kwargs\n+           Arbitrary keyword arguments.\n+\n+       Returns\n+       -------\n+       bool\n+           True if successful, False otherwise.\n+\n+           The return type is not optional. The ``Returns`` section may span\n+           multiple lines and paragraphs. Following lines should be indented to\n+           match the first line of the description.\n+\n+           The ``Returns`` section supports any reStructuredText formatting,\n+           including literal blocks::\n+\n+               {\n+                   'param1': param1,\n+                   'param2': param2\n+               }\n+\n+       Raises\n+       ------\n+       AttributeError\n+           The ``Raises`` section is a list of all exceptions\n+           that are relevant to the interface.\n+       ValueError\n+           If `param2` is equal to `param1`.\n+\n+       \"\"\"\n+       if param1 == param2:\n+           raise ValueError('param1 may not be equal to param2')\n+       return True\n+\n+\n+   def example_generator(n):\n+       \"\"\"Generators have a ``Yields`` section instead of a ``Returns`` section.\n+\n+       Parameters\n+       ----------\n+       n : int\n+           The upper limit of the range to generate, from 0 to `n` - 1.\n+\n+       Yields\n+       ------\n+       int\n+           The next number in the range of 0 to `n` - 1.\n+\n+       Examples\n+       --------\n+       Examples should be written in doctest format, and should illustrate how\n+       to use the function.\n+\n+       >>> print([i for i in example_generator(4)])\n+       [0, 1, 2, 3]\n+\n+       \"\"\"\n+       for i in range(n):\n+           yield i\n+\n+\n+   class ExampleError(Exception):\n+       \"\"\"Exceptions are documented in the same way as classes.\n+\n+       The __init__ method may be documented in either the class level\n+       docstring, or as a docstring on the __init__ method itself.\n+\n+       Either form is acceptable, but the two should not be mixed. Choose one\n+       convention to document the __init__ method and be consistent with it.\n+\n+       Note\n+       ----\n+       Do not include the `self` parameter in the ``Parameters`` section.\n+\n+       Parameters\n+       ----------\n+       msg : str\n+           Human readable string describing the exception.\n+       code : :obj:`int`, optional\n+           Numeric error code.\n+\n+       Attributes\n+       ----------\n+       msg : str\n+           Human readable string describing the exception.\n+       code : int\n+           Numeric error code.\n+\n+       \"\"\"\n+\n+       def __init__(self, msg, code):\n+           self.msg = msg\n+           self.code = code\n+\n+\n+   class ExampleClass:\n+       \"\"\"The summary line for a class docstring should fit on one line.\n+\n+       If the class has public attributes, they may be documented here\n+       in an ``Attributes`` section and follow the same formatting as a\n+       function's ``Args`` section. Alternatively, attributes may be documented\n+       inline with the attribute's declaration (see __init__ method below).\n+\n+       Properties created with the ``@property`` decorator should be documented\n+       in the property's getter method.\n+\n+       Attributes\n+       ----------\n+       attr1 : str\n+           Description of `attr1`.\n+       attr2 : :obj:`int`, optional\n+           Description of `attr2`.\n+\n+       \"\"\"\n+\n+       def __init__(self, param1, param2, param3):\n+           \"\"\"Example of docstring on the __init__ method.\n+\n+           The __init__ method may be documented in either the class level\n+           docstring, or as a docstring on the __init__ method itself.\n+\n+           Either form is acceptable, but the two should not be mixed. Choose one\n+           convention to document the __init__ method and be consistent with it.\n+\n+           Note\n+           ----\n+           Do not include the `self` parameter in the ``Parameters`` section.\n+\n+           Parameters\n+           ----------\n+           param1 : str\n+               Description of `param1`.\n+           param2 : list(str)\n+               Description of `param2`. Multiple\n+               lines are supported.\n+           param3 : :obj:`int`, optional\n+               Description of `param3`.\n+\n+           \"\"\"\n+           self.attr1 = param1\n+           self.attr2 = param2\n+           self.attr3 = param3  #: Doc comment *inline* with attribute\n+\n+           #: list(str): Doc comment *before* attribute, with type specified\n+           self.attr4 = [\"attr4\"]\n+\n+           self.attr5 = None\n+           \"\"\"str: Docstring *after* attribute, with type specified.\"\"\"\n+\n+       @property\n+       def readonly_property(self):\n+           \"\"\"str: Properties should be documented in their getter method.\"\"\"\n+           return \"readonly_property\"\n+\n+       @property\n+       def readwrite_property(self):\n+           \"\"\"list(str): Properties with both a getter and setter\n+           should only be documented in their getter method.\n+\n+           If the setter method contains notable behavior, it should be\n+           mentioned here.\n+           \"\"\"\n+           return [\"readwrite_property\"]\n+\n+       @readwrite_property.setter\n+       def readwrite_property(self, value):\n+           value\n+\n+       def example_method(self, param1, param2):\n+           \"\"\"Class methods are similar to regular functions.\n+\n+           Note\n+           ----\n+           Do not include the `self` parameter in the ``Parameters`` section.\n+\n+           Parameters\n+           ----------\n+           param1\n+               The first parameter.\n+           param2\n+               The second parameter.\n+\n+           Returns\n+           -------\n+           bool\n+               True if successful, False otherwise.\n+\n+           \"\"\"\n+           return True\n+\n+       def __special__(self):\n+           \"\"\"By default special members with docstrings are not included.\n+\n+           Special members are any methods or attributes that start with and\n+           end with a double underscore. Any special member with a docstring\n+           will be included in the output, if\n+           ``napoleon_include_special_with_doc`` is set to True.\n+\n+           This behavior can be enabled by changing the following setting in\n+           Sphinx's conf.py::\n+\n+               napoleon_include_special_with_doc = True\n+\n+           \"\"\"\n+           pass\n+\n+       def __special_without_docstring__(self):\n+           pass\n+\n+       def _private(self):\n+           \"\"\"By default private members are not included.\n+\n+           Private members are any methods or attributes that start with an\n+           underscore and are *not* special. By default they are not included\n+           in the output.\n+\n+           This behavior can be changed such that private members *are* included\n+           by changing the following setting in Sphinx's conf.py::\n+\n+               napoleon_include_private_with_doc = True\n+\n+           \"\"\"\n+           pass\n+\n+       def _private_without_docstring(self):\n+           pass\ndiff --git a/_build/doc/usage/extensions/extlinks.txt b/_build/doc/usage/extensions/extlinks.txt\nnew file mode 100644\nindex 000000000..9e830196e\n--- /dev/null\n+++ b/_build/doc/usage/extensions/extlinks.txt\n@@ -0,0 +1,22 @@\n+\"sphinx.ext.extlinks\" -- Markup to shorten external links\n+*********************************************************\n+\n+New in version 1.0.\n+\n+This extension is meant to help with the common pattern of having many\n+external links that point to URLs on one and the same site, e.g. links\n+to bug trackers, version control web interfaces, or simply subpages in\n+other websites.  It does so by providing aliases to base URLs, so that\n+you only need to give the subpage name when creating a link.\n+\n+Let's assume that you want to include many links to issues at the\n+Sphinx tracker, at \"https://github.com/sphinx-\n+doc/sphinx/issues/*num*\".  Typing this URL again and again is tedious,\n+so you can use \"extlinks\" to avoid repeating yourself.\n+\n+The extension adds a config value:\n+\n+Note:\n+\n+  Since links are generated from the role in the reading stage, they\n+  appear as ordinary links to e.g. the \"linkcheck\" builder.\ndiff --git a/_build/doc/usage/extensions/githubpages.txt b/_build/doc/usage/extensions/githubpages.txt\nnew file mode 100644\nindex 000000000..3b4d62d7c\n--- /dev/null\n+++ b/_build/doc/usage/extensions/githubpages.txt\n@@ -0,0 +1,12 @@\n+\"sphinx.ext.githubpages\" -- Publish HTML docs in GitHub Pages\n+*************************************************************\n+\n+New in version 1.4.\n+\n+Changed in version 2.0: Support \"CNAME\" file\n+\n+This extension creates \".nojekyll\" file on generated HTML directory to\n+publish the document on GitHub Pages.\n+\n+It also creates a \"CNAME\" file for custom domains when\n+>>:confval:`html_baseurl`<< set.\ndiff --git a/_build/doc/usage/extensions/graphviz.txt b/_build/doc/usage/extensions/graphviz.txt\nnew file mode 100644\nindex 000000000..1021acc9e\n--- /dev/null\n+++ b/_build/doc/usage/extensions/graphviz.txt\n@@ -0,0 +1,174 @@\n+\"sphinx.ext.graphviz\" -- Add Graphviz graphs\n+********************************************\n+\n+New in version 0.6.\n+\n+This extension allows you to embed Graphviz graphs in your documents.\n+\n+It adds these directives:\n+\n+.. graphviz::\n+\n+   Directive to embed graphviz code.  The input code for \"dot\" is\n+   given as the content.  For example:\n+\n+      .. graphviz::\n+\n+         digraph foo {\n+            \"bar\" -> \"baz\";\n+         }\n+\n+   In HTML output, the code will be rendered to a PNG or SVG image\n+   (see >>:confval:`graphviz_output_format`<<).  In LaTeX output, the\n+   code will be rendered to an embeddable PDF file.\n+\n+   You can also embed external dot files, by giving the file name as\n+   an argument to \"graphviz\" and no additional content:\n+\n+      .. graphviz:: external.dot\n+\n+   As for all file references in Sphinx, if the filename is absolute,\n+   it is taken as relative to the source directory.\n+\n+   Changed in version 1.1: Added support for external files.\n+\n+   -[ options ]-\n+\n+   :alt: alternate text (text)\n+\n+      The alternate text of the graph.  By default, the graph code is\n+      used to the alternate text.\n+\n+      New in version 1.0.\n+\n+   :align: alignment of the graph (left, center or right)\n+\n+      The horizontal alignment of the graph.\n+\n+      New in version 1.5.\n+\n+   :caption: caption of the graph (text)\n+\n+      The caption of the graph.\n+\n+      New in version 1.1.\n+\n+   :layout: layout type of the graph (text)\n+\n+      The layout of the graph (ex. \"dot\", \"neato\" and so on).  A path\n+      to the graphviz commands are also allowed.  By default,\n+      >>:confval:`graphviz_dot`<< is used.\n+\n+      New in version 1.4.\n+\n+      Changed in version 2.2: Renamed from \"graphviz_dot\"\n+\n+   :name: label (text)\n+\n+      The label of the graph.\n+\n+      New in version 1.6.\n+\n+   :class: class names (a list of class names separeted by spaces)\n+\n+      The class name of the graph.\n+\n+      New in version 2.4.\n+\n+.. graph::\n+\n+   Directive for embedding a single undirected graph.  The name is\n+   given as a directive argument, the contents of the graph are the\n+   directive content. This is a convenience directive to generate\n+   \"graph <name> { <content> }\".\n+\n+   For example:\n+\n+      .. graph:: foo\n+\n+         \"bar\" -- \"baz\";\n+\n+   Note:\n+\n+     The graph name is passed unchanged to Graphviz.  If it contains\n+     non-alphanumeric characters (e.g. a dash), you will have to\n+     double-quote it.\n+\n+   -[ options ]-\n+\n+   Same as \"graphviz\".\n+\n+   :alt: alternate text (text)\n+\n+      New in version 1.0.\n+\n+   :align: alignment of the graph (left, center or right)\n+\n+      New in version 1.5.\n+\n+   :caption: caption of the graph (text)\n+\n+      New in version 1.1.\n+\n+   :layout: layout type of the graph (text)\n+\n+      New in version 1.4.\n+\n+      Changed in version 2.2: Renamed from \"graphviz_dot\"\n+\n+   :name: label (text)\n+\n+      New in version 1.6.\n+\n+   :class: class names (a list of class names separeted by spaces)\n+\n+      The class name of the graph.\n+\n+      New in version 2.4.\n+\n+.. digraph::\n+\n+   Directive for embedding a single directed graph.  The name is given\n+   as a directive argument, the contents of the graph are the\n+   directive content. This is a convenience directive to generate\n+   \"digraph <name> { <content> }\".\n+\n+   For example:\n+\n+      .. digraph:: foo\n+\n+         \"bar\" -> \"baz\" -> \"quux\";\n+\n+   -[ options ]-\n+\n+   Same as \"graphviz\".\n+\n+   :alt: alternate text (text)\n+\n+      New in version 1.0.\n+\n+   :align: alignment of the graph (left, center or right)\n+\n+      New in version 1.5.\n+\n+   :caption: caption of the graph (text)\n+\n+      New in version 1.1.\n+\n+   :layout: layout type of the graph (text)\n+\n+      New in version 1.4.\n+\n+      Changed in version 2.2: Renamed from \"graphviz_dot\"\n+\n+   :name: label (text)\n+\n+      New in version 1.6.\n+\n+   :class: class names (a list of class names separeted by spaces)\n+\n+      The class name of the graph.\n+\n+      New in version 2.4.\n+\n+There are also these config values:\ndiff --git a/_build/doc/usage/extensions/ifconfig.txt b/_build/doc/usage/extensions/ifconfig.txt\nnew file mode 100644\nindex 000000000..0fa5dbed9\n--- /dev/null\n+++ b/_build/doc/usage/extensions/ifconfig.txt\n@@ -0,0 +1,32 @@\n+\"sphinx.ext.ifconfig\" -- Include content based on configuration\n+***************************************************************\n+\n+This extension is quite simple, and features only one directive:\n+\n+Warning:\n+\n+  This directive is designed to control only content of document.  It\n+  could not control sections, labels and so on.\n+\n+.. ifconfig::\n+\n+   Include content of the directive only if the Python expression\n+   given as an argument is \"True\", evaluated in the namespace of the\n+   project's configuration (that is, all registered variables from\n+   \"conf.py\" are available).\n+\n+   For example, one could write\n+\n+      .. ifconfig:: releaselevel in ('alpha', 'beta', 'rc')\n+\n+         This stuff is only included in the built docs for unstable versions.\n+\n+   To make a custom config value known to Sphinx, use\n+   \"add_config_value()\" in the setup function in \"conf.py\", e.g.:\n+\n+      def setup(app):\n+          app.add_config_value('releaselevel', '', 'env')\n+\n+   The second argument is the default value, the third should always\n+   be \"'env'\" for such values (it selects if Sphinx re-reads the\n+   documents if the value changes).\ndiff --git a/_build/doc/usage/extensions/imgconverter.txt b/_build/doc/usage/extensions/imgconverter.txt\nnew file mode 100644\nindex 000000000..e3b16e44b\n--- /dev/null\n+++ b/_build/doc/usage/extensions/imgconverter.txt\n@@ -0,0 +1,22 @@\n+\"sphinx.ext.imgconverter\" -- A reference image converter using Imagemagick\n+**************************************************************************\n+\n+New in version 1.6.\n+\n+This extension converts images in your document to appropriate format\n+for builders.  For example, it allows you to use SVG images with LaTeX\n+builder. As a result, you don't mind what image format the builder\n+supports.\n+\n+Internally, this extension uses Imagemagick to convert images.\n+\n+Note:\n+\n+  Imagemagick rasterizes a SVG image on conversion.  As a result, the\n+  image becomes not scalable.  To avoid that, please use other image\n+  converters like sphinxcontrib-svg2pdfconverter (which uses Inkscape\n+  or \"rsvg-convert\").\n+\n+\n+Configuration\n+=============\ndiff --git a/_build/doc/usage/extensions/index.txt b/_build/doc/usage/extensions/index.txt\nnew file mode 100644\nindex 000000000..9c627e387\n--- /dev/null\n+++ b/_build/doc/usage/extensions/index.txt\n@@ -0,0 +1,151 @@\n+Extensions\n+**********\n+\n+Since many projects will need special features in their documentation,\n+Sphinx allows adding \"extensions\" to the build process, each of which\n+can modify almost any aspect of document processing.\n+\n+This chapter describes the extensions bundled with Sphinx.  For the\n+API documentation on writing your own extension, refer to Developing\n+extensions for Sphinx.\n+\n+\n+Built-in extensions\n+===================\n+\n+These extensions are built in and can be activated by respective\n+entries in the >>:confval:`extensions`<< configuration value:\n+\n+* \"sphinx.ext.autodoc\" -- Include documentation from docstrings\n+\n+  * Directives\n+\n+  * Configuration\n+\n+  * Docstring preprocessing\n+\n+  * Skipping members\n+\n+* \"sphinx.ext.autosectionlabel\" -- Allow reference sections using its\n+  title\n+\n+  * Configuration\n+\n+* \"sphinx.ext.autosummary\" -- Generate autodoc summaries\n+\n+  * **sphinx-autogen** -- generate autodoc stub pages\n+\n+  * Generating stub pages automatically\n+\n+  * Customizing templates\n+\n+* \"sphinx.ext.coverage\" -- Collect doc coverage stats\n+\n+* \"sphinx.ext.doctest\" -- Test snippets in the documentation\n+\n+  * Directives\n+\n+  * Skipping tests conditionally\n+\n+  * Configuration\n+\n+* \"sphinx.ext.duration\" -- Measure durations of Sphinx processing\n+\n+* \"sphinx.ext.extlinks\" -- Markup to shorten external links\n+\n+* \"sphinx.ext.githubpages\" -- Publish HTML docs in GitHub Pages\n+\n+* \"sphinx.ext.graphviz\" -- Add Graphviz graphs\n+\n+* \"sphinx.ext.ifconfig\" -- Include content based on configuration\n+\n+* \"sphinx.ext.imgconverter\" -- A reference image converter using\n+  Imagemagick\n+\n+  * Configuration\n+\n+* \"sphinx.ext.inheritance_diagram\" -- Include inheritance diagrams\n+\n+  * Examples\n+\n+  * Configuration\n+\n+* \"sphinx.ext.intersphinx\" -- Link to other projects' documentation\n+\n+  * Configuration\n+\n+  * Showing all links of an Intersphinx mapping file\n+\n+  * Using Intersphinx with inventory file under Basic Authorization\n+\n+* \"sphinx.ext.linkcode\" -- Add external links to source code\n+\n+  * Configuration\n+\n+* Math support for HTML outputs in Sphinx\n+\n+  * \"sphinx.ext.imgmath\" -- Render math as images\n+\n+  * \"sphinx.ext.mathjax\" -- Render math via JavaScript\n+\n+  * \"sphinx.ext.jsmath\" -- Render math via JavaScript\n+\n+* \"sphinx.ext.napoleon\" -- Support for NumPy and Google style\n+  docstrings\n+\n+  * Overview\n+\n+    * Getting Started\n+\n+    * Docstrings\n+\n+    * Docstring Sections\n+\n+    * Google vs NumPy\n+\n+    * Type Annotations\n+\n+  * Configuration\n+\n+* \"sphinx.ext.todo\" -- Support for todo items\n+\n+  * Configuration\n+\n+* \"sphinx.ext.viewcode\" -- Add links to highlighted source code\n+\n+  * Configuration\n+\n+\n+Third-party extensions\n+======================\n+\n+You can find several extensions contributed by users in the Sphinx\n+Contrib repository.  It is open for anyone who wants to maintain an\n+extension publicly; just send a short message asking for write\n+permissions.\n+\n+There are also several extensions hosted elsewhere.  The Sphinx\n+extension survey and awesome-sphinxdoc contains a comprehensive list.\n+\n+If you write an extension that you think others will find useful or\n+you think should be included as a part of Sphinx, please write to the\n+project mailing list (join here).\n+\n+\n+Where to put your own extensions?\n+---------------------------------\n+\n+Extensions local to a project should be put within the project's\n+directory structure.  Set Python's module search path, \"sys.path\",\n+accordingly so that Sphinx can find them.  For example, if your\n+extension \"foo.py\" lies in the \"exts\" subdirectory of the project\n+root, put into \"conf.py\":\n+\n+   import sys, os\n+\n+   sys.path.append(os.path.abspath('exts'))\n+\n+   extensions = ['foo']\n+\n+You can also install extensions anywhere else on \"sys.path\", e.g. in\n+the \"site-packages\" directory.\ndiff --git a/_build/doc/usage/extensions/inheritance.txt b/_build/doc/usage/extensions/inheritance.txt\nnew file mode 100644\nindex 000000000..7cdb545b7\n--- /dev/null\n+++ b/_build/doc/usage/extensions/inheritance.txt\n@@ -0,0 +1,123 @@\n+\"sphinx.ext.inheritance_diagram\" -- Include inheritance diagrams\n+****************************************************************\n+\n+New in version 0.6.\n+\n+This extension allows you to include inheritance diagrams, rendered\n+via the \"Graphviz extension\".\n+\n+It adds this directive:\n+\n+.. inheritance-diagram::\n+\n+   This directive has one or more arguments, each giving a module or\n+   class name.  Class names can be unqualified; in that case they are\n+   taken to exist in the currently described module (see \"py:module\").\n+\n+   For each given class, and each class in each given module, the base\n+   classes are determined.  Then, from all classes and their base\n+   classes, a graph is generated which is then rendered via the\n+   graphviz extension to a directed graph.\n+\n+   This directive supports an option called \"parts\" that, if given,\n+   must be an integer, advising the directive to keep that many dot-\n+   separated parts in the displayed names (from right to left). For\n+   example, \"parts=1\" will only display class names, without the names\n+   of the modules that contain them.\n+\n+   Changed in version 2.0: The value of for \"parts\" can also be\n+   negative, indicating how many parts to drop from the left.  For\n+   example, if all your class names start with \"lib.\", you can give\n+   \":parts: -1\" to remove that prefix from the displayed node names.\n+\n+   The directive also supports a \"private-bases\" flag option; if\n+   given, private base classes (those whose name starts with \"_\") will\n+   be included.\n+\n+   You can use \"caption\" option to give a caption to the diagram.\n+\n+   Changed in version 1.1: Added \"private-bases\" option; previously,\n+   all bases were always included.\n+\n+   Changed in version 1.5: Added \"caption\" option\n+\n+   It also supports a \"top-classes\" option which requires one or more\n+   class names separated by comma. If specified inheritance traversal\n+   will stop at the specified class names. Given the following Python\n+   module:\n+\n+      \"\"\"\n+             A\n+            / \\\n+           B   C\n+          / \\ / \\\n+         E   D   F\n+      \"\"\"\n+\n+      class A:\n+          pass\n+\n+      class B(A):\n+          pass\n+\n+      class C(A):\n+          pass\n+\n+      class D(B, C):\n+          pass\n+\n+      class E(B):\n+          pass\n+\n+      class F(C):\n+          pass\n+\n+   If you have specified a module in the inheritance diagram like\n+   this:\n+\n+      .. inheritance-diagram:: dummy.test\n+         :top-classes: dummy.test.B, dummy.test.C\n+\n+   any base classes which are ancestors to \"top-classes\" and are also\n+   defined in the same module will be rendered as stand alone nodes.\n+   In this example class A will be rendered as stand alone node in the\n+   graph. This is a known issue due to how this extension works\n+   internally.\n+\n+   If you don't want class A (or any other ancestors) to be visible\n+   then specify only the classes you would like to generate the\n+   diagram for like this:\n+\n+      .. inheritance-diagram:: dummy.test.D dummy.test.E dummy.test.F\n+         :top-classes: dummy.test.B, dummy.test.C\n+\n+   Changed in version 1.7: Added \"top-classes\" option to limit the\n+   scope of inheritance graphs.\n+\n+\n+Examples\n+========\n+\n+The following are different inheritance diagrams for the internal\n+\"InheritanceDiagram\" class that implements the directive.\n+\n+With full names:\n+\n+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram\n+\n+Showing class names only:\n+\n+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram\n+      :parts: 1\n+\n+Stopping the diagram at \"sphinx.util.docutils.SphinxDirective\" (the\n+highest superclass still part of Sphinx), and dropping the common\n+left-most part (\"sphinx\") from all names:\n+\n+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram\n+      :top-classes: sphinx.util.docutils.SphinxDirective\n+      :parts: -1\n+\n+\n+Configuration\n+=============\ndiff --git a/_build/doc/usage/extensions/intersphinx.txt b/_build/doc/usage/extensions/intersphinx.txt\nnew file mode 100644\nindex 000000000..0119035b9\n--- /dev/null\n+++ b/_build/doc/usage/extensions/intersphinx.txt\n@@ -0,0 +1,68 @@\n+\"sphinx.ext.intersphinx\" -- Link to other projects' documentation\n+*****************************************************************\n+\n+New in version 0.5.\n+\n+This extension can generate automatic links to the documentation of\n+objects in other projects.\n+\n+Usage is simple: whenever Sphinx encounters a cross-reference that has\n+no matching target in the current documentation set, it looks for\n+targets in the documentation sets configured in\n+>>:confval:`intersphinx_mapping`<<.  A reference like\n+\":py:class:`zipfile.ZipFile`\" can then link to the Python\n+documentation for the ZipFile class, without you having to specify\n+where it is located exactly.\n+\n+When using the \"new\" format (see below), you can even force lookup in\n+a foreign set by prefixing the link target appropriately.  A link like\n+\":ref:`comparison manual <python:comparisons>`\" will then link to the\n+label \"comparisons\" in the doc set \"python\", if it exists.\n+\n+Behind the scenes, this works as follows:\n+\n+* Each Sphinx HTML build creates a file named \"objects.inv\" that\n+  contains a mapping from object names to URIs relative to the HTML\n+  set's root.\n+\n+* Projects using the Intersphinx extension can specify the location of\n+  such mapping files in the >>:confval:`intersphinx_mapping`<< config\n+  value.  The mapping will then be used to resolve otherwise missing\n+  references to objects into links to the other documentation.\n+\n+* By default, the mapping file is assumed to be at the same location\n+  as the rest of the documentation; however, the location of the\n+  mapping file can also be specified individually, e.g. if the docs\n+  should be buildable without Internet access.\n+\n+\n+Configuration\n+=============\n+\n+To use Intersphinx linking, add \"'sphinx.ext.intersphinx'\" to your\n+>>:confval:`extensions`<< config value, and use these config values to\n+activate linking:\n+\n+\n+Showing all links of an Intersphinx mapping file\n+================================================\n+\n+To show all Intersphinx links and their targets of an Intersphinx\n+mapping file, run \"python -msphinx.ext.intersphinx url-or-path\".  This\n+is helpful when searching for the root cause of a broken Intersphinx\n+link in a documentation project. The following example prints the\n+Intersphinx mapping of the Python 3 documentation:\n+\n+   $ python -msphinx.ext.intersphinx https://docs.python.org/3/objects.inv\n+\n+\n+Using Intersphinx with inventory file under Basic Authorization\n+===============================================================\n+\n+Intersphinx supports Basic Authorization like this:\n+\n+   intersphinx_mapping = {'python': ('https://user:password@docs.python.org/3',\n+                                     None)}\n+\n+The user and password will be stripped from the URL when generating\n+the links.\ndiff --git a/_build/doc/usage/extensions/linkcode.txt b/_build/doc/usage/extensions/linkcode.txt\nnew file mode 100644\nindex 000000000..37dc9fd8f\n--- /dev/null\n+++ b/_build/doc/usage/extensions/linkcode.txt\n@@ -0,0 +1,17 @@\n+\"sphinx.ext.linkcode\" -- Add external links to source code\n+**********************************************************\n+\n+New in version 1.2.\n+\n+This extension looks at your object descriptions (\".. class::\", \"..\n+function::\" etc.) and adds external links to code hosted somewhere on\n+the web. The intent is similar to the \"sphinx.ext.viewcode\" extension,\n+but assumes the source code can be found somewhere on the Internet.\n+\n+In your configuration, you need to specify a\n+>>:confval:`linkcode_resolve`<< function that returns an URL based on\n+the object.\n+\n+\n+Configuration\n+=============\ndiff --git a/_build/doc/usage/extensions/math.txt b/_build/doc/usage/extensions/math.txt\nnew file mode 100644\nindex 000000000..88404109d\n--- /dev/null\n+++ b/_build/doc/usage/extensions/math.txt\n@@ -0,0 +1,51 @@\n+Math support for HTML outputs in Sphinx\n+***************************************\n+\n+New in version 0.5.\n+\n+Changed in version 1.8: Math support for non-HTML builders is\n+integrated to sphinx-core. So mathbase extension is no longer needed.\n+\n+Since mathematical notation isn't natively supported by HTML in any\n+way, Sphinx gives a math support to HTML document with several\n+extensions.  These use the reStructuredText math \"directive\" and\n+\"role\".\n+\n+\n+\"sphinx.ext.imgmath\" -- Render math as images\n+=============================================\n+\n+New in version 1.4.\n+\n+This extension renders math via LaTeX and dvipng or dvisvgm into PNG\n+or SVG images. This of course means that the computer where the docs\n+are built must have both programs available.\n+\n+There are various configuration values you can set to influence how\n+the images are built:\n+\n+\n+\"sphinx.ext.mathjax\" -- Render math via JavaScript\n+==================================================\n+\n+New in version 1.1.\n+\n+This extension puts math as-is into the HTML files.  The JavaScript\n+package MathJax is then loaded and transforms the LaTeX markup to\n+readable math live in the browser.\n+\n+Because MathJax (and the necessary fonts) is very large, it is not\n+included in Sphinx but is set to automatically include it from a\n+third-party site.\n+\n+Attention:\n+\n+  You should use the math \"directive\" and \"role\", not the native\n+  MathJax \"$$\", \"\\(\", etc.\n+\n+\n+\"sphinx.ext.jsmath\" -- Render math via JavaScript\n+=================================================\n+\n+This extension works just as the MathJax extension does, but uses the\n+older package jsMath.  It provides this config value:\ndiff --git a/_build/doc/usage/extensions/napoleon.txt b/_build/doc/usage/extensions/napoleon.txt\nnew file mode 100644\nindex 000000000..3a9cb4d79\n--- /dev/null\n+++ b/_build/doc/usage/extensions/napoleon.txt\n@@ -0,0 +1,308 @@\n+\"sphinx.ext.napoleon\" -- Support for NumPy and Google style docstrings\n+**********************************************************************\n+\n+New in version 1.3.\n+\n+\n+Overview\n+========\n+\n+Are you tired of writing docstrings that look like this:\n+\n+   :param path: The path of the file to wrap\n+   :type path: str\n+   :param field_storage: The :class:`FileStorage` instance to wrap\n+   :type field_storage: FileStorage\n+   :param temporary: Whether or not to delete the file when the File\n+      instance is destructed\n+   :type temporary: bool\n+   :returns: A buffered writable file descriptor\n+   :rtype: BufferedFileStorage\n+\n+reStructuredText is great, but it creates visually dense, hard to read\n+docstrings. Compare the jumble above to the same thing rewritten\n+according to the Google Python Style Guide:\n+\n+   Args:\n+       path (str): The path of the file to wrap\n+       field_storage (FileStorage): The :class:`FileStorage` instance to wrap\n+       temporary (bool): Whether or not to delete the file when the File\n+          instance is destructed\n+\n+   Returns:\n+       BufferedFileStorage: A buffered writable file descriptor\n+\n+Much more legible, no?\n+\n+Napoleon is a *extension* that enables Sphinx to parse both NumPy and\n+Google style docstrings - the style recommended by Khan Academy.\n+\n+Napoleon is a pre-processor that parses NumPy and Google style\n+docstrings and converts them to reStructuredText before Sphinx\n+attempts to parse them. This happens in an intermediate step while\n+Sphinx is processing the documentation, so it doesn't modify any of\n+the docstrings in your actual source code files.\n+\n+\n+Getting Started\n+---------------\n+\n+1. After *setting up Sphinx* to build your docs, enable napoleon in\n+   the Sphinx *conf.py* file:\n+\n+      # conf.py\n+\n+      # Add napoleon to the extensions list\n+      extensions = ['sphinx.ext.napoleon']\n+\n+2. Use *sphinx-apidoc* to build your API documentation:\n+\n+      $ sphinx-apidoc -f -o docs/source projectdir\n+\n+\n+Docstrings\n+----------\n+\n+Napoleon interprets every docstring that \"autodoc\" can find, including\n+docstrings on: \"modules\", \"classes\", \"attributes\", \"methods\",\n+\"functions\", and \"variables\". Inside each docstring, specially\n+formatted Sections are parsed and converted to reStructuredText.\n+\n+All standard reStructuredText formatting still works as expected.\n+\n+\n+Docstring Sections\n+------------------\n+\n+All of the following section headers are supported:\n+\n+   * \"Args\" *(alias of Parameters)*\n+\n+   * \"Arguments\" *(alias of Parameters)*\n+\n+   * \"Attention\"\n+\n+   * \"Attributes\"\n+\n+   * \"Caution\"\n+\n+   * \"Danger\"\n+\n+   * \"Error\"\n+\n+   * \"Example\"\n+\n+   * \"Examples\"\n+\n+   * \"Hint\"\n+\n+   * \"Important\"\n+\n+   * \"Keyword Args\" *(alias of Keyword Arguments)*\n+\n+   * \"Keyword Arguments\"\n+\n+   * \"Methods\"\n+\n+   * \"Note\"\n+\n+   * \"Notes\"\n+\n+   * \"Other Parameters\"\n+\n+   * \"Parameters\"\n+\n+   * \"Return\" *(alias of Returns)*\n+\n+   * \"Returns\"\n+\n+   * \"Raise\" *(alias of Raises)*\n+\n+   * \"Raises\"\n+\n+   * \"References\"\n+\n+   * \"See Also\"\n+\n+   * \"Tip\"\n+\n+   * \"Todo\"\n+\n+   * \"Warning\"\n+\n+   * \"Warnings\" *(alias of Warning)*\n+\n+   * \"Warn\" *(alias of Warns)*\n+\n+   * \"Warns\"\n+\n+   * \"Yield\" *(alias of Yields)*\n+\n+   * \"Yields\"\n+\n+\n+Google vs NumPy\n+---------------\n+\n+Napoleon supports two styles of docstrings: Google and NumPy. The main\n+difference between the two styles is that Google uses indentation to\n+separate sections, whereas NumPy uses underlines.\n+\n+Google style:\n+\n+   def func(arg1, arg2):\n+       \"\"\"Summary line.\n+\n+       Extended description of function.\n+\n+       Args:\n+           arg1 (int): Description of arg1\n+           arg2 (str): Description of arg2\n+\n+       Returns:\n+           bool: Description of return value\n+\n+       \"\"\"\n+       return True\n+\n+NumPy style:\n+\n+   def func(arg1, arg2):\n+       \"\"\"Summary line.\n+\n+       Extended description of function.\n+\n+       Parameters\n+       ----------\n+       arg1 : int\n+           Description of arg1\n+       arg2 : str\n+           Description of arg2\n+\n+       Returns\n+       -------\n+       bool\n+           Description of return value\n+\n+       \"\"\"\n+       return True\n+\n+NumPy style tends to require more vertical space, whereas Google style\n+tends to use more horizontal space. Google style tends to be easier to\n+read for short and simple docstrings, whereas NumPy style tends be\n+easier to read for long and in-depth docstrings.\n+\n+The Khan Academy recommends using Google style.\n+\n+The choice between styles is largely aesthetic, but the two styles\n+should not be mixed. Choose one style for your project and be\n+consistent with it.\n+\n+See also:\n+\n+  For complete examples:\n+\n+  * Example Google Style Python Docstrings\n+\n+  * Example NumPy Style Python Docstrings\n+\n+\n+Type Annotations\n+----------------\n+\n+PEP 484 introduced a standard way to express types in Python code.\n+This is an alternative to expressing types directly in docstrings. One\n+benefit of expressing types according to PEP 484 is that type checkers\n+and IDEs can take advantage of them for static code analysis. PEP 484\n+was then extended by PEP 526 which introduced a similar way to\n+annotate variables (and attributes).\n+\n+Google style with Python 3 type annotations:\n+\n+   def func(arg1: int, arg2: str) -> bool:\n+       \"\"\"Summary line.\n+\n+       Extended description of function.\n+\n+       Args:\n+           arg1: Description of arg1\n+           arg2: Description of arg2\n+\n+       Returns:\n+           Description of return value\n+\n+       \"\"\"\n+       return True\n+\n+   class Class:\n+       \"\"\"Summary line.\n+\n+       Extended description of class\n+\n+       Attributes:\n+           attr1: Description of attr1\n+           attr2: Description of attr2\n+       \"\"\"\n+\n+       attr1: int\n+       attr2: str\n+\n+Google style with types in docstrings:\n+\n+   def func(arg1, arg2):\n+       \"\"\"Summary line.\n+\n+       Extended description of function.\n+\n+       Args:\n+           arg1 (int): Description of arg1\n+           arg2 (str): Description of arg2\n+\n+       Returns:\n+           bool: Description of return value\n+\n+       \"\"\"\n+       return True\n+\n+   class Class:\n+       \"\"\"Summary line.\n+\n+       Extended description of class\n+\n+       Attributes:\n+           attr1 (int): Description of attr1\n+           attr2 (str): Description of attr2\n+       \"\"\"\n+\n+Note:\n+\n+  Python 2/3 compatible annotations aren't currently supported by\n+  Sphinx and won't show up in the docs.\n+\n+\n+Configuration\n+=============\n+\n+Listed below are all the settings used by napoleon and their default\n+values. These settings can be changed in the Sphinx *conf.py* file.\n+Make sure that \"sphinx.ext.napoleon\" is enabled in *conf.py*:\n+\n+   # conf.py\n+\n+   # Add any Sphinx extension module names here, as strings\n+   extensions = ['sphinx.ext.napoleon']\n+\n+   # Napoleon settings\n+   napoleon_google_docstring = True\n+   napoleon_numpy_docstring = True\n+   napoleon_include_init_with_doc = False\n+   napoleon_include_private_with_doc = False\n+   napoleon_include_special_with_doc = True\n+   napoleon_use_admonition_for_examples = False\n+   napoleon_use_admonition_for_notes = False\n+   napoleon_use_admonition_for_references = False\n+   napoleon_use_ivar = False\n+   napoleon_use_param = True\n+   napoleon_use_rtype = True\n+   napoleon_type_aliases = None\n+   napoleon_attr_annotations = True\ndiff --git a/_build/doc/usage/extensions/todo.txt b/_build/doc/usage/extensions/todo.txt\nnew file mode 100644\nindex 000000000..d9ff0082d\n--- /dev/null\n+++ b/_build/doc/usage/extensions/todo.txt\n@@ -0,0 +1,31 @@\n+\"sphinx.ext.todo\" -- Support for todo items\n+*******************************************\n+\n+New in version 0.5.\n+\n+There are two additional directives when using this extension:\n+\n+.. todo::\n+\n+   Use this directive like, for example, \"note\".\n+\n+   It will only show up in the output if\n+   >>:confval:`todo_include_todos`<< is \"True\".\n+\n+   New in version 1.3.2: This directive supports an \"class\" option\n+   that determines the class attribute for HTML output.  If not given,\n+   the class defaults to \"admonition-todo\".\n+\n+.. todolist::\n+\n+   This directive is replaced by a list of all todo directives in the\n+   whole documentation, if >>:confval:`todo_include_todos`<< is\n+   \"True\".\n+\n+These can be configured as seen below.\n+\n+\n+Configuration\n+=============\n+\n+autodoc provides the following an additional event:\ndiff --git a/_build/doc/usage/extensions/viewcode.txt b/_build/doc/usage/extensions/viewcode.txt\nnew file mode 100644\nindex 000000000..a4a7f2d24\n--- /dev/null\n+++ b/_build/doc/usage/extensions/viewcode.txt\n@@ -0,0 +1,35 @@\n+\"sphinx.ext.viewcode\" -- Add links to highlighted source code\n+*************************************************************\n+\n+New in version 1.0.\n+\n+This extension looks at your Python object descriptions (\".. class::\",\n+\".. function::\" etc.) and tries to find the source files where the\n+objects are contained.  When found, a separate HTML page will be\n+output for each module with a highlighted version of the source code,\n+and a link will be added to all object descriptions that leads to the\n+source code of the described object.  A link back from the source to\n+the description will also be inserted.\n+\n+Warning:\n+\n+  Basically, \"viewcode\" extension will import the modules being linked\n+  to. If any modules have side effects on import, these will be\n+  executed when \"sphinx-build\" is run.If you document scripts (as\n+  opposed to library modules), make sure their main routine is\n+  protected by a \"if __name__ == '__main__'\" condition.In addition, if\n+  you don't want to import the modules by \"viewcode\", you can tell the\n+  location of the location of source code to \"viewcode\" using the\n+  >>:event:`viewcode-find-source`<< event.If\n+  >>:confval:`viewcode_follow_imported_members`<< is enabled, you will\n+  also need to resolve imported attributes using the >>:event\n+  :`viewcode-follow-imported`<< event.\n+\n+This extension works only on HTML related builders like \"html\",\n+\"applehelp\", \"devhelp\", \"htmlhelp\", \"qthelp\" and so on except\n+\"singlehtml\". By default \"epub\" builder doesn't support this extension\n+(see >>:confval:`viewcode_enable_epub`<<).\n+\n+\n+Configuration\n+=============\ndiff --git a/_build/doc/usage/index.txt b/_build/doc/usage/index.txt\nnew file mode 100644\nindex 000000000..063edb552\n--- /dev/null\n+++ b/_build/doc/usage/index.txt\n@@ -0,0 +1,140 @@\n+Using Sphinx\n+************\n+\n+This guide serves to demonstrate how one can get started with Sphinx\n+and covers everything from installing Sphinx and configuring your\n+first Sphinx project to using some of the advanced features Sphinx\n+provides out-of-the-box. If you are looking for guidance on extending\n+Sphinx, refer to */development/index*.\n+\n+* Getting Started\n+\n+  * Setting up the documentation sources\n+\n+  * Defining document structure\n+\n+  * Adding content\n+\n+  * Running the build\n+\n+  * Documenting objects\n+\n+  * Basic configuration\n+\n+  * Autodoc\n+\n+  * Intersphinx\n+\n+  * More topics to be covered\n+\n+* Installing Sphinx\n+\n+  * Overview\n+\n+  * Linux\n+\n+  * macOS\n+\n+  * Windows\n+\n+  * Installation from PyPI\n+\n+  * Docker\n+\n+  * Installation from source\n+\n+* reStructuredText\n+\n+  * reStructuredText Primer\n+\n+  * Roles\n+\n+  * Directives\n+\n+  * Field Lists\n+\n+  * Domains\n+\n+* Markdown\n+\n+  * Configuration\n+\n+* Configuration\n+\n+  * Project information\n+\n+  * General configuration\n+\n+  * Options for internationalization\n+\n+  * Options for Math\n+\n+  * Options for HTML output\n+\n+  * Options for Single HTML output\n+\n+  * Options for HTML help output\n+\n+  * Options for Apple Help output\n+\n+  * Options for epub output\n+\n+  * Options for LaTeX output\n+\n+  * Options for text output\n+\n+  * Options for manual page output\n+\n+  * Options for Texinfo output\n+\n+  * Options for QtHelp output\n+\n+  * Options for the linkcheck builder\n+\n+  * Options for the XML builder\n+\n+  * Options for the C domain\n+\n+  * Options for the C++ domain\n+\n+* Builders\n+\n+  * Serialization builder details\n+\n+* Extensions\n+\n+  * Built-in extensions\n+\n+  * Third-party extensions\n+\n+* HTML Theming\n+\n+  * Builders\n+\n+  * Themes\n+\n+* Internationalization\n+\n+  * Sphinx internationalization details\n+\n+  * Translating with sphinx-intl\n+\n+  * Using Transifex service for team translation\n+\n+  * Contributing to Sphinx reference translation\n+\n+* Setuptools integration\n+\n+  * Using setuptools integration\n+\n+  * Options for setuptools integration\n+\n+* Sphinx Web Support\n+\n+  * Web Support Quick Start\n+\n+  * The WebSupport Class\n+\n+  * Search Adapters\n+\n+  * Storage Backends\ndiff --git a/_build/doc/usage/installation.txt b/_build/doc/usage/installation.txt\nnew file mode 100644\nindex 000000000..584f88849\n--- /dev/null\n+++ b/_build/doc/usage/installation.txt\n@@ -0,0 +1,191 @@\n+Installing Sphinx\n+*****************\n+\n+* Overview\n+\n+* Linux\n+\n+* macOS\n+\n+* Windows\n+\n+* Installation from PyPI\n+\n+* Docker\n+\n+* Installation from source\n+\n+\n+Overview\n+========\n+\n+Sphinx is written in Python and supports Python 3.5+. It builds upon\n+the shoulders of many third-party libraries such as Docutils and\n+Jinja, which are installed when Sphinx is installed.\n+\n+\n+Linux\n+=====\n+\n+\n+Debian/Ubuntu\n+-------------\n+\n+Install either \"python3-sphinx\" using **apt-get**:\n+\n+   $ apt-get install python3-sphinx\n+\n+If it not already present, this will install Python for you.\n+\n+\n+RHEL, CentOS\n+------------\n+\n+Install \"python-sphinx\" using **yum**:\n+\n+   $ yum install python-sphinx\n+\n+If it not already present, this will install Python for you.\n+\n+\n+Other distributions\n+-------------------\n+\n+Most Linux distributions have Sphinx in their package repositories.\n+Usually the package is called \"python3-sphinx\", \"python-sphinx\" or\n+\"sphinx\".  Be aware that there are at least two other packages with\n+\"sphinx\" in their name: a speech recognition toolkit (*CMU Sphinx*)\n+and a full-text search database (*Sphinx search*).\n+\n+\n+macOS\n+=====\n+\n+Sphinx can be installed using Homebrew, MacPorts, or as part of a\n+Python distribution such as Anaconda.\n+\n+\n+Homebrew\n+--------\n+\n+   $ brew install sphinx-doc\n+\n+For more information, refer to the package overview.\n+\n+\n+MacPorts\n+--------\n+\n+Install either \"python3x-sphinx\" using **port**:\n+\n+   $ sudo port install py38-sphinx\n+\n+To set up the executable paths, use the \"port select\" command:\n+\n+   $ sudo port select --set python python38\n+   $ sudo port select --set sphinx py38-sphinx\n+\n+For more information, refer to the package overview.\n+\n+\n+Anaconda\n+--------\n+\n+   $ conda install sphinx\n+\n+\n+Windows\n+=======\n+\n+Most Windows users do not have Python installed by default, so we\n+begin with the installation of Python itself.  To check if you already\n+have Python installed, open the *Command Prompt* (\"\u229eWin-r\" and type\n+**cmd**). Once the command prompt is open, type **python --version**\n+and press Enter.  If Python is installed, you will see the version of\n+Python printed to the screen.  If you do not have Python installed,\n+refer to the Hitchhikers Guide to Python's Python on Windows\n+installation guides. You must install Python 3.\n+\n+Once Python is installed, you can install Sphinx using **pip**.  Refer\n+to the pip installation instructions below for more information.\n+\n+\n+Installation from PyPI\n+======================\n+\n+Sphinx packages are published on the Python Package Index.  The\n+preferred tool for installing packages from *PyPI* is **pip**.  This\n+tool is provided with all modern versions of Python.\n+\n+On Linux or MacOS, you should open your terminal and run the following\n+command.\n+\n+   $ pip install -U sphinx\n+\n+On Windows, you should open *Command Prompt* (\"\u229eWin-r\" and type\n+**cmd**) and run the same command.\n+\n+   C:\\> pip install -U sphinx\n+\n+After installation, type **sphinx-build --version** on the command\n+prompt.  If everything worked fine, you will see the version number\n+for the Sphinx package you just installed.\n+\n+Installation from *PyPI* also allows you to install the latest\n+development release.  You will not generally need (or want) to do\n+this, but it can be useful if you see a possible bug in the latest\n+stable release.  To do this, use the \"--pre\" flag.\n+\n+   $ pip install -U --pre sphinx\n+\n+\n+Docker\n+======\n+\n+Docker images for Sphinx are published on the Docker Hub. There are\n+two kind of images:\n+\n+* sphinxdoc/sphinx\n+\n+* sphinxdoc/sphinx-latexpdf\n+\n+Former one is used for standard usage of Sphinx, and latter one is\n+mainly used for PDF builds using LaTeX. Please choose one for your\n+purpose.\n+\n+Note:\n+\n+  sphinxdoc/sphinx-latexpdf contains TeXLive packages. So the image is\n+  very large (over 2GB!).\n+\n+Hint:\n+\n+  When using docker images, please use \"docker run\" command to invoke\n+  sphinx commands.  For example, you can use following command to\n+  create a Sphinx project:\n+\n+     $ docker run --rm -v /path/to/document:/docs sphinxdoc/sphinx sphinx-quickstart\n+\n+  And you can following command this to build HTML document:\n+\n+     $ docker run --rm -v /path/to/document:/docs sphinxdoc/sphinx make html\n+\n+For more details, please read README file of docker images.\n+\n+\n+Installation from source\n+========================\n+\n+You can install Sphinx directly from a clone of the Git repository.\n+This can be done either by cloning the repo and installing from the\n+local clone, on simply installing directly via **git**.\n+\n+   $ git clone https://github.com/sphinx-doc/sphinx\n+   $ cd sphinx\n+   $ pip install .\n+\n+   $ pip install git+https://github.com/sphinx-doc/sphinx\n+\n+You can also download a snapshot of the Git repo in either tar.gz or\n+zip format.  Once downloaded and extracted, these can be installed\n+with **pip** as above.\ndiff --git a/_build/doc/usage/markdown.txt b/_build/doc/usage/markdown.txt\nnew file mode 100644\nindex 000000000..51b353473\n--- /dev/null\n+++ b/_build/doc/usage/markdown.txt\n@@ -0,0 +1,48 @@\n+Markdown\n+********\n+\n+Markdown is a lightweight markup language with a simplistic plain text\n+formatting syntax.  It exists in many syntactically different\n+*flavors*.  To support Markdown-based documentation, Sphinx can use\n+recommonmark. recommonmark is a Docutils bridge to CommonMark-py, a\n+Python package for parsing the CommonMark Markdown flavor.\n+\n+\n+Configuration\n+=============\n+\n+To configure your Sphinx project for Markdown support, proceed as\n+follows:\n+\n+1. Install the Markdown parser *recommonmark*:\n+\n+      pip install --upgrade recommonmark\n+\n+   Note:\n+\n+     The configuration as explained here requires recommonmark version\n+     0.5.0 or later.\n+\n+2. Add *recommonmark* to the >>:confval:`list of configured extensions\n+   <extensions>`<<:\n+\n+      extensions = ['recommonmark']\n+\n+   Changed in version 1.8: Version 1.8 deprecates and version 3.0\n+   removes the \"source_parsers\" configuration variable that was used\n+   by older *recommonmark* versions.\n+\n+3. If you want to use Markdown files with extensions other than \".md\",\n+   adjust the >>:confval:`source_suffix`<< variable.  The following\n+   example configures Sphinx to parse all files with the extensions\n+   \".md\" and \".txt\" as Markdown:\n+\n+      source_suffix = {\n+          '.rst': 'restructuredtext',\n+          '.txt': 'markdown',\n+          '.md': 'markdown',\n+      }\n+\n+4. You can further configure *recommonmark* to allow custom syntax\n+   that standard *CommonMark* doesn't support.  Read more in the\n+   recommonmark documentation.\ndiff --git a/_build/doc/usage/quickstart.txt b/_build/doc/usage/quickstart.txt\nnew file mode 100644\nindex 000000000..648088956\n--- /dev/null\n+++ b/_build/doc/usage/quickstart.txt\n@@ -0,0 +1,326 @@\n+Getting Started\n+***************\n+\n+Sphinx is a *documentation generator* or a tool that translates a set\n+of plain text source files into various output formats, automatically\n+producing cross-references, indices, etc.  That is, if you have a\n+directory containing a bunch of */usage/restructuredtext/index* or\n+*/usage/markdown* documents, Sphinx can generate a series of HTML\n+files, a PDF file (via LaTeX), man pages and much more.\n+\n+Sphinx focuses on documentation, in particular handwritten\n+documentation, however, Sphinx can also be used to generate blogs,\n+homepages and even books. Much of Sphinx's power comes from the\n+richness of its default plain-text markup format, *reStructuredText*,\n+along with it's *significant extensibility capabilities*.\n+\n+The goal of this document is to give you a quick taste of what Sphinx\n+is and how you might use it. When you're done here, you can check out\n+the *installation guide* followed by the intro to the default markup\n+format used by Sphinx, *reStucturedText*.\n+\n+For a great \"introduction\" to writing docs in general -- the whys and\n+hows, see also Write the docs, written by Eric Holscher.\n+\n+\n+Setting up the documentation sources\n+====================================\n+\n+The root directory of a Sphinx collection of plain-text document\n+sources is called the *source directory*.  This directory also\n+contains the Sphinx configuration file \"conf.py\", where you can\n+configure all aspects of how Sphinx reads your sources and builds your\n+documentation.  [1]\n+\n+Sphinx comes with a script called **sphinx-quickstart** that sets up a\n+source directory and creates a default \"conf.py\" with the most useful\n+configuration values from a few questions it asks you. To use this,\n+run:\n+\n+   $ sphinx-quickstart\n+\n+\n+Defining document structure\n+===========================\n+\n+Let's assume you've run **sphinx-quickstart**.  It created a source\n+directory with \"conf.py\" and a master document, \"index.rst\".  The main\n+function of the *master document* is to serve as a welcome page, and\n+to contain the root of the \"table of contents tree\" (or *toctree*).\n+This is one of the main things that Sphinx adds to reStructuredText, a\n+way to connect multiple files to a single hierarchy of documents.\n+\n+\n+reStructuredText directives\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+\"toctree\" is a reStructuredText *directive*, a very versatile piece of\n+markup.  Directives can have arguments, options and content.\n+\n+*Arguments* are given directly after the double colon following the\n+directive's name.  Each directive decides whether it can have\n+arguments, and how many.\n+\n+*Options* are given after the arguments, in form of a \"field list\".\n+The \"maxdepth\" is such an option for the \"toctree\" directive.\n+\n+*Content* follows the options or arguments after a blank line.  Each\n+directive decides whether to allow content, and what to do with it.\n+\n+A common gotcha with directives is that **the first line of the\n+content must be indented to the same level as the options are**.\n+\n+The \"toctree\" directive initially is empty, and looks like so:\n+\n+   .. toctree::\n+      :maxdepth: 2\n+\n+You add documents listing them in the *content* of the directive:\n+\n+   .. toctree::\n+      :maxdepth: 2\n+\n+      usage/installation\n+      usage/quickstart\n+      ...\n+\n+This is exactly how the \"toctree\" for this documentation looks.  The\n+documents to include are given as *document name*s, which in short\n+means that you leave off the file name extension and use forward\n+slashes (\"/\") as directory separators.\n+\n+[image: more info][image] Read more about the toctree directive.\n+\n+You can now create the files you listed in the \"toctree\" and add\n+content, and their section titles will be inserted (up to the\n+\"maxdepth\" level) at the place where the \"toctree\" directive is\n+placed.  Also, Sphinx now knows about the order and hierarchy of your\n+documents.  (They may contain \"toctree\" directives themselves, which\n+means you can create deeply nested hierarchies if necessary.)\n+\n+\n+Adding content\n+==============\n+\n+In Sphinx source files, you can use most features of standard\n+*reStructuredText*.  There are also several features added by Sphinx.\n+For example, you can add cross-file references in a portable way\n+(which works for all output types) using the \"ref\" role.\n+\n+For an example, if you are viewing the HTML version, you can look at\n+the source for this document -- use the \"Show Source\" link in the\n+sidebar.\n+\n+[image: more info][image] See */usage/restructuredtext/index* for a\n+more in-depth introduction to reStructuredText, including markup added\n+by Sphinx.\n+\n+\n+Running the build\n+=================\n+\n+Now that you have added some files and content, let's make a first\n+build of the docs.  A build is started with the **sphinx-build**\n+program:\n+\n+   $ sphinx-build -b html sourcedir builddir\n+\n+where *sourcedir* is the *source directory*, and *builddir* is the\n+directory in which you want to place the built documentation. The \"-b\"\n+option selects a builder; in this example Sphinx will build HTML\n+files.\n+\n+[image: more info][image] Refer to the *sphinx-build man page* for all\n+options that **sphinx-build** supports.\n+\n+However, **sphinx-quickstart** script creates a \"Makefile\" and a\n+\"make.bat\" which make life even easier for you. These can be executed\n+by running **make** with the name of the builder. For example.\n+\n+   $ make html\n+\n+This will build HTML docs in the build directory you chose. Execute\n+**make** without an argument to see which targets are available.\n+\n+How do I generate PDF documents?: \"make latexpdf\" runs the \"LaTeX\n+builder\" and readily invokes the pdfTeX toolchain for you.\n+\n+\n+Documenting objects\n+===================\n+\n+One of Sphinx's main objectives is easy documentation of *objects* (in\n+a very general sense) in any *domain*.  A domain is a collection of\n+object types that belong together, complete with markup to create and\n+reference descriptions of these objects.\n+\n+The most prominent domain is the Python domain. For example, to\n+document Python's built-in function \"enumerate()\", you would add this\n+to one of your source files.\n+\n+   .. py:function:: enumerate(sequence[, start=0])\n+\n+      Return an iterator that yields tuples of an index and an item of the\n+      *sequence*. (And so on.)\n+\n+This is rendered like this:\n+\n+enumerate(sequence[, start=0])\n+\n+   Return an iterator that yields tuples of an index and an item of\n+   the *sequence*. (And so on.)\n+\n+The argument of the directive is the *signature* of the object you\n+describe, the content is the documentation for it.  Multiple\n+signatures can be given, each in its own line.\n+\n+The Python domain also happens to be the default domain, so you don't\n+need to prefix the markup with the domain name.\n+\n+   .. function:: enumerate(sequence[, start=0])\n+\n+      ...\n+\n+does the same job if you keep the default setting for the default\n+domain.\n+\n+There are several more directives for documenting other types of\n+Python objects, for example \"py:class\" or \"py:method\".  There is also\n+a cross-referencing *role* for each of these object types.  This\n+markup will create a link to the documentation of \"enumerate()\".\n+\n+   The :py:func:`enumerate` function can be used for ...\n+\n+And here is the proof: A link to \"enumerate()\".\n+\n+Again, the \"py:\" can be left out if the Python domain is the default\n+one.  It doesn't matter which file contains the actual documentation\n+for \"enumerate()\"; Sphinx will find it and create a link to it.\n+\n+Each domain will have special rules for how the signatures can look\n+like, and make the formatted output look pretty, or add specific\n+features like links to parameter types, e.g. in the C/C++ domains.\n+\n+[image: more info][image] See */usage/restructuredtext/domains* for\n+all the available domains and their directives/roles.\n+\n+\n+Basic configuration\n+===================\n+\n+Earlier we mentioned that the \"conf.py\" file controls how Sphinx\n+processes your documents.  In that file, which is executed as a Python\n+source file, you assign configuration values.  For advanced users:\n+since it is executed by Sphinx, you can do non-trivial tasks in it,\n+like extending \"sys.path\" or importing a module to find out the\n+version you are documenting.\n+\n+The config values that you probably want to change are already put\n+into the \"conf.py\" by **sphinx-quickstart** and initially commented\n+out (with standard Python syntax: a \"#\" comments the rest of the\n+line).  To change the default value, remove the hash sign and modify\n+the value.  To customize a config value that is not automatically\n+added by **sphinx-quickstart**, just add an additional assignment.\n+\n+Keep in mind that the file uses Python syntax for strings, numbers,\n+lists and so on.  The file is saved in UTF-8 by default, as indicated\n+by the encoding declaration in the first line.\n+\n+[image: more info][image] See */usage/configuration* for documentation\n+of all available config values.\n+\n+\n+Autodoc\n+=======\n+\n+When documenting Python code, it is common to put a lot of\n+documentation in the source files, in documentation strings.  Sphinx\n+supports the inclusion of docstrings from your modules with an\n+*extension* (an extension is a Python module that provides additional\n+features for Sphinx projects) called *autodoc*.\n+\n+In order to use *autodoc*, you need to activate it in \"conf.py\" by\n+putting the string \"'sphinx.ext.autodoc'\" into the list assigned to\n+the >>:confval:`extensions`<< config value:\n+\n+   extensions = ['sphinx.ext.autodoc']\n+\n+Then, you have a few additional directives at your disposal.  For\n+example, to document the function \"io.open()\", reading its signature\n+and docstring from the source file, you'd write this:\n+\n+   .. autofunction:: io.open\n+\n+You can also document whole classes or even modules automatically,\n+using member options for the auto directives, like\n+\n+   .. automodule:: io\n+      :members:\n+\n+*autodoc* needs to import your modules in order to extract the\n+docstrings. Therefore, you must add the appropriate path to \"sys.path\"\n+in your \"conf.py\".\n+\n+Warning:\n+\n+  \"autodoc\" **imports** the modules to be documented.  If any modules\n+  have side effects on import, these will be executed by \"autodoc\"\n+  when \"sphinx-build\" is run.If you document scripts (as opposed to\n+  library modules), make sure their main routine is protected by a \"if\n+  __name__ == '__main__'\" condition.\n+\n+[image: more info][image] See \"sphinx.ext.autodoc\" for the complete\n+description of the features of autodoc.\n+\n+\n+Intersphinx\n+===========\n+\n+Many Sphinx documents including the Python documentation are published\n+on the Internet.  When you want to make links to such documents from\n+your documentation, you can do it with \"sphinx.ext.intersphinx\".\n+\n+In order to use intersphinx, you need to activate it in \"conf.py\" by\n+putting the string \"'sphinx.ext.intersphinx'\" into the\n+>>:confval:`extensions`<< list and set up the\n+>>:confval:`intersphinx_mapping`<< config value.\n+\n+For example, to link to \"io.open()\" in the Python library manual, you\n+need to setup your >>:confval:`intersphinx_mapping`<< like:\n+\n+   intersphinx_mapping = {'python': ('https://docs.python.org/3', None)}\n+\n+And now, you can write a cross-reference like \":py:func:`io.open`\".\n+Any cross-reference that has no matching target in the current\n+documentation set, will be looked up in the documentation sets\n+configured in >>:confval:`intersphinx_mapping`<< (this needs access to\n+the URL in order to download the list of valid targets).  Intersphinx\n+also works for some other *domain*'s roles including \":ref:\", however\n+it doesn't work for \":doc:\" as that is non-domain role.\n+\n+[image: more info][image] See \"sphinx.ext.intersphinx\" for the\n+complete description of the features of intersphinx.\n+\n+\n+More topics to be covered\n+=========================\n+\n+* *Other extensions*:\n+\n+* Static files\n+\n+* *Selecting a theme*\n+\n+* */usage/advanced/setuptools*\n+\n+* Templating\n+\n+* Using extensions\n+\n+* Writing extensions\n+\n+-[ Footnotes ]-\n+\n+[1] This is the usual layout.  However, \"conf.py\" can also live in\n+    another directory, the *configuration directory*.  Refer to the\n+    *sphinx-build man page* for more information.\ndiff --git a/_build/doc/usage/restructuredtext/basics.txt b/_build/doc/usage/restructuredtext/basics.txt\nnew file mode 100644\nindex 000000000..59829bced\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/basics.txt\n@@ -0,0 +1,642 @@\n+reStructuredText Primer\n+***********************\n+\n+reStructuredText is the default plaintext markup language used by\n+Sphinx.  This section is a brief introduction to reStructuredText\n+(reST) concepts and syntax, intended to provide authors with enough\n+information to author documents productively.  Since reST was designed\n+to be a simple, unobtrusive markup language, this will not take too\n+long.\n+\n+See also:\n+\n+  The authoritative reStructuredText User Documentation.  The \"ref\"\n+  links in this document link to the description of the individual\n+  constructs in the reST reference.\n+\n+\n+Paragraphs\n+==========\n+\n+The paragraph (>>:duref:`ref <paragraphs>`<<) is the most basic block\n+in a reST document.  Paragraphs are simply chunks of text separated by\n+one or more blank lines.  As in Python, indentation is significant in\n+reST, so all lines of the same paragraph must be left-aligned to the\n+same level of indentation.\n+\n+\n+Inline markup\n+=============\n+\n+The standard reST inline markup is quite simple: use\n+\n+* one asterisk: \"*text*\" for emphasis (italics),\n+\n+* two asterisks: \"**text**\" for strong emphasis (boldface), and\n+\n+* backquotes: \"``text``\" for code samples.\n+\n+If asterisks or backquotes appear in running text and could be\n+confused with inline markup delimiters, they have to be escaped with a\n+backslash.\n+\n+Be aware of some restrictions of this markup:\n+\n+* it may not be nested,\n+\n+* content may not start or end with whitespace: \"* text*\" is wrong,\n+\n+* it must be separated from surrounding text by non-word characters.\n+  Use a backslash escaped space to work around that: \"thisis\\ *one*\\\n+  word\".\n+\n+These restrictions may be lifted in future versions of the docutils.\n+\n+It is also possible to replace or expand upon some of this inline\n+markup with roles. Refer to Roles for more information.\n+\n+\n+Lists and Quote-like blocks\n+===========================\n+\n+List markup (>>:duref:`ref <bullet-lists>`<<) is natural: just place\n+an asterisk at the start of a paragraph and indent properly.  The same\n+goes for numbered lists; they can also be autonumbered using a \"#\"\n+sign:\n+\n+   * This is a bulleted list.\n+   * It has two items, the second\n+     item uses two lines.\n+\n+   1. This is a numbered list.\n+   2. It has two items too.\n+\n+   #. This is a numbered list.\n+   #. It has two items too.\n+\n+Nested lists are possible, but be aware that they must be separated\n+from the parent list items by blank lines:\n+\n+   * this is\n+   * a list\n+\n+     * with a nested list\n+     * and some subitems\n+\n+   * and here the parent list continues\n+\n+Definition lists (>>:duref:`ref <definition-lists>`<<) are created as\n+follows:\n+\n+   term (up to a line of text)\n+      Definition of the term, which must be indented\n+\n+      and can even consist of multiple paragraphs\n+\n+   next term\n+      Description.\n+\n+Note that the term cannot have more than one line of text.\n+\n+Quoted paragraphs (>>:duref:`ref <block-quotes>`<<) are created by\n+just indenting them more than the surrounding paragraphs.\n+\n+Line blocks (>>:duref:`ref <line-blocks>`<<) are a way of preserving\n+line breaks:\n+\n+   | These lines are\n+   | broken exactly like in\n+   | the source file.\n+\n+There are also several more special blocks available:\n+\n+* field lists (>>:duref:`ref <field-lists>`<<, with caveats noted in\n+  Field Lists)\n+\n+* option lists (>>:duref:`ref <option-lists>`<<)\n+\n+* quoted literal blocks (>>:duref:`ref <quoted-literal-blocks>`<<)\n+\n+* doctest blocks (>>:duref:`ref <doctest-blocks>`<<)\n+\n+\n+Literal blocks\n+==============\n+\n+Literal code blocks (>>:duref:`ref <literal-blocks>`<<) are introduced\n+by ending a paragraph with the special marker \"::\".  The literal block\n+must be indented (and, like all paragraphs, separated from the\n+surrounding ones by blank lines):\n+\n+   This is a normal text paragraph. The next paragraph is a code sample::\n+\n+      It is not processed in any way, except\n+      that the indentation is removed.\n+\n+      It can span multiple lines.\n+\n+   This is a normal text paragraph again.\n+\n+The handling of the \"::\" marker is smart:\n+\n+* If it occurs as a paragraph of its own, that paragraph is completely\n+  left out of the document.\n+\n+* If it is preceded by whitespace, the marker is removed.\n+\n+* If it is preceded by non-whitespace, the marker is replaced by a\n+  single colon.\n+\n+That way, the second sentence in the above example's first paragraph\n+would be rendered as \"The next paragraph is a code sample:\".\n+\n+Code highlighting can be enabled for these literal blocks on a\n+document-wide basis using the \"highlight\" directive and on a project-\n+wide basis using the >>:confval:`highlight_language`<< configuration\n+option. The \"code-block\" directive can be used to set highlighting on\n+a block-by-block basis. These directives are discussed later.\n+\n+\n+Doctest blocks\n+==============\n+\n+Doctest blocks (>>:duref:`ref <doctest-blocks>`<<) are interactive\n+Python sessions cut-and-pasted into docstrings. They do not require\n+the literal blocks syntax. The doctest block must end with a blank\n+line and should *not* end with an unused prompt:\n+\n+   >>> 1 + 1\n+   2\n+\n+\n+Tables\n+======\n+\n+For *grid tables* (>>:duref:`ref <grid-tables>`<<), you have to\n+\"paint\" the cell grid yourself.  They look like this:\n+\n+   +------------------------+------------+----------+----------+\n+   | Header row, column 1   | Header 2   | Header 3 | Header 4 |\n+   | (header rows optional) |            |          |          |\n+   +========================+============+==========+==========+\n+   | body row 1, column 1   | column 2   | column 3 | column 4 |\n+   +------------------------+------------+----------+----------+\n+   | body row 2             | ...        | ...      |          |\n+   +------------------------+------------+----------+----------+\n+\n+*Simple tables* (>>:duref:`ref <simple-tables>`<<) are easier to\n+write, but limited: they must contain more than one row, and the first\n+column cells cannot contain multiple lines.  They look like this:\n+\n+   =====  =====  =======\n+   A      B      A and B\n+   =====  =====  =======\n+   False  False  False\n+   True   False  False\n+   False  True   False\n+   True   True   True\n+   =====  =====  =======\n+\n+Two more syntaxes are supported: *CSV tables* and *List tables*. They\n+use an *explicit markup block*. Refer to Tables for more information.\n+\n+\n+Hyperlinks\n+==========\n+\n+\n+External links\n+--------------\n+\n+Use \"`Link text <https://domain.invalid/>`_\" for inline web links.  If\n+the link text should be the web address, you don't need special markup\n+at all, the parser finds links and mail addresses in ordinary text.\n+\n+Important:\n+\n+  There must be a space between the link text and the opening < for\n+  the URL.\n+\n+You can also separate the link and the target definition\n+(>>:duref:`ref <hyperlink-targets>`<<), like this:\n+\n+   This is a paragraph that contains `a link`_.\n+\n+   .. _a link: https://domain.invalid/\n+\n+\n+Internal links\n+--------------\n+\n+Internal linking is done via a special reST role provided by Sphinx,\n+see the section on specific markup, Cross-referencing arbitrary\n+locations.\n+\n+\n+Sections\n+========\n+\n+Section headers (>>:duref:`ref <sections>`<<) are created by\n+underlining (and optionally overlining) the section title with a\n+punctuation character, at least as long as the text:\n+\n+   =================\n+   This is a heading\n+   =================\n+\n+Normally, there are no heading levels assigned to certain characters\n+as the structure is determined from the succession of headings.\n+However, this convention is used in Python's Style Guide for\n+documenting which you may follow:\n+\n+* \"#\" with overline, for parts\n+\n+* \"*\" with overline, for chapters\n+\n+* \"=\", for sections\n+\n+* \"-\", for subsections\n+\n+* \"^\", for subsubsections\n+\n+* \"\"\", for paragraphs\n+\n+Of course, you are free to use your own marker characters (see the\n+reST documentation), and use a deeper nesting level, but keep in mind\n+that most target formats (HTML, LaTeX) have a limited supported\n+nesting depth.\n+\n+\n+Field Lists\n+===========\n+\n+Field lists (>>:duref:`ref <field-lists>`<<) are sequences of fields\n+marked up like this:\n+\n+   :fieldname: Field content\n+\n+They are commonly used in Python documentation:\n+\n+   def my_function(my_arg, my_other_arg):\n+       \"\"\"A function just for me.\n+\n+       :param my_arg: The first of my arguments.\n+       :param my_other_arg: The second of my arguments.\n+\n+       :returns: A message (just for me, of course).\n+       \"\"\"\n+\n+Sphinx extends standard docutils behavior and intercepts field lists\n+specified at the beginning of documents.  Refer to Field Lists for\n+more information.\n+\n+\n+Roles\n+=====\n+\n+A role or \"custom interpreted text role\" (>>:duref:`ref <roles>`<<) is\n+an inline piece of explicit markup. It signifies that that the\n+enclosed text should be interpreted in a specific way.  Sphinx uses\n+this to provide semantic markup and cross-referencing of identifiers,\n+as described in the appropriate section.  The general syntax is\n+\":rolename:`content`\".\n+\n+Docutils supports the following roles:\n+\n+* >>:durole:`emphasis`<< -- equivalent of \"*emphasis*\"\n+\n+* >>:durole:`strong`<< -- equivalent of \"**strong**\"\n+\n+* >>:durole:`literal`<< -- equivalent of \"``literal``\"\n+\n+* >>:durole:`subscript`<< -- subscript text\n+\n+* >>:durole:`superscript`<< -- superscript text\n+\n+* >>:durole:`title-reference`<< -- for titles of books, periodicals,\n+  and other materials\n+\n+Refer to Roles for roles added by Sphinx.\n+\n+\n+Explicit Markup\n+===============\n+\n+\"Explicit markup\" (>>:duref:`ref <explicit-markup-blocks>`<<) is used\n+in reST for most constructs that need special handling, such as\n+footnotes, specially-highlighted paragraphs, comments, and generic\n+directives.\n+\n+An explicit markup block begins with a line starting with \"..\"\n+followed by whitespace and is terminated by the next paragraph at the\n+same level of indentation.  (There needs to be a blank line between\n+explicit markup and normal paragraphs.  This may all sound a bit\n+complicated, but it is intuitive enough when you write it.)\n+\n+\n+Directives\n+==========\n+\n+A directive (>>:duref:`ref <directives>`<<) is a generic block of\n+explicit markup. Along with roles, it is one of the extension\n+mechanisms of reST, and Sphinx makes heavy use of it.\n+\n+Docutils supports the following directives:\n+\n+* Admonitions: >>:dudir:`attention`<<, >>:dudir:`caution`<<,\n+  >>:dudir:`danger`<<, >>:dudir:`error`<<, >>:dudir:`hint`<<,\n+  >>:dudir:`important`<<, >>:dudir:`note`<<, >>:dudir:`tip`<<,\n+  >>:dudir:`warning`<< and the generic >>:dudir:`admonition\n+  <admonitions>`<<.  (Most themes style only \"note\" and \"warning\"\n+  specially.)\n+\n+* Images:\n+\n+  * >>:dudir:`image`<< (see also Images below)\n+\n+  * >>:dudir:`figure`<< (an image with caption and optional legend)\n+\n+* Additional body elements:\n+\n+  * >>:dudir:`contents <table-of-contents>`<< (a local, i.e. for the\n+    current file only, table of contents)\n+\n+  * >>:dudir:`container`<< (a container with a custom class, useful to\n+    generate an outer \"<div>\" in HTML)\n+\n+  * >>:dudir:`rubric`<< (a heading without relation to the document\n+    sectioning)\n+\n+  * >>:dudir:`topic`<<, >>:dudir:`sidebar`<< (special highlighted body\n+    elements)\n+\n+  * >>:dudir:`parsed-literal`<< (literal block that supports inline\n+    markup)\n+\n+  * >>:dudir:`epigraph`<< (a block quote with optional attribution\n+    line)\n+\n+  * >>:dudir:`highlights`<<, >>:dudir:`pull-quote`<< (block quotes\n+    with their own class attribute)\n+\n+  * >>:dudir:`compound <compound-paragraph>`<< (a compound paragraph)\n+\n+* Special tables:\n+\n+  * >>:dudir:`table`<< (a table with title)\n+\n+  * >>:dudir:`csv-table`<< (a table generated from comma-separated\n+    values)\n+\n+  * >>:dudir:`list-table`<< (a table generated from a list of lists)\n+\n+* Special directives:\n+\n+  * >>:dudir:`raw <raw-data-pass-through>`<< (include raw target-\n+    format markup)\n+\n+  * >>:dudir:`include`<< (include reStructuredText from another file)\n+    -- in Sphinx, when given an absolute include file path, this\n+    directive takes it as relative to the source directory\n+\n+  * >>:dudir:`class`<< (assign a class attribute to the next element)\n+    [1]\n+\n+* HTML specifics:\n+\n+  * >>:dudir:`meta`<< (generation of HTML \"<meta>\" tags, see also HTML\n+    Metadata below)\n+\n+  * >>:dudir:`title <metadata-document-title>`<< (override document\n+    title)\n+\n+* Influencing markup:\n+\n+  * >>:dudir:`default-role`<< (set a new default role)\n+\n+  * >>:dudir:`role`<< (create a new role)\n+\n+  Since these are only per-file, better use Sphinx's facilities for\n+  setting the >>:confval:`default_role`<<.\n+\n+Warning:\n+\n+  Do *not* use the directives >>:dudir:`sectnum`<<,\n+  >>:dudir:`header`<< and >>:dudir:`footer`<<.\n+\n+Directives added by Sphinx are described in Directives.\n+\n+Basically, a directive consists of a name, arguments, options and\n+content. (Keep this terminology in mind, it is used in the next\n+chapter describing custom directives.)  Looking at this example,\n+\n+   .. function:: foo(x)\n+                 foo(y, z)\n+      :module: some.module.name\n+\n+      Return a line of text input from the user.\n+\n+\"function\" is the directive name.  It is given two arguments here, the\n+remainder of the first line and the second line, as well as one option\n+\"module\" (as you can see, options are given in the lines immediately\n+following the arguments and indicated by the colons).  Options must be\n+indented to the same level as the directive content.\n+\n+The directive content follows after a blank line and is indented\n+relative to the directive start.\n+\n+\n+Images\n+======\n+\n+reST supports an image directive (>>:dudir:`ref <image>`<<), used like\n+so:\n+\n+   .. image:: gnu.png\n+      (options)\n+\n+When used within Sphinx, the file name given (here \"gnu.png\") must\n+either be relative to the source file, or absolute which means that\n+they are relative to the top source directory.  For example, the file\n+\"sketch/spam.rst\" could refer to the image \"images/spam.png\" as\n+\"../images/spam.png\" or \"/images/spam.png\".\n+\n+Sphinx will automatically copy image files over to a subdirectory of\n+the output directory on building (e.g. the \"_static\" directory for\n+HTML output.)\n+\n+Interpretation of image size options (\"width\" and \"height\") is as\n+follows: if the size has no unit or the unit is pixels, the given size\n+will only be respected for output channels that support pixels. Other\n+units (like \"pt\" for points) will be used for HTML and LaTeX output\n+(the latter replaces \"pt\" by \"bp\" as this is the TeX unit such that\n+\"72bp=1in\").\n+\n+Sphinx extends the standard docutils behavior by allowing an asterisk\n+for the extension:\n+\n+   .. image:: gnu.*\n+\n+Sphinx then searches for all images matching the provided pattern and\n+determines their type.  Each builder then chooses the best image out\n+of these candidates.  For instance, if the file name \"gnu.*\" was given\n+and two files \"gnu.pdf\" and \"gnu.png\" existed in the source tree, the\n+LaTeX builder would choose the former, while the HTML builder would\n+prefer the latter.  Supported image types and choosing priority are\n+defined at */usage/builders/index*.\n+\n+Note that image file names should not contain spaces.\n+\n+Changed in version 0.4: Added the support for file names ending in an\n+asterisk.\n+\n+Changed in version 0.6: Image paths can now be absolute.\n+\n+Changed in version 1.5: latex target supports pixels (default is\n+\"96px=1in\").\n+\n+\n+Footnotes\n+=========\n+\n+For footnotes (>>:duref:`ref <footnotes>`<<), use \"[#name]_\" to mark\n+the footnote location, and add the footnote body at the bottom of the\n+document after a \"Footnotes\" rubric heading, like so:\n+\n+   Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_\n+\n+   .. rubric:: Footnotes\n+\n+   .. [#f1] Text of the first footnote.\n+   .. [#f2] Text of the second footnote.\n+\n+You can also explicitly number the footnotes (\"[1]_\") or use auto-\n+numbered footnotes without names (\"[#]_\").\n+\n+\n+Citations\n+=========\n+\n+Standard reST citations (>>:duref:`ref <citations>`<<) are supported,\n+with the additional feature that they are \"global\", i.e. all citations\n+can be referenced from all files.  Use them like so:\n+\n+   Lorem ipsum [Ref]_ dolor sit amet.\n+\n+   .. [Ref] Book or article reference, URL or whatever.\n+\n+Citation usage is similar to footnote usage, but with a label that is\n+not numeric or begins with \"#\".\n+\n+\n+Substitutions\n+=============\n+\n+reST supports \"substitutions\" (>>:duref:`ref <substitution-\n+definitions>`<<), which are pieces of text and/or markup referred to\n+in the text by \"|name|\".  They are defined like footnotes with\n+explicit markup blocks, like this:\n+\n+   .. |name| replace:: replacement *text*\n+\n+or this:\n+\n+   .. |caution| image:: warning.png\n+                :alt: Warning!\n+\n+See the >>:duref:`reST reference for substitutions <substitution-\n+definitions>`<< for details.\n+\n+If you want to use some substitutions for all documents, put them into\n+>>:confval:`rst_prolog`<< or >>:confval:`rst_epilog`<< or put them\n+into a separate file and include it into all documents you want to use\n+them in, using the \"include\" directive.  (Be sure to give the include\n+file a file name extension differing from that of other source files,\n+to avoid Sphinx finding it as a standalone document.)\n+\n+Sphinx defines some default substitutions, see Substitutions.\n+\n+\n+Comments\n+========\n+\n+Every explicit markup block which isn't a valid markup construct (like\n+the footnotes above) is regarded as a comment (>>:duref:`ref\n+<comments>`<<).  For example:\n+\n+   .. This is a comment.\n+\n+You can indent text after a comment start to form multiline comments:\n+\n+   ..\n+      This whole indented block\n+      is a comment.\n+\n+      Still in the comment.\n+\n+\n+HTML Metadata\n+=============\n+\n+The \"meta\" directive (>>:dudir:`ref <meta>`<<) allows specifying the\n+HTML metadata element of a Sphinx documentation page.  For example,\n+the directive:\n+\n+   .. meta::\n+      :description: The Sphinx documentation builder\n+      :keywords: Sphinx, documentation, builder\n+\n+will generate the following HTML output:\n+\n+   <meta name=\"description\" content=\"The Sphinx documentation builder\">\n+   <meta name=\"keywords\" content=\"Sphinx, documentation, builder\">\n+\n+Also, Sphinx will add the keywords as specified in the meta directive\n+to the search index.  Thereby, the \"lang\" attribute of the meta\n+element is considered.  For example, the directive:\n+\n+   .. meta::\n+      :keywords: backup\n+      :keywords lang=en: pleasefindthiskey pleasefindthiskeytoo\n+      :keywords lang=de: bittediesenkeyfinden\n+\n+adds the following words to the search indices of builds with\n+different language configurations:\n+\n+* \"pleasefindthiskey\", \"pleasefindthiskeytoo\" to *English* builds;\n+\n+* \"bittediesenkeyfinden\" to *German* builds;\n+\n+* \"backup\" to builds in all languages.\n+\n+\n+Source encoding\n+===============\n+\n+Since the easiest way to include special characters like em dashes or\n+copyright signs in reST is to directly write them as Unicode\n+characters, one has to specify an encoding.  Sphinx assumes source\n+files to be encoded in UTF-8 by default; you can change this with the\n+>>:confval:`source_encoding`<< config value.\n+\n+\n+Gotchas\n+=======\n+\n+There are some problems one commonly runs into while authoring reST\n+documents:\n+\n+* **Separation of inline markup:** As said above, inline markup spans\n+  must be separated from the surrounding text by non-word characters,\n+  you have to use a backslash-escaped space to get around that.  See\n+  >>:duref:`the reference <substitution-definitions>`<< for the\n+  details.\n+\n+* **No nested inline markup:** Something like \"*see :func:`foo`*\" is\n+  not possible.\n+\n+-[ Footnotes ]-\n+\n+[1] When the default domain contains a \"class\" directive, this\n+    directive will be shadowed.  Therefore, Sphinx re-exports it as\n+    \"rst-class\".\ndiff --git a/_build/doc/usage/restructuredtext/directives.txt b/_build/doc/usage/restructuredtext/directives.txt\nnew file mode 100644\nindex 000000000..3b9679115\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/directives.txt\n@@ -0,0 +1,1243 @@\n+Directives\n+**********\n+\n+As previously discussed, a directive is a generic block of explicit\n+markup. While Docutils provides a number of directives, Sphinx\n+provides many more and uses directives as one of the primary extension\n+mechanisms.\n+\n+See */usage/restructuredtext/domains* for roles added by domains.\n+\n+See also:\n+\n+  Refer to the reStructuredText Primer for an overview of the\n+  directives provided by Docutils.\n+\n+\n+Table of contents\n+=================\n+\n+Since reST does not have facilities to interconnect several documents,\n+or split documents into multiple output files, Sphinx uses a custom\n+directive to add relations between the single files the documentation\n+is made of, as well as tables of contents.  The \"toctree\" directive is\n+the central element.\n+\n+Note:\n+\n+  Simple \"inclusion\" of one file in another can be done with the\n+  >>:dudir:`include`<< directive.\n+\n+Note:\n+\n+  To create table of contents for current document (.rst file), use\n+  the standard reST >>:dudir:`contents directive <table-of-\n+  contents>`<<.\n+\n+.. toctree::\n+\n+   This directive inserts a \"TOC tree\" at the current location, using\n+   the individual TOCs (including \"sub-TOC trees\") of the documents\n+   given in the directive body.  Relative document names (not\n+   beginning with a slash) are relative to the document the directive\n+   occurs in, absolute names are relative to the source directory.  A\n+   numeric \"maxdepth\" option may be given to indicate the depth of the\n+   tree; by default, all levels are included. [1]\n+\n+   The representation of \"TOC tree\" is changed in each output format.\n+   The builders that output multiple files (ex. HTML) treat it as a\n+   collection of hyperlinks.  On the other hand, the builders that\n+   output a single file (ex. LaTeX, man page, etc.) replace it with\n+   the content of the documents on the TOC tree.\n+\n+   Consider this example (taken from the Python docs' library\n+   reference index):\n+\n+      .. toctree::\n+         :maxdepth: 2\n+\n+         intro\n+         strings\n+         datatypes\n+         numeric\n+         (many more documents listed here)\n+\n+   This accomplishes two things:\n+\n+   * Tables of contents from all those documents are inserted, with a\n+     maximum depth of two, that means one nested heading.  \"toctree\"\n+     directives in those documents are also taken into account.\n+\n+   * Sphinx knows the relative order of the documents \"intro\",\n+     \"strings\" and so forth, and it knows that they are children of\n+     the shown document, the library index.  From this information it\n+     generates \"next chapter\", \"previous chapter\" and \"parent chapter\"\n+     links.\n+\n+   **Entries**\n+\n+   Document titles in the \"toctree\" will be automatically read from\n+   the title of the referenced document. If that isn't what you want,\n+   you can specify an explicit title and target using a similar syntax\n+   to reST hyperlinks (and Sphinx's cross-referencing syntax). This\n+   looks like:\n+\n+      .. toctree::\n+\n+         intro\n+         All about strings <strings>\n+         datatypes\n+\n+   The second line above will link to the \"strings\" document, but will\n+   use the title \"All about strings\" instead of the title of the\n+   \"strings\" document.\n+\n+   You can also add external links, by giving an HTTP URL instead of a\n+   document name.\n+\n+   **Section numbering**\n+\n+   If you want to have section numbers even in HTML output, give the\n+   **toplevel** toctree a \"numbered\" option.  For example:\n+\n+      .. toctree::\n+         :numbered:\n+\n+         foo\n+         bar\n+\n+   Numbering then starts at the heading of \"foo\".  Sub-toctrees are\n+   automatically numbered (don't give the \"numbered\" flag to those).\n+\n+   Numbering up to a specific depth is also possible, by giving the\n+   depth as a numeric argument to \"numbered\".\n+\n+   **Additional options**\n+\n+   You can use the \"caption\" option to provide a toctree caption and\n+   you can use the \"name\" option to provide an implicit target name\n+   that can be referenced by using \"ref\":\n+\n+      .. toctree::\n+         :caption: Table of Contents\n+         :name: mastertoc\n+\n+         foo\n+\n+   If you want only the titles of documents in the tree to show up,\n+   not other headings of the same level, you can use the \"titlesonly\"\n+   option:\n+\n+      .. toctree::\n+         :titlesonly:\n+\n+         foo\n+         bar\n+\n+   You can use \"globbing\" in toctree directives, by giving the \"glob\"\n+   flag option.  All entries are then matched against the list of\n+   available documents, and matches are inserted into the list\n+   alphabetically.  Example:\n+\n+      .. toctree::\n+         :glob:\n+\n+         intro*\n+         recipe/*\n+         *\n+\n+   This includes first all documents whose names start with \"intro\",\n+   then all documents in the \"recipe\" folder, then all remaining\n+   documents (except the one containing the directive, of course.) [2]\n+\n+   The special entry name \"self\" stands for the document containing\n+   the toctree directive.  This is useful if you want to generate a\n+   \"sitemap\" from the toctree.\n+\n+   You can use the \"reversed\" flag option to reverse the order of the\n+   entries in the list. This can be useful when using the \"glob\" flag\n+   option to reverse the ordering of the files.  Example:\n+\n+      .. toctree::\n+         :glob:\n+         :reversed:\n+\n+         recipe/*\n+\n+   You can also give a \"hidden\" option to the directive, like this:\n+\n+      .. toctree::\n+         :hidden:\n+\n+         doc_1\n+         doc_2\n+\n+   This will still notify Sphinx of the document hierarchy, but not\n+   insert links into the document at the location of the directive --\n+   this makes sense if you intend to insert these links yourself, in a\n+   different style, or in the HTML sidebar.\n+\n+   In cases where you want to have only one top-level toctree and hide\n+   all other lower level toctrees you can add the \"includehidden\"\n+   option to the top-level toctree entry:\n+\n+      .. toctree::\n+         :includehidden:\n+\n+         doc_1\n+         doc_2\n+\n+   All other toctree entries can then be eliminated by the \"hidden\"\n+   option.\n+\n+   In the end, all documents in the *source directory* (or\n+   subdirectories) must occur in some \"toctree\" directive; Sphinx will\n+   emit a warning if it finds a file that is not included, because\n+   that means that this file will not be reachable through standard\n+   navigation.\n+\n+   Use >>:confval:`exclude_patterns`<< to explicitly exclude documents\n+   or directories from building completely.  Use the \"orphan\" metadata\n+   to let a document be built, but notify Sphinx that it is not\n+   reachable via a toctree.\n+\n+   The \"master document\" (selected by >>:confval:`master_doc`<<) is\n+   the \"root\" of the TOC tree hierarchy.  It can be used as the\n+   documentation's main page, or as a \"full table of contents\" if you\n+   don't give a \"maxdepth\" option.\n+\n+   Changed in version 0.3: Added \"globbing\" option.\n+\n+   Changed in version 0.6: Added \"numbered\" and \"hidden\" options as\n+   well as external links and support for \"self\" references.\n+\n+   Changed in version 1.0: Added \"titlesonly\" option.\n+\n+   Changed in version 1.1: Added numeric argument to \"numbered\".\n+\n+   Changed in version 1.2: Added \"includehidden\" option.\n+\n+   Changed in version 1.3: Added \"caption\" and \"name\" option.\n+\n+\n+Special names\n+-------------\n+\n+Sphinx reserves some document names for its own use; you should not\n+try to create documents with these names -- it will cause problems.\n+\n+The special document names (and pages generated for them) are:\n+\n+* \"genindex\", \"modindex\", \"search\"\n+\n+  These are used for the general index, the Python module index, and\n+  the search page, respectively.\n+\n+  The general index is populated with entries from modules, all index-\n+  generating object descriptions, and from \"index\" directives.\n+\n+  The Python module index contains one entry per \"py:module\"\n+  directive.\n+\n+  The search page contains a form that uses the generated JSON search\n+  index and JavaScript to full-text search the generated documents for\n+  search words; it should work on every major browser that supports\n+  modern JavaScript.\n+\n+* every name beginning with \"_\"\n+\n+  Though few such names are currently used by Sphinx, you should not\n+  create documents or document-containing directories with such names.\n+  (Using \"_\" as a prefix for a custom template directory is fine.)\n+\n+Warning:\n+\n+  Be careful with unusual characters in filenames.  Some formats may\n+  interpret these characters in unexpected ways:\n+\n+  * Do not use the colon \":\" for HTML based formats.  Links to other\n+    parts may not work.\n+\n+  * Do not use the plus \"+\" for the ePub format.  Some resources may\n+    not be found.\n+\n+\n+Paragraph-level markup\n+======================\n+\n+These directives create short paragraphs and can be used inside\n+information units as well as normal text.\n+\n+.. note::\n+\n+   An especially important bit of information about an API that a user\n+   should be aware of when using whatever bit of API the note pertains\n+   to.  The content of the directive should be written in complete\n+   sentences and include all appropriate punctuation.\n+\n+   Example:\n+\n+      .. note::\n+\n+         This function is not suitable for sending spam e-mails.\n+\n+.. warning::\n+\n+   An important bit of information about an API that a user should be\n+   very aware of when using whatever bit of API the warning pertains\n+   to.  The content of the directive should be written in complete\n+   sentences and include all appropriate punctuation. This differs\n+   from \"note\" in that it is recommended over \"note\" for information\n+   regarding security.\n+\n+.. versionadded:: version\n+\n+   This directive documents the version of the project which added the\n+   described feature to the library or C API. When this applies to an\n+   entire module, it should be placed at the top of the module section\n+   before any prose.\n+\n+   The first argument must be given and is the version in question;\n+   you can add a second argument consisting of a *brief* explanation\n+   of the change.\n+\n+   Example:\n+\n+      .. versionadded:: 2.5\n+         The *spam* parameter.\n+\n+   Note that there must be no blank line between the directive head\n+   and the explanation; this is to make these blocks visually\n+   continuous in the markup.\n+\n+.. versionchanged:: version\n+\n+   Similar to \"versionadded\", but describes when and what changed in\n+   the named feature in some way (new parameters, changed side\n+   effects, etc.).\n+\n+.. deprecated:: version\n+\n+   Similar to \"versionchanged\", but describes when the feature was\n+   deprecated.  An explanation can also be given, for example to\n+   inform the reader what should be used instead.  Example:\n+\n+      .. deprecated:: 3.1\n+         Use :func:`spam` instead.\n+\n+.. seealso::\n+\n+   Many sections include a list of references to module documentation\n+   or external documents.  These lists are created using the \"seealso\"\n+   directive.\n+\n+   The \"seealso\" directive is typically placed in a section just\n+   before any subsections.  For the HTML output, it is shown boxed off\n+   from the main flow of the text.\n+\n+   The content of the \"seealso\" directive should be a reST definition\n+   list. Example:\n+\n+      .. seealso::\n+\n+         Module :py:mod:`zipfile`\n+            Documentation of the :py:mod:`zipfile` standard module.\n+\n+         `GNU tar manual, Basic Tar Format <http://link>`_\n+            Documentation for tar archive files, including GNU tar extensions.\n+\n+   There's also a \"short form\" allowed that looks like this:\n+\n+      .. seealso:: modules :py:mod:`zipfile`, :py:mod:`tarfile`\n+\n+   New in version 0.5: The short form.\n+\n+.. rubric:: title\n+\n+   This directive creates a paragraph heading that is not used to\n+   create a table of contents node.\n+\n+   Note:\n+\n+     If the *title* of the rubric is \"Footnotes\" (or the selected\n+     language's equivalent), this rubric is ignored by the LaTeX\n+     writer, since it is assumed to only contain footnote definitions\n+     and therefore would create an empty heading.\n+\n+.. centered::\n+\n+   This directive creates a centered boldfaced line of text.  Use it\n+   as follows:\n+\n+      .. centered:: LICENSE AGREEMENT\n+\n+   Deprecated since version 1.1: This presentation-only directive is a\n+   legacy from older versions.  Use a \"rst-class\" directive instead\n+   and add an appropriate style.\n+\n+.. hlist::\n+\n+   This directive must contain a bullet list.  It will transform it\n+   into a more compact list by either distributing more than one item\n+   horizontally, or reducing spacing between items, depending on the\n+   builder.\n+\n+   For builders that support the horizontal distribution, there is a\n+   \"columns\" option that specifies the number of columns; it defaults\n+   to 2.  Example:\n+\n+      .. hlist::\n+         :columns: 3\n+\n+         * A list of\n+         * short items\n+         * that should be\n+         * displayed\n+         * horizontally\n+\n+   New in version 0.6.\n+\n+\n+Showing code examples\n+=====================\n+\n+There are multiple ways to show syntax-highlighted literal code blocks\n+in Sphinx: using reST doctest blocks; using reST literal blocks,\n+optionally in combination with the \"highlight\" directive; using the\n+\"code-block\" directive; and using the \"literalinclude\" directive.\n+Doctest blocks can only be used to show interactive Python sessions,\n+while the remaining three can be used for other languages. Of these\n+three, literal blocks are useful when an entire document, or at least\n+large sections of it, use code blocks with the same syntax and which\n+should be styled in the same manner. On the other hand, the \"code-\n+block\" directive makes more sense when you want more fine-tuned\n+control over the styling of each block or when you have a document\n+containing code blocks using multiple varied syntaxes. Finally, the\n+\"literalinclude\" directive is useful for including entire code files\n+in your documentation.\n+\n+In all cases, Syntax highlighting is provided by Pygments. When using\n+literal blocks, this is configured using any \"highlight\" directives in\n+the source file. When a \"highlight\" directive is encountered, it is\n+used until the next \"highlight\" directive is encountered. If there is\n+no \"highlight\" directive in the file, the global highlighting language\n+is used. This defaults to \"python\" but can be configured using the\n+>>:confval:`highlight_language`<< config value. The following values\n+are supported:\n+\n+* \"none\" (no highlighting)\n+\n+* \"default\" (similar to \"python3\" but with a fallback to \"none\"\n+  without warning highlighting fails; the default when\n+  >>:confval:`highlight_language`<< isn't set)\n+\n+* \"guess\" (let Pygments guess the lexer based on contents, only works\n+  with certain well-recognizable languages)\n+\n+* \"python\"\n+\n+* \"rest\"\n+\n+* \"c\"\n+\n+* ... and any other lexer alias that Pygments supports\n+\n+If highlighting with the selected language fails (i.e. Pygments emits\n+an \"Error\" token), the block is not highlighted in any way.\n+\n+Important:\n+\n+  The list of lexer aliases supported is tied to the Pygment version.\n+  If you want to ensure consistent highlighting, you should fix your\n+  version of Pygments.\n+\n+.. highlight:: language\n+\n+   Example:\n+\n+      .. highlight:: c\n+\n+   This language is used until the next \"highlight\" directive is\n+   encountered. As discussed previously, *language* can be any lexer\n+   alias supported by Pygments.\n+\n+   -[ options ]-\n+\n+   :linenothreshold: threshold (number (optional))\n+\n+      Enable to generate line numbers for code blocks.\n+\n+      This option takes an optional number as threshold parameter.  If\n+      any threshold given, the directive will produce line numbers\n+      only for the code blocks longer than N lines.  If not given,\n+      line numbers will be produced for all of code blocks.\n+\n+      Example:\n+\n+         .. highlight:: python\n+            :linenothreshold: 5\n+\n+   :force: (no value)\n+\n+      If given, minor errors on highlighting are ignored.\n+\n+      New in version 2.1.\n+\n+.. code-block:: [language]\n+\n+   Example:\n+\n+      .. code-block:: ruby\n+\n+         Some Ruby code.\n+\n+   The directive's alias name \"sourcecode\" works as well.  This\n+   directive takes a language name as an argument.  It can be any\n+   lexer alias supported by Pygments.  If it is not given, the setting\n+   of \"highlight\" directive will be used.  If not set,\n+   >>:confval:`highlight_language`<< will be used.\n+\n+   Changed in version 2.0: The \"language\" argument becomes optional.\n+\n+   -[ options ]-\n+\n+   :linenos: (no value)\n+\n+      Enable to generate line numbers for the code block:\n+\n+         .. code-block:: ruby\n+            :linenos:\n+\n+            Some more Ruby code.\n+\n+   :lineno-start: number (number)\n+\n+      Set the first line number of the code block.  If present,\n+      \"linenos\" option is also automatically activated:\n+\n+         .. code-block:: ruby\n+            :lineno-start: 10\n+\n+            Some more Ruby code, with line numbering starting at 10.\n+\n+      New in version 1.3.\n+\n+   :emphasize-lines: line numbers (comma separated numbers)\n+\n+      Emphasize particular lines of the code block:\n+\n+         .. code-block:: python\n+            :emphasize-lines: 3,5\n+\n+            def some_function():\n+                interesting = False\n+                print 'This line is highlighted.'\n+                print 'This one is not...'\n+                print '...but this one is.'\n+\n+      New in version 1.1.\n+\n+      Changed in version 1.6.6: LaTeX supports the \"emphasize-lines\"\n+      option.\n+\n+   :caption: caption of code block (text)\n+\n+      Set a caption to the code block.\n+\n+      New in version 1.3.\n+\n+   :name: a label for hyperlink (text)\n+\n+      Define implicit target name that can be referenced by using\n+      \"ref\".  For example:\n+\n+         .. code-block:: python\n+            :caption: this.py\n+            :name: this-py\n+\n+            print 'Explicit is better than implicit.'\n+\n+      New in version 1.3.\n+\n+   :dedent: number (number)\n+\n+      Strip indentation characters from the code block. For example:\n+\n+         .. code-block:: ruby\n+            :dedent: 4\n+\n+                some ruby code\n+\n+      New in version 1.3.\n+\n+   :force: (no value)\n+\n+      If given, minor errors on highlighting are ignored.\n+\n+      New in version 2.1.\n+\n+.. literalinclude:: filename\n+\n+   Longer displays of verbatim text may be included by storing the\n+   example text in an external file containing only plain text.  The\n+   file may be included using the \"literalinclude\" directive. [3] For\n+   example, to include the Python source file \"example.py\", use:\n+\n+      .. literalinclude:: example.py\n+\n+   The file name is usually relative to the current file's path.\n+   However, if it is absolute (starting with \"/\"), it is relative to\n+   the top source directory.\n+\n+   **Additional options**\n+\n+   Like \"code-block\", the directive supports the \"linenos\" flag option\n+   to switch on line numbers, the \"lineno-start\" option to select the\n+   first line number, the \"emphasize-lines\" option to emphasize\n+   particular lines, the \"name\" option to provide an implicit target\n+   name, the \"dedent\" option to strip indentation characters for the\n+   code block, and a \"language\" option to select a language different\n+   from the current file's standard language. In addition, it supports\n+   the \"caption\" option; however, this can be provided with no\n+   argument to use the filename as the caption. Example with options:\n+\n+      .. literalinclude:: example.rb\n+         :language: ruby\n+         :emphasize-lines: 12,15-18\n+         :linenos:\n+\n+   Tabs in the input are expanded if you give a \"tab-width\" option\n+   with the desired tab width.\n+\n+   Include files are assumed to be encoded in the\n+   >>:confval:`source_encoding`<<. If the file has a different\n+   encoding, you can specify it with the \"encoding\" option:\n+\n+      .. literalinclude:: example.py\n+         :encoding: latin-1\n+\n+   The directive also supports including only parts of the file.  If\n+   it is a Python module, you can select a class, function or method\n+   to include using the \"pyobject\" option:\n+\n+      .. literalinclude:: example.py\n+         :pyobject: Timer.start\n+\n+   This would only include the code lines belonging to the \"start()\"\n+   method in the \"Timer\" class within the file.\n+\n+   Alternately, you can specify exactly which lines to include by\n+   giving a \"lines\" option:\n+\n+      .. literalinclude:: example.py\n+         :lines: 1,3,5-10,20-\n+\n+   This includes the lines 1, 3, 5 to 10 and lines 20 to the last\n+   line.\n+\n+   Another way to control which part of the file is included is to use\n+   the \"start-after\" and \"end-before\" options (or only one of them).\n+   If \"start-after\" is given as a string option, only lines that\n+   follow the first line containing that string are included.  If\n+   \"end-before\" is given as a string option, only lines that precede\n+   the first lines containing that string are included. The \"start-at\"\n+   and \"end-at\" options behave in a similar way, but the lines\n+   containing the matched string are included.\n+\n+   \"start-after\"/\"start-at\" and \"end-before\"/\"end-at\" can have same\n+   string. \"start-after\"/\"start-at\" filter lines before the line that\n+   contains option string (\"start-at\" will keep the line). Then \"end-\n+   before\"/\"end-at\" filter lines after the line that contains option\n+   string (\"end-at\" will keep the line and \"end-before\" skip the first\n+   line).\n+\n+   Note:\n+\n+     If you want to select only \"[second-section]\" of ini file like\n+     the following, you can use \":start-at: [second-section]\" and\n+     \":end-before: [third-section]\":\n+\n+        [first-section]\n+\n+        var_in_first=true\n+\n+        [second-section]\n+\n+        var_in_second=true\n+\n+        [third-section]\n+\n+        var_in_third=true\n+\n+     Useful cases of these option is working with tag comments.\n+     \":start-after: [initialized]\" and \":end-before: [initialized]\"\n+     options keep lines between comments:\n+\n+        if __name__ == \"__main__\":\n+            # [initialize]\n+            app.start(\":8000\")\n+            # [initialize]\n+\n+   When lines have been selected in any of the ways described above,\n+   the line numbers in \"emphasize-lines\" refer to those selected\n+   lines, counted consecutively starting at \"1\".\n+\n+   When specifying particular parts of a file to display, it can be\n+   useful to display the original line numbers. This can be done using\n+   the \"lineno-match\" option, which is however allowed only when the\n+   selection consists of contiguous lines.\n+\n+   You can prepend and/or append a line to the included code, using\n+   the \"prepend\" and \"append\" option, respectively.  This is useful\n+   e.g. for highlighting PHP code that doesn't include the\n+   \"<?php\"/\"?>\" markers.\n+\n+   If you want to show the diff of the code, you can specify the old\n+   file by giving a \"diff\" option:\n+\n+      .. literalinclude:: example.py\n+         :diff: example.py.orig\n+\n+   This shows the diff between \"example.py\" and \"example.py.orig\" with\n+   unified diff format.\n+\n+   A \"force\" option can ignore minor errors on highlighting.\n+\n+   Changed in version 0.4.3: Added the \"encoding\" option.\n+\n+   Changed in version 0.6: Added the \"pyobject\", \"lines\", \"start-\n+   after\" and \"end-before\" options, as well as support for absolute\n+   filenames.\n+\n+   Changed in version 1.0: Added the \"prepend\", \"append\", and \"tab-\n+   width\" options.\n+\n+   Changed in version 1.3: Added the \"diff\", \"lineno-match\",\n+   \"caption\", \"name\", and \"dedent\" options.\n+\n+   Changed in version 1.5: Added the \"start-at\", and \"end-at\" options.\n+\n+   Changed in version 1.6: With both \"start-after\" and \"lines\" in use,\n+   the first line as per \"start-after\" is considered to be with line\n+   number \"1\" for \"lines\".\n+\n+   Changed in version 2.1: Added the \"force\" option.\n+\n+\n+Glossary\n+========\n+\n+.. glossary::\n+\n+   This directive must contain a reST definition-list-like markup with\n+   terms and definitions.  The definitions will then be referenceable\n+   with the \"term\" role.  Example:\n+\n+      .. glossary::\n+\n+         environment\n+            A structure where information about all documents under the root is\n+            saved, and used for cross-referencing.  The environment is pickled\n+            after the parsing stage, so that successive runs only need to read\n+            and parse new and changed documents.\n+\n+         source directory\n+            The directory which, including its subdirectories, contains all\n+            source files for one Sphinx project.\n+\n+   In contrast to regular definition lists, *multiple* terms per entry\n+   are allowed, and inline markup is allowed in terms.  You can link\n+   to all of the terms.  For example:\n+\n+      .. glossary::\n+\n+         term 1\n+         term 2\n+            Definition of both terms.\n+\n+   (When the glossary is sorted, the first term determines the sort\n+   order.)\n+\n+   If you want to specify \"grouping key\" for general index entries,\n+   you can put a \"key\" as \"term : key\". For example:\n+\n+      .. glossary::\n+\n+         term 1 : A\n+         term 2 : B\n+            Definition of both terms.\n+\n+   Note that \"key\" is used for grouping key as is. The \"key\" isn't\n+   normalized; key \"A\" and \"a\" become different groups. The whole\n+   characters in \"key\" is used instead of a first character; it is\n+   used for \"Combining Character Sequence\" and \"Surrogate Pairs\"\n+   grouping key.\n+\n+   In i18n situation, you can specify \"localized term : key\" even if\n+   original text only have \"term\" part. In this case, translated\n+   \"localized term\" will be categorized in \"key\" group.\n+\n+   New in version 0.6: You can now give the glossary directive a\n+   \":sorted:\" flag that will automatically sort the entries\n+   alphabetically.\n+\n+   Changed in version 1.1: Now supports multiple terms and inline\n+   markup in terms.\n+\n+   Changed in version 1.4: Index key for glossary term should be\n+   considered *experimental*.\n+\n+\n+Meta-information markup\n+=======================\n+\n+.. sectionauthor:: name <email>\n+\n+   Identifies the author of the current section.  The argument should\n+   include the author's name such that it can be used for presentation\n+   and email address.  The domain name portion of the address should\n+   be lower case. Example:\n+\n+      .. sectionauthor:: Guido van Rossum <guido@python.org>\n+\n+   By default, this markup isn't reflected in the output in any way\n+   (it helps keep track of contributions), but you can set the\n+   configuration value >>:confval:`show_authors`<< to \"True\" to make\n+   them produce a paragraph in the output.\n+\n+.. codeauthor:: name <email>\n+\n+   The \"codeauthor\" directive, which can appear multiple times, names\n+   the authors of the described code, just like \"sectionauthor\" names\n+   the author(s) of a piece of documentation.  It too only produces\n+   output if the >>:confval:`show_authors`<< configuration value is\n+   \"True\".\n+\n+\n+Index-generating markup\n+=======================\n+\n+Sphinx automatically creates index entries from all object\n+descriptions (like functions, classes or attributes) like discussed in\n+*/usage/restructuredtext/domains*.\n+\n+However, there is also explicit markup available, to make the index\n+more comprehensive and enable index entries in documents where\n+information is not mainly contained in information units, such as the\n+language reference.\n+\n+.. index:: <entries>\n+\n+   This directive contains one or more index entries.  Each entry\n+   consists of a type and a value, separated by a colon.\n+\n+   For example:\n+\n+      .. index::\n+         single: execution; context\n+         module: __main__\n+         module: sys\n+         triple: module; search; path\n+\n+      The execution context\n+      ---------------------\n+\n+      ...\n+\n+   This directive contains five entries, which will be converted to\n+   entries in the generated index which link to the exact location of\n+   the index statement (or, in case of offline media, the\n+   corresponding page number).\n+\n+   Since index directives generate cross-reference targets at their\n+   location in the source, it makes sense to put them *before* the\n+   thing they refer to -- e.g. a heading, as in the example above.\n+\n+   The possible entry types are:\n+\n+   single\n+      Creates a single index entry.  Can be made a subentry by\n+      separating the subentry text with a semicolon (this notation is\n+      also used below to describe what entries are created).\n+\n+   pair\n+      \"pair: loop; statement\" is a shortcut that creates two index\n+      entries, namely \"loop; statement\" and \"statement; loop\".\n+\n+   triple\n+      Likewise, \"triple: module; search; path\" is a shortcut that\n+      creates three index entries, which are \"module; search path\",\n+      \"search; path, module\" and \"path; module search\".\n+\n+   see\n+      \"see: entry; other\" creates an index entry that refers from\n+      \"entry\" to \"other\".\n+\n+   seealso\n+      Like \"see\", but inserts \"see also\" instead of \"see\".\n+\n+   module, keyword, operator, object, exception, statement, builtin\n+      These all create two index entries.  For example, \"module:\n+      hashlib\" creates the entries \"module; hashlib\" and \"hashlib;\n+      module\".  (These are Python-specific and therefore deprecated.)\n+\n+   You can mark up \"main\" index entries by prefixing them with an\n+   exclamation mark.  The references to \"main\" entries are emphasized\n+   in the generated index.  For example, if two pages contain\n+\n+      .. index:: Python\n+\n+   and one page contains\n+\n+      .. index:: ! Python\n+\n+   then the backlink to the latter page is emphasized among the three\n+   backlinks.\n+\n+   For index directives containing only \"single\" entries, there is a\n+   shorthand notation:\n+\n+      .. index:: BNF, grammar, syntax, notation\n+\n+   This creates four index entries.\n+\n+   Changed in version 1.1: Added \"see\" and \"seealso\" types, as well as\n+   marking main entries.\n+\n+   -[ options ]-\n+\n+   :name: a label for hyperlink (text)\n+\n+      Define implicit target name that can be referenced by using\n+      \"ref\".  For example:\n+\n+         .. index:: Python\n+            :name: py-index\n+\n+   New in version 3.0.\n+\n+:index:\n+\n+   While the \"index\" directive is a block-level markup and links to\n+   the beginning of the next paragraph, there is also a corresponding\n+   role that sets the link target directly where it is used.\n+\n+   The content of the role can be a simple phrase, which is then kept\n+   in the text and used as an index entry.  It can also be a\n+   combination of text and index entry, styled like with explicit\n+   targets of cross-references.  In that case, the \"target\" part can\n+   be a full entry as described for the directive above.  For example:\n+\n+      This is a normal reST :index:`paragraph` that contains several\n+      :index:`index entries <pair: index; entry>`.\n+\n+   New in version 1.1.\n+\n+\n+Including content based on tags\n+===============================\n+\n+.. only:: <expression>\n+\n+   Include the content of the directive only if the *expression* is\n+   true.  The expression should consist of tags, like this:\n+\n+      .. only:: html and draft\n+\n+   Undefined tags are false, defined tags (via the \"-t\" command-line\n+   option or within \"conf.py\", see here) are true.  Boolean\n+   expressions, also using parentheses (like \"html and (latex or\n+   draft)\") are supported.\n+\n+   The *format* and the *name* of the current builder (\"html\", \"latex\"\n+   or \"text\") are always set as a tag [4].  To make the distinction\n+   between format and name explicit, they are also added with the\n+   prefix \"format_\" and \"builder_\", e.g. the epub builder defines the\n+   tags  \"html\", \"epub\", \"format_html\" and \"builder_epub\".\n+\n+   These standard tags are set *after* the configuration file is read,\n+   so they are not available there.\n+\n+   All tags must follow the standard Python identifier syntax as set\n+   out in the Identifiers and keywords documentation.  That is, a tag\n+   expression may only consist of tags that conform to the syntax of\n+   Python variables.  In ASCII, this consists of the uppercase and\n+   lowercase letters \"A\" through \"Z\", the underscore \"_\" and, except\n+   for the first character, the digits \"0\" through \"9\".\n+\n+   New in version 0.6.\n+\n+   Changed in version 1.2: Added the name of the builder and the\n+   prefixes.\n+\n+   Warning:\n+\n+     This directive is designed to control only content of document.\n+     It could not control sections, labels and so on.\n+\n+\n+Tables\n+======\n+\n+Use reStructuredText tables, i.e. either\n+\n+* grid table syntax (>>:duref:`ref <grid-tables>`<<),\n+\n+* simple table syntax (>>:duref:`ref <simple-tables>`<<),\n+\n+* >>:dudir:`csv-table`<< syntax,\n+\n+* or >>:dudir:`list-table`<< syntax.\n+\n+The >>:dudir:`table`<< directive serves as optional wrapper of the\n+*grid* and *simple* syntaxes.\n+\n+They work fine in HTML output, however there are some gotchas when\n+using tables in LaTeX: the column width is hard to determine correctly\n+automatically.  For this reason, the following directive exists:\n+\n+.. tabularcolumns:: column spec\n+\n+   This directive gives a \"column spec\" for the next table occurring\n+   in the source file.  The spec is the second argument to the LaTeX\n+   \"tabulary\" package's environment (which Sphinx uses to translate\n+   tables).  It can have values like\n+\n+      |l|l|l|\n+\n+   which means three left-adjusted, nonbreaking columns.  For columns\n+   with longer text that should automatically be broken, use either\n+   the standard \"p{width}\" construct, or tabulary's automatic\n+   specifiers:\n+\n+   +-------+--------------------------------------------+\n+   | \"L\"   | flush left column with automatic width     |\n+   +-------+--------------------------------------------+\n+   | \"R\"   | flush right column with automatic width    |\n+   +-------+--------------------------------------------+\n+   | \"C\"   | centered column with automatic width       |\n+   +-------+--------------------------------------------+\n+   | \"J\"   | justified column with automatic width      |\n+   +-------+--------------------------------------------+\n+\n+   The automatic widths of the \"LRCJ\" columns are attributed by\n+   \"tabulary\" in proportion to the observed shares in a first pass\n+   where the table cells are rendered at their natural \"horizontal\"\n+   widths.\n+\n+   By default, Sphinx uses a table layout with \"J\" for every column.\n+\n+   New in version 0.3.\n+\n+   Changed in version 1.6: Merged cells may now contain multiple\n+   paragraphs and are much better handled, thanks to custom Sphinx\n+   LaTeX macros. This novel situation motivated the switch to \"J\"\n+   specifier and not \"L\" by default.\n+\n+   Hint:\n+\n+     Sphinx actually uses \"T\" specifier having done\n+     \"\\newcolumntype{T}{J}\". To revert to previous default, insert\n+     \"\\newcolumntype{T}{L}\" in the LaTeX preamble (see\n+     >>:confval:`latex_elements`<<).A frequent issue with tabulary is\n+     that columns with little contents are \"squeezed\". The minimal\n+     column width is a tabulary parameter called \"\\tymin\". You may set\n+     it globally in the LaTeX preamble via \"\\setlength{\\tymin}{40pt}\"\n+     for example.Else, use the \"tabularcolumns\" directive with an\n+     explicit \"p{40pt}\" (for example) for that column. You may use\n+     also \"l\" specifier but this makes the task of setting column\n+     widths more difficult if some merged cell intersects that column.\n+\n+   Warning:\n+\n+     Tables with more than 30 rows are rendered using \"longtable\", not\n+     \"tabulary\", in order to allow pagebreaks. The \"L\", \"R\", ...\n+     specifiers do not work for these tables.Tables that contain list-\n+     like elements such as object descriptions, blockquotes or any\n+     kind of lists cannot be set out of the box with \"tabulary\". They\n+     are therefore set with the standard LaTeX \"tabular\" (or\n+     \"longtable\") environment if you don't give a \"tabularcolumns\"\n+     directive.  If you do, the table will be set with \"tabulary\" but\n+     you must use the \"p{width}\" construct (or Sphinx's \"\\X\" and \"\\Y\"\n+     specifiers described below) for the columns containing these\n+     elements.Literal blocks do not work with \"tabulary\" at all, so\n+     tables containing a literal block are always set with \"tabular\".\n+     The verbatim environment used for literal blocks only works in\n+     \"p{width}\" (and \"\\X\" or \"\\Y\") columns, hence Sphinx generates\n+     such column specs for tables containing literal blocks.\n+\n+   Since Sphinx 1.5, the \"\\X{a}{b}\" specifier is used (there *is* a\n+   backslash in the specifier letter). It is like \"p{width}\" with the\n+   width set to a fraction \"a/b\" of the current line width. You can\n+   use it in the \"tabularcolumns\" (it is not a problem if some LaTeX\n+   macro is also called \"\\X\".)\n+\n+   It is *not* needed for \"b\" to be the total number of columns, nor\n+   for the sum of the fractions of the \"\\X\" specifiers to add  up to\n+   one. For example \"|\\X{2}{5}|\\X{1}{5}|\\X{1}{5}|\" is legitimate and\n+   the table will occupy 80% of the line width, the first of its three\n+   columns having the same width as the sum  of the next two.\n+\n+   This is used by the \":widths:\" option of the >>:dudir:`table`<<\n+   directive.\n+\n+   Since Sphinx 1.6, there is also the \"\\Y{f}\" specifier which admits\n+   a decimal argument, such has \"\\Y{0.15}\": this would have the same\n+   effect as \"\\X{3}{20}\".\n+\n+   Changed in version 1.6: Merged cells from complex grid tables\n+   (either multi-row, multi-column, or both) now allow blockquotes,\n+   lists, literal blocks, ... as do regular cells.Sphinx's merged\n+   cells interact well with \"p{width}\", \"\\X{a}{b}\", \"\\Y{f}\" and\n+   tabulary's columns.\n+\n+   Note:\n+\n+     \"tabularcolumns\" conflicts with \":widths:\" option of table\n+     directives.  If both are specified, \":widths:\" option will be\n+     ignored.\n+\n+\n+Math\n+====\n+\n+The input language for mathematics is LaTeX markup.  This is the de-\n+facto standard for plain-text math notation and has the added\n+advantage that no further translation is necessary when building LaTeX\n+output.\n+\n+Keep in mind that when you put math markup in **Python docstrings**\n+read by \"autodoc\", you either have to double all backslashes, or use\n+Python raw strings (\"r\"raw\"\").\n+\n+.. math::\n+\n+   Directive for displayed math (math that takes the whole line for\n+   itself).\n+\n+   The directive supports multiple equations, which should be\n+   separated by a blank line:\n+\n+      .. math::\n+\n+         (a + b)^2 = a^2 + 2ab + b^2\n+\n+         (a - b)^2 = a^2 - 2ab + b^2\n+\n+   In addition, each single equation is set within a \"split\"\n+   environment, which means that you can have multiple aligned lines\n+   in an equation, aligned at \"&\" and separated by \"\\\\\":\n+\n+      .. math::\n+\n+         (a + b)^2  &=  (a + b)(a + b) \\\\\n+                    &=  a^2 + 2ab + b^2\n+\n+   For more details, look into the documentation of the AmSMath LaTeX\n+   package.\n+\n+   When the math is only one line of text, it can also be given as a\n+   directive argument:\n+\n+      .. math:: (a + b)^2 = a^2 + 2ab + b^2\n+\n+   Normally, equations are not numbered.  If you want your equation to\n+   get a number, use the \"label\" option.  When given, it selects an\n+   internal label for the equation, by which it can be cross-\n+   referenced, and causes an equation number to be issued.  See \"eq\"\n+   for an example.  The numbering style depends on the output format.\n+\n+   There is also an option \"nowrap\" that prevents any wrapping of the\n+   given math in a math environment.  When you give this option, you\n+   must make sure yourself that the math is properly set up.  For\n+   example:\n+\n+      .. math::\n+         :nowrap:\n+\n+         \\begin{eqnarray}\n+            y    & = & ax^2 + bx + c \\\\\n+            f(x) & = & x^2 + 2xy + y^2\n+         \\end{eqnarray}\n+\n+See also:\n+\n+  Math support for HTML outputs in Sphinx\n+     Rendering options for math with HTML builders.\n+\n+  >>:confval:`latex_engine`<<\n+     Explains how to configure LaTeX builder to support Unicode\n+     literals in math mark-up.\n+\n+\n+Grammar production displays\n+===========================\n+\n+Special markup is available for displaying the productions of a formal\n+grammar. The markup is simple and does not attempt to model all\n+aspects of BNF (or any derived forms), but provides enough to allow\n+context-free grammars to be displayed in a way that causes uses of a\n+symbol to be rendered as hyperlinks to the definition of the symbol.\n+There is this directive:\n+\n+.. productionlist:: [productionGroup]\n+\n+   This directive is used to enclose a group of productions.  Each\n+   production is given on a single line and consists of a name,\n+   separated by a colon from the following definition.  If the\n+   definition spans multiple lines, each continuation line must begin\n+   with a colon placed at the same column as in the first line.\n+\n+   The *productionGroup* argument to \"productionlist\" serves to\n+   distinguish different sets of production lists that belong to\n+   different grammars.  Multiple production lists with the same\n+   *productionGroup* thus define rules in the same scope.\n+\n+   Blank lines are not allowed within \"productionlist\" directive\n+   arguments.\n+\n+   The definition can contain token names which are marked as\n+   interpreted text (e.g. \"\"sum ::= `integer` \"+\" `integer`\"\") -- this\n+   generates cross-references to the productions of these tokens.\n+   Outside of the production list, you can reference to token\n+   productions using \"token\". However, if you have given a\n+   *productionGroup* argument you must prefix the token name in the\n+   cross-reference with the group name and a colon, e.g.,\n+   \"\"myGroup:sum\"\" instead of just \"\"sum\"\". If the group should not be\n+   shown in the title of the link either an explicit title can be\n+   given (e.g., \"\"myTitle <myGroup:sum>\"\"), or the target can be\n+   prefixed with a tilde (e.g., \"\"~myGroup:sum\"\").\n+\n+   Note that no further reST parsing is done in the production, so\n+   that you don't have to escape \"*\" or \"|\" characters.\n+\n+The following is an example taken from the Python Reference Manual:\n+\n+   .. productionlist::\n+      try_stmt: try1_stmt | try2_stmt\n+      try1_stmt: \"try\" \":\" `suite`\n+               : (\"except\" [`expression` [\",\" `target`]] \":\" `suite`)+\n+               : [\"else\" \":\" `suite`]\n+               : [\"finally\" \":\" `suite`]\n+      try2_stmt: \"try\" \":\" `suite`\n+               : \"finally\" \":\" `suite`\n+\n+-[ Footnotes ]-\n+\n+[1] The LaTeX writer only refers the \"maxdepth\" option of first\n+    toctree directive in the document.\n+\n+[2] A note on available globbing syntax: you can use the standard\n+    shell constructs \"*\", \"?\", \"[...]\" and \"[!...]\" with the feature\n+    that these all don't match slashes.  A double star \"**\" can be\n+    used to match any sequence of characters *including* slashes.\n+\n+[3] There is a standard \".. include\" directive, but it raises errors\n+    if the file is not found.  This one only emits a warning.\n+\n+[4] For most builders name and format are the same. At the moment only\n+    builders derived from the html builder distinguish between the\n+    builder format and the builder name.\n+\n+    Note that the current builder tag is not available in \"conf.py\",\n+    it is only available after the builder is initialized.\ndiff --git a/_build/doc/usage/restructuredtext/domains.txt b/_build/doc/usage/restructuredtext/domains.txt\nnew file mode 100644\nindex 000000000..f188b1f3b\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/domains.txt\n@@ -0,0 +1,1855 @@\n+Domains\n+*******\n+\n+New in version 1.0.\n+\n+Originally, Sphinx was conceived for a single project, the\n+documentation of the Python language.  Shortly afterwards, it was made\n+available for everyone as a documentation tool, but the documentation\n+of Python modules remained deeply built in -- the most fundamental\n+directives, like \"function\", were designed for Python objects.  Since\n+Sphinx has become somewhat popular, interest developed in using it for\n+many different purposes: C/C++ projects, JavaScript, or even\n+reStructuredText markup (like in this documentation).\n+\n+While this was always possible, it is now much easier to easily\n+support documentation of projects using different programming\n+languages or even ones not supported by the main Sphinx distribution,\n+by providing a **domain** for every such purpose.\n+\n+A domain is a collection of markup (reStructuredText *directive*s and\n+*role*s) to describe and link to *object*s belonging together, e.g.\n+elements of a programming language.  Directive and role names in a\n+domain have names like \"domain:name\", e.g. \"py:function\".  Domains can\n+also provide custom indices (like the Python Module Index).\n+\n+Having domains means that there are no naming problems when one set of\n+documentation wants to refer to e.g. C++ and Python classes.  It also\n+means that extensions that support the documentation of whole new\n+languages are much easier to write.\n+\n+This section describes what the domains that are included with Sphinx\n+provide. The domain API is documented as well, in the section Domain\n+API.\n+\n+\n+Basic Markup\n+============\n+\n+Most domains provide a number of *object description directives*, used\n+to describe specific objects provided by modules.  Each directive\n+requires one or more signatures to provide basic information about\n+what is being described, and the content should be the description.  A\n+domain will typically keep an internal index of all entites to aid\n+cross-referencing. Typically it will also add entries in the shown\n+general index. If you want to suppress the addition of an entry in the\n+shown index, you can give the directive option flag \":noindexentry:\".\n+If you want to typeset an object description, without even making it\n+available for cross-referencing, you can give the directive option\n+flag \":noindex:\" (which implies \":noindexentry:\"). Though, note that\n+not every directive en every domain may support these options.\n+\n+New in version 3.2: The directive option \"noindexentry\" in the Python,\n+C, C++, and Javascript domains.\n+\n+An example using a Python domain directive:\n+\n+   .. py:function:: spam(eggs)\n+                    ham(eggs)\n+\n+      Spam or ham the foo.\n+\n+This describes the two Python functions \"spam\" and \"ham\".  (Note that\n+when signatures become too long, you can break them if you add a\n+backslash to lines that are continued in the next line.  Example:\n+\n+   .. py:function:: filterwarnings(action, message='', category=Warning, \\\n+                                   module='', lineno=0, append=False)\n+      :noindex:\n+\n+(This example also shows how to use the \":noindex:\" flag.)\n+\n+The domains also provide roles that link back to these object\n+descriptions. For example, to link to one of the functions described\n+in the example above, you could say\n+\n+   The function :py:func:`spam` does a similar thing.\n+\n+As you can see, both directive and role names contain the domain name\n+and the directive name.\n+\n+-[ Default Domain ]-\n+\n+For documentation describing objects from solely one domain, authors\n+will not have to state again its name at each directive, role, etc...\n+after having specified a default. This can be done either via the\n+config value >>:confval:`primary_domain`<< or via this directive:\n+\n+.. default-domain:: name\n+\n+   Select a new default domain.  While the\n+   >>:confval:`primary_domain`<< selects a global default, this only\n+   has an effect within the same file.\n+\n+If no other default is selected, the Python domain (named \"py\") is the\n+default one, mostly for compatibility with documentation written for\n+older versions of Sphinx.\n+\n+Directives and roles that belong to the default domain can be\n+mentioned without giving the domain name, i.e.\n+\n+   .. function:: pyfunc()\n+\n+      Describes a Python function.\n+\n+   Reference to :func:`pyfunc`.\n+\n+\n+Cross-referencing syntax\n+------------------------\n+\n+For cross-reference roles provided by domains, the same facilities\n+exist as for general cross-references.  See Cross-referencing syntax.\n+\n+In short:\n+\n+* You may supply an explicit title and reference target: \":role:`title\n+  <target>`\" will refer to *target*, but the link text will be\n+  *title*.\n+\n+* If you prefix the content with \"!\", no reference/hyperlink will be\n+  created.\n+\n+* If you prefix the content with \"~\", the link text will only be the\n+  last component of the target.  For example,\n+  \":py:meth:`~Queue.Queue.get`\" will refer to \"Queue.Queue.get\" but\n+  only display \"get\" as the link text.\n+\n+\n+The Python Domain\n+=================\n+\n+The Python domain (name **py**) provides the following directives for\n+module declarations:\n+\n+.. py:module:: name\n+\n+   This directive marks the beginning of the description of a module\n+   (or package submodule, in which case the name should be fully\n+   qualified, including the package name).  It does not create content\n+   (like e.g. \"py:class\" does).\n+\n+   This directive will also cause an entry in the global module index.\n+\n+   -[ options ]-\n+\n+   :platform: platforms (comma separated list)\n+\n+      Indicate platforms which the module is available (if it is\n+      available on all platforms, the option should be omitted).  The\n+      keys are short identifiers; examples that are in use include\n+      \"IRIX\", \"Mac\", \"Windows\" and \"Unix\".  It is important to use a\n+      key which has already been used when applicable.\n+\n+   :synopsis: purpose (text)\n+\n+      Consist of one sentence describing the module's purpose -- it is\n+      currently only used in the Global Module Index.\n+\n+   :deprecated: (no argument)\n+\n+      Mark a module as deprecated; it will be designated as such in\n+      various locations then.\n+\n+.. py:currentmodule:: name\n+\n+   This directive tells Sphinx that the classes, functions etc.\n+   documented from here are in the given module (like \"py:module\"),\n+   but it will not create index entries, an entry in the Global Module\n+   Index, or a link target for \"py:mod\".  This is helpful in\n+   situations where documentation for things in a module is spread\n+   over multiple files or sections -- one location has the \"py:module\"\n+   directive, the others only \"py:currentmodule\".\n+\n+The following directives are provided for module and class contents:\n+\n+.. py:function:: name(parameters)\n+\n+   Describes a module-level function.  The signature should include\n+   the parameters as given in the Python function definition, see\n+   Python Signatures. For example:\n+\n+      .. py:function:: Timer.repeat(repeat=3, number=1000000)\n+\n+   For methods you should use \"py:method\".\n+\n+   The description normally includes information about the parameters\n+   required and how they are used (especially whether mutable objects\n+   passed as parameters are modified), side effects, and possible\n+   exceptions.\n+\n+   This information can (in any \"py\" directive) optionally be given in\n+   a structured form, see Info field lists.\n+\n+   -[ options ]-\n+\n+   :async: (no value)\n+\n+      Indicate the function is an async function.\n+\n+      New in version 2.1.\n+\n+.. py:data:: name\n+\n+   Describes global data in a module, including both variables and\n+   values used as \"defined constants.\"  Class and object attributes\n+   are not documented using this environment.\n+\n+   -[ options ]-\n+\n+   :type: type of the variable (text)\n+\n+      New in version 2.4.\n+\n+   :value: initial value of the variable (text)\n+\n+      New in version 2.4.\n+\n+.. py:exception:: name\n+\n+   Describes an exception class.  The signature can, but need not\n+   include parentheses with constructor arguments.\n+\n+   -[ options ]-\n+\n+   :final: (no value)\n+\n+      Indicate the class is a final class.\n+\n+      New in version 3.1.\n+\n+.. py:class:: name\n+.. py:class:: name(parameters)\n+\n+   Describes a class.  The signature can optionally include\n+   parentheses with parameters which will be shown as the constructor\n+   arguments.  See also Python Signatures.\n+\n+   Methods and attributes belonging to the class should be placed in\n+   this directive's body.  If they are placed outside, the supplied\n+   name should contain the class name so that cross-references still\n+   work.  Example:\n+\n+      .. py:class:: Foo\n+\n+         .. py:method:: quux()\n+\n+      -- or --\n+\n+      .. py:class:: Bar\n+\n+      .. py:method:: Bar.quux()\n+\n+   The first way is the preferred one.\n+\n+   -[ options ]-\n+\n+   :final: (no value)\n+\n+      Indicate the class is a final class.\n+\n+      New in version 3.1.\n+\n+.. py:attribute:: name\n+\n+   Describes an object data attribute.  The description should include\n+   information about the type of the data to be expected and whether\n+   it may be changed directly.\n+\n+   -[ options ]-\n+\n+   :type: type of the attribute (text)\n+\n+      New in version 2.4.\n+\n+   :value: initial value of the attribute (text)\n+\n+      New in version 2.4.\n+\n+.. py:method:: name(parameters)\n+\n+   Describes an object method.  The parameters should not include the\n+   \"self\" parameter.  The description should include similar\n+   information to that described for \"function\".  See also Python\n+   Signatures and Info field lists.\n+\n+   -[ options ]-\n+\n+   :abstractmethod: (no value)\n+\n+      Indicate the method is an abstract method.\n+\n+      New in version 2.1.\n+\n+   :async: (no value)\n+\n+      Indicate the method is an async method.\n+\n+      New in version 2.1.\n+\n+   :classmethod: (no value)\n+\n+      Indicate the method is a class method.\n+\n+      New in version 2.1.\n+\n+   :final: (no value)\n+\n+      Indicate the class is a final method.\n+\n+      New in version 3.1.\n+\n+   :property: (no value)\n+\n+      Indicate the method is a property.\n+\n+      New in version 2.1.\n+\n+   :staticmethod: (no value)\n+\n+      Indicate the method is a static method.\n+\n+      New in version 2.1.\n+\n+.. py:staticmethod:: name(parameters)\n+\n+   Like \"py:method\", but indicates that the method is a static method.\n+\n+   New in version 0.4.\n+\n+.. py:classmethod:: name(parameters)\n+\n+   Like \"py:method\", but indicates that the method is a class method.\n+\n+   New in version 0.6.\n+\n+.. py:decorator:: name\n+.. py:decorator:: name(parameters)\n+\n+   Describes a decorator function.  The signature should represent the\n+   usage as a decorator.  For example, given the functions\n+\n+      def removename(func):\n+          func.__name__ = ''\n+          return func\n+\n+      def setnewname(name):\n+          def decorator(func):\n+              func.__name__ = name\n+              return func\n+          return decorator\n+\n+   the descriptions should look like this:\n+\n+      .. py:decorator:: removename\n+\n+         Remove name of the decorated function.\n+\n+      .. py:decorator:: setnewname(name)\n+\n+         Set name of the decorated function to *name*.\n+\n+   (as opposed to \".. py:decorator:: removename(func)\".)\n+\n+   There is no \"py:deco\" role to link to a decorator that is marked up\n+   with this directive; rather, use the \"py:func\" role.\n+\n+.. py:decoratormethod:: name\n+.. py:decoratormethod:: name(signature)\n+\n+   Same as \"py:decorator\", but for decorators that are methods.\n+\n+   Refer to a decorator method using the \"py:meth\" role.\n+\n+\n+Python Signatures\n+-----------------\n+\n+Signatures of functions, methods and class constructors can be given\n+like they would be written in Python.\n+\n+Default values for optional arguments can be given (but if they\n+contain commas, they will confuse the signature parser).  Python\n+3-style argument annotations can also be given as well as return type\n+annotations:\n+\n+   .. py:function:: compile(source : string, filename, symbol='file') -> ast object\n+\n+For functions with optional parameters that don't have default values\n+(typically functions implemented in C extension modules without\n+keyword argument support), you can use brackets to specify the\n+optional parts:\n+\n+   compile(source[, filename[, symbol]])\n+\n+It is customary to put the opening bracket before the comma.\n+\n+\n+Info field lists\n+----------------\n+\n+New in version 0.4.\n+\n+Changed in version 3.0: meta fields are added.\n+\n+Inside Python object description directives, reST field lists with\n+these fields are recognized and formatted nicely:\n+\n+* \"param\", \"parameter\", \"arg\", \"argument\", \"key\", \"keyword\":\n+  Description of a parameter.\n+\n+* \"type\": Type of a parameter.  Creates a link if possible.\n+\n+* \"raises\", \"raise\", \"except\", \"exception\": That (and when) a specific\n+  exception is raised.\n+\n+* \"var\", \"ivar\", \"cvar\": Description of a variable.\n+\n+* \"vartype\": Type of a variable.  Creates a link if possible.\n+\n+* \"returns\", \"return\": Description of the return value.\n+\n+* \"rtype\": Return type.  Creates a link if possible.\n+\n+* \"meta\": Add metadata to description of the python object.  The\n+  metadata will not be shown on output document.  For example, \":meta\n+  private:\" indicates the python object is private member.  It is used\n+  in \"sphinx.ext.autodoc\" for filtering members.\n+\n+Note:\n+\n+  In current release, all \"var\", \"ivar\" and \"cvar\" are represented as\n+  \"Variable\".  There is no difference at all.\n+\n+The field names must consist of one of these keywords and an argument\n+(except for \"returns\" and \"rtype\", which do not need an argument).\n+This is best explained by an example:\n+\n+   .. py:function:: send_message(sender, recipient, message_body, [priority=1])\n+\n+      Send a message to a recipient\n+\n+      :param str sender: The person sending the message\n+      :param str recipient: The recipient of the message\n+      :param str message_body: The body of the message\n+      :param priority: The priority of the message, can be a number 1-5\n+      :type priority: integer or None\n+      :return: the message id\n+      :rtype: int\n+      :raises ValueError: if the message_body exceeds 160 characters\n+      :raises TypeError: if the message_body is not a basestring\n+\n+This will render like this:\n+\n+   send_message(sender, recipient, message_body[, priority=1])\n+\n+      Send a message to a recipient\n+\n+      Parameters:\n+         * **sender** (*str*) -- The person sending the message\n+\n+         * **recipient** (*str*) -- The recipient of the message\n+\n+         * **message_body** (*str*) -- The body of the message\n+\n+         * **priority** (*integer** or **None*) -- The priority of the\n+           message, can be a number 1-5\n+\n+      Returns:\n+         the message id\n+\n+      Return type:\n+         int\n+\n+      Raises:\n+         * **ValueError** -- if the message_body exceeds 160\n+           characters\n+\n+         * **TypeError** -- if the message_body is not a basestring\n+\n+It is also possible to combine parameter type and description, if the\n+type is a single word, like this:\n+\n+   :param int priority: The priority of the message, can be a number 1-5\n+\n+New in version 1.5.\n+\n+Container types such as lists and dictionaries can be linked\n+automatically using the following syntax:\n+\n+   :type priorities: list(int)\n+   :type priorities: list[int]\n+   :type mapping: dict(str, int)\n+   :type mapping: dict[str, int]\n+   :type point: tuple(float, float)\n+   :type point: tuple[float, float]\n+\n+Multiple types in a type field will be linked automatically if\n+separated by the word \"or\":\n+\n+   :type an_arg: int or None\n+   :vartype a_var: str or int\n+   :rtype: float or str\n+\n+\n+Cross-referencing Python objects\n+--------------------------------\n+\n+The following roles refer to objects in modules and are possibly\n+hyperlinked if a matching identifier is found:\n+\n+:py:mod:\n+\n+   Reference a module; a dotted name may be used.  This should also be\n+   used for package names.\n+\n+:py:func:\n+\n+   Reference a Python function; dotted names may be used.  The role\n+   text needs not include trailing parentheses to enhance readability;\n+   they will be added automatically by Sphinx if the\n+   >>:confval:`add_function_parentheses`<< config value is \"True\" (the\n+   default).\n+\n+:py:data:\n+\n+   Reference a module-level variable.\n+\n+:py:const:\n+\n+   Reference a \"defined\" constant.  This may be a Python variable that\n+   is not intended to be changed.\n+\n+:py:class:\n+\n+   Reference a class; a dotted name may be used.\n+\n+:py:meth:\n+\n+   Reference a method of an object.  The role text can include the\n+   type name and the method name; if it occurs within the description\n+   of a type, the type name can be omitted.  A dotted name may be\n+   used.\n+\n+:py:attr:\n+\n+   Reference a data attribute of an object.\n+\n+:py:exc:\n+\n+   Reference an exception.  A dotted name may be used.\n+\n+:py:obj:\n+\n+   Reference an object of unspecified type.  Useful e.g. as the\n+   >>:confval:`default_role`<<.\n+\n+   New in version 0.4.\n+\n+The name enclosed in this markup can include a module name and/or a\n+class name. For example, \":py:func:`filter`\" could refer to a function\n+named \"filter\" in the current module, or the built-in function of that\n+name.  In contrast, \":py:func:`foo.filter`\" clearly refers to the\n+\"filter\" function in the \"foo\" module.\n+\n+Normally, names in these roles are searched first without any further\n+qualification, then with the current module name prepended, then with\n+the current module and class name (if any) prepended.  If you prefix\n+the name with a dot, this order is reversed.  For example, in the\n+documentation of Python's \"codecs\" module, \":py:func:`open`\" always\n+refers to the built-in function, while \":py:func:`.open`\" refers to\n+\"codecs.open()\".\n+\n+A similar heuristic is used to determine whether the name is an\n+attribute of the currently documented class.\n+\n+Also, if the name is prefixed with a dot, and no exact match is found,\n+the target is taken as a suffix and all object names with that suffix\n+are searched. For example, \":py:meth:`.TarFile.close`\" references the\n+\"tarfile.TarFile.close()\" function, even if the current module is not\n+\"tarfile\".  Since this can get ambiguous, if there is more than one\n+possible match, you will get a warning from Sphinx.\n+\n+Note that you can combine the \"~\" and \".\" prefixes:\n+\":py:meth:`~.TarFile.close`\" will reference the\n+\"tarfile.TarFile.close()\" method, but the visible link caption will\n+only be \"close()\".\n+\n+\n+The C Domain\n+============\n+\n+The C domain (name **c**) is suited for documentation of C API.\n+\n+.. c:member:: declaration\n+.. c:var:: declaration\n+\n+   Describes a C struct member or variable. Example signature:\n+\n+      .. c:member:: PyObject *PyTypeObject.tp_bases\n+\n+   The difference between the two directives is only cosmetic.\n+\n+.. c:function:: function prototype\n+\n+   Describes a C function. The signature should be given as in C,\n+   e.g.:\n+\n+      .. c:function:: PyObject *PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)\n+\n+   Note that you don't have to backslash-escape asterisks in the\n+   signature, as it is not parsed by the reST inliner.\n+\n+.. c:macro:: name\n+.. c:macro:: name(arg list)\n+\n+   Describes a C macro, i.e., a C-language \"#define\", without the\n+   replacement text.\n+\n+   New in version 3.0: The function style variant.\n+\n+.. c:struct:: name\n+\n+   Describes a C struct.\n+\n+   New in version 3.0.\n+\n+.. c:union:: name\n+\n+   Describes a C union.\n+\n+   New in version 3.0.\n+\n+.. c:enum:: name\n+\n+   Describes a C enum.\n+\n+   New in version 3.0.\n+\n+.. c:enumerator:: name\n+\n+   Describes a C enumerator.\n+\n+   New in version 3.0.\n+\n+.. c:type:: typedef-like declaration\n+.. c:type:: name\n+\n+   Describes a C type, either as a typedef, or the alias for an\n+   unspecified type.\n+\n+\n+Cross-referencing C constructs\n+------------------------------\n+\n+The following roles create cross-references to C-language constructs\n+if they are defined in the documentation:\n+\n+:c:member:\n+:c:data:\n+:c:var:\n+:c:func:\n+:c:macro:\n+:c:struct:\n+:c:union:\n+:c:enum:\n+:c:enumerator:\n+:c:type:\n+\n+   Reference a C declaration, as defined above. Note that \"c:member\",\n+   \"c:data\", and \"c:var\" are equivalent.\n+\n+   New in version 3.0: The var, struct, union, enum, and enumerator\n+   roles.\n+\n+\n+Anonymous Entities\n+------------------\n+\n+C supports anonymous structs, enums, and unions. For the sake of\n+documentation they must be given some name that starts with \"@\", e.g.,\n+\"@42\" or \"@data\". These names can also be used in cross-references,\n+though nested symbols will be found even when omitted. The \"@...\" name\n+will always be rendered as **[anonymous]** (possibly as a link).\n+\n+Example:\n+\n+   .. c:struct:: Data\n+\n+      .. c:union:: @data\n+\n+         .. c:var:: int a\n+\n+         .. c:var:: double b\n+\n+   Explicit ref: :c:var:`Data.@data.a`. Short-hand ref: :c:var:`Data.a`.\n+\n+This will be rendered as:\n+\n+struct Data\n+\n+   union **[anonymous]**\n+\n+      int a\n+\n+      double b\n+\n+Explicit ref: \"Data.[anonymous].a\". Short-hand ref: \"Data.a\".\n+\n+New in version 3.0.\n+\n+\n+Aliasing Declarations\n+---------------------\n+\n+Sometimes it may be helpful list declarations elsewhere than their\n+main documentation, e.g., when creating a synopsis of an interface.\n+The following directive can be used for this purpose.\n+\n+.. c:alias:: name\n+\n+   Insert one or more alias declarations. Each entity can be specified\n+   as they can in the \"c:any\" role.\n+\n+   For example:\n+\n+      .. c:var:: int data\n+      .. c:function:: int f(double k)\n+\n+      .. c:alias:: data\n+                   f\n+\n+   becomes\n+\n+   int data\n+\n+   int f(double k)\n+\n+   int data\n+   int f(double k)\n+   New in version 3.2.\n+\n+   -[ Options ]-\n+\n+   :maxdepth: int\n+\n+      Insert nested declarations as well, up to the total depth given.\n+      Use 0 for infinite depth and 1 for just the mentioned\n+      declaration. Defaults to 1.\n+\n+      New in version 3.3.\n+\n+\n+Inline Expressions and Types\n+----------------------------\n+\n+:c:expr:\n+:c:texpr:\n+\n+   Insert a C expression or type either as inline code (\"cpp:expr\") or\n+   inline text (\"cpp:texpr\"). For example:\n+\n+      .. c:var:: int a = 42\n+\n+      .. c:function:: int f(int i)\n+\n+      An expression: :c:expr:`a * f(a)` (or as text: :c:texpr:`a * f(a)`).\n+\n+      A type: :c:expr:`const Data*`\n+      (or as text :c:texpr:`const Data*`).\n+\n+   will be rendered as follows:\n+\n+   int a = 42\n+\n+   int f(int i)\n+\n+   An expression: \"a * f(a)\" (or as text: *a * f(a)*).\n+\n+   A type: \"const Data*\" (or as text *const Data**).\n+\n+   New in version 3.0.\n+\n+\n+Namespacing\n+-----------\n+\n+New in version 3.1.\n+\n+The C language it self does not support namespacing, but it can\n+sometimes be useful to emulate it in documentation, e.g., to show\n+alternate declarations. The feature may also be used to document\n+members of structs/unions/enums separate from their parent\n+declaration.\n+\n+The current scope can be changed using three namespace directives.\n+They manage a stack declarations where \"c:namespace\" resets the stack\n+and changes a given scope.\n+\n+The \"c:namespace-push\" directive changes the scope to a given inner\n+scope of the current one.\n+\n+The \"c:namespace-pop\" directive undoes the most recent \"c:namespace-\n+push\" directive.\n+\n+.. c:namespace:: scope specification\n+\n+   Changes the current scope for the subsequent objects to the given\n+   scope, and resets the namespace directive stack. Note that nested\n+   scopes can be specified by separating with a dot, e.g.:\n+\n+      .. c:namespace:: Namespace1.Namespace2.SomeStruct.AnInnerStruct\n+\n+   All subsequent objects will be defined as if their name were\n+   declared with the scope prepended. The subsequent cross-references\n+   will be searched for starting in the current scope.\n+\n+   Using \"NULL\" or \"0\" as the scope will change to global scope.\n+\n+.. c:namespace-push:: scope specification\n+\n+   Change the scope relatively to the current scope. For example,\n+   after:\n+\n+      .. c:namespace:: A.B\n+\n+      .. c:namespace-push:: C.D\n+\n+   the current scope will be \"A.B.C.D\".\n+\n+.. c:namespace-pop::\n+\n+   Undo the previous \"c:namespace-push\" directive (*not* just pop a\n+   scope). For example, after:\n+\n+      .. c:namespace:: A.B\n+\n+      .. c:namespace-push:: C.D\n+\n+      .. c:namespace-pop::\n+\n+   the current scope will be \"A.B\" (*not* \"A.B.C\").\n+\n+   If no previous \"c:namespace-push\" directive has been used, but only\n+   a \"c:namespace\" directive, then the current scope will be reset to\n+   global scope.  That is, \".. c:namespace:: A.B\" is equivalent to:\n+\n+      .. c:namespace:: NULL\n+\n+      .. c:namespace-push:: A.B\n+\n+\n+Configuration Variables\n+-----------------------\n+\n+See Options for the C domain.\n+\n+\n+The C++ Domain\n+==============\n+\n+The C++ domain (name **cpp**) supports documenting C++ projects.\n+\n+\n+Directives for Declaring Entities\n+---------------------------------\n+\n+The following directives are available. All declarations can start\n+with a visibility statement (\"public\", \"private\" or \"protected\").\n+\n+.. cpp:class:: class specifier\n+.. cpp:struct:: class specifier\n+\n+   Describe a class/struct, possibly with specification of\n+   inheritance, e.g.,:\n+\n+      .. cpp:class:: MyClass : public MyBase, MyOtherBase\n+\n+   The difference between \"cpp:class\" and \"cpp:struct\" is only\n+   cosmetic: the prefix rendered in the output, and the specifier\n+   shown in the index.\n+\n+   The class can be directly declared inside a nested scope, e.g.,:\n+\n+      .. cpp:class:: OuterScope::MyClass : public MyBase, MyOtherBase\n+\n+   A class template can be declared:\n+\n+      .. cpp:class:: template<typename T, std::size_t N> std::array\n+\n+   or with a line break:\n+\n+      .. cpp:class:: template<typename T, std::size_t N> \\\n+                     std::array\n+\n+   Full and partial template specialisations can be declared:\n+\n+      .. cpp:class:: template<> \\\n+                     std::array<bool, 256>\n+\n+      .. cpp:class:: template<typename T> \\\n+                     std::array<T, 42>\n+\n+   New in version 2.0: The \"cpp:struct\" directive.\n+\n+.. cpp:function:: (member) function prototype\n+\n+   Describe a function or member function, e.g.,:\n+\n+      .. cpp:function:: bool myMethod(int arg1, std::string arg2)\n+\n+         A function with parameters and types.\n+\n+      .. cpp:function:: bool myMethod(int, double)\n+\n+         A function with unnamed parameters.\n+\n+      .. cpp:function:: const T &MyClass::operator[](std::size_t i) const\n+\n+         An overload for the indexing operator.\n+\n+      .. cpp:function:: operator bool() const\n+\n+         A casting operator.\n+\n+      .. cpp:function:: constexpr void foo(std::string &bar[2]) noexcept\n+\n+         A constexpr function.\n+\n+      .. cpp:function:: MyClass::MyClass(const MyClass&) = default\n+\n+         A copy constructor with default implementation.\n+\n+   Function templates can also be described:\n+\n+      .. cpp:function:: template<typename U> \\\n+                        void print(U &&u)\n+\n+   and function template specialisations:\n+\n+      .. cpp:function:: template<> \\\n+                        void print(int i)\n+\n+.. cpp:member:: (member) variable declaration\n+.. cpp:var:: (member) variable declaration\n+\n+   Describe a variable or member variable, e.g.,:\n+\n+      .. cpp:member:: std::string MyClass::myMember\n+\n+      .. cpp:var:: std::string MyClass::myOtherMember[N][M]\n+\n+      .. cpp:member:: int a = 42\n+\n+   Variable templates can also be described:\n+\n+      .. cpp:member:: template<class T> \\\n+                      constexpr T pi = T(3.1415926535897932385)\n+\n+.. cpp:type:: typedef declaration\n+.. cpp:type:: name\n+.. cpp:type:: type alias declaration\n+\n+   Describe a type as in a typedef declaration, a type alias\n+   declaration, or simply the name of a type with unspecified type,\n+   e.g.,:\n+\n+      .. cpp:type:: std::vector<int> MyList\n+\n+         A typedef-like declaration of a type.\n+\n+      .. cpp:type:: MyContainer::const_iterator\n+\n+         Declaration of a type alias with unspecified type.\n+\n+      .. cpp:type:: MyType = std::unordered_map<int, std::string>\n+\n+         Declaration of a type alias.\n+\n+   A type alias can also be templated:\n+\n+      .. cpp:type:: template<typename T> \\\n+                    MyContainer = std::vector<T>\n+\n+   The example are rendered as follows.\n+\n+   typedef std::vector<int> MyList\n+\n+      A typedef-like declaration of a type.\n+\n+   type MyContainer::const_iterator\n+\n+      Declaration of a type alias with unspecified type.\n+\n+   using MyType = std::unordered_map<int, std::string>\n+\n+      Declaration of a type alias.\n+\n+   template<typename T>\n+   using MyContainer = std::vector<T>\n+\n+.. cpp:enum:: unscoped enum declaration\n+.. cpp:enum-struct:: scoped enum declaration\n+.. cpp:enum-class:: scoped enum declaration\n+\n+   Describe a (scoped) enum, possibly with the underlying type\n+   specified.  Any enumerators declared inside an unscoped enum will\n+   be declared both in the enum scope and in the parent scope.\n+   Examples:\n+\n+      .. cpp:enum:: MyEnum\n+\n+         An unscoped enum.\n+\n+      .. cpp:enum:: MySpecificEnum : long\n+\n+         An unscoped enum with specified underlying type.\n+\n+      .. cpp:enum-class:: MyScopedEnum\n+\n+         A scoped enum.\n+\n+      .. cpp:enum-struct:: protected MyScopedVisibilityEnum : std::underlying_type<MySpecificEnum>::type\n+\n+         A scoped enum with non-default visibility, and with a specified\n+         underlying type.\n+\n+.. cpp:enumerator:: name\n+.. cpp:enumerator:: name = constant\n+\n+   Describe an enumerator, optionally with its value defined, e.g.,:\n+\n+      .. cpp:enumerator:: MyEnum::myEnumerator\n+\n+      .. cpp:enumerator:: MyEnum::myOtherEnumerator = 42\n+\n+.. cpp:union:: name\n+\n+   Describe a union.\n+\n+   New in version 1.8.\n+\n+.. cpp:concept:: template-parameter-list name\n+\n+   Warning:\n+\n+     The support for concepts is experimental. It is based on the\n+     current draft standard and the Concepts Technical Specification.\n+     The features may change as they evolve.\n+\n+   Describe a concept. It must have exactly 1 template parameter list.\n+   The name may be a nested name. Example:\n+\n+      .. cpp:concept:: template<typename It> std::Iterator\n+\n+         Proxy to an element of a notional sequence that can be compared,\n+         indirected, or incremented.\n+\n+         **Notation**\n+\n+         .. cpp:var:: It r\n+\n+            An lvalue.\n+\n+         **Valid Expressions**\n+\n+         - :cpp:expr:`*r`, when :cpp:expr:`r` is dereferenceable.\n+         - :cpp:expr:`++r`, with return type :cpp:expr:`It&`, when\n+           :cpp:expr:`r` is incrementable.\n+\n+   This will render as follows:\n+\n+   template<typename It>\n+   concept std::Iterator\n+\n+      Proxy to an element of a notional sequence that can be compared,\n+      indirected, or incremented.\n+\n+      **Notation**\n+\n+      It r\n+\n+         An lvalue.\n+\n+      **Valid Expressions**\n+\n+      * \"*r\", when \"r\" is dereferenceable.\n+\n+      * \"++r\", with return type \"It&\", when \"r\" is incrementable.\n+\n+   New in version 1.5.\n+\n+\n+Options\n+~~~~~~~\n+\n+Some directives support options:\n+\n+* \":noindexentry:\", see Basic Markup.\n+\n+* \":tparam-line-spec:\", for templated declarations. If specified, each\n+  template parameter will be rendered on a separate line.\n+\n+  New in version 1.6.\n+\n+\n+Anonymous Entities\n+------------------\n+\n+C++ supports anonymous namespaces, classes, enums, and unions. For the\n+sake of documentation they must be given some name that starts with\n+\"@\", e.g., \"@42\" or \"@data\". These names can also be used in cross-\n+references and (type) expressions, though nested symbols will be found\n+even when omitted. The \"@...\" name will always be rendered as\n+**[anonymous]** (possibly as a link).\n+\n+Example:\n+\n+   .. cpp:class:: Data\n+\n+      .. cpp:union:: @data\n+\n+         .. cpp:var:: int a\n+\n+         .. cpp:var:: double b\n+\n+   Explicit ref: :cpp:var:`Data::@data::a`. Short-hand ref: :cpp:var:`Data::a`.\n+\n+This will be rendered as:\n+\n+class Data\n+\n+   union **[anonymous]**\n+\n+      int a\n+\n+      double b\n+\n+Explicit ref: \"Data::[anonymous]::a\". Short-hand ref: \"Data::a\".\n+\n+New in version 1.8.\n+\n+\n+Aliasing Declarations\n+---------------------\n+\n+Sometimes it may be helpful list declarations elsewhere than their\n+main documentation, e.g., when creating a synopsis of a class\n+interface. The following directive can be used for this purpose.\n+\n+.. cpp:alias:: name or function signature\n+\n+   Insert one or more alias declarations. Each entity can be specified\n+   as they can in the \"cpp:any\" role. If the name of a function is\n+   given (as opposed to the complete signature), then all overloads of\n+   the function will be listed.\n+\n+   For example:\n+\n+      .. cpp:alias:: Data::a\n+                     overload_example::C::f\n+\n+   becomes\n+\n+   int a\n+   void f(double d) const\n+   void f(double d)\n+   void f(int i)\n+   void f()\n+\n+   whereas:\n+\n+      .. cpp:alias:: void overload_example::C::f(double d) const\n+                     void overload_example::C::f(double d)\n+\n+   becomes\n+\n+   void f(double d) const\n+   void f(double d)\n+\n+   New in version 2.0.\n+\n+\n+Constrained Templates\n+---------------------\n+\n+Warning:\n+\n+  The support for concepts is experimental. It is based on the current\n+  draft standard and the Concepts Technical Specification. The\n+  features may change as they evolve.\n+\n+Note:\n+\n+  Sphinx does not currently support \"requires\" clauses.\n+\n+\n+Placeholders\n+~~~~~~~~~~~~\n+\n+Declarations may use the name of a concept to introduce constrained\n+template parameters, or the keyword \"auto\" to introduce unconstrained\n+template parameters:\n+\n+   .. cpp:function:: void f(auto &&arg)\n+\n+      A function template with a single unconstrained template parameter.\n+\n+   .. cpp:function:: void f(std::Iterator it)\n+\n+      A function template with a single template parameter, constrained by the\n+      Iterator concept.\n+\n+\n+Template Introductions\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Simple constrained function or class templates can be declared with a\n+*template introduction* instead of a template parameter list:\n+\n+   .. cpp:function:: std::Iterator{It} void advance(It &it)\n+\n+       A function template with a template parameter constrained to be an\n+       Iterator.\n+\n+   .. cpp:class:: std::LessThanComparable{T} MySortedContainer\n+\n+       A class template with a template parameter constrained to be\n+       LessThanComparable.\n+\n+They are rendered as follows.\n+\n+std::Iterator{It}\n+void advance(It &it)\n+\n+   A function template with a template parameter constrained to be an\n+   Iterator.\n+\n+std::LessThanComparable{T}\n+class MySortedContainer\n+\n+   A class template with a template parameter constrained to be\n+   LessThanComparable.\n+\n+Note however that no checking is performed with respect to parameter\n+compatibility. E.g., \"Iterator{A, B, C}\" will be accepted as an\n+introduction even though it would not be valid C++.\n+\n+\n+Inline Expressions and Types\n+----------------------------\n+\n+:cpp:expr:\n+:cpp:texpr:\n+\n+   Insert a C++ expression or type either as inline code (\"cpp:expr\")\n+   or inline text (\"cpp:texpr\"). For example:\n+\n+      .. cpp:var:: int a = 42\n+\n+      .. cpp:function:: int f(int i)\n+\n+      An expression: :cpp:expr:`a * f(a)` (or as text: :cpp:texpr:`a * f(a)`).\n+\n+      A type: :cpp:expr:`const MySortedContainer<int>&`\n+      (or as text :cpp:texpr:`const MySortedContainer<int>&`).\n+\n+   will be rendered as follows:\n+\n+   int a = 42\n+\n+   int f(int i)\n+\n+   An expression: \"a * f(a)\" (or as text: *a * f(a)*).\n+\n+   A type: \"const MySortedContainer<int>&\" (or as text *const\n+   MySortedContainer<int>&*).\n+\n+   New in version 1.7: The \"cpp:expr\" role.\n+\n+   New in version 1.8: The \"cpp:texpr\" role.\n+\n+\n+Namespacing\n+-----------\n+\n+Declarations in the C++ domain are as default placed in global scope.\n+The current scope can be changed using three namespace directives.\n+They manage a stack declarations where \"cpp:namespace\" resets the\n+stack and changes a given scope.\n+\n+The \"cpp:namespace-push\" directive changes the scope to a given inner\n+scope of the current one.\n+\n+The \"cpp:namespace-pop\" directive undoes the most recent \"cpp\n+:namespace-push\" directive.\n+\n+.. cpp:namespace:: scope specification\n+\n+   Changes the current scope for the subsequent objects to the given\n+   scope, and resets the namespace directive stack.  Note that the\n+   namespace does not need to correspond to C++ namespaces, but can\n+   end in names of classes, e.g.,:\n+\n+      .. cpp:namespace:: Namespace1::Namespace2::SomeClass::AnInnerClass\n+\n+   All subsequent objects will be defined as if their name were\n+   declared with the scope prepended. The subsequent cross-references\n+   will be searched for starting in the current scope.\n+\n+   Using \"NULL\", \"0\", or \"nullptr\" as the scope will change to global\n+   scope.\n+\n+   A namespace declaration can also be templated, e.g.,:\n+\n+      .. cpp:class:: template<typename T> \\\n+                     std::vector\n+\n+      .. cpp:namespace:: template<typename T> std::vector\n+\n+      .. cpp:function:: std::size_t size() const\n+\n+   declares \"size\" as a member function of the class template\n+   \"std::vector\".  Equivalently this could have been declared using:\n+\n+      .. cpp:class:: template<typename T> \\\n+                     std::vector\n+\n+         .. cpp:function:: std::size_t size() const\n+\n+   or:\n+\n+      .. cpp:class:: template<typename T> \\\n+                     std::vector\n+\n+.. cpp:namespace-push:: scope specification\n+\n+   Change the scope relatively to the current scope. For example,\n+   after:\n+\n+      .. cpp:namespace:: A::B\n+\n+      .. cpp:namespace-push:: C::D\n+\n+   the current scope will be \"A::B::C::D\".\n+\n+   New in version 1.4.\n+\n+.. cpp:namespace-pop::\n+\n+   Undo the previous \"cpp:namespace-push\" directive (*not* just pop a\n+   scope). For example, after:\n+\n+      .. cpp:namespace:: A::B\n+\n+      .. cpp:namespace-push:: C::D\n+\n+      .. cpp:namespace-pop::\n+\n+   the current scope will be \"A::B\" (*not* \"A::B::C\").\n+\n+   If no previous \"cpp:namespace-push\" directive has been used, but\n+   only a \"cpp:namespace\" directive, then the current scope will be\n+   reset to global scope.  That is, \".. cpp:namespace:: A::B\" is\n+   equivalent to:\n+\n+      .. cpp:namespace:: nullptr\n+\n+      .. cpp:namespace-push:: A::B\n+\n+   New in version 1.4.\n+\n+\n+Info field lists\n+----------------\n+\n+The C++ directives support the following info fields (see also Info\n+field lists):\n+\n+* *param*, *parameter*, *arg*, *argument*: Description of a parameter.\n+\n+* *tparam*: Description of a template parameter.\n+\n+* *returns*, *return*: Description of a return value.\n+\n+* *throws*, *throw*, *exception*: Description of a possibly thrown\n+  exception.\n+\n+\n+Cross-referencing\n+-----------------\n+\n+These roles link to the given declaration types:\n+\n+:cpp:any:\n+:cpp:class:\n+:cpp:struct:\n+:cpp:func:\n+:cpp:member:\n+:cpp:var:\n+:cpp:type:\n+:cpp:concept:\n+:cpp:enum:\n+:cpp:enumerator:\n+\n+   Reference a C++ declaration by name (see below for details).  The\n+   name must be properly qualified relative to the position of the\n+   link.\n+\n+   New in version 2.0: The \"cpp:struct\" role as alias for the\n+   \"cpp:class\" role.\n+\n+Note on References with Templates Parameters/Arguments: These roles\n+follow the Sphinx Cross-referencing syntax rules. This means care must\n+be taken when referencing a (partial) template specialization, e.g. if\n+the link looks like this: \":cpp:class:`MyClass<int>`\". This is\n+interpreted as a link to \"int\" with a title of \"MyClass\". In this\n+case, escape the opening angle bracket with a backslash, like this:\n+\":cpp:class:`MyClass\\<int>`\".When a custom title is not needed it may\n+be useful to use the roles for inline expressions, \"cpp:expr\" and\n+\"cpp:texpr\", where angle brackets do not need escaping.\n+\n+\n+Declarations without template parameters and template arguments\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+For linking to non-templated declarations the name must be a nested\n+name, e.g., \"f\" or \"MyClass::f\".\n+\n+\n+Overloaded (member) functions\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When a (member) function is referenced using just its name, the\n+reference will point to an arbitrary matching overload. The \"cpp:any\"\n+and \"cpp:func\" roles use an alternative format, which simply is a\n+complete function declaration. This will resolve to the exact matching\n+overload. As example, consider the following class declaration:\n+\n+class C\n+\n+   void f(double d) const\n+\n+   void f(double d)\n+\n+   void f(int i)\n+\n+   void f()\n+\n+References using the \"cpp:func\" role:\n+\n+* Arbitrary overload: \"C::f\", \"C::f()\"\n+\n+* Also arbitrary overload: \"C::f()\", \"C::f()\"\n+\n+* Specific overload: \"void C::f()\", \"void C::f()\"\n+\n+* Specific overload: \"void C::f(int)\", \"void C::f(int)\"\n+\n+* Specific overload: \"void C::f(double)\", \"void C::f(double)\"\n+\n+* Specific overload: \"void C::f(double) const\", \"void C::f(double)\n+  const\"\n+\n+Note that the >>:confval:`add_function_parentheses`<< configuration\n+variable does not influence specific overload references.\n+\n+\n+Templated declarations\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Assume the following declarations.\n+\n+class Wrapper\n+\n+   template<typename TOuter>\n+   class Outer\n+\n+      template<typename TInner>\n+      class Inner\n+\n+In general the reference must include the template parameter\n+declarations, and template arguments for the prefix of qualified\n+names. For example:\n+\n+* \"template\\<typename TOuter> Wrapper::Outer\" (\"template<typename\n+  TOuter> Wrapper::Outer\")\n+\n+* \"template\\<typename TOuter> template\\<typename TInner>\n+  Wrapper::Outer<TOuter>::Inner\" (\"template<typename TOuter>\n+  template<typename TInner> Wrapper::Outer<TOuter>::Inner\")\n+\n+Currently the lookup only succeed if the template parameter\n+identifiers are equal strings.  That is, \"template\\<typename UOuter>\n+Wrapper::Outer\" will not work.\n+\n+As a shorthand notation, if a template parameter list is omitted, then\n+the lookup will assume either a primary template or a non-template,\n+but not a partial template specialisation. This means the following\n+references work as well:\n+\n+* \"Wrapper::Outer\" (\"Wrapper::Outer\")\n+\n+* \"Wrapper::Outer::Inner\" (\"Wrapper::Outer::Inner\")\n+\n+* \"template\\<typename TInner> Wrapper::Outer::Inner\"\n+  (\"template<typename TInner> Wrapper::Outer::Inner\")\n+\n+\n+(Full) Template Specialisations\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Assume the following declarations.\n+\n+template<typename TOuter>\n+class Outer\n+\n+   template<typename TInner>\n+   class Inner\n+\n+template<>\n+class Outer<int>\n+\n+   template<typename TInner>\n+   class Inner\n+\n+   template<>\n+   class Inner<bool>\n+\n+In general the reference must include a template parameter list for\n+each template argument list.  The full specialisation above can\n+therefore be referenced with \"template\\<> Outer\\<int>\" (\"template<>\n+Outer<int>\") and \"template\\<> template\\<> Outer\\<int>::Inner\\<bool>\"\n+(\"template<> template<> Outer<int>::Inner<bool>\").  As a shorthand the\n+empty template parameter list can be omitted, e.g., \"Outer\\<int>\"\n+(\"Outer<int>\") and \"Outer\\<int>::Inner\\<bool>\"\n+(\"Outer<int>::Inner<bool>\").\n+\n+\n+Partial Template Specialisations\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+Assume the following declaration.\n+\n+template<typename T>\n+class Outer<T*>\n+\n+References to partial specialisations must always include the template\n+parameter lists, e.g., \"template\\<typename T> Outer\\<T*>\"\n+(\"template<typename T> Outer<T*>\").  Currently the lookup only succeed\n+if the template parameter identifiers are equal strings.\n+\n+\n+Configuration Variables\n+-----------------------\n+\n+See Options for the C++ domain.\n+\n+\n+The Standard Domain\n+===================\n+\n+The so-called \"standard\" domain collects all markup that doesn't\n+warrant a domain of its own.  Its directives and roles are not\n+prefixed with a domain name.\n+\n+The standard domain is also where custom object descriptions, added\n+using the \"add_object_type()\" API, are placed.\n+\n+There is a set of directives allowing documenting command-line\n+programs:\n+\n+.. option:: name args, name args, ...\n+\n+   Describes a command line argument or switch.  Option argument names\n+   should be enclosed in angle brackets.  Examples:\n+\n+      .. option:: dest_dir\n+\n+         Destination directory.\n+\n+      .. option:: -m <module>, --module <module>\n+\n+         Run a module as a script.\n+\n+   The directive will create cross-reference targets for the given\n+   options, referenceable by \"option\" (in the example case, you'd use\n+   something like \":option:`dest_dir`\", \":option:`-m`\", or\n+   \":option:`--module`\").\n+\n+   \"cmdoption\" directive is a deprecated alias for the \"option\"\n+   directive.\n+\n+.. envvar:: name\n+\n+   Describes an environment variable that the documented code or\n+   program uses or defines.  Referenceable by \"envvar\".\n+\n+.. program:: name\n+\n+   Like \"py:currentmodule\", this directive produces no output.\n+   Instead, it serves to notify Sphinx that all following \"option\"\n+   directives document options for the program called *name*.\n+\n+   If you use \"program\", you have to qualify the references in your\n+   \"option\" roles by the program name, so if you have the following\n+   situation\n+\n+      .. program:: rm\n+\n+      .. option:: -r\n+\n+         Work recursively.\n+\n+      .. program:: svn\n+\n+      .. option:: -r revision\n+\n+         Specify the revision to work upon.\n+\n+   then \":option:`rm -r`\" would refer to the first option, while\n+   \":option:`svn -r`\" would refer to the second one.\n+\n+   The program name may contain spaces (in case you want to document\n+   subcommands like \"svn add\" and \"svn commit\" separately).\n+\n+   New in version 0.5.\n+\n+There is also a very generic object description directive, which is\n+not tied to any domain:\n+\n+.. describe:: text\n+.. object:: text\n+\n+   This directive produces the same formatting as the specific ones\n+   provided by domains, but does not create index entries or cross-\n+   referencing targets. Example:\n+\n+      .. describe:: PAPER\n+\n+         You can set this variable to select a paper size.\n+\n+\n+The JavaScript Domain\n+=====================\n+\n+The JavaScript domain (name **js**) provides the following directives:\n+\n+.. js:module:: name\n+\n+   This directive sets the module name for object declarations that\n+   follow after. The module name is used in the global module index\n+   and in cross references. This directive does not create an object\n+   heading like \"py:class\" would, for example.\n+\n+   By default, this directive will create a linkable entity and will\n+   cause an entry in the global module index, unless the \"noindex\"\n+   option is specified.  If this option is specified, the directive\n+   will only update the current module name.\n+\n+   New in version 1.6.\n+\n+.. js:function:: name(signature)\n+\n+   Describes a JavaScript function or method.  If you want to describe\n+   arguments as optional use square brackets as documented for Python\n+   signatures.\n+\n+   You can use fields to give more details about arguments and their\n+   expected types, errors which may be thrown by the function, and the\n+   value being returned:\n+\n+      .. js:function:: $.getJSON(href, callback[, errback])\n+\n+         :param string href: An URI to the location of the resource.\n+         :param callback: Gets called with the object.\n+         :param errback:\n+             Gets called in case the request fails. And a lot of other\n+             text so we need multiple lines.\n+         :throws SomeError: For whatever reason in that case.\n+         :returns: Something.\n+\n+   This is rendered as:\n+\n+      $.getJSON(href, callback[, errback])\n+\n+         Arguments:\n+            * **href** (*string*) -- An URI to the location of the\n+              resource.\n+\n+            * **callback** -- Gets called with the object.\n+\n+            * **errback** -- Gets called in case the request fails.\n+              And a lot of other text so we need multiple lines.\n+\n+         Throws:\n+            **SomeError** -- For whatever reason in that case.\n+\n+         Returns:\n+            Something.\n+\n+.. js:method:: name(signature)\n+\n+   This directive is an alias for \"js:function\", however it describes\n+   a function that is implemented as a method on a class object.\n+\n+   New in version 1.6.\n+\n+.. js:class:: name\n+\n+   Describes a constructor that creates an object.  This is basically\n+   like a function but will show up with a *class* prefix:\n+\n+      .. js:class:: MyAnimal(name[, age])\n+\n+         :param string name: The name of the animal\n+         :param number age: an optional age for the animal\n+\n+   This is rendered as:\n+\n+      class MyAnimal(name[, age])\n+\n+         Arguments:\n+            * **name** (*string*) -- The name of the animal\n+\n+            * **age** (*number*) -- an optional age for the animal\n+\n+.. js:data:: name\n+\n+   Describes a global variable or constant.\n+\n+.. js:attribute:: object.name\n+\n+   Describes the attribute *name* of *object*.\n+\n+These roles are provided to refer to the described objects:\n+\n+:js:mod:\n+:js:func:\n+:js:meth:\n+:js:class:\n+:js:data:\n+:js:attr:\n+\n+\n+The reStructuredText domain\n+===========================\n+\n+The reStructuredText domain (name **rst**) provides the following\n+directives:\n+\n+.. rst:directive:: name\n+\n+   Describes a reST directive.  The *name* can be a single directive\n+   name or actual directive syntax (*..* prefix and *::* suffix) with\n+   arguments that will be rendered differently.  For example:\n+\n+      .. rst:directive:: foo\n+\n+         Foo description.\n+\n+      .. rst:directive:: .. bar:: baz\n+\n+         Bar description.\n+\n+   will be rendered as:\n+\n+      .. foo::\n+\n+         Foo description.\n+\n+      .. bar:: baz\n+\n+         Bar description.\n+\n+.. rst:directive:option:: name\n+\n+   Describes an option for reST directive.  The *name* can be a single\n+   option name or option name with arguments which separated with\n+   colon (\":\"). For example:\n+\n+      .. rst:directive:: toctree\n+\n+         .. rst:directive:option:: caption: caption of ToC\n+\n+         .. rst:directive:option:: glob\n+\n+   will be rendered as:\n+\n+      .. toctree::\n+\n+         :caption: caption of ToC\n+\n+         :glob:\n+\n+   -[ options ]-\n+\n+   :type: description of argument (text)\n+\n+      Describe the type of option value.\n+\n+      For example:\n+\n+         .. rst:directive:: toctree\n+\n+            .. rst:directive:option:: maxdepth\n+               :type: integer or no value\n+\n+      New in version 2.1.\n+\n+.. rst:role:: name\n+\n+   Describes a reST role.  For example:\n+\n+      .. rst:role:: foo\n+\n+         Foo description.\n+\n+   will be rendered as:\n+\n+      :foo:\n+\n+         Foo description.\n+\n+These roles are provided to refer to the described objects:\n+\n+:rst:dir:\n+:rst:role:\n+\n+\n+The Math Domain\n+===============\n+\n+The math domain (name **math**) provides the following roles:\n+\n+:math:numref:\n+\n+   Role for cross-referencing equations defined by \"math\" directive\n+   via their label.  Example:\n+\n+      .. math:: e^{i\\pi} + 1 = 0\n+         :label: euler\n+\n+      Euler's identity, equation :math:numref:`euler`, was elected one of the\n+      most beautiful mathematical formulas.\n+\n+   New in version 1.8.\n+\n+\n+More domains\n+============\n+\n+The sphinx-contrib repository contains more domains available as\n+extensions; currently Ada, CoffeeScript, Erlang, HTTP, Lasso, MATLAB,\n+PHP, and Ruby domains. Also available are domains for Chapel, Common\n+Lisp, dqn, Go, Jinja, Operation, and Scala.\ndiff --git a/_build/doc/usage/restructuredtext/field-lists.txt b/_build/doc/usage/restructuredtext/field-lists.txt\nnew file mode 100644\nindex 000000000..b1f9e11dc\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/field-lists.txt\n@@ -0,0 +1,77 @@\n+Field Lists\n+***********\n+\n+As previously discussed, field lists are sequences of fields marked up\n+like this:\n+\n+   :fieldname: Field content\n+\n+Sphinx extends standard docutils behavior for field lists and adds\n+some extra functionality that is covered in this section.\n+\n+Note:\n+\n+  The values of field lists will be parsed as strings. You cannot use\n+  Python collections such as lists or dictionaries.\n+\n+\n+File-wide metadata\n+==================\n+\n+A field list near the top of a file is normally parsed by docutils as\n+the *docinfo* and shown on the page.  However, in Sphinx, a field list\n+preceding any other markup is moved from the *docinfo* to the Sphinx\n+environment as document metadata, and is not displayed in the output.\n+\n+Note:\n+\n+  A field list appearing after the document title *will* be part of\n+  the *docinfo* as normal and will be displayed in the output.\n+\n+\n+Special metadata fields\n+=======================\n+\n+Sphinx provides custom behavior for bibliographic fields compared to\n+docutils.\n+\n+At the moment, these metadata fields are recognized:\n+\n+\"tocdepth\"\n+   The maximum depth for a table of contents of this file.\n+\n+      :tocdepth: 2\n+\n+   Note:\n+\n+     This metadata effects to the depth of local toctree.  But it does\n+     not effect to the depth of *global* toctree.  So this would not\n+     be change the sidebar of some themes which uses global one.\n+\n+   New in version 0.4.\n+\n+\"nocomments\"\n+   If set, the web application won't display a comment form for a page\n+   generated from this source file.\n+\n+      :nocomments:\n+\n+\"orphan\"\n+   If set, warnings about this file not being included in any toctree\n+   will be suppressed.\n+\n+      :orphan:\n+\n+   New in version 1.0.\n+\n+\"nosearch\"\n+   If set, full text search for this file is disabled.\n+\n+      :nosearch:\n+\n+   Note:\n+\n+     object search is still available even if *nosearch* option is\n+     set.\n+\n+   New in version 3.0.\ndiff --git a/_build/doc/usage/restructuredtext/index.txt b/_build/doc/usage/restructuredtext/index.txt\nnew file mode 100644\nindex 000000000..275569434\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/index.txt\n@@ -0,0 +1,111 @@\n+reStructuredText\n+****************\n+\n+reStructuredText (reST) is the default plaintext markup language used\n+by both Docutils and Sphinx. Docutils provides the basic\n+reStructuredText syntax, while Sphinx extends this to support\n+additional functionality.\n+\n+The below guides go through the most important aspects of reST. For\n+the authoritative reStructuredText reference, refer to the docutils\n+documentation.\n+\n+* reStructuredText Primer\n+\n+  * Paragraphs\n+\n+  * Inline markup\n+\n+  * Lists and Quote-like blocks\n+\n+  * Literal blocks\n+\n+  * Doctest blocks\n+\n+  * Tables\n+\n+  * Hyperlinks\n+\n+  * Sections\n+\n+  * Field Lists\n+\n+  * Roles\n+\n+  * Explicit Markup\n+\n+  * Directives\n+\n+  * Images\n+\n+  * Footnotes\n+\n+  * Citations\n+\n+  * Substitutions\n+\n+  * Comments\n+\n+  * HTML Metadata\n+\n+  * Source encoding\n+\n+  * Gotchas\n+\n+* Roles\n+\n+  * Cross-referencing syntax\n+\n+  * Math\n+\n+  * Other semantic markup\n+\n+  * Substitutions\n+\n+* Directives\n+\n+  * Table of contents\n+\n+  * Paragraph-level markup\n+\n+  * Showing code examples\n+\n+  * Glossary\n+\n+  * Meta-information markup\n+\n+  * Index-generating markup\n+\n+  * Including content based on tags\n+\n+  * Tables\n+\n+  * Math\n+\n+  * Grammar production displays\n+\n+* Field Lists\n+\n+  * File-wide metadata\n+\n+  * Special metadata fields\n+\n+* Domains\n+\n+  * Basic Markup\n+\n+  * The Python Domain\n+\n+  * The C Domain\n+\n+  * The C++ Domain\n+\n+  * The Standard Domain\n+\n+  * The JavaScript Domain\n+\n+  * The reStructuredText domain\n+\n+  * The Math Domain\n+\n+  * More domains\ndiff --git a/_build/doc/usage/restructuredtext/roles.txt b/_build/doc/usage/restructuredtext/roles.txt\nnew file mode 100644\nindex 000000000..1b30d29bf\n--- /dev/null\n+++ b/_build/doc/usage/restructuredtext/roles.txt\n@@ -0,0 +1,481 @@\n+Roles\n+*****\n+\n+Sphinx uses interpreted text roles to insert semantic markup into\n+documents. They are written as \":rolename:`content`\".\n+\n+Note:\n+\n+  The default role (\"`content`\") has no special meaning by default.\n+  You are free to use it for anything you like, e.g. variable names;\n+  use the >>:confval:`default_role`<< config value to set it to a\n+  known role -- the \"any\" role to find anything or the \"py:obj\" role\n+  to find Python objects are very useful for this.\n+\n+See */usage/restructuredtext/domains* for roles added by domains.\n+\n+\n+Cross-referencing syntax\n+========================\n+\n+Cross-references are generated by many semantic interpreted text\n+roles. Basically, you only need to write \":role:`target`\", and a link\n+will be created to the item named *target* of the type indicated by\n+*role*.  The link's text will be the same as *target*.\n+\n+There are some additional facilities, however, that make cross-\n+referencing roles more versatile:\n+\n+* You may supply an explicit title and reference target, like in reST\n+  direct hyperlinks: \":role:`title <target>`\" will refer to *target*,\n+  but the link text will be *title*.\n+\n+* If you prefix the content with \"!\", no reference/hyperlink will be\n+  created.\n+\n+* If you prefix the content with \"~\", the link text will only be the\n+  last component of the target.  For example,\n+  \":py:meth:`~Queue.Queue.get`\" will refer to \"Queue.Queue.get\" but\n+  only display \"get\" as the link text.  This does not work with all\n+  cross-reference roles, but is domain specific.\n+\n+  In HTML output, the link's \"title\" attribute (that is e.g. shown as\n+  a tool-tip on mouse-hover) will always be the full target name.\n+\n+\n+Cross-referencing anything\n+--------------------------\n+\n+:any:\n+\n+   New in version 1.3.\n+\n+   This convenience role tries to do its best to find a valid target\n+   for its reference text.\n+\n+   * First, it tries standard cross-reference targets that would be\n+     referenced by \"doc\", \"ref\" or \"option\".\n+\n+     Custom objects added to the standard domain by extensions (see\n+     \"Sphinx.add_object_type()\") are also searched.\n+\n+   * Then, it looks for objects (targets) in all loaded domains.  It\n+     is up to the domains how specific a match must be.  For example,\n+     in the Python domain a reference of \":any:`Builder`\" would match\n+     the \"sphinx.builders.Builder\" class.\n+\n+   If none or multiple targets are found, a warning will be emitted.\n+   In the case of multiple targets, you can change \"any\" to a specific\n+   role.\n+\n+   This role is a good candidate for setting\n+   >>:confval:`default_role`<<.  If you do, you can write cross-\n+   references without a lot of markup overhead.  For example, in this\n+   Python function documentation\n+\n+      .. function:: install()\n+\n+         This function installs a `handler` for every signal known by the\n+         `signal` module.  See the section `about-signals` for more information.\n+\n+   there could be references to a glossary term (usually\n+   \":term:`handler`\"), a Python module (usually \":py:mod:`signal`\" or\n+   \":mod:`signal`\") and a section (usually \":ref:`about-signals`\").\n+\n+   The \"any\" role also works together with the \"intersphinx\"\n+   extension: when no local cross-reference is found, all object types\n+   of intersphinx inventories are also searched.\n+\n+\n+Cross-referencing objects\n+-------------------------\n+\n+These roles are described with their respective domains:\n+\n+* Python\n+\n+* C\n+\n+* C++\n+\n+* JavaScript\n+\n+* ReST\n+\n+\n+Cross-referencing arbitrary locations\n+-------------------------------------\n+\n+:ref:\n+\n+   To support cross-referencing to arbitrary locations in any\n+   document, the standard reST labels are used.  For this to work\n+   label names must be unique throughout the entire documentation.\n+   There are two ways in which you can refer to labels:\n+\n+   * If you place a label directly before a section title, you can\n+     reference to it with \":ref:`label-name`\".  For example:\n+\n+        .. _my-reference-label:\n+\n+        Section to cross-reference\n+        --------------------------\n+\n+        This is the text of the section.\n+\n+        It refers to the section itself, see :ref:`my-reference-label`.\n+\n+     The \":ref:\" role would then generate a link to the section, with\n+     the link title being \"Section to cross-reference\".  This works\n+     just as well when section and reference are in different source\n+     files.\n+\n+     Automatic labels also work with figures. For example:\n+\n+        .. _my-figure:\n+\n+        .. figure:: whatever\n+\n+           Figure caption\n+\n+     In this case, a  reference \":ref:`my-figure`\" would insert a\n+     reference to the figure with link text \"Figure caption\".\n+\n+     The same works for tables that are given an explicit caption\n+     using the >>:dudir:`table`<< directive.\n+\n+   * Labels that aren't placed before a section title can still be\n+     referenced, but you must give the link an explicit title, using\n+     this syntax: \":ref:`Link title <label-name>`\".\n+\n+   Note:\n+\n+     Reference labels must start with an underscore. When referencing\n+     a label, the underscore must be omitted (see examples above).\n+\n+   Using \"ref\" is advised over standard reStructuredText links to\n+   sections (like \"`Section title`_\") because it works across files,\n+   when section headings are changed, will raise warnings if\n+   incorrect, and works for all builders that support cross-\n+   references.\n+\n+\n+Cross-referencing documents\n+---------------------------\n+\n+New in version 0.6.\n+\n+There is also a way to directly link to documents:\n+\n+:doc:\n+\n+   Link to the specified document; the document name can be specified\n+   in absolute or relative fashion.  For example, if the reference\n+   \":doc:`parrot`\" occurs in the document \"sketches/index\", then the\n+   link refers to \"sketches/parrot\".  If the reference is\n+   \":doc:`/people`\" or \":doc:`../people`\", the link refers to\n+   \"people\".\n+\n+   If no explicit link text is given (like usual: \":doc:`Monty Python\n+   members </people>`\"), the link caption will be the title of the\n+   given document.\n+\n+\n+Referencing downloadable files\n+------------------------------\n+\n+New in version 0.6.\n+\n+:download:\n+\n+   This role lets you link to files within your source tree that are\n+   not reST documents that can be viewed, but files that can be\n+   downloaded.\n+\n+   When you use this role, the referenced file is automatically marked\n+   for inclusion in the output when building (obviously, for HTML\n+   output only). All downloadable files are put into a\n+   \"_downloads/<unique hash>/\" subdirectory of the output directory;\n+   duplicate filenames are handled.\n+\n+   An example:\n+\n+      See :download:`this example script <../example.py>`.\n+\n+   The given filename is usually relative to the directory the current\n+   source file is contained in, but if it absolute (starting with\n+   \"/\"), it is taken as relative to the top source directory.\n+\n+   The \"example.py\" file will be copied to the output directory, and a\n+   suitable link generated to it.\n+\n+   Not to show unavailable download links, you should wrap whole\n+   paragraphs that have this role:\n+\n+      .. only:: builder_html\n+\n+         See :download:`this example script <../example.py>`.\n+\n+\n+Cross-referencing figures by figure number\n+------------------------------------------\n+\n+New in version 1.3.\n+\n+Changed in version 1.5: *numref* role can also refer sections. And\n+*numref* allows *{name}* for the link text.\n+\n+:numref:\n+\n+   Link to the specified figures, tables, code-blocks and sections;\n+   the standard reST labels are used.  When you use this role, it will\n+   insert a reference to the figure with link text by its figure\n+   number like \"Fig. 1.1\".\n+\n+   If an explicit link text is given (as usual: \":numref:`Image of\n+   Sphinx (Fig. %s) <my-figure>`\"), the link caption will serve as\n+   title of the reference. As placeholders, *%s* and *{number}* get\n+   replaced by the figure number and  *{name}* by the figure caption.\n+   If no explicit link text is given, the >>:confval:`numfig_format`<<\n+   setting is used as fall-back default.\n+\n+   If >>:confval:`numfig`<< is \"False\", figures are not numbered, so\n+   this role inserts not a reference but the label or the link text.\n+\n+\n+Cross-referencing other items of interest\n+-----------------------------------------\n+\n+The following roles do possibly create a cross-reference, but do not\n+refer to objects:\n+\n+:envvar:\n+\n+   An environment variable.  Index entries are generated.  Also\n+   generates a link to the matching \"envvar\" directive, if it exists.\n+\n+:token:\n+\n+   The name of a grammar token (used to create links between\n+   \"productionlist\" directives).\n+\n+:keyword:\n+\n+   The name of a keyword in Python.  This creates a link to a\n+   reference label with that name, if it exists.\n+\n+:option:\n+\n+   A command-line option to an executable program.  This generates a\n+   link to a \"option\" directive, if it exists.\n+\n+The following role creates a cross-reference to a term in a glossary:\n+\n+:term:\n+\n+   Reference to a term in a glossary.  A glossary is created using the\n+   \"glossary\" directive containing a definition list with terms and\n+   definitions.  It does not have to be in the same file as the \"term\"\n+   markup, for example the Python docs have one global glossary in the\n+   \"glossary.rst\" file.\n+\n+   If you use a term that's not explained in a glossary, you'll get a\n+   warning during build.\n+\n+\n+Math\n+====\n+\n+:math:\n+\n+   Role for inline math.  Use like this:\n+\n+      Since Pythagoras, we know that :math:`a^2 + b^2 = c^2`.\n+\n+:eq:\n+\n+   Same as \"math:numref\".\n+\n+\n+Other semantic markup\n+=====================\n+\n+The following roles don't do anything special except formatting the\n+text in a different style:\n+\n+:abbr:\n+\n+   An abbreviation.  If the role content contains a parenthesized\n+   explanation, it will be treated specially: it will be shown in a\n+   tool-tip in HTML, and output only once in LaTeX.\n+\n+   Example: \":abbr:`LIFO (last-in, first-out)`\".\n+\n+   New in version 0.6.\n+\n+:command:\n+\n+   The name of an OS-level command, such as \"rm\".\n+\n+:dfn:\n+\n+   Mark the defining instance of a term in the text.  (No index\n+   entries are generated.)\n+\n+:file:\n+\n+   The name of a file or directory.  Within the contents, you can use\n+   curly braces to indicate a \"variable\" part, for example:\n+\n+      ... is installed in :file:`/usr/lib/python2.{x}/site-packages` ...\n+\n+   In the built documentation, the \"x\" will be displayed differently\n+   to indicate that it is to be replaced by the Python minor version.\n+\n+:guilabel:\n+\n+   Labels presented as part of an interactive user interface should be\n+   marked using \"guilabel\".  This includes labels from text-based\n+   interfaces such as those created using \"curses\" or other text-based\n+   libraries.  Any label used in the interface should be marked with\n+   this role, including button labels, window titles, field names,\n+   menu and menu selection names, and even values in selection lists.\n+\n+   Changed in version 1.0: An accelerator key for the GUI label can be\n+   included using an ampersand; this will be stripped and displayed\n+   underlined in the output (example: \":guilabel:`&Cancel`\").  To\n+   include a literal ampersand, double it.\n+\n+:kbd:\n+\n+   Mark a sequence of keystrokes.  What form the key sequence takes\n+   may depend on platform- or application-specific conventions.  When\n+   there are no relevant conventions, the names of modifier keys\n+   should be spelled out, to improve accessibility for new users and\n+   non-native speakers.  For example, an *xemacs* key sequence may be\n+   marked like \":kbd:`C-x C-f`\", but without reference to a specific\n+   application or platform, the same sequence should be marked as\n+   \":kbd:`Control-x Control-f`\".\n+\n+:mailheader:\n+\n+   The name of an RFC 822-style mail header.  This markup does not\n+   imply that the header is being used in an email message, but can be\n+   used to refer to any header of the same \"style.\"  This is also used\n+   for headers defined by the various MIME specifications.  The header\n+   name should be entered in the same way it would normally be found\n+   in practice, with the camel-casing conventions being preferred\n+   where there is more than one common usage. For example:\n+   \":mailheader:`Content-Type`\".\n+\n+:makevar:\n+\n+   The name of a **make** variable.\n+\n+:manpage:\n+\n+   A reference to a Unix manual page including the section, e.g.\n+   \":manpage:`ls(1)`\". Creates a hyperlink to an external site\n+   rendering the manpage if >>:confval:`manpages_url`<< is defined.\n+\n+:menuselection:\n+\n+   Menu selections should be marked using the \"menuselection\" role.\n+   This is used to mark a complete sequence of menu selections,\n+   including selecting submenus and choosing a specific operation, or\n+   any subsequence of such a sequence.  The names of individual\n+   selections should be separated by \"-->\".\n+\n+   For example, to mark the selection \"Start > Programs\", use this\n+   markup:\n+\n+      :menuselection:`Start --> Programs`\n+\n+   When including a selection that includes some trailing indicator,\n+   such as the ellipsis some operating systems use to indicate that\n+   the command opens a dialog, the indicator should be omitted from\n+   the selection name.\n+\n+   \"menuselection\" also supports ampersand accelerators just like\n+   \"guilabel\".\n+\n+:mimetype:\n+\n+   The name of a MIME type, or a component of a MIME type (the major\n+   or minor portion, taken alone).\n+\n+:newsgroup:\n+\n+   The name of a Usenet newsgroup.\n+\n+:program:\n+\n+   The name of an executable program.  This may differ from the file\n+   name for the executable for some platforms.  In particular, the\n+   \".exe\" (or other) extension should be omitted for Windows programs.\n+\n+:regexp:\n+\n+   A regular expression. Quotes should not be included.\n+\n+:samp:\n+\n+   A piece of literal text, such as code.  Within the contents, you\n+   can use curly braces to indicate a \"variable\" part, as in \"file\".\n+   For example, in \":samp:`print 1+{variable}`\", the part \"variable\"\n+   would be emphasized.\n+\n+   If you don't need the \"variable part\" indication, use the standard\n+   \"``code``\" instead.\n+\n+   Changed in version 1.8: Allowed to escape curly braces with\n+   backslash\n+\n+There is also an \"index\" role to generate index entries.\n+\n+The following roles generate external links:\n+\n+:pep:\n+\n+   A reference to a Python Enhancement Proposal.  This generates\n+   appropriate index entries. The text \"PEP *number*\" is generated; in\n+   the HTML output, this text is a hyperlink to an online copy of the\n+   specified PEP.  You can link to a specific section by saying\n+   \":pep:`number#anchor`\".\n+\n+:rfc:\n+\n+   A reference to an Internet Request for Comments.  This generates\n+   appropriate index entries. The text \"RFC *number*\" is generated; in\n+   the HTML output, this text is a hyperlink to an online copy of the\n+   specified RFC.  You can link to a specific section by saying\n+   \":rfc:`number#anchor`\".\n+\n+Note that there are no special roles for including hyperlinks as you\n+can use the standard reST markup for that purpose.\n+\n+\n+Substitutions\n+=============\n+\n+The documentation system provides three substitutions that are defined\n+by default. They are set in the build configuration file.\n+\n+|release|\n+\n+   Replaced by the project release the documentation refers to.  This\n+   is meant to be the full version string including alpha/beta/release\n+   candidate tags, e.g. \"2.5.2b3\".  Set by >>:confval:`release`<<.\n+\n+|version|\n+\n+   Replaced by the project version the documentation refers to. This\n+   is meant to consist only of the major and minor version parts, e.g.\n+   \"2.5\", even for version 2.5.1.  Set by >>:confval:`version`<<.\n+\n+|today|\n+\n+   Replaced by either today's date (the date on which the document is\n+   read), or the date set in the build configuration file.  Normally\n+   has the format \"April 14, 2007\".  Set by >>:confval:`today_fmt`<<\n+   and >>:confval:`today`<<.\ndiff --git a/_build/doc/usage/theming.txt b/_build/doc/usage/theming.txt\nnew file mode 100644\nindex 000000000..004ecae81\n--- /dev/null\n+++ b/_build/doc/usage/theming.txt\n@@ -0,0 +1,377 @@\n+HTML Theming\n+************\n+\n+Sphinx provides a number of builders for HTML and HTML-based formats.\n+\n+\n+Builders\n+========\n+\n+\n+Themes\n+======\n+\n+New in version 0.6.\n+\n+Note:\n+\n+  This section provides information about using pre-existing HTML\n+  themes. If you wish to create your own theme, refer to\n+  */development/theming*.\n+\n+Sphinx supports changing the appearance of its HTML output via\n+*themes*.  A theme is a collection of HTML templates, stylesheet(s)\n+and other static files. Additionally, it has a configuration file\n+which specifies from which theme to inherit, which highlighting style\n+to use, and what options exist for customizing the theme's look and\n+feel.\n+\n+Themes are meant to be project-unaware, so they can be used for\n+different projects without change.\n+\n+\n+Using a theme\n+-------------\n+\n+Using a theme provided with Sphinx is easy. Since these do not need to\n+be installed, you only need to set the >>:confval:`html_theme`<<\n+config value. For example, to enable the \"classic\" theme, add the\n+following to \"conf.py\":\n+\n+   html_theme = \"classic\"\n+\n+You can also set theme-specific options using the\n+>>:confval:`html_theme_options`<< config value.  These options are\n+generally used to change the look and feel of the theme. For example,\n+to place the sidebar on the right side and a black background for the\n+relation bar (the bar with the navigation links at the page's top and\n+bottom), add the following \"conf.py\":\n+\n+   html_theme_options = {\n+       \"rightsidebar\": \"true\",\n+       \"relbarbgcolor\": \"black\"\n+   }\n+\n+If the theme does not come with Sphinx, it can be in two static forms\n+or as a Python package. For the static forms, either a directory\n+(containing \"theme.conf\" and other needed files), or a zip file with\n+the same contents is supported. The directory or zipfile must be put\n+where Sphinx can find it; for this there is the config value\n+>>:confval:`html_theme_path`<<. This can be a list of directories,\n+relative to the directory containing \"conf.py\", that can contain theme\n+directories or zip files.  For example, if you have a theme in the\n+file \"blue.zip\", you can put it right in the directory containing\n+\"conf.py\" and use this configuration:\n+\n+   html_theme = \"blue\"\n+   html_theme_path = [\".\"]\n+\n+The third form is a Python package.  If a theme you want to use is\n+distributed as a Python package, you can use it after installing\n+\n+   # installing theme package\n+   $ pip install sphinxjp.themes.dotted\n+\n+Once installed, this can be used in the same manner as a directory or\n+zipfile-based theme:\n+\n+   html_theme = \"dotted\"\n+\n+For more information on the design of themes, including information\n+about writing your own themes, refer to */development/theming*.\n+\n+\n+Builtin themes\n+--------------\n+\n++----------------------+----------------------+\n+| **Theme overview**   |                      |\n++----------------------+----------------------+\n+| [image:              | [image:              |\n+| alabaster][image]    | classic][image]      |\n+| *alabaster*          | *classic*            |\n++----------------------+----------------------+\n+| [image:              | [image:              |\n+| sphinxdoc][image]    | scrolls][image]      |\n+| *sphinxdoc*          | *scrolls*            |\n++----------------------+----------------------+\n+| [image:              | [image:              |\n+| agogo][image]        | traditional][image]  |\n+| *agogo*              | *traditional*        |\n++----------------------+----------------------+\n+| [image:              | [image:              |\n+| nature][image]       | haiku][image]        |\n+| *nature*             | *haiku*              |\n++----------------------+----------------------+\n+| [image:              | [image:              |\n+| pyramid][image]      | bizstyle][image]     |\n+| *pyramid*            | *bizstyle*           |\n++----------------------+----------------------+\n+\n+Sphinx comes with a selection of themes to choose from.\n+\n+These themes are:\n+\n+**basic**\n+   This is a basically unstyled layout used as the base for the other\n+   themes, and usable as the base for custom themes as well.  The HTML\n+   contains all important elements like sidebar and relation bar.\n+   There are these options (which are inherited by the other themes):\n+\n+   * **nosidebar** (true or false): Don't include the sidebar.\n+     Defaults to \"False\".\n+\n+   * **sidebarwidth** (int or str): Width of the sidebar in pixels.\n+     This can be an int, which is interpreted as pixels or a valid CSS\n+     dimension string such as '70em' or '50%'.  Defaults to 230\n+     pixels.\n+\n+   * **body_min_width** (int or str): Minimal width of the document\n+     body. This can be an int, which is interpreted as pixels or a\n+     valid CSS dimension string such as '70em' or '50%'. Use 0 if you\n+     don't want a width limit. Defaults may depend on the theme (often\n+     450px).\n+\n+   * **body_max_width** (int or str): Maximal width of the document\n+     body. This can be an int, which is interpreted as pixels or a\n+     valid CSS dimension string such as '70em' or '50%'. Use 'none' if\n+     you don't want a width limit. Defaults may depend on the theme\n+     (often 800px).\n+\n+   * **navigation_with_keys** (true or false): Allow navigating to the\n+     previous/next page using the keyboard's left and right arrows.\n+     Defaults to \"False\".\n+\n+   * **globaltoc_collapse** (true or false): Only expand subsections\n+     of the current document in \"globaltoc.html\" (see\n+     >>:confval:`html_sidebars`<<). Defaults to \"True\".\n+\n+     New in version 3.1.\n+\n+   * **globaltoc_includehidden** (true or false): Show even those\n+     subsections in \"globaltoc.html\" (see\n+     >>:confval:`html_sidebars`<<) which have been included with the\n+     \":hidden:\" flag of the \"toctree\" directive. Defaults to \"False\".\n+\n+     New in version 3.1.\n+\n+   * **globaltoc_maxdepth** (int): The maximum depth of the toctree in\n+     \"globaltoc.html\" (see >>:confval:`html_sidebars`<<).  Set it to\n+     -1 to allow unlimited depth. Defaults to the max depth selected\n+     in the toctree directive.\n+\n+     New in version 3.2.\n+\n+**alabaster**\n+   Alabaster theme is a modified \"Kr\" Sphinx theme from @kennethreitz\n+   (especially as used in his Requests project), which was itself\n+   originally based on @mitsuhiko's theme used for Flask & related\n+   projects.  Refer to its installation page for information on how to\n+   configure >>:confval:`html_sidebars`<< for its use.\n+\n+**classic**\n+   This is the classic theme, which looks like the Python 2\n+   documentation.  It can be customized via these options:\n+\n+   * **rightsidebar** (true or false): Put the sidebar on the right\n+     side. Defaults to \"False\".\n+\n+   * **stickysidebar** (true or false): Make the sidebar \"fixed\" so\n+     that it doesn't scroll out of view for long body content.  This\n+     may not work well with all browsers.  Defaults to \"False\".\n+\n+   * **collapsiblesidebar** (true or false): Add an *experimental*\n+     JavaScript snippet that makes the sidebar collapsible via a\n+     button on its side. Defaults to \"False\".\n+\n+   * **externalrefs** (true or false): Display external links\n+     differently from internal links.  Defaults to \"False\".\n+\n+   There are also various color and font options that can change the\n+   color scheme without having to write a custom stylesheet:\n+\n+   * **footerbgcolor** (CSS color): Background color for the footer\n+     line.\n+\n+   * **footertextcolor** (CSS color): Text color for the footer line.\n+\n+   * **sidebarbgcolor** (CSS color): Background color for the sidebar.\n+\n+   * **sidebarbtncolor** (CSS color): Background color for the sidebar\n+     collapse button (used when *collapsiblesidebar* is \"True\").\n+\n+   * **sidebartextcolor** (CSS color): Text color for the sidebar.\n+\n+   * **sidebarlinkcolor** (CSS color): Link color for the sidebar.\n+\n+   * **relbarbgcolor** (CSS color): Background color for the relation\n+     bar.\n+\n+   * **relbartextcolor** (CSS color): Text color for the relation bar.\n+\n+   * **relbarlinkcolor** (CSS color): Link color for the relation bar.\n+\n+   * **bgcolor** (CSS color): Body background color.\n+\n+   * **textcolor** (CSS color): Body text color.\n+\n+   * **linkcolor** (CSS color): Body link color.\n+\n+   * **visitedlinkcolor** (CSS color): Body color for visited links.\n+\n+   * **headbgcolor** (CSS color): Background color for headings.\n+\n+   * **headtextcolor** (CSS color): Text color for headings.\n+\n+   * **headlinkcolor** (CSS color): Link color for headings.\n+\n+   * **codebgcolor** (CSS color): Background color for code blocks.\n+\n+   * **codetextcolor** (CSS color): Default text color for code\n+     blocks, if not set differently by the highlighting style.\n+\n+   * **bodyfont** (CSS font-family): Font for normal text.\n+\n+   * **headfont** (CSS font-family): Font for headings.\n+\n+**sphinxdoc**\n+   The theme originally used by this documentation. It features a\n+   sidebar on the right side. There are currently no options beyond\n+   *nosidebar* and *sidebarwidth*.\n+\n+   Note:\n+\n+     The Sphinx documentation now uses an adjusted version of the\n+     sphinxdoc theme.\n+\n+**scrolls**\n+   A more lightweight theme, based on the Jinja documentation.  The\n+   following color options are available:\n+\n+   * **headerbordercolor**\n+\n+   * **subheadlinecolor**\n+\n+   * **linkcolor**\n+\n+   * **visitedlinkcolor**\n+\n+   * **admonitioncolor**\n+\n+**agogo**\n+   A theme created by Andi Albrecht.  The following options are\n+   supported:\n+\n+   * **bodyfont** (CSS font family): Font for normal text.\n+\n+   * **headerfont** (CSS font family): Font for headings.\n+\n+   * **pagewidth** (CSS length): Width of the page content, default\n+     70em.\n+\n+   * **documentwidth** (CSS length): Width of the document (without\n+     sidebar), default 50em.\n+\n+   * **sidebarwidth** (CSS length): Width of the sidebar, default\n+     20em.\n+\n+   * **rightsidebar** (true or false): Put the sidebar on the right\n+     side. Defaults to \"True\".\n+\n+   * **bgcolor** (CSS color): Background color.\n+\n+   * **headerbg** (CSS value for \"background\"): background for the\n+     header area, default a grayish gradient.\n+\n+   * **footerbg** (CSS value for \"background\"): background for the\n+     footer area, default a light gray gradient.\n+\n+   * **linkcolor** (CSS color): Body link color.\n+\n+   * **headercolor1**, **headercolor2** (CSS color): colors for <h1>\n+     and <h2> headings.\n+\n+   * **headerlinkcolor** (CSS color): Color for the backreference link\n+     in headings.\n+\n+   * **textalign** (CSS *text-align* value): Text alignment for the\n+     body, default is \"justify\".\n+\n+**nature**\n+   A greenish theme.  There are currently no options beyond\n+   *nosidebar* and *sidebarwidth*.\n+\n+**pyramid**\n+   A theme from the Pyramid web framework project, designed by Blaise\n+   Laflamme. There are currently no options beyond *nosidebar* and\n+   *sidebarwidth*.\n+\n+**haiku**\n+   A theme without sidebar inspired by the Haiku OS user guide.  The\n+   following options are supported:\n+\n+   * **full_logo** (true or false, default \"False\"): If this is true,\n+     the header will only show the >>:confval:`html_logo`<<.  Use this\n+     for large logos. If this is false, the logo (if present) will be\n+     shown floating right, and the documentation title will be put in\n+     the header.\n+\n+   * **textcolor**, **headingcolor**, **linkcolor**,\n+     **visitedlinkcolor**, **hoverlinkcolor** (CSS colors): Colors for\n+     various body elements.\n+\n+**traditional**\n+   A theme resembling the old Python documentation.  There are\n+   currently no options beyond *nosidebar* and *sidebarwidth*.\n+\n+**epub**\n+   A theme for the epub builder.  This theme tries to save visual\n+   space which is a sparse resource on ebook readers.  The following\n+   options are supported:\n+\n+   * **relbar1** (true or false, default \"True\"): If this is true, the\n+     *relbar1* block is inserted in the epub output, otherwise it is\n+     omitted.\n+\n+   * **footer**  (true or false, default \"True\"): If this is true, the\n+     *footer* block is inserted in the epub output, otherwise it is\n+     omitted.\n+\n+**bizstyle**\n+   A simple bluish theme. The following options are supported beyond\n+   *nosidebar* and *sidebarwidth*:\n+\n+   * **rightsidebar** (true or false): Put the sidebar on the right\n+     side. Defaults to \"False\".\n+\n+New in version 1.3: 'alabaster', 'sphinx_rtd_theme' and 'bizstyle'\n+theme.\n+\n+Changed in version 1.3: The 'default' theme has been renamed to\n+'classic'. 'default' is still available, however it will emit a notice\n+that it is an alias for the new 'alabaster' theme.\n+\n+\n+Third Party Themes\n+------------------\n+\n++----------------------+----------------------+\n+| **Theme overview**   |                      |\n++----------------------+----------------------+\n+| [image: sphinx_rtd_  |                      |\n+| theme][image]        |                      |\n+| *sphinx_rtd_theme*   |                      |\n++----------------------+----------------------+\n+\n+There are many third-party themes available. Some of these are general\n+use, while others are specific to an individual project. A section of\n+third-party themes is listed below. Many more can be found on PyPI,\n+GitHub, GitLab and sphinx-themes.org.\n+\n+**sphinx_rtd_theme**\n+   Read the Docs Sphinx Theme. This is a mobile-friendly sphinx theme\n+   that was made for readthedocs.org. View a working demo over on\n+   readthedocs.org. You can get install and options information at\n+   Read the Docs Sphinx Theme page.\n+\n+   Changed in version 1.4: **sphinx_rtd_theme** has become optional.\ndiff --git a/_build/index.txt b/_build/index.txt\nnew file mode 100644\nindex 000000000..ffbfbb938\n--- /dev/null\n+++ b/_build/index.txt\n@@ -0,0 +1,2 @@\n+Test Empty __all__\n+******************\ndiff --git a/_build/sphinx/ext/autosummary/templates/autosummary/base.txt b/_build/sphinx/ext/autosummary/templates/autosummary/base.txt\nnew file mode 100644\nindex 000000000..dd39496e1\n--- /dev/null\n+++ b/_build/sphinx/ext/autosummary/templates/autosummary/base.txt\n@@ -0,0 +1 @@\n+{{ fullname | escape | underline}}\ndiff --git a/_build/sphinx/ext/autosummary/templates/autosummary/class.txt b/_build/sphinx/ext/autosummary/templates/autosummary/class.txt\nnew file mode 100644\nindex 000000000..dd39496e1\n--- /dev/null\n+++ b/_build/sphinx/ext/autosummary/templates/autosummary/class.txt\n@@ -0,0 +1 @@\n+{{ fullname | escape | underline}}\ndiff --git a/_build/sphinx/ext/autosummary/templates/autosummary/module.txt b/_build/sphinx/ext/autosummary/templates/autosummary/module.txt\nnew file mode 100644\nindex 000000000..24459882e\n--- /dev/null\n+++ b/_build/sphinx/ext/autosummary/templates/autosummary/module.txt\n@@ -0,0 +1,8 @@\n+{{ fullname | escape | underline}}\n+\n+{% block modules %} {% if modules %} .. rubric:: Modules\n+\n+{% for item in modules %}\n+   {{ item }}\n+\n+{%- endfor %} {% endif %} {% endblock %}\ndiff --git a/_build/tests/roots/test-add_enumerable_node/index.txt b/_build/tests/roots/test-add_enumerable_node/index.txt\nnew file mode 100644\nindex 000000000..0a5d88de0\n--- /dev/null\n+++ b/_build/tests/roots/test-add_enumerable_node/index.txt\n@@ -0,0 +1,26 @@\n+test-add_enumerable_node\n+************************\n+\n+\n+First section\n+=============\n+\n+   [image]First figure\n+\n+\n+Second section\n+==============\n+\n+\n+Reference section\n+=================\n+\n+* first_figure is \"first_figure\"\n+\n+* first_my_figure is \"first_my_figure\"\n+\n+* second_my_figure is \"second_my_figure\"\n+\n+* first numbered_text is \"first_numbered_text\"\n+\n+* second numbered_text is \"second_numbered_text\"\ndiff --git a/_build/tests/roots/test-api-set-translator/index.txt b/_build/tests/roots/test-api-set-translator/index.txt\nnew file mode 100644\nindex 000000000..30ed9459c\n--- /dev/null\n+++ b/_build/tests/roots/test-api-set-translator/index.txt\n@@ -0,0 +1,2 @@\n+Test API set_translator\n+***********************\ndiff --git a/_build/tests/roots/test-autosummary/index.txt b/_build/tests/roots/test-autosummary/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-autosummary/sphinx.txt b/_build/tests/roots/test-autosummary/sphinx.txt\nnew file mode 100644\nindex 000000000..745555901\n--- /dev/null\n+++ b/_build/tests/roots/test-autosummary/sphinx.txt\n@@ -0,0 +1,23 @@\n+Autosummary test\n+****************\n+\n+class sphinx.application.TemplateBridge\n+\n+   This class defines the interface for a \"template bridge\", that is,\n+   a class that renders templates given a template name and a context.\n+\n+      Basic test\n+\n+      Test with tildes\n+\n+      Methods:\n+\n+   render(template: str, context: Dict) -> None\n+\n+      Called by the builder to render a template given as a filename\n+      with a specified context (a Python dictionary).\n+\n+   render_string(template: str, context: Dict) -> str\n+\n+      Called by the builder to render a template given as a string\n+      with a specified context (a Python dictionary).\ndiff --git a/_build/tests/roots/test-basic/index.txt b/_build/tests/roots/test-basic/index.txt\nnew file mode 100644\nindex 000000000..c598333ae\n--- /dev/null\n+++ b/_build/tests/roots/test-basic/index.txt\n@@ -0,0 +1,40 @@\n+The basic Sphinx documentation for testing\n+******************************************\n+\n+Sphinx is a tool that makes it easy to create intelligent and\n+beautiful documentation for Python projects (or other documents\n+consisting of multiple reStructuredText sources), written by Georg\n+Brandl.  It was originally created for the new Python documentation,\n+and has excellent facilities for Python project documentation, but\n+C/C++ is supported as well, and more languages are planned.\n+\n+Sphinx uses reStructuredText as its markup language, and many of its\n+strengths come from the power and straightforwardness of\n+reStructuredText and its parsing and translating suite, the Docutils.\n+\n+\n+features\n+========\n+\n+Among its features are the following:\n+\n+* Output formats: HTML (including derivative formats such as HTML\n+  Help, Epub and Qt Help), plain text, manual pages and LaTeX or\n+  direct PDF output using rst2pdf\n+\n+* Extensive cross-references: semantic markup and automatic links for\n+  functions, classes, glossary terms and similar pieces of information\n+\n+* Hierarchical structure: easy definition of a document tree, with\n+  automatic links to siblings, parents and children\n+\n+* Automatic indices: general index as well as a module index\n+\n+* Code handling: automatic highlighting using the Pygments highlighter\n+\n+* Flexible HTML output using the Jinja 2 templating engine\n+\n+* Various extensions are available, e.g. for automatic testing of\n+  snippets and inclusion of appropriately formatted docstrings\n+\n+* Setuptools integration\ndiff --git a/_build/tests/roots/test-build-html-translator/index.txt b/_build/tests/roots/test-build-html-translator/index.txt\nnew file mode 100644\nindex 000000000..84966b73e\n--- /dev/null\n+++ b/_build/tests/roots/test-build-html-translator/index.txt\n@@ -0,0 +1,40 @@\n+Test HTML admonitions\n+*********************\n+\n+See also: test\n+\n+Note:\n+\n+  test\n+\n+Warning:\n+\n+  test\n+\n+Attention:\n+\n+  test\n+\n+Caution:\n+\n+  test\n+\n+Danger:\n+\n+  test\n+\n+Error:\n+\n+  test\n+\n+Hint:\n+\n+  test\n+\n+Important:\n+\n+  test\n+\n+Tip:\n+\n+  test\ndiff --git a/_build/tests/roots/test-builder-dirhtml/bar.txt b/_build/tests/roots/test-builder-dirhtml/bar.txt\nnew file mode 100644\nindex 000000000..b87b461ba\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-dirhtml/bar.txt\n@@ -0,0 +1,2 @@\n+bar\n+***\ndiff --git a/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt b/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt\nnew file mode 100644\nindex 000000000..eb6250074\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt\n@@ -0,0 +1,2 @@\n+foo/foo_1\n+*********\ndiff --git a/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt b/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt\nnew file mode 100644\nindex 000000000..379914a9e\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt\n@@ -0,0 +1,2 @@\n+foo/foo_2\n+*********\ndiff --git a/_build/tests/roots/test-builder-dirhtml/foo/index.txt b/_build/tests/roots/test-builder-dirhtml/foo/index.txt\nnew file mode 100644\nindex 000000000..8776afe7a\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-dirhtml/foo/index.txt\n@@ -0,0 +1,6 @@\n+foo/index\n+*********\n+\n+* foo/foo_1\n+\n+* foo/foo_2\ndiff --git a/_build/tests/roots/test-builder-dirhtml/index.txt b/_build/tests/roots/test-builder-dirhtml/index.txt\nnew file mode 100644\nindex 000000000..2f7791cd0\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-dirhtml/index.txt\n@@ -0,0 +1,10 @@\n+index\n+*****\n+\n+* foo/index\n+\n+  * foo/foo_1\n+\n+  * foo/foo_2\n+\n+* bar\ndiff --git a/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt\nnew file mode 100644\nindex 000000000..04dd7ff66\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt\n@@ -0,0 +1,4 @@\n+File with UTF-8 BOM\n+*******************\n+\n+This file has a UTF-8 \"BOM\".\ndiff --git a/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt\nnew file mode 100644\nindex 000000000..361a681a1\n--- /dev/null\n+++ b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt\n@@ -0,0 +1,4 @@\n+The basic Sphinx documentation for testing\n+******************************************\n+\n+* File with UTF-8 BOM\ndiff --git a/_build/tests/roots/test-changes/base.txt b/_build/tests/roots/test-changes/base.txt\nnew file mode 100644\nindex 000000000..eff465326\n--- /dev/null\n+++ b/_build/tests/roots/test-changes/base.txt\n@@ -0,0 +1,13 @@\n+Version markup\n+**************\n+\n+New in version 0.6: Some funny **stuff**.\n+\n+Changed in version 0.6: Even more funny stuff.\n+\n+Deprecated since version 0.6: Boring stuff.\n+\n+New in version 1.2: First paragraph of versionadded.\n+\n+Changed in version 1.2: First paragraph of versionchanged.Second\n+paragraph of versionchanged.\ndiff --git a/_build/tests/roots/test-changes/c-api.txt b/_build/tests/roots/test-changes/c-api.txt\nnew file mode 100644\nindex 000000000..6026e035c\n--- /dev/null\n+++ b/_build/tests/roots/test-changes/c-api.txt\n@@ -0,0 +1,21 @@\n+Memory\n+******\n+\n+void *Test_Malloc(size_t n)\n+\n+   Allocate *n* bytes of memory.\n+\n+   Changed in version 0.6: Can now be replaced with a different\n+   allocator.\n+\n+\n+System\n+======\n+\n+Access to the system allocator.\n+\n+New in version 0.6.\n+\n+void *Test_SysMalloc(size_t n)\n+\n+   Allocate *n* bytes of memory using system allocator.\ndiff --git a/_build/tests/roots/test-changes/contents.txt b/_build/tests/roots/test-changes/contents.txt\nnew file mode 100644\nindex 000000000..d9f89cbb7\n--- /dev/null\n+++ b/_build/tests/roots/test-changes/contents.txt\n@@ -0,0 +1,16 @@\n+Index for ChangesBuilder tests\n+******************************\n+\n+Contents:\n+\n+Table of Contents\n+\n+* Version markup\n+\n+* Memory\n+\n+  * System\n+\n+* \"utils\" --- Fake utilities module for tests\n+\n+  * Classes\ndiff --git a/_build/tests/roots/test-changes/library/utils.txt b/_build/tests/roots/test-changes/library/utils.txt\nnew file mode 100644\nindex 000000000..8dd95600e\n--- /dev/null\n+++ b/_build/tests/roots/test-changes/library/utils.txt\n@@ -0,0 +1,20 @@\n+\"utils\" --- Fake utilities module for tests\n+*******************************************\n+\n+======================================================================\n+\n+The \"utils\" module is a pretend python module for changes testing.\n+\n+\n+Classes\n+=======\n+\n+class utils.Path\n+\n+   Class for handling paths.\n+\n+      New in version 0.5:\n+\n+      Innovative new way to handle paths.\n+\n+   Deprecated since version 0.6: So, that was a bad idea it turns out.\ndiff --git a/_build/tests/roots/test-circular/index.txt b/_build/tests/roots/test-circular/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-circular/sub.txt b/_build/tests/roots/test-circular/sub.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-correct-year/index.txt b/_build/tests/roots/test-correct-year/index.txt\nnew file mode 100644\nindex 000000000..fb59ff843\n--- /dev/null\n+++ b/_build/tests/roots/test-correct-year/index.txt\n@@ -0,0 +1,2 @@\n+test-correct-year\n+*****************\ndiff --git a/_build/tests/roots/test-default_role/foo.txt b/_build/tests/roots/test-default_role/foo.txt\nnew file mode 100644\nindex 000000000..91e34e9ae\n--- /dev/null\n+++ b/_build/tests/roots/test-default_role/foo.txt\n@@ -0,0 +1,4 @@\n+foo.rst\n+*******\n+\n+*OK* button\ndiff --git a/_build/tests/roots/test-default_role/index.txt b/_build/tests/roots/test-default_role/index.txt\nnew file mode 100644\nindex 000000000..0b81881a3\n--- /dev/null\n+++ b/_build/tests/roots/test-default_role/index.txt\n@@ -0,0 +1,4 @@\n+default_role\n+************\n+\n+**PEP 8**\ndiff --git a/_build/tests/roots/test-directive-code/caption.txt b/_build/tests/roots/test-directive-code/caption.txt\nnew file mode 100644\nindex 000000000..3be08c97b\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/caption.txt\n@@ -0,0 +1,48 @@\n+Caption\n+*******\n+\n+\n+References\n+==========\n+\n+See \"name *test* rb\" and \"name **test** py\".\n+\n+See Ruby and Python.\n+\n+\n+Code blocks\n+===========\n+\n+caption *test* rb\n+\n+   def ruby?\n+       false\n+   end\n+\n+\n+Literal Include\n+===============\n+\n+caption **test** py\n+\n+           pass\n+\n+\n+\n+Named Code blocks\n+=================\n+\n+caption *test* rbnamed\n+\n+   def ruby?\n+       false\n+   end\n+\n+\n+Named Literal Include\n+=====================\n+\n+caption **test** pynamed\n+\n+           pass\n+\ndiff --git a/_build/tests/roots/test-directive-code/classes.txt b/_build/tests/roots/test-directive-code/classes.txt\nnew file mode 100644\nindex 000000000..87076515c\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/classes.txt\n@@ -0,0 +1,28 @@\n+classes\n+*******\n+\n+\n+Code blocks\n+===========\n+\n+       def ruby?\n+           false\n+       end\n+\n+\n+Literal Includes\n+================\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\ndiff --git a/_build/tests/roots/test-directive-code/emphasize.txt b/_build/tests/roots/test-directive-code/emphasize.txt\nnew file mode 100644\nindex 000000000..5a853a81c\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/emphasize.txt\n@@ -0,0 +1,29 @@\n+Literal Includes with Highlighted Lines\n+***************************************\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\n+\n+   def block_start_with_comment():\n+       # Comment\n+       return 1\n+\n+   def block_start_with_blank():\n+\n+       return 1\n+\n+\n+   class Qux:\n+   \tdef quux(self):\n+   \t\tpass\ndiff --git a/_build/tests/roots/test-directive-code/force.txt b/_build/tests/roots/test-directive-code/force.txt\nnew file mode 100644\nindex 000000000..ba6ec9f3a\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/force.txt\n@@ -0,0 +1,8 @@\n+force option\n+************\n+\n+   not a python script!\n+\n+   not a python script!\n+\n+   not a python script!\ndiff --git a/_build/tests/roots/test-directive-code/highlight.txt b/_build/tests/roots/test-directive-code/highlight.txt\nnew file mode 100644\nindex 000000000..4904cd660\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/highlight.txt\n@@ -0,0 +1,10 @@\n+highlight\n+*********\n+\n+   \"A code-block without no language\"\n+\n+   \"A code-block with language argument\"\n+\n+   \"A code-block without no language after highlight directive\"\n+\n+   \"A code-block without language argument after highlight directive\"\ndiff --git a/_build/tests/roots/test-directive-code/index.txt b/_build/tests/roots/test-directive-code/index.txt\nnew file mode 100644\nindex 000000000..540ad1abd\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/index.txt\n@@ -0,0 +1,73 @@\n+test-directive-code\n+*******************\n+\n+* Caption\n+\n+  * References\n+\n+  * Code blocks\n+\n+  * Literal Include\n+\n+  * Named Code blocks\n+\n+  * Named Literal Include\n+\n+* classes\n+\n+  * Code blocks\n+\n+  * Literal Includes\n+\n+* Literal Includes with Highlighted Lines\n+\n+* force option\n+\n+* highlight\n+\n+* Literal Includes with Line Numbers\n+\n+* Code Blocks and Literal Includes with Line Numbers via\n+  linenothreshold\n+\n+* Named Blocks\n+\n+  * References to named blocks\n+\n+  * Named Code block\n+\n+  * Named Literal Include\n+\n+* py-decorators\n+\n+  * Various decorators\n+\n+* Literal Includes for python\n+\n+  * block start with blank or comment\n+\n+\n+Code blocks\n+===========\n+\n+       def ruby?\n+           false\n+       end\n+\n+\n+Literal Includes\n+================\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\ndiff --git a/_build/tests/roots/test-directive-code/linenos.txt b/_build/tests/roots/test-directive-code/linenos.txt\nnew file mode 100644\nindex 000000000..1dfa7ee75\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/linenos.txt\n@@ -0,0 +1,40 @@\n+Literal Includes with Line Numbers\n+**********************************\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+\n+\n+\n+\ndiff --git a/_build/tests/roots/test-directive-code/linenothreshold.txt b/_build/tests/roots/test-directive-code/linenothreshold.txt\nnew file mode 100644\nindex 000000000..aba0d36da\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/linenothreshold.txt\n@@ -0,0 +1,30 @@\n+Code Blocks and Literal Includes with Line Numbers via linenothreshold\n+**********************************************************************\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+       pass\n+\n+   # comment\n+   value = True\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\n+\n+   # Very small literal include (linenothreshold check)\n+\n+   value = True\ndiff --git a/_build/tests/roots/test-directive-code/namedblocks.txt b/_build/tests/roots/test-directive-code/namedblocks.txt\nnew file mode 100644\nindex 000000000..371b6a16f\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/namedblocks.txt\n@@ -0,0 +1,34 @@\n+Named Blocks\n+************\n+\n+\n+References to named blocks\n+==========================\n+\n+See the ruby code and also the python code.\n+\n+\n+Named Code block\n+================\n+\n+   def ruby?\n+       false\n+   end\n+\n+\n+Named Literal Include\n+=====================\n+\n+   # Literally included file using Python highlighting\n+\n+   foo = \"Including Unicode characters: \u00fc\u00f6\u00e4\"\n+\n+   class Foo:\n+       pass\n+\n+   class Bar:\n+       def baz():\n+           pass\n+\n+   # comment after Bar class definition\n+   def bar(): pass\ndiff --git a/_build/tests/roots/test-directive-code/py-decorators.txt b/_build/tests/roots/test-directive-code/py-decorators.txt\nnew file mode 100644\nindex 000000000..75c404be6\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/py-decorators.txt\n@@ -0,0 +1,25 @@\n+py-decorators\n+*************\n+\n+\n+Various decorators\n+==================\n+\n+   @class_decorator\n+   @other_decorator()\n+   class TheClass(object):\n+\n+       @method_decorator\n+       @other_decorator()\n+       def the_method():\n+           pass\n+\n+       @method_decorator\n+       @other_decorator()\n+       def the_method():\n+           pass\n+\n+   @function_decorator\n+   @other_decorator()\n+   def the_function():\n+       pass\ndiff --git a/_build/tests/roots/test-directive-code/python.txt b/_build/tests/roots/test-directive-code/python.txt\nnew file mode 100644\nindex 000000000..9ea6ea3cf\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-code/python.txt\n@@ -0,0 +1,14 @@\n+Literal Includes for python\n+***************************\n+\n+\n+block start with blank or comment\n+=================================\n+\n+   def block_start_with_comment():\n+       # Comment\n+       return 1\n+\n+   def block_start_with_blank():\n+\n+       return 1\ndiff --git a/_build/tests/roots/test-directive-only/index.txt b/_build/tests/roots/test-directive-only/index.txt\nnew file mode 100644\nindex 000000000..330079193\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-only/index.txt\n@@ -0,0 +1,76 @@\n+test-directive-only\n+*******************\n+\n+* 1. Sections in only directives\n+\n+  * 1.1. Section\n+\n+  * 1.2. Section\n+\n+    * 1.2.1. Subsection\n+\n+  * 1.3. Section\n+\n+    * 1.3.1. Subsection\n+\n+  * 1.4. Section\n+\n+    * 1.4.1. Subsection\n+\n+  * 1.5. Section\n+\n+    * 1.5.1. Subsection\n+\n+    * 1.5.2. Subsection\n+\n+  * 1.6. Section\n+\n+    * 1.6.1. Subsection\n+\n+    * 1.6.2. Subsection\n+\n+    * 1.6.3. Subsection\n+\n+  * 1.7. Section\n+\n+    * 1.7.1. Subsection\n+\n+      * 1.7.1.1. Subsubsection\n+\n+  * 1.8. Section\n+\n+    * 1.8.1. Subsection\n+\n+      * 1.8.1.1. Subsubsection\n+\n+      * 1.8.1.2. Subsubsection\n+\n+  * 1.9. Section\n+\n+    * 1.9.1. Subsection\n+\n+      * 1.9.1.1. Subsubsection\n+\n+  * 1.10. Section\n+\n+  * 1.11. Section\n+\n+    * 1.11.1. Subsection\n+\n+  * 1.12. Section\n+\n+    * 1.12.1. Subsection\n+\n+  * 1.13. Section\n+\n+  * 1.14. Section\n+\n+    * 1.14.1. Subsection\n+\n+  * 1.15. Section\n+\n+* 2. Included document level heading\n+\n+* 3. Document level heading\n+\n+* 4. Another included document level heading\ndiff --git a/_build/tests/roots/test-directive-only/only.txt b/_build/tests/roots/test-directive-only/only.txt\nnew file mode 100644\nindex 000000000..4a4c1b53a\n--- /dev/null\n+++ b/_build/tests/roots/test-directive-only/only.txt\n@@ -0,0 +1,208 @@\n+1. Sections in only directives\n+******************************\n+\n+Testing sections in only directives.\n+\n+\n+1.1. Section\n+============\n+\n+Should be here.\n+\n+\n+1.2. Section\n+============\n+\n+\n+1.2.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.3. Section\n+============\n+\n+\n+1.3.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.4. Section\n+============\n+\n+\n+1.4.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.5. Section\n+============\n+\n+\n+1.5.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.5.2. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.6. Section\n+============\n+\n+\n+1.6.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.6.2. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.6.3. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.7. Section\n+============\n+\n+\n+1.7.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.7.1.1. Subsubsection\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Should be here.\n+\n+\n+1.8. Section\n+============\n+\n+\n+1.8.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.8.1.1. Subsubsection\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Should be here.\n+\n+\n+1.8.1.2. Subsubsection\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Should be here.\n+\n+\n+1.9. Section\n+============\n+\n+\n+1.9.1. Subsection\n+-----------------\n+\n+Should be here.\n+\n+\n+1.9.1.1. Subsubsection\n+~~~~~~~~~~~~~~~~~~~~~~\n+\n+Should be here.\n+\n+\n+1.10. Section\n+=============\n+\n+Should be here.\n+\n+\n+1.11. Section\n+=============\n+\n+Text before subsection 11.1.\n+\n+More text before subsection 11.1.\n+\n+\n+1.11.1. Subsection\n+------------------\n+\n+Should be here.\n+\n+Text after subsection 11.1.\n+\n+\n+1.12. Section\n+=============\n+\n+Should be here.\n+\n+\n+1.12.1. Subsection\n+------------------\n+\n+Should be here.\n+\n+\n+1.13. Section\n+=============\n+\n+Should be here.\n+\n+\n+1.14. Section\n+=============\n+\n+Should be here.\n+\n+\n+1.14.1. Subsection\n+------------------\n+\n+Should be here.\n+\n+\n+1.15. Section\n+=============\n+\n+Should be here.\n+\n+\n+2. Included document level heading\n+**********************************\n+\n+Should be here.\n+\n+\n+3. Document level heading\n+*************************\n+\n+Should be here.\n+\n+\n+4. Another included document level heading\n+******************************************\n+\n+Should be here.\ndiff --git a/_build/tests/roots/test-directives-raw/index.txt b/_build/tests/roots/test-directives-raw/index.txt\nnew file mode 100644\nindex 000000000..e1bcf6376\n--- /dev/null\n+++ b/_build/tests/roots/test-directives-raw/index.txt\n@@ -0,0 +1,30 @@\n+test-directives-raw\n+*******************\n+\n+\n+HTML\n+====\n+\n+\n+standard\n+--------\n+\n+\n+with substitution\n+-----------------\n+\n+HTML: abc  ghi\n+\n+\n+LaTeX\n+=====\n+\n+\n+standard\n+--------\n+\n+\n+with substitution\n+-----------------\n+\n+LaTeX: abc  ghi\ndiff --git a/_build/tests/roots/test-docutilsconf/index.txt b/_build/tests/roots/test-docutilsconf/index.txt\nnew file mode 100644\nindex 000000000..0acaea259\n--- /dev/null\n+++ b/_build/tests/roots/test-docutilsconf/index.txt\n@@ -0,0 +1,6 @@\n+test-docutilsconf\n+*****************\n+\n+Sphinx [1]\n+\n+[1] Python Documentation Generator\ndiff --git a/_build/tests/roots/test-domain-c/anon-dup-decl.txt b/_build/tests/roots/test-domain-c/anon-dup-decl.txt\nnew file mode 100644\nindex 000000000..bd45a272b\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-c/anon-dup-decl.txt\n@@ -0,0 +1,7 @@\n+struct anon_dup_decl\n+\n+   struct **[anonymous]**.A\n+\n+   struct **[anonymous]**.A\n+\n+   struct A\ndiff --git a/_build/tests/roots/test-domain-c/function_param_target.txt b/_build/tests/roots/test-domain-c/function_param_target.txt\nnew file mode 100644\nindex 000000000..ac07f1a35\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-c/function_param_target.txt\n@@ -0,0 +1,5 @@\n+void f(int i)\n+\n+   * \"i\"\n+\n+* \"f.i\"\ndiff --git a/_build/tests/roots/test-domain-c/index.txt b/_build/tests/roots/test-domain-c/index.txt\nnew file mode 100644\nindex 000000000..3b669abf9\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-c/index.txt\n@@ -0,0 +1,62 @@\n+test-domain-c\n+*************\n+\n+\n+directives\n+==========\n+\n+int hello(const char *name)\n+\n+   Return type:\n+      int\n+\n+MyStruct hello2(char *name)\n+\n+   Return type:\n+      MyStruct\n+\n+float Sphinx.version\n+\n+int version\n+\n+IS_SPHINX\n+\n+SPHINX(arg1, arg2)\n+\n+struct MyStruct\n+\n+union MyUnion\n+\n+enum MyEnum\n+\n+   enumerator MyEnumerator\n+\n+      \"MyEnumerator\"\n+\n+   \"MyEnumerator\"\n+\n+\"MyEnumerator\"\n+\n+type Sphinx\n+\n+typedef int SphinxVersionNum\n+\n+struct A\n+\n+   union **[anonymous]**\n+\n+      int a\n+\n+* \"A.[anonymous].a\"\n+\n+* \"A.a\"\n+\n+* \"unsigned int\"\n+\n+* *unsigned int*\n+\n+A a\n+\n+* \"a->b\"\n+\n+* *a->b*\ndiff --git a/_build/tests/roots/test-domain-c/namespace.txt b/_build/tests/roots/test-domain-c/namespace.txt\nnew file mode 100644\nindex 000000000..5dff6fbea\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-c/namespace.txt\n@@ -0,0 +1,9 @@\n+int NSVar\n+\n+int NULLVar\n+\n+int ZeroVar\n+\n+int NS2NS3Var\n+\n+int PopVar\ndiff --git a/_build/tests/roots/test-domain-c/semicolon.txt b/_build/tests/roots/test-domain-c/semicolon.txt\nnew file mode 100644\nindex 000000000..58edd66ed\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-c/semicolon.txt\n@@ -0,0 +1,17 @@\n+int member;\n+\n+int var;\n+\n+void f();\n+\n+struct Struct;\n+\n+union Union;\n+\n+enum Enum;\n+\n+enumerator Enumerator;\n+\n+type Type;\n+\n+typedef int TypeDef;\ndiff --git a/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt b/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt\nnew file mode 100644\nindex 000000000..83bff8cca\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt\n@@ -0,0 +1,5 @@\n+class **[anonymous]**::A\n+\n+class **[anonymous]**::A\n+\n+class A\ndiff --git a/_build/tests/roots/test-domain-cpp/any-role.txt b/_build/tests/roots/test-domain-cpp/any-role.txt\nnew file mode 100644\nindex 000000000..3536daaad\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/any-role.txt\n@@ -0,0 +1,28 @@\n+any role\n+********\n+\n+* \"Sphinx\"\n+\n+* \"Sphinx::version\"\n+\n+* \"version\"\n+\n+* \"List\"\n+\n+* \"MyEnum\"\n+\n+* ref function without parens \"paren_1()\"\n+\n+* ref function with parens \"paren_2()\"\n+\n+* ref function without parens, explicit title \"paren_3_title\"\n+\n+* ref function with parens, explicit title \"paren_4_title\"\n+\n+* ref op call without parens \"paren_5::operator()()\"\n+\n+* ref op call with parens \"paren_6::operator()()\"\n+\n+* ref op call without parens, explicit title \"paren_7_title\"\n+\n+* ref op call with parens, explicit title \"paren_8_title\"\ndiff --git a/_build/tests/roots/test-domain-cpp/backslash.txt b/_build/tests/roots/test-domain-cpp/backslash.txt\nnew file mode 100644\nindex 000000000..ff2503546\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/backslash.txt\n@@ -0,0 +1 @@\n+char c = '\\\\'\ndiff --git a/_build/tests/roots/test-domain-cpp/index.txt b/_build/tests/roots/test-domain-cpp/index.txt\nnew file mode 100644\nindex 000000000..fe4b79417\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/index.txt\n@@ -0,0 +1,61 @@\n+test-domain-cpp\n+***************\n+\n+\n+directives\n+==========\n+\n+class Sphinx\n+\n+   The description of Sphinx class.\n+\n+int hello(char *name)\n+\n+   The description of hello function.\n+\n+float Sphinx::version\n+\n+   The description of Sphinx::version.\n+\n+int version\n+\n+   The description of version.\n+\n+typedef std::vector<int> List\n+\n+   The description of List type.\n+\n+enum MyEnum\n+\n+   An unscoped enum.\n+\n+   enumerator A\n+\n+enum class MyScopedEnum\n+\n+   A scoped enum.\n+\n+   enumerator B\n+\n+protected enum struct MyScopedVisibilityEnum : std::underlying_type<MySpecificEnum>::type\n+\n+   A scoped enum with non-default visibility, and with a specified\n+   underlying type.\n+\n+   enumerator B\n+\n+void paren_1(int, float)\n+\n+void paren_2(int, float)\n+\n+void paren_3(int, float)\n+\n+void paren_4(int, float)\n+\n+void paren_5::operator()(int)\n+\n+void paren_6::operator()(int)\n+\n+void paren_7::operator()(int)\n+\n+void paren_8::operator()(int)\ndiff --git a/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt b/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt\nnew file mode 100644\nindex 000000000..9fa5edab2\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt\n@@ -0,0 +1,5 @@\n+void g(int a)\n+\n+void g(double b)\n+\n+   \"b\"\ndiff --git a/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt b/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt\nnew file mode 100644\nindex 000000000..f7cd94f73\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt\n@@ -0,0 +1,26 @@\n+void f1(int a)\n+void f1(double b)\n+\n+   * a: \"a\"\n+\n+   * b: \"b\"\n+\n+template<typename T>\n+void f2(int a)\n+template<typename U>\n+void f2(double b)\n+\n+   * T: \"T\"\n+\n+   * U: \"U\"\n+\n+template<typename T>\n+class A\n+template<typename U>\n+class B\n+\n+   void f3()\n+\n+      * T: \"T\"\n+\n+      * U: \"U\"\ndiff --git a/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt b/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt\nnew file mode 100644\nindex 000000000..b7a27dd32\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt\n@@ -0,0 +1,60 @@\n+class Class\n+\n+   \"Class\" \"Class\" \"Class\" union func member var \"Class\" concept enum\n+   enumerator\n+\n+union Union\n+\n+   \"Union\" class struct \"Union\" func member var \"Union\" concept enum\n+   enumerator\n+\n+void Function()\n+\n+   \"Function()\" class struct union \"Function()\" member var \"Function\"\n+   concept enum enumerator\n+\n+int Variable\n+\n+   \"Variable\" class struct union function \"Variable\" \"Variables\" type\n+   concept enum enumerator\n+\n+using Type = void\n+\n+   \"Type\" class struct union function member var \"Type\" concept enum\n+   enumerator\n+\n+template<typename T>\n+concept Concept\n+\n+   \"Concept\" class struct union function member var type \"Concept\"\n+   enum enumerator\n+\n+enum struct Enum\n+\n+   \"Enum\" class struct union function member var \"Enum\" concept \"Enum\"\n+   enumerator\n+\n+   enumerator Enumerator\n+\n+   \"Enumerator\" class struct union function member var type concept\n+   enum \"Enumerator\"\n+\n+template<typename TParamType, int TParamVar, template<typename> typename TParamTemplate>\n+class ClassTemplate\n+\n+   \"TParamType\" \"TParamType\" \"TParamType\" \"TParamType\" \"TParamType()\"\n+   \"TParamType\" \"TParamType\" \"TParamType\" \"TParamType\" \"TParamType\"\n+   \"TParamType\"\n+\n+   \"TParamVar\" \"TParamVar\" \"TParamVar\" \"TParamVar\" \"TParamVar()\"\n+   \"TParamVar\" \"TParamVar\" \"TParamVar\" \"TParamVar\" \"TParamVar\"\n+   \"TParamVar\"\n+\n+   \"TParamTemplate\" \"TParamTemplate\" \"TParamTemplate\" \"TParamTemplate\"\n+   \"TParamTemplate()\" \"TParamTemplate\" \"TParamTemplate\"\n+   \"TParamTemplate\" \"TParamTemplate\" \"TParamTemplate\" \"TParamTemplate\"\n+\n+void FunctionParams(int FunctionParam)\n+\n+   \"FunctionParam\" class struct union function \"FunctionParam\"\n+   \"FunctionParam\" type concept enum enumerator\ndiff --git a/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt b/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt\nnew file mode 100644\nindex 000000000..e5c638a03\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt\n@@ -0,0 +1,54 @@\n+class Class\n+\n+   class struct \"Class\" \"Class()\" \"Class\" \"Class\" type \"Class\" \"Class\"\n+   \"Class\"\n+\n+union Union\n+\n+   \"Union\" \"Union\" union \"Union()\" \"Union\" \"Union\" type \"Union\"\n+   \"Union\" \"Union\"\n+\n+void Function()\n+\n+   \"Function\" \"Function\" \"Function\" func \"Function\" \"Function\" type\n+   \"Function\" \"Function\" \"Function\"\n+\n+int Variable\n+\n+   \"Variable\" \"Variable\" \"Variable\" \"Variable()\" member var \"Variable\"\n+   \"Variable\" \"Variable\" \"Variable\"\n+\n+using Type = void\n+\n+   \"Type\" \"Type\" \"Type\" \"Type()\" \"Type\" \"Type\" type \"Type\" \"Type\"\n+   \"Type\"\n+\n+template<typename T>\n+concept Concept\n+\n+   \"Concept\" \"Concept\" \"Concept\" \"Concept()\" \"Concept\" \"Concept\"\n+   \"Concept\" concept \"Concept\" \"Concept\"\n+\n+enum struct Enum\n+\n+   \"Enum\" \"Enum\" \"Enum\" \"Enum()\" \"Enum\" \"Enum\" type \"Enum\" enum \"Enum\"\n+\n+   enumerator Enumerator\n+\n+   \"Enumerator\" \"Enumerator\" \"Enumerator\" \"Enumerator()\" \"Enumerator\"\n+   \"Enumerator\" \"Enumerator\" \"Enumerator\" \"Enumerator\" enumerator\n+\n+template<typename TParamType, int TParamVar, template<typename> typename TParamTemplate>\n+class ClassTemplate\n+\n+   class struct union func member var type concept enum enumerator\n+\n+   class struct union func member var type concept enum enumerator\n+\n+   class struct union func member var type concept enum enumerator\n+\n+void FunctionParams(int FunctionParam)\n+\n+   \"FunctionParam\" \"FunctionParam\" \"FunctionParam\" \"FunctionParam()\"\n+   member var \"FunctionParam\" \"FunctionParam\" \"FunctionParam\"\n+   \"FunctionParam\"\ndiff --git a/_build/tests/roots/test-domain-cpp/roles.txt b/_build/tests/roots/test-domain-cpp/roles.txt\nnew file mode 100644\nindex 000000000..5b807e489\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/roles.txt\n@@ -0,0 +1,28 @@\n+roles\n+*****\n+\n+* \"Sphinx\"\n+\n+* \"Sphinx::version\"\n+\n+* \"version\"\n+\n+* \"List\"\n+\n+* \"MyEnum\"\n+\n+* ref function without parens \"paren_1()\"\n+\n+* ref function with parens \"paren_2()\"\n+\n+* ref function without parens, explicit title \"paren_3_title\"\n+\n+* ref function with parens, explicit title \"paren_4_title\"\n+\n+* ref op call without parens \"paren_5::operator()()\"\n+\n+* ref op call with parens \"paren_6::operator()()\"\n+\n+* ref op call without parens, explicit title \"paren_7_title\"\n+\n+* ref op call with parens, explicit title \"paren_8_title\"\ndiff --git a/_build/tests/roots/test-domain-cpp/roles2.txt b/_build/tests/roots/test-domain-cpp/roles2.txt\nnew file mode 100644\nindex 000000000..4dae6c960\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/roles2.txt\n@@ -0,0 +1,5 @@\n+Check that we don't crash just because we misuse a role.\n+\n+class A\n+\n+\"A()\"\ndiff --git a/_build/tests/roots/test-domain-cpp/semicolon.txt b/_build/tests/roots/test-domain-cpp/semicolon.txt\nnew file mode 100644\nindex 000000000..1c4ba2c81\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/semicolon.txt\n@@ -0,0 +1,28 @@\n+class Class;\n+\n+struct Struct;\n+\n+union Union;\n+\n+void f();\n+\n+int member;\n+\n+int var;\n+\n+type Type;\n+\n+typedef int TypeDef;\n+\n+using Alias = int;\n+\n+template<typename T>\n+concept Concept;\n+\n+enum Enum;\n+\n+enum struct EnumStruct;\n+\n+enum class EnumClass;\n+\n+enumerator Enumerator;\ndiff --git a/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt b/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt\nnew file mode 100644\nindex 000000000..f9f43570b\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt\n@@ -0,0 +1,10 @@\n+template<typename T>\n+class A\n+\n+   using N1 = T::typeOk\n+\n+   * Not ok, warn: \"T::typeWarn\"\n+\n+   using N2 = T::U::typeOk\n+\n+   * Not ok, warn: \"T::U::typeWarn\"\ndiff --git a/_build/tests/roots/test-domain-cpp/xref_consistency.txt b/_build/tests/roots/test-domain-cpp/xref_consistency.txt\nnew file mode 100644\nindex 000000000..d30990bbb\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-cpp/xref_consistency.txt\n@@ -0,0 +1,7 @@\n+xref consistency\n+****************\n+\n+class item\n+\n+code-role:      \"item\" any-role:       \"item\" cpp-any-role:   \"item\"\n+cpp-expr-role:  \"item\" cpp-texpr-role: *item*\ndiff --git a/_build/tests/roots/test-domain-js/index.txt b/_build/tests/roots/test-domain-js/index.txt\nnew file mode 100644\nindex 000000000..d760a4ab3\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-js/index.txt\n@@ -0,0 +1,6 @@\n+test-domain-js\n+**************\n+\n+* roles\n+\n+* module\ndiff --git a/_build/tests/roots/test-domain-js/module.txt b/_build/tests/roots/test-domain-js/module.txt\nnew file mode 100644\nindex 000000000..1fdda438f\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-js/module.txt\n@@ -0,0 +1,24 @@\n+module\n+******\n+\n+* Link to \"ModTopLevel()\"\n+\n+class module_a.submodule.ModTopLevel()\n+\n+   * Link to \"mod_child_1()\"\n+\n+   * Link to \"ModTopLevel.mod_child_1()\"\n+\n+ModTopLevel.mod_child_1()\n+\n+   * Link to \"mod_child_2()\"\n+\n+ModTopLevel.mod_child_2()\n+\n+   * Link to \"module_a.submodule.ModTopLevel.mod_child_1()\"\n+\n+* Link to \"ModTopLevel()\"\n+\n+class module_b.submodule.ModTopLevel()\n+\n+   * Link to \"module_a.submodule\"\ndiff --git a/_build/tests/roots/test-domain-js/roles.txt b/_build/tests/roots/test-domain-js/roles.txt\nnew file mode 100644\nindex 000000000..72d6daab3\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-js/roles.txt\n@@ -0,0 +1,50 @@\n+roles\n+*****\n+\n+class TopLevel()\n+\n+top_level()\n+\n+* \"TopLevel()\"\n+\n+* \"top_level()\"\n+\n+class NestedParentA()\n+\n+   * Link to \"child_1()\"\n+\n+   NestedParentA.child_1()\n+\n+      * Link to \"NestedChildA.subchild_2()\"\n+\n+      * Link to \"child_2()\"\n+\n+      * Link to \"any_child\"\n+\n+   NestedParentA.any_child()\n+\n+      * Link to \"NestedChildA()\"\n+\n+   class NestedParentA.NestedChildA()\n+\n+      NestedParentA.NestedChildA.subchild_1()\n+\n+         * Link to \"subchild_2()\"\n+\n+      NestedParentA.NestedChildA.subchild_2()\n+\n+         Link to \"NestedParentA.child_1()\"\n+\n+   NestedParentA.child_2()\n+\n+      Link to \"NestedChildA.subchild_1()\"\n+\n+class NestedParentB()\n+\n+   * Link to \"child_1()\"\n+\n+   NestedParentB.child_1()\n+\n+      * Link to \"NestedParentB()\"\n+\n+* \"NestedParentA.NestedChildA()\"\ndiff --git a/_build/tests/roots/test-domain-py-xref-warning/index.txt b/_build/tests/roots/test-domain-py-xref-warning/index.txt\nnew file mode 100644\nindex 000000000..1810edec0\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-py-xref-warning/index.txt\n@@ -0,0 +1,4 @@\n+test-domain-py-xref-warning\n+***************************\n+\n+*no-label* *existing-label*\ndiff --git a/_build/tests/roots/test-domain-py/index.txt b/_build/tests/roots/test-domain-py/index.txt\nnew file mode 100644\nindex 000000000..c8974b335\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-py/index.txt\n@@ -0,0 +1,6 @@\n+test-domain-py\n+**************\n+\n+* roles\n+\n+* module\ndiff --git a/_build/tests/roots/test-domain-py/module.txt b/_build/tests/roots/test-domain-py/module.txt\nnew file mode 100644\nindex 000000000..41db5e9b5\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-py/module.txt\n@@ -0,0 +1,56 @@\n+module\n+******\n+\n+* Link to \"ModTopLevel\"\n+\n+class module_a.submodule.ModTopLevel\n+\n+   * Link to \"mod_child_1()\"\n+\n+   * Link to \"ModTopLevel.mod_child_1()\"\n+\n+ModTopLevel.mod_child_1()\n+\n+   * Link to \"mod_child_2()\"\n+\n+ModTopLevel.mod_child_2()\n+\n+   * Link to \"module_a.submodule.ModTopLevel.mod_child_1()\"\n+\n+property ModTopLevel.prop\n+\n+   * Link to \"prop attribute\"\n+\n+   * Link to \"prop method\"\n+\n+class ModNoModule\n+\n+* Link to \"ModTopLevel\"\n+\n+class module_b.submodule.ModTopLevel\n+\n+   * Link to \"ModNoModule\"\n+\n+module_b.submodule.foo(x, y)\n+\n+   Parameters:\n+      * **x** (*int*) -- param x\n+\n+      * **y** (*tuple**(**str**, **float**)*) -- param y\n+\n+   Return type:\n+      list\n+\n+module_b.submodule.attr1\n+\n+   Type:\n+      ModTopLevel\n+\n+module_b.submodule.attr2\n+\n+   Type:\n+      test-domain-py\n+\n+exception Exception\n+\n+object.sum()\ndiff --git a/_build/tests/roots/test-domain-py/module_option.txt b/_build/tests/roots/test-domain-py/module_option.txt\nnew file mode 100644\nindex 000000000..5345a5b2a\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-py/module_option.txt\n@@ -0,0 +1,18 @@\n+module_option\n+*************\n+\n+class test.extra.B\n+\n+   This is also a test.\n+\n+   baz()\n+\n+      Does something similar to \"foo()\".\n+\n+   foo()\n+\n+      Does something.\n+\n+   test()\n+\n+      Does something completely unrelated to \"foo()\"\ndiff --git a/_build/tests/roots/test-domain-py/roles.txt b/_build/tests/roots/test-domain-py/roles.txt\nnew file mode 100644\nindex 000000000..81065d772\n--- /dev/null\n+++ b/_build/tests/roots/test-domain-py/roles.txt\n@@ -0,0 +1,50 @@\n+roles\n+*****\n+\n+class TopLevel\n+\n+top_level()\n+\n+* \"TopLevel\"\n+\n+* \"top_level()\"\n+\n+class NestedParentA\n+\n+   * Link to \"child_1()\"\n+\n+   child_1()\n+\n+      * Link to \"NestedChildA.subchild_2()\"\n+\n+      * Link to \"child_2()\"\n+\n+      * Link to \"any_child\"\n+\n+   any_child()\n+\n+      * Link to \"NestedChildA\"\n+\n+   class NestedChildA\n+\n+      subchild_1()\n+\n+         * Link to \"subchild_2()\"\n+\n+      subchild_2()\n+\n+         Link to \"NestedParentA.child_1()\"\n+\n+   child_2()\n+\n+      Link to \"NestedChildA.subchild_1()\"\n+\n+class NestedParentB\n+\n+   * Link to \"child_1()\"\n+\n+   child_1()\n+\n+      * Link to \"NestedParentB\"\n+\n+* \"NestedParentA.NestedChildA\"\ndiff --git a/_build/tests/roots/test-double-inheriting-theme/index.txt b/_build/tests/roots/test-double-inheriting-theme/index.txt\nnew file mode 100644\nindex 000000000..6f35e57b0\n--- /dev/null\n+++ b/_build/tests/roots/test-double-inheriting-theme/index.txt\n@@ -0,0 +1,2 @@\n+Test double inheriting theme\n+****************************\ndiff --git a/_build/tests/roots/test-epub-anchor-id/index.txt b/_build/tests/roots/test-epub-anchor-id/index.txt\nnew file mode 100644\nindex 000000000..a3e63b660\n--- /dev/null\n+++ b/_build/tests/roots/test-epub-anchor-id/index.txt\n@@ -0,0 +1,10 @@\n+test-epub-anchor-id\n+*******************\n+\n+blah blah blah\n+\n+\n+blah blah blah\n+**************\n+\n+see >>:setting:`STATICFILES_FINDERS`<<\ndiff --git a/_build/tests/roots/test-ext-autodoc/index.txt b/_build/tests/roots/test-ext-autodoc/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt b/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt\nnew file mode 100644\nindex 000000000..e8512bbbf\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt\n@@ -0,0 +1,48 @@\n+test-ext-autosectionlabel-prefix-document\n+*****************************************\n+\n+\n+Introduce of Sphinx\n+===================\n+\n+\n+Installation\n+============\n+\n+\n+For Windows users\n+-----------------\n+\n+\n+For UNIX users\n+--------------\n+\n+\n+Linux\n+~~~~~\n+\n+\n+FreeBSD\n+~~~~~~~\n+\n+\n+This one's got an apostrophe\n+----------------------------\n+\n+\n+References\n+==========\n+\n+* *index:Introduce of Sphinx*\n+\n+* *index:Installation*\n+\n+* *index:For Windows users*\n+\n+* *index:For UNIX users*\n+\n+* *index:Linux*\n+\n+* *index:FreeBSD*\n+\n+* *index:This one's got an apostrophe*\ndiff --git a/_build/tests/roots/test-ext-autosectionlabel/index.txt b/_build/tests/roots/test-ext-autosectionlabel/index.txt\nnew file mode 100644\nindex 000000000..ddde6ade8\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosectionlabel/index.txt\n@@ -0,0 +1,50 @@\n+test-ext-autosectionlabel\n+*************************\n+\n+\n+Introduce of Sphinx\n+===================\n+\n+\n+Installation\n+============\n+\n+\n+For Windows users\n+-----------------\n+\n+\n+For UNIX users\n+--------------\n+\n+\n+Linux\n+~~~~~\n+\n+\n+FreeBSD\n+~~~~~~~\n+\n+\n+This one's got an apostrophe\n+----------------------------\n+\n+\n+References\n+==========\n+\n+* *test-ext-autosectionlabel*\n+\n+* *Introduce of Sphinx*\n+\n+* *Installation*\n+\n+* *For Windows users*\n+\n+* *For UNIX users*\n+\n+* *Linux*\n+\n+* *FreeBSD*\n+\n+* *This one's got an apostrophe*\ndiff --git a/_build/tests/roots/test-ext-autosummary-filename-map/index.txt b/_build/tests/roots/test-ext-autosummary-filename-map/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-ext-autosummary-imported_members/index.txt b/_build/tests/roots/test-ext-autosummary-imported_members/index.txt\nnew file mode 100644\nindex 000000000..6bc7cb0f5\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosummary-imported_members/index.txt\n@@ -0,0 +1,2 @@\n+test-ext-autosummary-mock_imports\n+*********************************\ndiff --git a/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt b/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt\nnew file mode 100644\nindex 000000000..6bc7cb0f5\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt\n@@ -0,0 +1,2 @@\n+test-ext-autosummary-mock_imports\n+*********************************\ndiff --git a/_build/tests/roots/test-ext-autosummary-recursive/index.txt b/_build/tests/roots/test-ext-autosummary-recursive/index.txt\nnew file mode 100644\nindex 000000000..f10c057e1\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosummary-recursive/index.txt\n@@ -0,0 +1,4 @@\n+API Reference\n+*************\n+\n+-[ Packages ]-\ndiff --git a/_build/tests/roots/test-ext-autosummary-skip-member/index.txt b/_build/tests/roots/test-ext-autosummary-skip-member/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt b/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt\nnew file mode 100644\nindex 000000000..7f7204cf5\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt\n@@ -0,0 +1 @@\n+EMPTY\ndiff --git a/_build/tests/roots/test-ext-autosummary-template/index.txt b/_build/tests/roots/test-ext-autosummary-template/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-ext-autosummary/index.txt b/_build/tests/roots/test-ext-autosummary/index.txt\nnew file mode 100644\nindex 000000000..0f60f0b4b\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-autosummary/index.txt\n@@ -0,0 +1,3 @@\n+>>:autolink:`autosummary_dummy_module.Foo`<<\n+\n+>>:autolink:`autosummary_importfail`<<\ndiff --git a/_build/tests/roots/test-ext-coverage/index.txt b/_build/tests/roots/test-ext-coverage/index.txt\nnew file mode 100644\nindex 000000000..e69de29bb\ndiff --git a/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt b/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt\nnew file mode 100644\nindex 000000000..42d071bbb\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt\n@@ -0,0 +1 @@\n+>>> 'dir/inner.rst:1'\ndiff --git a/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt b/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt\nnew file mode 100644\nindex 000000000..0822a89ae\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt\n@@ -0,0 +1 @@\n+>>> 'index.rst:4'\ndiff --git a/_build/tests/roots/test-ext-githubpages/index.txt b/_build/tests/roots/test-ext-githubpages/index.txt\nnew file mode 100644\nindex 000000000..f2cf096c5\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-githubpages/index.txt\n@@ -0,0 +1,2 @@\n+githubpages\n+***********\ndiff --git a/_build/tests/roots/test-ext-graphviz/index.txt b/_build/tests/roots/test-ext-graphviz/index.txt\nnew file mode 100644\nindex 000000000..6d207f566\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-graphviz/index.txt\n@@ -0,0 +1,4 @@\n+graphviz\n+********\n+\n+Hello >>|graph|<< graphviz world\ndiff --git a/_build/tests/roots/test-ext-ifconfig/index.txt b/_build/tests/roots/test-ext-ifconfig/index.txt\nnew file mode 100644\nindex 000000000..d41beeba3\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-ifconfig/index.txt\n@@ -0,0 +1,2 @@\n+ifconfig\n+********\ndiff --git a/_build/tests/roots/test-ext-imgconverter/index.txt b/_build/tests/roots/test-ext-imgconverter/index.txt\nnew file mode 100644\nindex 000000000..4532ff73c\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-imgconverter/index.txt\n@@ -0,0 +1,4 @@\n+test-ext-imgconverter\n+*********************\n+\n+[image]\ndiff --git a/_build/tests/roots/test-ext-inheritance_diagram/index.txt b/_build/tests/roots/test-ext-inheritance_diagram/index.txt\nnew file mode 100644\nindex 000000000..b8fc7c43b\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-inheritance_diagram/index.txt\n@@ -0,0 +1,2 @@\n+test-ext-inheritance_diagram\n+****************************\ndiff --git a/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt b/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt\nnew file mode 100644\nindex 000000000..c1e882324\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt\n@@ -0,0 +1,6 @@\n+test-ext-intersphinx-cppdomain\n+******************************\n+\n+\"Bar\"\n+\n+foons::bartype FooBarBaz()\ndiff --git a/_build/tests/roots/test-ext-math-compat/index.txt b/_build/tests/roots/test-ext-math-compat/index.txt\nnew file mode 100644\nindex 000000000..74d0f7f0b\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-math-compat/index.txt\n@@ -0,0 +1,20 @@\n+Test Math\n+*********\n+\n+\n+inline\n+======\n+\n+Inline: E=mc^2 Inline my math: >>:my_math:`:-)`<<\n+\n+\n+block\n+=====\n+\n+   a^2+b^2=c^2\n+\n+Second math\n+\n+   e^{i\\pi}+1=0\n+\n+Multi math equations\ndiff --git a/_build/tests/roots/test-ext-math-simple/index.txt b/_build/tests/roots/test-ext-math-simple/index.txt\nnew file mode 100644\nindex 000000000..eeb489db0\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-math-simple/index.txt\n@@ -0,0 +1,4 @@\n+Test Math\n+*********\n+\n+   a^2+b^2=c^2\ndiff --git a/_build/tests/roots/test-ext-math/index.txt b/_build/tests/roots/test-ext-math/index.txt\nnew file mode 100644\nindex 000000000..33d4a768a\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-math/index.txt\n@@ -0,0 +1,18 @@\n+Test Math\n+*********\n+\n+* 1. Test math extensions E = m c^2\n+\n+* 2. Test multiple pages\n+\n+   a^2+b^2=c^2\n+\n+Inline E=mc^2\n+\n+Second math\n+\n+   e^{i\\pi}+1=0\n+\n+Multi math equations\n+\n+   S &= \\pi r^2  V &= \\frac{4}{3} \\pi r^3\ndiff --git a/_build/tests/roots/test-ext-math/math.txt b/_build/tests/roots/test-ext-math/math.txt\nnew file mode 100644\nindex 000000000..f427af363\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-math/math.txt\n@@ -0,0 +1,18 @@\n+1. Test math extensions E = m c^2\n+*********************************\n+\n+This is inline math: a^2 + b^2 = c^2.\n+\n+   a^2 + b^2 = c^2\n+\n+   a + 1 < b\n+\n+   e^{i\\pi} = 1\n+\n+   e^{ix} = \\cos x + i\\sin x\n+\n+   n \\in \\mathbb N\n+\n+   a + 1 < b\n+\n+Referencing equation (1) and (1).\ndiff --git a/_build/tests/roots/test-ext-math/page.txt b/_build/tests/roots/test-ext-math/page.txt\nnew file mode 100644\nindex 000000000..52a31aac7\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-math/page.txt\n@@ -0,0 +1,6 @@\n+2. Test multiple pages\n+**********************\n+\n+   a = b + 1\n+\n+Referencing equations (1) and (1).\ndiff --git a/_build/tests/roots/test-ext-todo/bar.txt b/_build/tests/roots/test-ext-todo/bar.txt\nnew file mode 100644\nindex 000000000..b87b461ba\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-todo/bar.txt\n@@ -0,0 +1,2 @@\n+bar\n+***\ndiff --git a/_build/tests/roots/test-ext-todo/foo.txt b/_build/tests/roots/test-ext-todo/foo.txt\nnew file mode 100644\nindex 000000000..062135349\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-todo/foo.txt\n@@ -0,0 +1,7 @@\n+foo\n+***\n+\n+hello()\n+\n+   Parameters:\n+      **bug** -- #5800\ndiff --git a/_build/tests/roots/test-ext-todo/index.txt b/_build/tests/roots/test-ext-todo/index.txt\nnew file mode 100644\nindex 000000000..7e9b09cfe\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-todo/index.txt\n@@ -0,0 +1,6 @@\n+test for sphinx.ext.todo\n+************************\n+\n+* foo\n+\n+* bar\ndiff --git a/_build/tests/roots/test-ext-viewcode-find/index.txt b/_build/tests/roots/test-ext-viewcode-find/index.txt\nnew file mode 100644\nindex 000000000..7b63275a6\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-viewcode-find/index.txt\n@@ -0,0 +1,33 @@\n+viewcode\n+********\n+\n+not_a_package.func1(a, b)\n+\n+   This is func1\n+\n+not_a_package.submodule.func1(a, b)\n+\n+   This is func1\n+\n+class not_a_package.submodule.Class1\n+\n+   This is Class1\n+\n+class not_a_package.submodule.Class3\n+\n+   This is Class3\n+\n+class not_a_package.submodule.Class1\n+\n+   This is Class1\n+\n+   @decorator\n+   def func1(a, b):\n+       \"\"\"\n+       this is func1\n+       \"\"\"\n+       return a, b\n+\n+not_a_package.submodule.Class3.class_attr\n+\n+   This is the class attribute class_attr\ndiff --git a/_build/tests/roots/test-ext-viewcode/index.txt b/_build/tests/roots/test-ext-viewcode/index.txt\nnew file mode 100644\nindex 000000000..1f594821d\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-viewcode/index.txt\n@@ -0,0 +1,23 @@\n+viewcode\n+********\n+\n+   @decorator\n+   def func1(a, b):\n+       \"\"\"\n+       this is func1\n+       \"\"\"\n+       return a, b\n+\n+* Testing object descriptions\n+\n+* C items\n+\n+* Javascript items\n+\n+* References\n+\n+* Others\n+\n+* User markup\n+\n+* CPP domain\ndiff --git a/_build/tests/roots/test-ext-viewcode/objects.txt b/_build/tests/roots/test-ext-viewcode/objects.txt\nnew file mode 100644\nindex 000000000..7dc035690\n--- /dev/null\n+++ b/_build/tests/roots/test-ext-viewcode/objects.txt\n@@ -0,0 +1,157 @@\n+Testing object descriptions\n+***************************\n+\n+func_without_module(a, b, *c[, d])\n+\n+   Does something.\n+\n+func_without_body()\n+\n+func_noindex()\n+\n+foolib.func_with_module()\n+\n+Referring to \"func with no index\". Referring to \"nothing\".\n+\n+mod.func_in_module()\n+\n+class mod.Cls\n+\n+   meth1()\n+\n+   static meths()\n+\n+   attr\n+\n+Cls.meth2()\n+\n+exception errmod.Error(arg1, arg2)\n+\n+mod.var\n+\n+func_without_module2() -> annotation\n+\n+long(parameter,   list)\n+another one\n+\n+class TimeInt\n+\n+   Has only one parameter (triggers special behavior...)\n+\n+   Parameters:\n+      **moo** (Moo) -- Moo\n+\n+class Time(hour, minute, isdst)\n+\n+   Parameters:\n+      * **year** (*TimeInt*) -- The year.\n+\n+      * **minute** (*TimeInt*) -- The minute.\n+\n+      * **isdst** -- whether it's DST\n+\n+      * **hour** (*DuplicateType*) -- Some parameter\n+\n+      * **hour** -- Duplicate param.  Should not lead to crashes.\n+\n+      * **extcls** (*Cls*) -- A class from another module.\n+\n+   Returns:\n+      a new \"Time\" instance\n+\n+   Return type:\n+      \"Time\"\n+\n+   Raises:\n+      **ValueError** -- if the values are out of range\n+\n+   Variables:\n+      * **hour** (*int*) -- like *hour*\n+\n+      * **minute** (*int*) -- like *minute*\n+\n+\n+C items\n+*******\n+\n+Sphinx_DoSomething()\n+\n+SphinxStruct.member\n+\n+SPHINX_USE_PYTHON\n+\n+type SphinxType\n+\n+sphinx_global\n+\n+\n+Javascript items\n+****************\n+\n+foo()\n+\n+bar\n+\n+bar.baz(href, callback[, errback])\n+\n+   Arguments:\n+      * **href** (*string*) -- The location of the resource.\n+\n+      * **callback** -- Get's called with the data returned by the\n+        resource.\n+\n+   Throws:\n+      **InvalidHref** -- If the *href* is invalid.\n+\n+   Returns:\n+      *undefined*\n+\n+bar.spam\n+\n+\n+References\n+**********\n+\n+Referencing \"mod.Cls\" or \"mod.Cls\" should be the same.\n+\n+With target: \"Sphinx_DoSomething()\" (parentheses are handled),\n+\"SphinxStruct.member\", \"SPHINX_USE_PYTHON\", \"SphinxType *\" (pointer is\n+handled), \"sphinx_global\".\n+\n+Without target: \"CFunction()\". \"malloc()\".\n+\n+\"foo()\" \"foo()\"\n+\n+\"bar\" \"bar.baz()\" \"bar.baz()\" \"baz()\"\n+\n+\"bar.baz\"\n+\n+\n+Others\n+******\n+\n+HOME\n+\n+-c command\n+\n+-c\n+\n++p\n+\n+Link to \"perl +p\".\n+\n+\n+User markup\n+***********\n+\n+Referencing >>:userdescrole:`myobj`<<.\n+\n+\n+CPP domain\n+**********\n+\n+template<>\n+class n::Array<T, d>\n+\n+   T &operator[](unsigned j)\n+   const T &operator[](unsigned j) const\ndiff --git a/_build/tests/roots/test-footnotes/bar.txt b/_build/tests/roots/test-footnotes/bar.txt\nnew file mode 100644\nindex 000000000..5df6b6de2\n--- /dev/null\n+++ b/_build/tests/roots/test-footnotes/bar.txt\n@@ -0,0 +1,6 @@\n+bar\n+***\n+\n+Same footnote number [1] in bar.rst\n+\n+[1] footnote in bar\ndiff --git a/_build/tests/roots/test-footnotes/baz.txt b/_build/tests/roots/test-footnotes/baz.txt\nnew file mode 100644\nindex 000000000..5a2147c27\n--- /dev/null\n+++ b/_build/tests/roots/test-footnotes/baz.txt\n@@ -0,0 +1,6 @@\n+baz\n+***\n+\n+Auto footnote number [1] in baz.rst\n+\n+[1] footnote in baz\ndiff --git a/conf.py b/conf.py\nnew file mode 100644\nindex 000000000..0ba096c9c\n--- /dev/null\n+++ b/conf.py\n@@ -0,0 +1,5 @@\n+\n+import sys\n+sys.path.insert(0, '.')\n+\n+extensions = ['sphinx.ext.autodoc']\ndiff --git a/direct_test.py b/direct_test.py\nnew file mode 100644\nindex 000000000..d567dbe91\n--- /dev/null\n+++ b/direct_test.py\n@@ -0,0 +1,68 @@\n+#!/usr/bin/env python3\n+import sys\n+sys.path.insert(0, '/testbed')\n+\n+# Create test module\n+with open('test_empty_all.py', 'w') as f:\n+    f.write('''\n+__all__ = []\n+\n+def foo():\n+    \"foo docstring\"\n+    pass\n+\n+def bar():\n+    \"bar docstring\"  \n+    pass\n+\n+def baz():\n+    \"baz docstring\"\n+    pass\n+''')\n+\n+import test_empty_all\n+from sphinx.util import inspect\n+\n+# Test getall function\n+result = inspect.getall(test_empty_all)\n+print(f\"inspect.getall result: {result}\")\n+print(f\"result is None: {result is None}\")\n+print(f\"result == []: {result == []}\")\n+print(f\"bool(result): {bool(result)}\")\n+\n+# Create a simple test case to check the logic\n+class MockModuleDocumenter:\n+    def __init__(self):\n+        self.__all__ = result\n+        \n+    def test_old_logic(self):\n+        \"\"\"This is the buggy logic\"\"\"\n+        if not self.__all__:\n+            return \"No __all__ defined (treating empty list as no __all__)\"\n+        else:\n+            return \"Has __all__ defined\"\n+            \n+    def test_new_logic(self):\n+        \"\"\"This is the fixed logic\"\"\"\n+        if self.__all__ is None:\n+            return \"No __all__ defined\"\n+        else:\n+            return f\"Has __all__ defined with value: {self.__all__}\"\n+\n+doc = MockModuleDocumenter()\n+print(f\"\\nOld logic result: {doc.test_old_logic()}\")\n+print(f\"New logic result: {doc.test_new_logic()}\")\n+\n+# Test with no __all__ \n+with open('test_no_all.py', 'w') as f:\n+    f.write('''\n+def foo():\n+    \"foo docstring\"\n+    pass\n+''')\n+\n+import test_no_all\n+result2 = inspect.getall(test_no_all)\n+print(f\"\\nFor module without __all__:\")\n+print(f\"inspect.getall result: {result2}\")\n+print(f\"result is None: {result2 is None}\")\ndiff --git a/empty_all_module.py b/empty_all_module.py\nnew file mode 100644\nindex 000000000..a85d78b33\n--- /dev/null\n+++ b/empty_all_module.py\n@@ -0,0 +1,14 @@\n+\n+__all__ = []\n+\n+def foo():\n+    \"foo docstring\"\n+    pass\n+\n+def bar():\n+    \"bar docstring\"\n+    pass\n+\n+def baz():\n+    \"baz docstring\"\n+    pass\ndiff --git a/example.py b/example.py\nnew file mode 100644\nindex 000000000..fb47182b4\n--- /dev/null\n+++ b/example.py\n@@ -0,0 +1,14 @@\n+\n+__all__ = []\n+\n+\n+def foo():\n+    \"docstring\"\n+\n+\n+def bar():\n+    \"docstring\"\n+\n+\n+def baz():\n+    \"docstring\"\ndiff --git a/index.rst b/index.rst\nnew file mode 100644\nindex 000000000..e882781cd\n--- /dev/null\n+++ b/index.rst\n@@ -0,0 +1,6 @@\n+\n+Test Empty __all__\n+==================\n+\n+.. automodule:: empty_all_module\n+   :members:\ndiff --git a/setup.py b/setup.py\nindex 8d40de1a8..03f325278 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/simple_test.py b/simple_test.py\nnew file mode 100644\nindex 000000000..412765810\n--- /dev/null\n+++ b/simple_test.py\n@@ -0,0 +1,55 @@\n+#!/usr/bin/env python3\n+import sys\n+import os\n+sys.path.insert(0, '/testbed')\n+\n+# Create test module\n+with open('empty_all_module.py', 'w') as f:\n+    f.write('''\n+__all__ = []\n+\n+def foo():\n+    \"foo docstring\"\n+    pass\n+\n+def bar():\n+    \"bar docstring\"\n+    pass\n+\n+def baz():\n+    \"baz docstring\"\n+    pass\n+''')\n+\n+# Create a conf.py \n+with open('conf.py', 'w') as f:\n+    f.write('''\n+import sys\n+sys.path.insert(0, '.')\n+\n+extensions = ['sphinx.ext.autodoc']\n+''')\n+\n+# Create index.rst\n+with open('index.rst', 'w') as f:\n+    f.write('''\n+Test Empty __all__\n+==================\n+\n+.. automodule:: empty_all_module\n+   :members:\n+''')\n+\n+# Run sphinx-build\n+os.system('sphinx-build -E -b text . _build')\n+\n+print(\"\\n\\nChecking output:\")\n+with open('_build/index.txt', 'r') as f:\n+    content = f.read()\n+    print(content)\n+    \n+    # Check if any functions are documented\n+    if 'foo()' in content or 'bar()' in content or 'baz()' in content:\n+        print(\"\\nERROR: Functions are shown even though __all__ is empty!\")\n+    else:\n+        print(\"\\nSUCCESS: No functions shown (as expected with empty __all__)\")\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d85d79617..3d9273e29 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1074,7 +1074,7 @@ class ModuleDocumenter(Documenter):\n     def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:\n         members = self.get_module_members()\n         if want_all:\n-            if not self.__all__:\n+            if self.__all__ is None:\n                 # for implicit module members, check __module__ to avoid\n                 # documenting imported objects\n                 return True, list(members.values())\n@@ -1099,7 +1099,7 @@ class ModuleDocumenter(Documenter):\n \n     def sort_members(self, documenters: List[Tuple[\"Documenter\", bool]],\n                      order: str) -> List[Tuple[\"Documenter\", bool]]:\n-        if order == 'bysource' and self.__all__:\n+        if order == 'bysource' and self.__all__ is not None:\n             # Sort alphabetically first (for members not listed on the __all__)\n             documenters.sort(key=lambda e: e[0].name)\n \ndiff --git a/test_empty_all.py b/test_empty_all.py\nnew file mode 100644\nindex 000000000..3a00559f6\n--- /dev/null\n+++ b/test_empty_all.py\n@@ -0,0 +1,14 @@\n+\n+__all__ = []\n+\n+def foo():\n+    \"foo docstring\"\n+    pass\n+\n+def bar():\n+    \"bar docstring\"  \n+    pass\n+\n+def baz():\n+    \"baz docstring\"\n+    pass\ndiff --git a/test_fix.py b/test_fix.py\nnew file mode 100644\nindex 000000000..c6295adc5\n--- /dev/null\n+++ b/test_fix.py\n@@ -0,0 +1,119 @@\n+import sys\n+import tempfile\n+import os\n+from pathlib import Path\n+\n+# Add the sphinx directory to path\n+sys.path.insert(0, '/testbed')\n+\n+from sphinx.ext.autodoc import ModuleDocumenter\n+from sphinx.util.docutils import SphinxDirective\n+from sphinx.application import Sphinx\n+from sphinx.util import logging\n+\n+# Create a temporary test directory\n+with tempfile.TemporaryDirectory() as tmpdir:\n+    # Create a test module with empty __all__\n+    test_module = Path(tmpdir) / \"test_module.py\"\n+    test_module.write_text(\"\"\"\n+__all__ = []\n+\n+def foo():\n+    '''Function foo'''\n+    pass\n+\n+def bar():\n+    '''Function bar'''\n+    pass\n+\n+def baz():\n+    '''Function baz'''\n+    pass\n+\"\"\")\n+    \n+    # Add tmpdir to path so we can import the module\n+    sys.path.insert(0, tmpdir)\n+    \n+    # Import the module\n+    import test_module\n+    \n+    # Create a mock documenter\n+    class MockApp:\n+        def __init__(self):\n+            self.config = type('Config', (), {})()\n+            self.config.autodoc_mock_imports = []\n+            self.config.autodoc_typehints = 'signature'\n+            self.config.autodoc_class_signature = 'mixed'\n+            self.config.autodoc_warningiserror = False\n+            self.config.autodoc_inherit_docstrings = True\n+            self.events = type('Events', (), {'emit': lambda *args: None})()\n+    \n+    class MockEnv:\n+        def __init__(self):\n+            self.config = MockApp().config\n+            self.app = MockApp()\n+            self.temp_data = {}\n+            self.ref_context = {}\n+    \n+    class MockDirective:\n+        def __init__(self):\n+            self.env = MockEnv()\n+            self.state = type('State', (), {'document': type('Document', (), {'settings': type('Settings', (), {'tab_width': 8})()})()})()\n+            self.content = []\n+            self.lineno = 0\n+            self.reporter = None\n+            self.result = []\n+            self.genopt = MockOptions()\n+            \n+    class MockOptions:\n+        def __init__(self):\n+            self.members = None\n+            self.undoc_members = False\n+            self.inherited_members = False \n+            self.ignore_module_all = False\n+            self.show_inheritance = False\n+            self.synopsis = None\n+            self.platform = None\n+            self.deprecated = None\n+            self.exclude_members = set()\n+            \n+    # Create module documenter\n+    directive = MockDirective()\n+    documenter = ModuleDocumenter(directive, 'test_module', None)\n+    documenter.options = MockOptions()\n+    documenter.object = test_module\n+    documenter.objpath = []\n+    documenter.parent = None\n+    documenter.object_name = 'test_module'\n+    documenter.modname = 'test_module'\n+    documenter.module = test_module\n+    documenter.fullname = 'test_module'\n+    documenter.real_modname = 'test_module'\n+    documenter.titles_allowed = True\n+    documenter.indent = ''\n+    \n+    # Test import_object\n+    documenter.import_object()\n+    \n+    # Check that __all__ was loaded correctly\n+    print(f\"__all__ attribute: {documenter.__all__}\")\n+    print(f\"__all__ is None: {documenter.__all__ is None}\")\n+    print(f\"__all__ == []: {documenter.__all__ == []}\")\n+    \n+    # Get object members with want_all=True\n+    check_module, members = documenter.get_object_members(want_all=True)\n+    \n+    print(f\"\\ncheck_module: {check_module}\")\n+    print(f\"Number of members: {len(members)}\")\n+    \n+    # Check which members are skipped\n+    skipped_count = 0\n+    for member in members:\n+        if hasattr(member, 'skipped') and member.skipped:\n+            skipped_count += 1\n+            print(f\"Member '{member.__name__}' is skipped\")\n+        elif member.__name__ in ['foo', 'bar', 'baz']:\n+            print(f\"Member '{member.__name__}' is NOT skipped (this is the bug!)\")\n+            \n+    print(f\"\\nTotal skipped: {skipped_count}\")\n+    print(f\"Expected all 3 functions to be skipped since __all__ is empty\")\ndiff --git a/test_no_all.py b/test_no_all.py\nnew file mode 100644\nindex 000000000..a34c94461\n--- /dev/null\n+++ b/test_no_all.py\n@@ -0,0 +1,4 @@\n+\n+def foo():\n+    \"foo docstring\"\n+    pass\ndiff --git a/tests/roots/test-ext-autodoc/target/empty_all.py b/tests/roots/test-ext-autodoc/target/empty_all.py\nnew file mode 100644\nindex 000000000..b5e366a77\n--- /dev/null\n+++ b/tests/roots/test-ext-autodoc/target/empty_all.py\n@@ -0,0 +1,25 @@\n+\"\"\"\n+Module with empty __all__ list for testing.\n+\"\"\"\n+\n+__all__ = []\n+\n+\n+def foo():\n+    \"\"\"foo function\"\"\"\n+    pass\n+\n+\n+def bar():\n+    \"\"\"bar function\"\"\"\n+    pass\n+\n+\n+def baz():\n+    \"\"\"baz function\"\"\"\n+    pass\n+\n+\n+class Class:\n+    \"\"\"Class\"\"\"\n+    pass\ndiff --git a/tests/test_ext_autodoc.py b/tests/test_ext_autodoc.py\nindex 39897eb7d..9a28fa33f 100644\n--- a/tests/test_ext_autodoc.py\n+++ b/tests/test_ext_autodoc.py\n@@ -1019,6 +1019,37 @@ def test_autodoc_module_member_order(app):\n     ]\n \n \n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_autodoc_module_empty_all(app):\n+    \"\"\"Test that empty __all__ correctly excludes all members.\"\"\"\n+    # Test with empty __all__ - no members should be documented\n+    options = {\"members\": None}\n+    actual = do_autodoc(app, 'module', 'target.empty_all', options)\n+    assert list(filter(lambda l: '::' in l, actual)) == [\n+        '.. py:module:: target.empty_all',\n+    ]\n+    # No functions or classes should be included!\n+    \n+    # Test with explicit members list - they should still be shown\n+    options = {\"members\": \"foo,bar\"}\n+    actual = do_autodoc(app, 'module', 'target.empty_all', options)\n+    assert list(filter(lambda l: '::' in l, actual)) == [\n+        '.. py:module:: target.empty_all',\n+        '.. py:function:: foo()',\n+        '.. py:function:: bar()',\n+    ]\n+    \n+    # Test with ignore-module-all - should show all members  \n+    options = {\"members\": None, \"ignore-module-all\": True}\n+    actual = do_autodoc(app, 'module', 'target.empty_all', options)\n+    members = list(filter(lambda l: '::' in l, actual))\n+    assert '.. py:module:: target.empty_all' in members\n+    assert '.. py:function:: foo()' in members\n+    assert '.. py:function:: bar()' in members\n+    assert '.. py:function:: baz()' in members\n+    assert '.. py:class:: Class()' in members\n+\n+\n @pytest.mark.sphinx('html', testroot='ext-autodoc')\n def test_autodoc_module_scope(app):\n     app.env.temp_data['autodoc:module'] = 'target'\ndiff --git a/tox.ini b/tox.ini\nindex dbb705a3a..9f4fc3a32 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "diff --git a/CHANGES b/CHANGES\nindex bdf3be3b868..1e62225ef38 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -25,6 +25,7 @@ Bugs fixed\n * #741: autodoc: inherited-members doesn't work for instance attributes on super\n   class\n * #8592: autodoc: ``:meta public:`` does not effect to variables\n+* #8594: autodoc: empty __all__ attribute is ignored\n \n Testing\n --------\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex d85d796171d..c9f90accab0 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1074,7 +1074,7 @@ def get_module_members(self) -> Dict[str, ObjectMember]:\n     def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:\n         members = self.get_module_members()\n         if want_all:\n-            if not self.__all__:\n+            if self.__all__ is None:\n                 # for implicit module members, check __module__ to avoid\n                 # documenting imported objects\n                 return True, list(members.values())\ndiff --git a/tests/roots/test-ext-autodoc/target/empty_all.py b/tests/roots/test-ext-autodoc/target/empty_all.py\nnew file mode 100644\nindex 00000000000..c094cff70fe\n--- /dev/null\n+++ b/tests/roots/test-ext-autodoc/target/empty_all.py\n@@ -0,0 +1,16 @@\n+\"\"\"\n+docsting of empty_all module.\n+\"\"\"\n+__all__ = []\n+\n+\n+def foo():\n+    \"\"\"docstring\"\"\"\n+\n+\n+def bar():\n+    \"\"\"docstring\"\"\"\n+\n+\n+def baz():\n+    \"\"\"docstring\"\"\"\ndiff --git a/tests/test_ext_autodoc_automodule.py b/tests/test_ext_autodoc_automodule.py\nnew file mode 100644\nindex 00000000000..9b81da21e07\n--- /dev/null\n+++ b/tests/test_ext_autodoc_automodule.py\n@@ -0,0 +1,27 @@\n+\"\"\"\n+    test_ext_autodoc_autocmodule\n+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+    Test the autodoc extension.  This tests mainly the Documenters; the auto\n+    directives are tested in a test source file translated by test_build.\n+\n+    :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.\n+    :license: BSD, see LICENSE for details.\n+\"\"\"\n+\n+import pytest\n+\n+from .test_ext_autodoc import do_autodoc\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_empty_all(app):\n+    options = {'members': True}\n+    actual = do_autodoc(app, 'module', 'target.empty_all', options)\n+    assert list(actual) == [\n+        '',\n+        '.. py:module:: target.empty_all',\n+        '',\n+        'docsting of empty_all module.',\n+        '',\n+    ]\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/8595"}