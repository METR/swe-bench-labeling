diff --git a/xarray/core/rolling.py b/xarray/core/rolling.py
index c194ec08..5c09e73e 100644
--- a/xarray/core/rolling.py
+++ b/xarray/core/rolling.py
@@ -973,7 +973,8 @@ class Coarsen(CoarsenArithmetic, Generic[T_Xarray]):
             else:
                 reshaped[key] = var
 
-        should_be_coords = set(window_dim) & set(self.obj.coords)
+        # Preserve all original coordinates, not just the ones matching window_dim
+        should_be_coords = set(self.obj.coords)
         result = reshaped.set_coords(should_be_coords)
         if isinstance(self.obj, DataArray):
             return self.obj._from_temp_dataset(result)
diff --git a/xarray/tests/test_coarsen.py b/xarray/tests/test_coarsen.py
index d4449985..c557a28b 100644
--- a/xarray/tests/test_coarsen.py
+++ b/xarray/tests/test_coarsen.py
@@ -318,3 +318,26 @@ def test_coarsen_construct(dask: bool) -> None:
 
     with pytest.raises(ValueError):
         ds.coarsen(time=12).construct(time=("bar",))
+
+
+def test_coarsen_construct_keeps_all_coords():
+    """Test that coarsen.construct preserves all coordinates.
+    
+    Non-dimensional coordinates should remain as coordinates after construct().
+    See issue: https://github.com/pydata/xarray/issues/8393
+    """
+    da = xr.DataArray(np.arange(24), dims=["time"])
+    da = da.assign_coords(day=365 * da)
+    ds = da.to_dataset(name="T")
+    
+    # Check that 'day' is a coordinate in the original dataset
+    assert "day" in ds.coords
+    assert "day" not in ds.data_vars
+    
+    # Apply coarsen.construct
+    result = ds.coarsen(time=12).construct(time=("year", "month"))
+    
+    # Check that 'day' remains a coordinate in the result
+    assert "day" in result.coords
+    assert "day" not in result.data_vars
+    assert result.coords["day"].dims == ("year", "month")
