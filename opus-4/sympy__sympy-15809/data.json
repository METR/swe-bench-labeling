{"instance_id": "sympy__sympy-15809", "score": "C", "diff": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 5f9fe73c5c..6ddad48022 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,7 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n+            return cls.identity\n \n         args = (sympify(arg) for arg in args)\n \n@@ -646,6 +646,9 @@ class Max(MinMaxBase, Application):\n     \"\"\"\n     Return, if possible, the maximum value of the list.\n \n+    When called with no arguments, returns negative infinity (-oo), \n+    which is the identity element for maximum over extended real numbers.\n+\n     When number of arguments is equal one, then\n     return this argument.\n \n@@ -691,6 +694,8 @@ class Max(MinMaxBase, Application):\n     Max(8, p)\n     >>> Max (1, x, oo)\n     oo\n+    >>> Max()\n+    -oo\n \n     * Algorithm\n \n@@ -765,6 +770,10 @@ def _eval_is_negative(self):\n class Min(MinMaxBase, Application):\n     \"\"\"\n     Return, if possible, the minimum value of the list.\n+    \n+    When called with no arguments, returns positive infinity (oo), \n+    which is the identity element for minimum over extended real numbers.\n+    \n     It is named ``Min`` and not ``min`` to avoid conflicts\n     with the built-in function ``min``.\n \n@@ -786,6 +795,8 @@ class Min(MinMaxBase, Application):\n     Min(x, y)\n     >>> Min(n, 8, p, -7, p, oo)     #doctest: +SKIP\n     Min(n, -7)\n+    >>> Min()\n+    oo\n \n     See Also\n     ========\ndiff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py\nindex 00dc946005..9181c64bce 100644\n--- a/sympy/functions/elementary/tests/test_miscellaneous.py\n+++ b/sympy/functions/elementary/tests/test_miscellaneous.py\n@@ -85,7 +85,7 @@ def test_Min():\n     assert Min(p, p_).func is Min\n \n     # lists\n-    raises(ValueError, lambda: Min())\n+    assert Min() == oo\n     assert Min(x, y) == Min(y, x)\n     assert Min(x, y, z) == Min(z, y, x)\n     assert Min(x, Min(y, z)) == Min(z, y, x)\n@@ -156,7 +156,7 @@ def test_Max():\n \n     # lists\n \n-    raises(ValueError, lambda: Max())\n+    assert Max() == -oo\n     assert Max(x, y) == Max(y, x)\n     assert Max(x, y, z) == Max(z, y, x)\n     assert Max(x, Max(y, z)) == Max(z, y, x)\ndiff --git a/test_minmax_edge_cases.py b/test_minmax_edge_cases.py\nnew file mode 100644\nindex 0000000000..9b11c139a7\n--- /dev/null\n+++ b/test_minmax_edge_cases.py\n@@ -0,0 +1,47 @@\n+#!/usr/bin/env python\n+\"\"\"Test edge cases for Min/Max changes\"\"\"\n+\n+from sympy import Min, Max, oo, S, Symbol\n+\n+# Test that Min() returns oo and Max() returns -oo\n+print(\"Test 1: Empty arguments\")\n+print(f\"Min() = {Min()}, should be oo\")\n+print(f\"Max() = {Max()}, should be -oo\")\n+assert Min() == oo\n+assert Max() == -oo\n+\n+# Test that Min/Max with identity elements work correctly\n+print(\"\\nTest 2: Identity elements\")\n+print(f\"Min(oo) = {Min(oo)}\")\n+print(f\"Max(-oo) = {Max(-oo)}\")\n+assert Min(oo) == oo\n+assert Max(-oo) == -oo\n+\n+# Test Min/Max with mix of finite and infinite values\n+print(\"\\nTest 3: Mix of finite and infinite values\")\n+print(f\"Min(1, 2, oo) = {Min(1, 2, oo)}\")\n+print(f\"Max(1, 2, -oo) = {Max(1, 2, -oo)}\")\n+assert Min(1, 2, oo) == 1\n+assert Max(1, 2, -oo) == 2\n+\n+# Test Min/Max with symbolic arguments\n+print(\"\\nTest 4: Symbolic arguments\")\n+x = Symbol('x')\n+print(f\"Min(x, oo) = {Min(x, oo)}\")\n+print(f\"Max(x, -oo) = {Max(x, -oo)}\")\n+assert Min(x, oo) == x\n+assert Max(x, -oo) == x\n+\n+# Test Min/Max still work correctly for normal cases\n+print(\"\\nTest 5: Normal cases\")\n+print(f\"Min(3, 1, 4, 1, 5, 9) = {Min(3, 1, 4, 1, 5, 9)}\")\n+print(f\"Max(3, 1, 4, 1, 5, 9) = {Max(3, 1, 4, 1, 5, 9)}\")\n+assert Min(3, 1, 4, 1, 5, 9) == 1\n+assert Max(3, 1, 4, 1, 5, 9) == 9\n+\n+# Test mathematical consistency: Min() >= Max() should be True when both are empty\n+print(\"\\nTest 6: Mathematical consistency\")\n+print(f\"Min() >= Max() = {Min() >= Max()}, should be True (oo >= -oo)\")\n+assert Min() >= Max()\n+\n+print(\"\\nAll tests passed!\")\ndiff --git a/test_minmax_empty.py b/test_minmax_empty.py\nnew file mode 100644\nindex 0000000000..551dbfa4a0\n--- /dev/null\n+++ b/test_minmax_empty.py\n@@ -0,0 +1,32 @@\n+#!/usr/bin/env python\n+\"\"\"Test script to verify Min() and Max() with no arguments\"\"\"\n+\n+from sympy import Min, Max, oo, S\n+\n+# Test Min with no arguments\n+try:\n+    result = Min()\n+    print(f\"Min() = {result}\")\n+    print(f\"Min() == oo: {result == oo}\")\n+    print(f\"Min() is S.Infinity: {result is S.Infinity}\")\n+except Exception as e:\n+    print(f\"Min() raised exception: {type(e).__name__}: {e}\")\n+\n+print()\n+\n+# Test Max with no arguments  \n+try:\n+    result = Max()\n+    print(f\"Max() = {result}\")\n+    print(f\"Max() == -oo: {result == -oo}\")\n+    print(f\"Max() is S.NegativeInfinity: {result is S.NegativeInfinity}\")\n+except Exception as e:\n+    print(f\"Max() raised exception: {type(e).__name__}: {e}\")\n+\n+print()\n+\n+# Test that Min and Max still work with arguments\n+print(f\"Min(1, 2, 3) = {Min(1, 2, 3)}\")\n+print(f\"Max(1, 2, 3) = {Max(1, 2, 3)}\")\n+print(f\"Min(5) = {Min(5)}\")\n+print(f\"Max(5) = {Max(5)}\")\n", "gold_standard_diff": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 5f9fe73c5c42..5e4e89bdf481 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,8 +339,6 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n-        if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n \n         args = (sympify(arg) for arg in args)\n \ndiff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py\nindex f78dc7669865..0383c178f666 100644\n--- a/sympy/functions/elementary/tests/test_miscellaneous.py\n+++ b/sympy/functions/elementary/tests/test_miscellaneous.py\n@@ -86,7 +86,8 @@ def test_Min():\n     assert Min(p, p_).func is Min\n \n     # lists\n-    raises(ValueError, lambda: Min())\n+    assert Min() == S.Infinity\n+    assert Min(x) == x\n     assert Min(x, y) == Min(y, x)\n     assert Min(x, y, z) == Min(z, y, x)\n     assert Min(x, Min(y, z)) == Min(z, y, x)\n@@ -157,7 +158,8 @@ def test_Max():\n \n     # lists\n \n-    raises(ValueError, lambda: Max())\n+    assert Max() == S.NegativeInfinity\n+    assert Max(x) == x\n     assert Max(x, y) == Max(y, x)\n     assert Max(x, y, z) == Max(z, y, x)\n     assert Max(x, Max(y, z)) == Max(z, y, x)\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/15809"}