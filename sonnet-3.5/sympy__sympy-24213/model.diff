diff --git a/sympy/physics/units/dimensions.py b/sympy/physics/units/dimensions.py
index 0ff7e4fd0a..1f3103443c 100644
--- a/sympy/physics/units/dimensions.py
+++ b/sympy/physics/units/dimensions.py
@@ -348,6 +348,16 @@ def parse_dict(d):
     def base_dims(self):
         return self.args[0]
 
+    def equivalent_dims(self, dim1, dim2):
+        """
+        Check if two dimensions are equivalent.
+
+        This method checks if two dimensions are equivalent by comparing
+        their base dimensional dependencies.
+        """
+        deps1 = self.get_dimensional_dependencies(dim1)
+        deps2 = self.get_dimensional_dependencies(dim2)
+        return deps1 == deps2
     @property
     def derived_dims(self):
         return self.args[1]
diff --git a/sympy/physics/units/unitsystem.py b/sympy/physics/units/unitsystem.py
index a436880c4b..870af86caa 100644
--- a/sympy/physics/units/unitsystem.py
+++ b/sympy/physics/units/unitsystem.py
@@ -175,10 +175,10 @@ def _collect_factor_and_dimension(self, expr):
             for addend in expr.args[1:]:
                 addend_factor, addend_dim = \
                     self._collect_factor_and_dimension(addend)
-                if dim != addend_dim:
+                if not self.get_dimension_system().equivalent_dims(dim, addend_dim):
                     raise ValueError(
                         'Dimension of "{}" is {}, '
-                        'but it should be {}'.format(
+                        'but it should be equivalent to {}'.format(
                             addend, addend_dim, dim))
                 factor += addend_factor
             return factor, dim
