diff --git a/django/template/autoreload.py b/django/template/autoreload.py
index 84c8554165..f3fd704031 100644
--- a/django/template/autoreload.py
+++ b/django/template/autoreload.py
@@ -17,7 +17,7 @@ def get_template_directories():
         if not isinstance(backend, DjangoTemplates):
             continue
 
-        items.update(cwd / to_path(dir) for dir in backend.engine.dirs)
+        items.update(cwd / to_path(dir) for dir in backend.engine.dirs if dir)
 
         for loader in backend.engine.template_loaders:
             if not hasattr(loader, "get_dirs"):
@@ -25,7 +25,7 @@ def get_template_directories():
             items.update(
                 cwd / to_path(directory)
                 for directory in loader.get_dirs()
-                if not is_django_path(directory)
+                if directory and not is_django_path(directory)
             )
     return items
 
diff --git a/tests/template_tests/test_autoreloader.py b/tests/template_tests/test_autoreloader.py
index cc2c3f58a5..06b89307c6 100644
--- a/tests/template_tests/test_autoreloader.py
+++ b/tests/template_tests/test_autoreloader.py
@@ -103,6 +103,39 @@ class TemplateReloadTests(SimpleTestCase):
             },
         )
 
+    @override_settings(
+        TEMPLATES=[
+            {
+                "DIRS": ["", ROOT / "templates", ""],  # Empty strings should be filtered out
+                "BACKEND": "django.template.backends.django.DjangoTemplates",
+            }
+        ]
+    )
+    def test_empty_string_in_dirs_filtered(self):
+        """Empty strings in DIRS should be filtered out to avoid CWD being included."""
+        template_dirs = autoreload.get_template_directories()
+        # CWD should not be in template directories
+        self.assertNotIn(Path.cwd(), template_dirs)
+        # Only the valid directory should be included
+        self.assertSetEqual(template_dirs, {ROOT / "templates"})
+
+    @override_settings(
+        TEMPLATES=[
+            {
+                "DIRS": [""],  # Only empty string
+                "BACKEND": "django.template.backends.django.DjangoTemplates",
+            }
+        ]
+    )
+    @mock.patch("django.template.autoreload.reset_loaders")
+    def test_empty_string_dirs_no_false_positives(self, mock_reset):
+        """With only empty strings in DIRS, template_changed should not trigger for arbitrary files."""
+        # Create a test file outside any template directory
+        test_file = Path.cwd() / "test_file.html"
+        # This should not trigger template reload
+        self.assertIsNone(autoreload.template_changed(None, test_file))
+        mock_reset.assert_not_called()
+
 
 @require_jinja2
 @override_settings(INSTALLED_APPS=["template_tests"])
