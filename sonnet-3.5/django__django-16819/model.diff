diff --git a/django/db/migrations/optimizer.py b/django/db/migrations/optimizer.py
index 7e5dea2377..b6332add71 100644
--- a/django/db/migrations/optimizer.py
+++ b/django/db/migrations/optimizer.py
@@ -1,3 +1,5 @@
+from django.db.migrations.operations.indexes import AddIndex, RemoveIndex
+
 class MigrationOptimizer:
     """
     Power the optimization process, where you provide a list of Operations
@@ -40,10 +42,23 @@ class MigrationOptimizer:
     def optimize_inner(self, operations, app_label):
         """Inner optimization loop."""
         new_operations = []
+        skip_next = False
         for i, operation in enumerate(operations):
+            if skip_next:
+                skip_next = False
+                continue
+
             right = True  # Should we reduce on the right or on the left.
             # Compare it to each operation after it
             for j, other in enumerate(operations[i + 1 :]):
+                # Check for consecutive AddIndex and RemoveIndex operations
+                if (isinstance(operation, AddIndex) and isinstance(other, RemoveIndex)) or \
+                   (isinstance(operation, RemoveIndex) and isinstance(other, AddIndex)):
+                    if operation.model_name == other.model_name and operation.index.fields == other.index.fields:
+                        # Skip both operations as they cancel each other out
+                        skip_next = True
+                        break
+
                 result = operation.reduce(other, app_label)
                 if isinstance(result, list):
                     in_between = operations[i + 1 : i + j + 1]
@@ -65,5 +80,6 @@ class MigrationOptimizer:
                     # Can't perform a right reduction.
                     right = False
             else:
-                new_operations.append(operation)
+                if not skip_next:
+                    new_operations.append(operation)
         return new_operations
