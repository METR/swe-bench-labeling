{"instance_id": "django__django-16082", "score": "I", "diff": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 5e3c7cab82..0cba25cbd8 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -656,6 +656,11 @@ class CombinedExpression(SQLiteNumericMixin, Expression):\n             type(self.rhs._output_field_or_none),\n         )\n         if combined_type is None:\n+            if self.connector == self.MOD:\n+                # For MOD operator, if one of the operands is Decimal, the result should be Decimal\n+                if isinstance(self.lhs._output_field_or_none, fields.DecimalField) or \\\n+                   isinstance(self.rhs._output_field_or_none, fields.DecimalField):\n+                    return fields.DecimalField()\n             raise FieldError(\n                 f\"Cannot infer type of {self.connector!r} expression involving these \"\n                 f\"types: {self.lhs.output_field.__class__.__name__}, \"\n", "gold_standard_diff": "diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py\nindex 5e3c7cab8251..cbf4fd8296ae 100644\n--- a/django/db/models/expressions.py\n+++ b/django/db/models/expressions.py\n@@ -533,6 +533,7 @@ def __hash__(self):\n             Combinable.SUB,\n             Combinable.MUL,\n             Combinable.DIV,\n+            Combinable.MOD,\n         )\n     },\n     # Bitwise operators.\ndiff --git a/tests/expressions/tests.py b/tests/expressions/tests.py\nindex 39e6c18b1a12..d63415ae7233 100644\n--- a/tests/expressions/tests.py\n+++ b/tests/expressions/tests.py\n@@ -2416,7 +2416,13 @@ def test_resolve_output_field_number(self):\n             (IntegerField, FloatField, FloatField),\n             (FloatField, IntegerField, FloatField),\n         ]\n-        connectors = [Combinable.ADD, Combinable.SUB, Combinable.MUL, Combinable.DIV]\n+        connectors = [\n+            Combinable.ADD,\n+            Combinable.SUB,\n+            Combinable.MUL,\n+            Combinable.DIV,\n+            Combinable.MOD,\n+        ]\n         for lhs, rhs, combined in tests:\n             for connector in connectors:\n                 with self.subTest(\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16082"}