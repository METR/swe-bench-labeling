diff --git a/setup.py b/setup.py
index a404f1fa5..2c6848797 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/builders/linkcheck.py b/sphinx/builders/linkcheck.py
index dd5317087..9fd790153 100644
--- a/sphinx/builders/linkcheck.py
+++ b/sphinx/builders/linkcheck.py
@@ -18,6 +18,8 @@ from os import path
 from typing import Any, Dict, List, Set, Tuple
 from urllib.parse import unquote, urlparse
 
+from sphinx.util.osutil import fs_encoding
+
 from docutils import nodes
 from docutils.nodes import Node
 from requests.exceptions import HTTPError
@@ -77,7 +79,7 @@ def check_anchor(response: requests.requests.Response, anchor: str) -> bool:
 
 class CheckExternalLinksBuilder(Builder):
     """
-    Checks for broken external links.
+    Checks for broken external and local links.
     """
     name = 'linkcheck'
     epilog = __('Look for any errors in the above output or in '
@@ -99,6 +101,32 @@ class CheckExternalLinksBuilder(Builder):
         # create JSON output file
         open(path.join(self.outdir, 'output.json'), 'w').close()
 
+    def check_local_link(self, uri: str) -> bool:
+        """
+        Check if a local link exists.
+        Returns True if the link is valid, False otherwise.
+        """
+        # Remove anchor if present
+        uri_without_anchor = uri.split('#')[0]
+        
+        # Check if the file exists in the source directory
+        full_path = path.join(self.env.srcdir, uri_without_anchor)
+        if path.exists(full_path):
+            return True
+        
+        # If it doesn't exist, check if it's a reference to another document
+        for doc in self.env.found_docs:
+            if doc == uri_without_anchor or doc.endswith('/' + uri_without_anchor):
+                return True
+        
+        # Check if it's an intersphinx reference
+        if hasattr(self.env.config, 'intersphinx_mapping'):
+            for _, invdata in self.env.config.intersphinx_mapping.items():
+                if invdata.get('objects', {}).get(uri_without_anchor):
+                    return True
+        
+        return False
+
         # create queues and worker threads
         self.wqueue = queue.Queue()  # type: queue.Queue
         self.rqueue = queue.Queue()  # type: queue.Queue
@@ -143,6 +171,13 @@ class CheckExternalLinksBuilder(Builder):
                 req_url = uri
                 anchor = None
 
+            # Check if it's a local link
+            if not urlparse(req_url).scheme:
+                if self.check_local_link(req_url):
+                    return 'working', '', 0
+                else:
+                    return 'broken', 'Local file not found', 0
+
             # handle non-ASCII URIs
             try:
                 req_url.encode('ascii')
diff --git a/tox.ini b/tox.ini
index bddd822a6..34baee205 100644
--- a/tox.ini
+++ b/tox.ini
@@ -27,7 +27,7 @@ extras =
 setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
 commands=
-    pytest --durations 25 {posargs}
+    pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
