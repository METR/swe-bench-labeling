{"instance_id": "sympy__sympy-13647", "score": "C", "diff": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 056d9bc497..4aa75e4d77 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -86,7 +86,7 @@ def entry(i, j):\n                 return self[i, j]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n-            return self[i, j - pos - other.cols]\n+            return self[i, j - other.cols]\n \n         return self._new(self.rows, self.cols + other.cols,\n                          lambda i, j: entry(i, j))\ndiff --git a/sympy/matrices/tests/test_matrices.py b/sympy/matrices/tests/test_matrices.py\nindex 78bd30fc81..ea0b126364 100644\n--- a/sympy/matrices/tests/test_matrices.py\n+++ b/sympy/matrices/tests/test_matrices.py\n@@ -2996,3 +2996,13 @@ def test_deprecated():\n         P, Jcells = m.jordan_cells()\n         assert Jcells[1] == Matrix(1, 1, [2])\n         assert Jcells[0] == Matrix(2, 2, [2, 1, 0, 2])\n+\n+def test_col_insert():\n+    m = Matrix([[1, 2], [3, 4]])\n+    v = Matrix([5, 6])\n+    assert m.col_insert(0, v) == Matrix([[5, 1, 2], [6, 3, 4]])\n+    assert m.col_insert(1, v) == Matrix([[1, 5, 2], [3, 6, 4]])\n+    assert m.col_insert(2, v) == Matrix([[1, 2, 5], [3, 4, 6]])\n+    m = Matrix([[1, 2, 3], [4, 5, 6]])\n+    v = Matrix([[7], [8]])\n+    assert m.col_insert(1, v) == Matrix([[1, 7, 2, 3], [4, 8, 5, 6]])\n\\ No newline at end of file\n", "gold_standard_diff": "diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py\nindex 68656467f545..602e5417eb84 100644\n--- a/sympy/matrices/common.py\n+++ b/sympy/matrices/common.py\n@@ -86,7 +86,7 @@ def entry(i, j):\n                 return self[i, j]\n             elif pos <= j < pos + other.cols:\n                 return other[i, j - pos]\n-            return self[i, j - pos - other.cols]\n+            return self[i, j - other.cols]\n \n         return self._new(self.rows, self.cols + other.cols,\n                          lambda i, j: entry(i, j))\ndiff --git a/sympy/matrices/tests/test_commonmatrix.py b/sympy/matrices/tests/test_commonmatrix.py\nindex 3e27ecc8b25d..0bdb65177d55 100644\n--- a/sympy/matrices/tests/test_commonmatrix.py\n+++ b/sympy/matrices/tests/test_commonmatrix.py\n@@ -200,6 +200,14 @@ def test_col_insert():\n         l = [0, 0, 0]\n         l.insert(i, 4)\n         assert flatten(zeros_Shaping(3).col_insert(i, c4).row(0).tolist()) == l\n+    # issue 13643\n+    assert eye_Shaping(6).col_insert(3, Matrix([[2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]])) == \\\n+           Matrix([[1, 0, 0, 2, 2, 0, 0, 0],\n+                   [0, 1, 0, 2, 2, 0, 0, 0],\n+                   [0, 0, 1, 2, 2, 0, 0, 0],\n+                   [0, 0, 0, 2, 2, 1, 0, 0],\n+                   [0, 0, 0, 2, 2, 0, 1, 0],\n+                   [0, 0, 0, 2, 2, 0, 0, 1]])\n \n def test_extract():\n     m = ShapingOnlyMatrix(4, 3, lambda i, j: i*3 + j)\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/13647"}