diff --git a/_build/.doctrees/CONTRIBUTING.doctree b/_build/.doctrees/CONTRIBUTING.doctree
new file mode 100644
index 000000000..22177b939
Binary files /dev/null and b/_build/.doctrees/CONTRIBUTING.doctree differ
diff --git a/_build/.doctrees/README.doctree b/_build/.doctrees/README.doctree
new file mode 100644
index 000000000..0da927987
Binary files /dev/null and b/_build/.doctrees/README.doctree differ
diff --git a/_build/.doctrees/doc/changes.doctree b/_build/.doctrees/doc/changes.doctree
new file mode 100644
index 000000000..94f033f06
Binary files /dev/null and b/_build/.doctrees/doc/changes.doctree differ
diff --git a/_build/.doctrees/doc/contents.doctree b/_build/.doctrees/doc/contents.doctree
new file mode 100644
index 000000000..de0736934
Binary files /dev/null and b/_build/.doctrees/doc/contents.doctree differ
diff --git a/_build/.doctrees/doc/develop.doctree b/_build/.doctrees/doc/develop.doctree
new file mode 100644
index 000000000..96cc00e98
Binary files /dev/null and b/_build/.doctrees/doc/develop.doctree differ
diff --git a/_build/.doctrees/doc/development/builders.doctree b/_build/.doctrees/doc/development/builders.doctree
new file mode 100644
index 000000000..707eaf0d2
Binary files /dev/null and b/_build/.doctrees/doc/development/builders.doctree differ
diff --git a/_build/.doctrees/doc/development/index.doctree b/_build/.doctrees/doc/development/index.doctree
new file mode 100644
index 000000000..47fb2d38e
Binary files /dev/null and b/_build/.doctrees/doc/development/index.doctree differ
diff --git a/_build/.doctrees/doc/development/overview.doctree b/_build/.doctrees/doc/development/overview.doctree
new file mode 100644
index 000000000..071562abc
Binary files /dev/null and b/_build/.doctrees/doc/development/overview.doctree differ
diff --git a/_build/.doctrees/doc/development/theming.doctree b/_build/.doctrees/doc/development/theming.doctree
new file mode 100644
index 000000000..26d1f2539
Binary files /dev/null and b/_build/.doctrees/doc/development/theming.doctree differ
diff --git a/_build/.doctrees/doc/development/tutorials/examples/README.doctree b/_build/.doctrees/doc/development/tutorials/examples/README.doctree
new file mode 100644
index 000000000..88c3bec37
Binary files /dev/null and b/_build/.doctrees/doc/development/tutorials/examples/README.doctree differ
diff --git a/_build/.doctrees/doc/development/tutorials/helloworld.doctree b/_build/.doctrees/doc/development/tutorials/helloworld.doctree
new file mode 100644
index 000000000..29e36a207
Binary files /dev/null and b/_build/.doctrees/doc/development/tutorials/helloworld.doctree differ
diff --git a/_build/.doctrees/doc/development/tutorials/index.doctree b/_build/.doctrees/doc/development/tutorials/index.doctree
new file mode 100644
index 000000000..066712e60
Binary files /dev/null and b/_build/.doctrees/doc/development/tutorials/index.doctree differ
diff --git a/_build/.doctrees/doc/development/tutorials/recipe.doctree b/_build/.doctrees/doc/development/tutorials/recipe.doctree
new file mode 100644
index 000000000..7e410bfc0
Binary files /dev/null and b/_build/.doctrees/doc/development/tutorials/recipe.doctree differ
diff --git a/_build/.doctrees/doc/development/tutorials/todo.doctree b/_build/.doctrees/doc/development/tutorials/todo.doctree
new file mode 100644
index 000000000..5efef9f0b
Binary files /dev/null and b/_build/.doctrees/doc/development/tutorials/todo.doctree differ
diff --git a/_build/.doctrees/doc/examples.doctree b/_build/.doctrees/doc/examples.doctree
new file mode 100644
index 000000000..2915b6b3e
Binary files /dev/null and b/_build/.doctrees/doc/examples.doctree differ
diff --git a/_build/.doctrees/doc/extdev/appapi.doctree b/_build/.doctrees/doc/extdev/appapi.doctree
new file mode 100644
index 000000000..1fc0e9d51
Binary files /dev/null and b/_build/.doctrees/doc/extdev/appapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/builderapi.doctree b/_build/.doctrees/doc/extdev/builderapi.doctree
new file mode 100644
index 000000000..765248a5d
Binary files /dev/null and b/_build/.doctrees/doc/extdev/builderapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/collectorapi.doctree b/_build/.doctrees/doc/extdev/collectorapi.doctree
new file mode 100644
index 000000000..ff8270105
Binary files /dev/null and b/_build/.doctrees/doc/extdev/collectorapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/deprecated.doctree b/_build/.doctrees/doc/extdev/deprecated.doctree
new file mode 100644
index 000000000..77d483364
Binary files /dev/null and b/_build/.doctrees/doc/extdev/deprecated.doctree differ
diff --git a/_build/.doctrees/doc/extdev/domainapi.doctree b/_build/.doctrees/doc/extdev/domainapi.doctree
new file mode 100644
index 000000000..1191022b5
Binary files /dev/null and b/_build/.doctrees/doc/extdev/domainapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/envapi.doctree b/_build/.doctrees/doc/extdev/envapi.doctree
new file mode 100644
index 000000000..a0c511a83
Binary files /dev/null and b/_build/.doctrees/doc/extdev/envapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/i18n.doctree b/_build/.doctrees/doc/extdev/i18n.doctree
new file mode 100644
index 000000000..9864aae68
Binary files /dev/null and b/_build/.doctrees/doc/extdev/i18n.doctree differ
diff --git a/_build/.doctrees/doc/extdev/index.doctree b/_build/.doctrees/doc/extdev/index.doctree
new file mode 100644
index 000000000..0d41909d6
Binary files /dev/null and b/_build/.doctrees/doc/extdev/index.doctree differ
diff --git a/_build/.doctrees/doc/extdev/logging.doctree b/_build/.doctrees/doc/extdev/logging.doctree
new file mode 100644
index 000000000..2103206db
Binary files /dev/null and b/_build/.doctrees/doc/extdev/logging.doctree differ
diff --git a/_build/.doctrees/doc/extdev/markupapi.doctree b/_build/.doctrees/doc/extdev/markupapi.doctree
new file mode 100644
index 000000000..0a96486ce
Binary files /dev/null and b/_build/.doctrees/doc/extdev/markupapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/nodes.doctree b/_build/.doctrees/doc/extdev/nodes.doctree
new file mode 100644
index 000000000..347562017
Binary files /dev/null and b/_build/.doctrees/doc/extdev/nodes.doctree differ
diff --git a/_build/.doctrees/doc/extdev/parserapi.doctree b/_build/.doctrees/doc/extdev/parserapi.doctree
new file mode 100644
index 000000000..bc38f7584
Binary files /dev/null and b/_build/.doctrees/doc/extdev/parserapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/projectapi.doctree b/_build/.doctrees/doc/extdev/projectapi.doctree
new file mode 100644
index 000000000..4079ab0b6
Binary files /dev/null and b/_build/.doctrees/doc/extdev/projectapi.doctree differ
diff --git a/_build/.doctrees/doc/extdev/utils.doctree b/_build/.doctrees/doc/extdev/utils.doctree
new file mode 100644
index 000000000..7d7b01d48
Binary files /dev/null and b/_build/.doctrees/doc/extdev/utils.doctree differ
diff --git a/_build/.doctrees/doc/faq.doctree b/_build/.doctrees/doc/faq.doctree
new file mode 100644
index 000000000..f7db63c6e
Binary files /dev/null and b/_build/.doctrees/doc/faq.doctree differ
diff --git a/_build/.doctrees/doc/glossary.doctree b/_build/.doctrees/doc/glossary.doctree
new file mode 100644
index 000000000..56e3a7da3
Binary files /dev/null and b/_build/.doctrees/doc/glossary.doctree differ
diff --git a/_build/.doctrees/doc/internals/authors.doctree b/_build/.doctrees/doc/internals/authors.doctree
new file mode 100644
index 000000000..02b483cba
Binary files /dev/null and b/_build/.doctrees/doc/internals/authors.doctree differ
diff --git a/_build/.doctrees/doc/internals/code-of-conduct.doctree b/_build/.doctrees/doc/internals/code-of-conduct.doctree
new file mode 100644
index 000000000..bbc47ec02
Binary files /dev/null and b/_build/.doctrees/doc/internals/code-of-conduct.doctree differ
diff --git a/_build/.doctrees/doc/internals/contributing.doctree b/_build/.doctrees/doc/internals/contributing.doctree
new file mode 100644
index 000000000..ab921840b
Binary files /dev/null and b/_build/.doctrees/doc/internals/contributing.doctree differ
diff --git a/_build/.doctrees/doc/internals/index.doctree b/_build/.doctrees/doc/internals/index.doctree
new file mode 100644
index 000000000..136b3fdc0
Binary files /dev/null and b/_build/.doctrees/doc/internals/index.doctree differ
diff --git a/_build/.doctrees/doc/internals/organization.doctree b/_build/.doctrees/doc/internals/organization.doctree
new file mode 100644
index 000000000..92e3f0179
Binary files /dev/null and b/_build/.doctrees/doc/internals/organization.doctree differ
diff --git a/_build/.doctrees/doc/internals/release-process.doctree b/_build/.doctrees/doc/internals/release-process.doctree
new file mode 100644
index 000000000..a0c2aa840
Binary files /dev/null and b/_build/.doctrees/doc/internals/release-process.doctree differ
diff --git a/_build/.doctrees/doc/latex.doctree b/_build/.doctrees/doc/latex.doctree
new file mode 100644
index 000000000..3c2762807
Binary files /dev/null and b/_build/.doctrees/doc/latex.doctree differ
diff --git a/_build/.doctrees/doc/man/index.doctree b/_build/.doctrees/doc/man/index.doctree
new file mode 100644
index 000000000..831f834b6
Binary files /dev/null and b/_build/.doctrees/doc/man/index.doctree differ
diff --git a/_build/.doctrees/doc/man/sphinx-apidoc.doctree b/_build/.doctrees/doc/man/sphinx-apidoc.doctree
new file mode 100644
index 000000000..edd12afc1
Binary files /dev/null and b/_build/.doctrees/doc/man/sphinx-apidoc.doctree differ
diff --git a/_build/.doctrees/doc/man/sphinx-autogen.doctree b/_build/.doctrees/doc/man/sphinx-autogen.doctree
new file mode 100644
index 000000000..9faf97727
Binary files /dev/null and b/_build/.doctrees/doc/man/sphinx-autogen.doctree differ
diff --git a/_build/.doctrees/doc/man/sphinx-build.doctree b/_build/.doctrees/doc/man/sphinx-build.doctree
new file mode 100644
index 000000000..087dc068a
Binary files /dev/null and b/_build/.doctrees/doc/man/sphinx-build.doctree differ
diff --git a/_build/.doctrees/doc/man/sphinx-quickstart.doctree b/_build/.doctrees/doc/man/sphinx-quickstart.doctree
new file mode 100644
index 000000000..9ad1a6b10
Binary files /dev/null and b/_build/.doctrees/doc/man/sphinx-quickstart.doctree differ
diff --git a/_build/.doctrees/doc/templating.doctree b/_build/.doctrees/doc/templating.doctree
new file mode 100644
index 000000000..dff768de2
Binary files /dev/null and b/_build/.doctrees/doc/templating.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/intl.doctree b/_build/.doctrees/doc/usage/advanced/intl.doctree
new file mode 100644
index 000000000..e11774e50
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/intl.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/setuptools.doctree b/_build/.doctrees/doc/usage/advanced/setuptools.doctree
new file mode 100644
index 000000000..9010fbf41
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/setuptools.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/websupport/api.doctree b/_build/.doctrees/doc/usage/advanced/websupport/api.doctree
new file mode 100644
index 000000000..33eaae062
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/api.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/websupport/index.doctree b/_build/.doctrees/doc/usage/advanced/websupport/index.doctree
new file mode 100644
index 000000000..516f1c420
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/index.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree b/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree
new file mode 100644
index 000000000..c8c2af141
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/quickstart.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree b/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree
new file mode 100644
index 000000000..c74ff046f
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/searchadapters.doctree differ
diff --git a/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree b/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree
new file mode 100644
index 000000000..04cf211ac
Binary files /dev/null and b/_build/.doctrees/doc/usage/advanced/websupport/storagebackends.doctree differ
diff --git a/_build/.doctrees/doc/usage/builders/index.doctree b/_build/.doctrees/doc/usage/builders/index.doctree
new file mode 100644
index 000000000..4d0ac0c9f
Binary files /dev/null and b/_build/.doctrees/doc/usage/builders/index.doctree differ
diff --git a/_build/.doctrees/doc/usage/configuration.doctree b/_build/.doctrees/doc/usage/configuration.doctree
new file mode 100644
index 000000000..e699691df
Binary files /dev/null and b/_build/.doctrees/doc/usage/configuration.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/autodoc.doctree b/_build/.doctrees/doc/usage/extensions/autodoc.doctree
new file mode 100644
index 000000000..5e0a71bf5
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autodoc.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree b/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree
new file mode 100644
index 000000000..e08eeaccf
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autosectionlabel.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/autosummary.doctree b/_build/.doctrees/doc/usage/extensions/autosummary.doctree
new file mode 100644
index 000000000..d0a5cb7b2
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/autosummary.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/coverage.doctree b/_build/.doctrees/doc/usage/extensions/coverage.doctree
new file mode 100644
index 000000000..dd45b1560
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/coverage.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/doctest.doctree b/_build/.doctrees/doc/usage/extensions/doctest.doctree
new file mode 100644
index 000000000..6e4b2a4c8
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/doctest.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/duration.doctree b/_build/.doctrees/doc/usage/extensions/duration.doctree
new file mode 100644
index 000000000..6fd1a5f1f
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/duration.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/example_google.doctree b/_build/.doctrees/doc/usage/extensions/example_google.doctree
new file mode 100644
index 000000000..8d35e36ab
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/example_google.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/example_numpy.doctree b/_build/.doctrees/doc/usage/extensions/example_numpy.doctree
new file mode 100644
index 000000000..951d86933
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/example_numpy.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/extlinks.doctree b/_build/.doctrees/doc/usage/extensions/extlinks.doctree
new file mode 100644
index 000000000..9ab4765fa
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/extlinks.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/githubpages.doctree b/_build/.doctrees/doc/usage/extensions/githubpages.doctree
new file mode 100644
index 000000000..21d8ab5fc
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/githubpages.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/graphviz.doctree b/_build/.doctrees/doc/usage/extensions/graphviz.doctree
new file mode 100644
index 000000000..b4911e6cf
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/graphviz.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/ifconfig.doctree b/_build/.doctrees/doc/usage/extensions/ifconfig.doctree
new file mode 100644
index 000000000..072084dc0
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/ifconfig.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/imgconverter.doctree b/_build/.doctrees/doc/usage/extensions/imgconverter.doctree
new file mode 100644
index 000000000..75d658db6
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/imgconverter.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/index.doctree b/_build/.doctrees/doc/usage/extensions/index.doctree
new file mode 100644
index 000000000..7c918b154
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/index.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/inheritance.doctree b/_build/.doctrees/doc/usage/extensions/inheritance.doctree
new file mode 100644
index 000000000..919f2bbc4
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/inheritance.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/intersphinx.doctree b/_build/.doctrees/doc/usage/extensions/intersphinx.doctree
new file mode 100644
index 000000000..c30c23890
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/intersphinx.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/linkcode.doctree b/_build/.doctrees/doc/usage/extensions/linkcode.doctree
new file mode 100644
index 000000000..cb1326598
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/linkcode.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/math.doctree b/_build/.doctrees/doc/usage/extensions/math.doctree
new file mode 100644
index 000000000..cad69ecb5
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/math.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/napoleon.doctree b/_build/.doctrees/doc/usage/extensions/napoleon.doctree
new file mode 100644
index 000000000..bd8c6bc63
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/napoleon.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/todo.doctree b/_build/.doctrees/doc/usage/extensions/todo.doctree
new file mode 100644
index 000000000..4b1c533a4
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/todo.doctree differ
diff --git a/_build/.doctrees/doc/usage/extensions/viewcode.doctree b/_build/.doctrees/doc/usage/extensions/viewcode.doctree
new file mode 100644
index 000000000..f976f1462
Binary files /dev/null and b/_build/.doctrees/doc/usage/extensions/viewcode.doctree differ
diff --git a/_build/.doctrees/doc/usage/index.doctree b/_build/.doctrees/doc/usage/index.doctree
new file mode 100644
index 000000000..e627f6c45
Binary files /dev/null and b/_build/.doctrees/doc/usage/index.doctree differ
diff --git a/_build/.doctrees/doc/usage/installation.doctree b/_build/.doctrees/doc/usage/installation.doctree
new file mode 100644
index 000000000..0eb8ee7f8
Binary files /dev/null and b/_build/.doctrees/doc/usage/installation.doctree differ
diff --git a/_build/.doctrees/doc/usage/markdown.doctree b/_build/.doctrees/doc/usage/markdown.doctree
new file mode 100644
index 000000000..7f2d9e5f7
Binary files /dev/null and b/_build/.doctrees/doc/usage/markdown.doctree differ
diff --git a/_build/.doctrees/doc/usage/quickstart.doctree b/_build/.doctrees/doc/usage/quickstart.doctree
new file mode 100644
index 000000000..13e25b1e8
Binary files /dev/null and b/_build/.doctrees/doc/usage/quickstart.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/basics.doctree b/_build/.doctrees/doc/usage/restructuredtext/basics.doctree
new file mode 100644
index 000000000..c1aea2dc2
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/basics.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/directives.doctree b/_build/.doctrees/doc/usage/restructuredtext/directives.doctree
new file mode 100644
index 000000000..b86748bcb
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/directives.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/domains.doctree b/_build/.doctrees/doc/usage/restructuredtext/domains.doctree
new file mode 100644
index 000000000..18f708780
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/domains.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree b/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree
new file mode 100644
index 000000000..d80628190
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/field-lists.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/index.doctree b/_build/.doctrees/doc/usage/restructuredtext/index.doctree
new file mode 100644
index 000000000..59a4807e7
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/index.doctree differ
diff --git a/_build/.doctrees/doc/usage/restructuredtext/roles.doctree b/_build/.doctrees/doc/usage/restructuredtext/roles.doctree
new file mode 100644
index 000000000..7452fce78
Binary files /dev/null and b/_build/.doctrees/doc/usage/restructuredtext/roles.doctree differ
diff --git a/_build/.doctrees/doc/usage/theming.doctree b/_build/.doctrees/doc/usage/theming.doctree
new file mode 100644
index 000000000..bc276e04b
Binary files /dev/null and b/_build/.doctrees/doc/usage/theming.doctree differ
diff --git a/_build/.doctrees/environment.pickle b/_build/.doctrees/environment.pickle
new file mode 100644
index 000000000..b3a33ee9e
Binary files /dev/null and b/_build/.doctrees/environment.pickle differ
diff --git a/_build/.doctrees/index.doctree b/_build/.doctrees/index.doctree
new file mode 100644
index 000000000..f9c2bebd2
Binary files /dev/null and b/_build/.doctrees/index.doctree differ
diff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree
new file mode 100644
index 000000000..a52691b5a
Binary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/base.doctree differ
diff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree
new file mode 100644
index 000000000..8ff9fe679
Binary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/class.doctree differ
diff --git a/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree
new file mode 100644
index 000000000..e5fc65c35
Binary files /dev/null and b/_build/.doctrees/sphinx/ext/autosummary/templates/autosummary/module.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree b/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree
new file mode 100644
index 000000000..7e8fa089a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-add_enumerable_node/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree b/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree
new file mode 100644
index 000000000..d79f6a4e0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-api-set-translator/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-autosummary/index.doctree b/_build/.doctrees/tests/roots/test-autosummary/index.doctree
new file mode 100644
index 000000000..316c89d3c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-autosummary/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree b/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree
new file mode 100644
index 000000000..d596ef431
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-autosummary/sphinx.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-basic/index.doctree b/_build/.doctrees/tests/roots/test-basic/index.doctree
new file mode 100644
index 000000000..c43d6e29c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-basic/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree b/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree
new file mode 100644
index 000000000..30cf9406e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-build-html-translator/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree
new file mode 100644
index 000000000..98670fb05
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree
new file mode 100644
index 000000000..22dca4afc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_1.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree
new file mode 100644
index 000000000..00fd9899c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/foo_2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree
new file mode 100644
index 000000000..f3c4066c1
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/foo/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree b/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree
new file mode 100644
index 000000000..2dd837266
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-dirhtml/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree
new file mode 100644
index 000000000..3573bef71
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree
new file mode 100644
index 000000000..f4250062a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-builder-gettext-dont-rebuild-mo/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-changes/base.doctree b/_build/.doctrees/tests/roots/test-changes/base.doctree
new file mode 100644
index 000000000..c9e6a1fa6
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/base.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-changes/c-api.doctree b/_build/.doctrees/tests/roots/test-changes/c-api.doctree
new file mode 100644
index 000000000..d7cf7f863
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/c-api.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-changes/contents.doctree b/_build/.doctrees/tests/roots/test-changes/contents.doctree
new file mode 100644
index 000000000..cc815bdbd
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/contents.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-changes/library/utils.doctree b/_build/.doctrees/tests/roots/test-changes/library/utils.doctree
new file mode 100644
index 000000000..6c72d7e4d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-changes/library/utils.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-circular/index.doctree b/_build/.doctrees/tests/roots/test-circular/index.doctree
new file mode 100644
index 000000000..3f99a4c86
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-circular/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-circular/sub.doctree b/_build/.doctrees/tests/roots/test-circular/sub.doctree
new file mode 100644
index 000000000..0e2f6e15b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-circular/sub.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-correct-year/index.doctree b/_build/.doctrees/tests/roots/test-correct-year/index.doctree
new file mode 100644
index 000000000..24cefad5a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-correct-year/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-default_role/foo.doctree b/_build/.doctrees/tests/roots/test-default_role/foo.doctree
new file mode 100644
index 000000000..47f82305d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-default_role/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-default_role/index.doctree b/_build/.doctrees/tests/roots/test-default_role/index.doctree
new file mode 100644
index 000000000..82622659e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-default_role/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/caption.doctree b/_build/.doctrees/tests/roots/test-directive-code/caption.doctree
new file mode 100644
index 000000000..c7f8fc73f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/caption.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/classes.doctree b/_build/.doctrees/tests/roots/test-directive-code/classes.doctree
new file mode 100644
index 000000000..3d37d06b3
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/classes.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree b/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree
new file mode 100644
index 000000000..9d86e0b58
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/emphasize.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/force.doctree b/_build/.doctrees/tests/roots/test-directive-code/force.doctree
new file mode 100644
index 000000000..f606f0c3c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/force.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree b/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree
new file mode 100644
index 000000000..c06b9de6f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/highlight.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/index.doctree b/_build/.doctrees/tests/roots/test-directive-code/index.doctree
new file mode 100644
index 000000000..375e5285f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree b/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree
new file mode 100644
index 000000000..adb15cd1f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/linenos.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree b/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree
new file mode 100644
index 000000000..672a7b535
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/linenothreshold.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree b/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree
new file mode 100644
index 000000000..6b6f378ae
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/namedblocks.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree b/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree
new file mode 100644
index 000000000..a6b6d8291
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/py-decorators.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-code/python.doctree b/_build/.doctrees/tests/roots/test-directive-code/python.doctree
new file mode 100644
index 000000000..ab82cc27d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-code/python.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-only/index.doctree b/_build/.doctrees/tests/roots/test-directive-only/index.doctree
new file mode 100644
index 000000000..cb6f02fbb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-only/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directive-only/only.doctree b/_build/.doctrees/tests/roots/test-directive-only/only.doctree
new file mode 100644
index 000000000..77651c020
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directive-only/only.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-directives-raw/index.doctree b/_build/.doctrees/tests/roots/test-directives-raw/index.doctree
new file mode 100644
index 000000000..485983a8d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-directives-raw/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree b/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree
new file mode 100644
index 000000000..7d9fea125
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-docutilsconf/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree b/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree
new file mode 100644
index 000000000..66ff12b9d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/anon-dup-decl.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree b/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree
new file mode 100644
index 000000000..ad927464a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/function_param_target.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-c/index.doctree b/_build/.doctrees/tests/roots/test-domain-c/index.doctree
new file mode 100644
index 000000000..700859092
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree b/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree
new file mode 100644
index 000000000..225214d50
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/namespace.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree b/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree
new file mode 100644
index 000000000..4822daa1b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-c/semicolon.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree
new file mode 100644
index 000000000..7c7034cc3
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/anon-dup-decl.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree
new file mode 100644
index 000000000..1d0962580
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/any-role.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree
new file mode 100644
index 000000000..a906d3af5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/backslash.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree
new file mode 100644
index 000000000..b34f8790d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree
new file mode 100644
index 000000000..58ec0ad20
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/lookup-key-overload.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree
new file mode 100644
index 000000000..d84ee48d5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/multi-decl-lookup.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree
new file mode 100644
index 000000000..a0a04ef3c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-ok.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree
new file mode 100644
index 000000000..e4fb4ddc4
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles-targets-warn.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree
new file mode 100644
index 000000000..709dc1d58
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree
new file mode 100644
index 000000000..33b81f627
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/roles2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree
new file mode 100644
index 000000000..9a5d3e91b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/semicolon.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree
new file mode 100644
index 000000000..bd69e3883
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/warn-template-param-qualified-name.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree b/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree
new file mode 100644
index 000000000..c10d087ce
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-cpp/xref_consistency.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-js/index.doctree b/_build/.doctrees/tests/roots/test-domain-js/index.doctree
new file mode 100644
index 000000000..7701e3245
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-js/module.doctree b/_build/.doctrees/tests/roots/test-domain-js/module.doctree
new file mode 100644
index 000000000..9d39caccc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/module.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-js/roles.doctree b/_build/.doctrees/tests/roots/test-domain-js/roles.doctree
new file mode 100644
index 000000000..c90ab7b09
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-js/roles.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree b/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree
new file mode 100644
index 000000000..57d1c3282
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py-xref-warning/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-py/index.doctree b/_build/.doctrees/tests/roots/test-domain-py/index.doctree
new file mode 100644
index 000000000..c5e3ec2e5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-py/module.doctree b/_build/.doctrees/tests/roots/test-domain-py/module.doctree
new file mode 100644
index 000000000..29a82fe16
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/module.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree b/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree
new file mode 100644
index 000000000..a48a652d2
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/module_option.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-domain-py/roles.doctree b/_build/.doctrees/tests/roots/test-domain-py/roles.doctree
new file mode 100644
index 000000000..fa599b027
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-domain-py/roles.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree b/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree
new file mode 100644
index 000000000..804e2bff2
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-double-inheriting-theme/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree b/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree
new file mode 100644
index 000000000..33e5129ae
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-epub-anchor-id/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree b/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree
new file mode 100644
index 000000000..3b5ed26e1
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autodoc/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree
new file mode 100644
index 000000000..30f23a13f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosectionlabel-prefix-document/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree
new file mode 100644
index 000000000..601379019
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosectionlabel/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree
new file mode 100644
index 000000000..c32fcfd6c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-filename-map/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree
new file mode 100644
index 000000000..479ded0cd
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-imported_members/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree
new file mode 100644
index 000000000..f32c38196
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-mock_imports/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree
new file mode 100644
index 000000000..9a2fe3a1e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-recursive/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree
new file mode 100644
index 000000000..de6cc0ca5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-skip-member/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree
new file mode 100644
index 000000000..70e30a373
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-template/_templates/empty.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree
new file mode 100644
index 000000000..cdb43bfd4
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary-template/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree b/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree
new file mode 100644
index 000000000..7cc48d23f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-autosummary/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree b/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree
new file mode 100644
index 000000000..071ec6972
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-coverage/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree
new file mode 100644
index 000000000..0dd100ee7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/dir/inner.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree
new file mode 100644
index 000000000..b23a142c2
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-doctest-with-autodoc/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree b/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree
new file mode 100644
index 000000000..79f82b9aa
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-githubpages/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree b/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree
new file mode 100644
index 000000000..698106991
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-graphviz/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree b/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree
new file mode 100644
index 000000000..5f134cc47
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-ifconfig/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree b/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree
new file mode 100644
index 000000000..ed7bdd130
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-imgconverter/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree b/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree
new file mode 100644
index 000000000..fcf5051a7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-inheritance_diagram/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree b/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree
new file mode 100644
index 000000000..5376f5c8e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-intersphinx-cppdomain/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree b/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree
new file mode 100644
index 000000000..2788e54ae
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math-compat/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree b/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree
new file mode 100644
index 000000000..508db5cc1
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math-simple/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-math/index.doctree b/_build/.doctrees/tests/roots/test-ext-math/index.doctree
new file mode 100644
index 000000000..506cbfc72
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-math/math.doctree b/_build/.doctrees/tests/roots/test-ext-math/math.doctree
new file mode 100644
index 000000000..afc50ffd0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/math.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-math/page.doctree b/_build/.doctrees/tests/roots/test-ext-math/page.doctree
new file mode 100644
index 000000000..64df829ed
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-math/page.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree b/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree
new file mode 100644
index 000000000..ff74d24b8
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree b/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree
new file mode 100644
index 000000000..d481b13eb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-todo/index.doctree b/_build/.doctrees/tests/roots/test-ext-todo/index.doctree
new file mode 100644
index 000000000..d71466068
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-todo/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree
new file mode 100644
index 000000000..fa43d03da
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode-find/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree
new file mode 100644
index 000000000..58d1314c2
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree b/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree
new file mode 100644
index 000000000..c94bc2e68
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-ext-viewcode/objects.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-footnotes/bar.doctree b/_build/.doctrees/tests/roots/test-footnotes/bar.doctree
new file mode 100644
index 000000000..f7ac4c5cb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-footnotes/baz.doctree b/_build/.doctrees/tests/roots/test-footnotes/baz.doctree
new file mode 100644
index 000000000..fd17b8a67
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-footnotes/index.doctree b/_build/.doctrees/tests/roots/test-footnotes/index.doctree
new file mode 100644
index 000000000..8d1c8cbc5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-footnotes/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-gettext-template/index.doctree b/_build/.doctrees/tests/roots/test-gettext-template/index.doctree
new file mode 100644
index 000000000..995ad378e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-gettext-template/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-glossary/index.doctree b/_build/.doctrees/tests/roots/test-glossary/index.doctree
new file mode 100644
index 000000000..18032889a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-glossary/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree
new file mode 100644
index 000000000..e69dc3dae
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/extra/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_assets/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/index.doctree
new file mode 100644
index 000000000..7dc0b5ad7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree b/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree
new file mode 100644
index 000000000..64beee9b1
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_assets/static/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_entity/index.doctree b/_build/.doctrees/tests/roots/test-html_entity/index.doctree
new file mode 100644
index 000000000..6e7906a98
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_entity/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree b/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree
new file mode 100644
index 000000000..19620c725
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_scaled_image_link/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-html_style/index.doctree b/_build/.doctrees/tests/roots/test-html_style/index.doctree
new file mode 100644
index 000000000..cfecfa217
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-html_style/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree b/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree
new file mode 100644
index 000000000..1c0ce7a55
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-image-in-parsed-literal/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-image-in-section/index.doctree b/_build/.doctrees/tests/roots/test-image-in-section/index.doctree
new file mode 100644
index 000000000..2b6b2156b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-image-in-section/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-images/index.doctree b/_build/.doctrees/tests/roots/test-images/index.doctree
new file mode 100644
index 000000000..985c2ae72
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-images/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-images/subdir/index.doctree b/_build/.doctrees/tests/roots/test-images/subdir/index.doctree
new file mode 100644
index 000000000..04df0d89f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-images/subdir/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree b/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree
new file mode 100644
index 000000000..cac213d30
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-index_on_title/contents.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree b/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree
new file mode 100644
index 000000000..035493d9f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/basic_diagram.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree
new file mode 100644
index 000000000..ba4092f10
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_module_w_2_top_classes.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree
new file mode 100644
index 000000000..f03897080
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_1_top_class.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree
new file mode 100644
index 000000000..b5a3ff766
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_2_top_classes.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree
new file mode 100644
index 000000000..94277b93a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_nested_classes.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree
new file mode 100644
index 000000000..8ead8f0f8
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/diagram_w_parts.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-inheritance/index.doctree b/_build/.doctrees/tests/roots/test-inheritance/index.doctree
new file mode 100644
index 000000000..2d4348f5f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-inheritance/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree b/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree
new file mode 100644
index 000000000..0495d1279
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-keep_warnings/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree b/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree
new file mode 100644
index 000000000..cc928ee9d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree b/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree
new file mode 100644
index 000000000..dda37824e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-babel/index.doctree b/_build/.doctrees/tests/roots/test-latex-babel/index.doctree
new file mode 100644
index 000000000..0ac9bf3ce
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-babel/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree b/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree
new file mode 100644
index 000000000..ebd8673b0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-equations/equations.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree b/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree
new file mode 100644
index 000000000..a82060ef4
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-figure-in-admonition/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree b/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree
new file mode 100644
index 000000000..5dd622f54
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-includegraphics/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-index/index.doctree b/_build/.doctrees/tests/roots/test-latex-index/index.doctree
new file mode 100644
index 000000000..e3835962a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-index/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-labels/index.doctree b/_build/.doctrees/tests/roots/test-latex-labels/index.doctree
new file mode 100644
index 000000000..0e820235d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-labels/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree b/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree
new file mode 100644
index 000000000..878cca14a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-labels/otherdoc.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree
new file mode 100644
index 000000000..cc237dd6b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree
new file mode 100644
index 000000000..d8f512686
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/indexhowto.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree b/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree
new file mode 100644
index 000000000..6354ee1b7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-numfig/indexmanual.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-table/complex.doctree b/_build/.doctrees/tests/roots/test-latex-table/complex.doctree
new file mode 100644
index 000000000..0f7bb94ac
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/complex.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-table/index.doctree b/_build/.doctrees/tests/roots/test-latex-table/index.doctree
new file mode 100644
index 000000000..d008b9e92
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree b/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree
new file mode 100644
index 000000000..b8c9787a7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/longtable.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree b/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree
new file mode 100644
index 000000000..54cb9343d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-table/tabular.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-theme/index.doctree b/_build/.doctrees/tests/roots/test-latex-theme/index.doctree
new file mode 100644
index 000000000..b2170e0da
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-theme/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-title/index.doctree b/_build/.doctrees/tests/roots/test-latex-title/index.doctree
new file mode 100644
index 000000000..d3a3817d0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-title/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree b/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree
new file mode 100644
index 000000000..b6c13c326
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-latex-unicode/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree
new file mode 100644
index 000000000..80d78eb27
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-anchor/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree
new file mode 100644
index 000000000..9bf0fe832
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-https/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree
new file mode 100644
index 000000000..338e74073
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver-two-links/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree b/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree
new file mode 100644
index 000000000..95ae322cd
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-linkcheck-localserver/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-manpage_url/index.doctree b/_build/.doctrees/tests/roots/test-manpage_url/index.doctree
new file mode 100644
index 000000000..67a774982
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-manpage_url/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-markup-citation/index.doctree b/_build/.doctrees/tests/roots/test-markup-citation/index.doctree
new file mode 100644
index 000000000..823edc766
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-markup-citation/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree b/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree
new file mode 100644
index 000000000..939c4cd3b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-markup-rubric/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree b/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree
new file mode 100644
index 000000000..e781ed495
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-maxlistdepth/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-metadata/index.doctree b/_build/.doctrees/tests/roots/test-metadata/index.doctree
new file mode 100644
index 000000000..a7b460199
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-metadata/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree b/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree
new file mode 100644
index 000000000..ac52773ec
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree b/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree
new file mode 100644
index 000000000..67d8221fb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree b/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree
new file mode 100644
index 000000000..3e48ffdf7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/index.doctree b/_build/.doctrees/tests/roots/test-need-escaped/index.doctree
new file mode 100644
index 000000000..1ff0180ed
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree b/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree
new file mode 100644
index 000000000..78bcfbae7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/quux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree b/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree
new file mode 100644
index 000000000..3bbb9f2bb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-need-escaped/qux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree b/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree
new file mode 100644
index 000000000..d5cca6a3d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-nested-enumerated-list/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-nested-tables/index.doctree b/_build/.doctrees/tests/roots/test-nested-tables/index.doctree
new file mode 100644
index 000000000..8373d89d0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-nested-tables/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree b/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree
new file mode 100644
index 000000000..b56b424d0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numbered-circular/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree b/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree
new file mode 100644
index 000000000..16eab2721
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numbered-circular/sub.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numfig/bar.doctree b/_build/.doctrees/tests/roots/test-numfig/bar.doctree
new file mode 100644
index 000000000..ca7c41739
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numfig/baz.doctree b/_build/.doctrees/tests/roots/test-numfig/baz.doctree
new file mode 100644
index 000000000..f0f77256e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numfig/foo.doctree b/_build/.doctrees/tests/roots/test-numfig/foo.doctree
new file mode 100644
index 000000000..324325c5a
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-numfig/index.doctree b/_build/.doctrees/tests/roots/test-numfig/index.doctree
new file mode 100644
index 000000000..f863474a0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-numfig/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree b/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree
new file mode 100644
index 000000000..46f0e37bc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Bare.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree b/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree
new file mode 100644
index 000000000..f0954ebc6
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Dup1.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree b/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree
new file mode 100644
index 000000000..60cac2cf6
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/Dup2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree b/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree
new file mode 100644
index 000000000..c10922d39
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/LineContinuation.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/P1.doctree b/_build/.doctrees/tests/roots/test-productionlist/P1.doctree
new file mode 100644
index 000000000..fac46037e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/P1.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/P2.doctree b/_build/.doctrees/tests/roots/test-productionlist/P2.doctree
new file mode 100644
index 000000000..24b250a38
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/P2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree b/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree
new file mode 100644
index 000000000..b7710894d
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/firstLineRule.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-productionlist/index.doctree b/_build/.doctrees/tests/roots/test-productionlist/index.doctree
new file mode 100644
index 000000000..388a01d46
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-productionlist/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-prolog/index.doctree b/_build/.doctrees/tests/roots/test-prolog/index.doctree
new file mode 100644
index 000000000..c401844ae
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-prolog/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree b/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree
new file mode 100644
index 000000000..28082539b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-prolog/restructuredtext.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree b/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree
new file mode 100644
index 000000000..a5a8d93eb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-pycode-egg/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree b/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree
new file mode 100644
index 000000000..6a2242aca
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-reST-code-block/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree b/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree
new file mode 100644
index 000000000..19757abd5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-refonly_bullet_list/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-roles-download/index.doctree b/_build/.doctrees/tests/roots/test-roles-download/index.doctree
new file mode 100644
index 000000000..fa06530f3
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-roles-download/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-search/index.doctree b/_build/.doctrees/tests/roots/test-search/index.doctree
new file mode 100644
index 000000000..8b0192662
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-search/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-search/nosearch.doctree b/_build/.doctrees/tests/roots/test-search/nosearch.doctree
new file mode 100644
index 000000000..91527c548
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-search/nosearch.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-search/tocitem.doctree b/_build/.doctrees/tests/roots/test-search/tocitem.doctree
new file mode 100644
index 000000000..c7f841029
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-search/tocitem.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-smartquotes/index.doctree b/_build/.doctrees/tests/roots/test-smartquotes/index.doctree
new file mode 100644
index 000000000..197eb6a29
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-smartquotes/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-stylesheets/index.doctree b/_build/.doctrees/tests/roots/test-stylesheets/index.doctree
new file mode 100644
index 000000000..4b3be2e53
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-stylesheets/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree b/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree
new file mode 100644
index 000000000..de4640b02
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-templating/_templates/autosummary/class.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-theming/index.doctree b/_build/.doctrees/tests/roots/test-theming/index.doctree
new file mode 100644
index 000000000..095c805c1
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-theming/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree b/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree
new file mode 100644
index 000000000..ce61bc82e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree b/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree
new file mode 100644
index 000000000..d5ba02964
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree b/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree
new file mode 100644
index 000000000..2135f09fb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-tocdepth/index.doctree b/_build/.doctrees/tests/roots/test-tocdepth/index.doctree
new file mode 100644
index 000000000..2d193d26b
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-tocdepth/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree
new file mode 100644
index 000000000..a1e5f5ec0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-duplicated/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree b/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree
new file mode 100644
index 000000000..1dbb7c667
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-duplicated/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree b/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree
new file mode 100644
index 000000000..0aad2786e
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-empty/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree
new file mode 100644
index 000000000..bd4aacd57
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_1.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree
new file mode 100644
index 000000000..430430387
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree
new file mode 100644
index 000000000..777c0c778
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_3.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree
new file mode 100644
index 000000000..ae4c45ccb
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/bar_4/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree
new file mode 100644
index 000000000..3b71b37dc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/bar/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree
new file mode 100644
index 000000000..cf603e9bc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree
new file mode 100644
index 000000000..b908ea702
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree
new file mode 100644
index 000000000..a0c620458
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree
new file mode 100644
index 000000000..e83e12c50
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/quux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree
new file mode 100644
index 000000000..17df8220f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree
new file mode 100644
index 000000000..83a52c9a5
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_1.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree
new file mode 100644
index 000000000..0ec225daa
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-glob/qux/qux_2.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree
new file mode 100644
index 000000000..ac028a4a7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree
new file mode 100644
index 000000000..71861314f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree
new file mode 100644
index 000000000..c7a65d642
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree
new file mode 100644
index 000000000..ee1d40c36
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree b/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree
new file mode 100644
index 000000000..2788c1a4c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree-maxdepth/qux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/bar.doctree b/_build/.doctrees/tests/roots/test-toctree/bar.doctree
new file mode 100644
index 000000000..3183985e7
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/bar.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/baz.doctree b/_build/.doctrees/tests/roots/test-toctree/baz.doctree
new file mode 100644
index 000000000..281741cf4
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/baz.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/foo.doctree b/_build/.doctrees/tests/roots/test-toctree/foo.doctree
new file mode 100644
index 000000000..2c77ec1b0
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/foo.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/index.doctree b/_build/.doctrees/tests/roots/test-toctree/index.doctree
new file mode 100644
index 000000000..389741102
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/quux.doctree b/_build/.doctrees/tests/roots/test-toctree/quux.doctree
new file mode 100644
index 000000000..4f349a314
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/quux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/qux.doctree b/_build/.doctrees/tests/roots/test-toctree/qux.doctree
new file mode 100644
index 000000000..5963de4bc
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/qux.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree b/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree
new file mode 100644
index 000000000..d78ec8972
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-toctree/tocdepth.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree b/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree
new file mode 100644
index 000000000..de4995f14
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-trim_doctest_flags/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-warnings/index.doctree b/_build/.doctrees/tests/roots/test-warnings/index.doctree
new file mode 100644
index 000000000..4fea3ae5c
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-warnings/index.doctree differ
diff --git a/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree b/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree
new file mode 100644
index 000000000..f852d9c8f
Binary files /dev/null and b/_build/.doctrees/tests/roots/test-warnings/undecodable.doctree differ
diff --git a/_build/CONTRIBUTING.txt b/_build/CONTRIBUTING.txt
new file mode 100644
index 000000000..0866f70c6
--- /dev/null
+++ b/_build/CONTRIBUTING.txt
@@ -0,0 +1,17 @@
+Contributing to Sphinx
+**********************
+
+Interested in contributing to Sphinx? Hurrah! We welcome all forms of
+contribution, including code patches, documentation improvements and
+bug reports/feature requests.
+
+Our contributing guide can be found online at:
+
+https://www.sphinx-doc.org/en/master/internals/contributing.html
+
+You can also browse it from this repository from
+"doc/internals/contributing.rst"
+
+Sphinx uses GitHub to host source code, track patches and bugs, and
+more. Please make an effort to provide as much detail as possible when
+filing bugs.
diff --git a/_build/README.txt b/_build/README.txt
new file mode 100644
index 000000000..52876c6b1
--- /dev/null
+++ b/_build/README.txt
@@ -0,0 +1,103 @@
+Sphinx
+******
+
+[image: Package on PyPI][image][image: Documentation
+Status][image][image: Build Status (Travis CI)][image][image: Build
+Status (AppVeyor)][image][image: Build Status
+(CircleCI)][image][image: Code Coverage Status
+(Codecov)][image][image: BSD 3 Clause][image][image: Open Source
+Helpers badge][image]
+
+Sphinx is a tool that makes it easy to create intelligent and
+beautiful documentation for Python projects (or other documents
+consisting of multiple reStructuredText sources), written by Georg
+Brandl.  It was originally created for the new Python documentation,
+and has excellent facilities for Python project documentation, but
+C/C++ is supported as well, and more languages are planned.
+
+Sphinx uses reStructuredText as its markup language, and many of its
+strengths come from the power and straightforwardness of
+reStructuredText and its parsing and translating suite, the Docutils.
+
+Among its features are the following:
+
+* Output formats: HTML (including derivative formats such as HTML
+  Help, Epub and Qt Help), plain text, manual pages and LaTeX or
+  direct PDF output using rst2pdf
+
+* Extensive cross-references: semantic markup and automatic links for
+  functions, classes, glossary terms and similar pieces of information
+
+* Hierarchical structure: easy definition of a document tree, with
+  automatic links to siblings, parents and children
+
+* Automatic indices: general index as well as a module index
+
+* Code handling: automatic highlighting using the Pygments highlighter
+
+* Flexible HTML output using the Jinja 2 templating engine
+
+* Various extensions are available, e.g. for automatic testing of
+  snippets and inclusion of appropriately formatted docstrings
+
+* Setuptools integration
+
+For more information, refer to the the documentation.
+
+
+Installation
+============
+
+Sphinx is published on PyPI and can be installed from there:
+
+   pip install -U sphinx
+
+We also publish beta releases:
+
+   pip install -U --pre sphinx
+
+If you wish to install *Sphinx* for development purposes, refer to the
+contributors guide.
+
+
+Documentation
+=============
+
+Documentation is available from sphinx-doc.org.
+
+
+Get in touch
+============
+
+* Report bugs, suggest features or view the source code on GitHub.
+
+* For less well defined questions or ideas, use the mailing list.
+
+Please adhere to our code of conduct.
+
+
+Testing
+=======
+
+Continuous testing is provided by Travis (for unit tests and style
+checks on Linux), AppVeyor (for unit tests on Windows), and CircleCI
+(for large processes like TeX compilation).
+
+For information on running tests locally, refer to the contributors
+guide.
+
+
+Contributing
+============
+
+Refer to the contributors guide.
+
+
+Release signatures
+==================
+
+Releases are signed with following keys:
+
+* 498D6B9E
+
+* 5EBA0E07
diff --git a/_build/doc/changes.txt b/_build/doc/changes.txt
new file mode 100644
index 000000000..518a23216
--- /dev/null
+++ b/_build/doc/changes.txt
@@ -0,0 +1,9164 @@
+Changelog
+*********
+
+
+Release 3.5.0 (in development)
+==============================
+
+
+Dependencies
+------------
+
+
+Incompatible changes
+--------------------
+
+
+Deprecated
+----------
+
+* "sphinx.ext.autodoc.importer.get_module_members()"
+
+
+Features added
+--------------
+
+* #8022: autodoc: autodata and autoattribute directives does not show
+  right-hand value of the variable if docstring contains ":meta hide-
+  value:" in info-field-list
+
+
+Bugs fixed
+----------
+
+* #741: autodoc: inherited-members doesn't work for instance
+  attributes on super class
+
+* #8592: autodoc: ":meta public:" does not effect to variables
+
+
+Testing
+-------
+
+
+Release 3.4.2 (in development)
+==============================
+
+
+Dependencies
+------------
+
+
+Incompatible changes
+--------------------
+
+
+Deprecated
+----------
+
+
+Features added
+--------------
+
+
+Bugs fixed
+----------
+
+
+Testing
+-------
+
+
+Release 3.4.1 (released Dec 25, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #8559: autodoc: AttributeError is raised when using forward-
+  reference type annotations
+
+* #8568: autodoc: TypeError is raised on checking slots attribute
+
+* #8567: autodoc: Instance attributes are incorrectly added to Parent
+  class
+
+* #8566: autodoc: The "autodoc-process-docstring" event is emitted to
+  the alias classes unexpectedly
+
+* #8583: autodoc: Unnecessary object comparision via "__eq__" method
+
+* #8565: linkcheck: Fix PriorityQueue crash when link tuples are not
+  comparable
+
+
+Release 3.4.0 (released Dec 20, 2020)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #8105: autodoc: the signature of class constructor will be shown for
+  decorated classes, not a signature of decorator
+
+
+Deprecated
+----------
+
+* The "follow_wrapped" argument of "sphinx.util.inspect.signature()"
+
+* The "no_docstring" argument of
+  "sphinx.ext.autodoc.Documenter.add_content()"
+
+* "sphinx.ext.autodoc.Documenter.get_object_members()"
+
+* "sphinx.ext.autodoc.DataDeclarationDocumenter"
+
+* "sphinx.ext.autodoc.GenericAliasDocumenter"
+
+* "sphinx.ext.autodoc.InstanceAttributeDocumenter"
+
+* "sphinx.ext.autodoc.SlotsAttributeDocumenter"
+
+* "sphinx.ext.autodoc.TypeVarDocumenter"
+
+* "sphinx.ext.autodoc.importer._getannotations()"
+
+* "sphinx.ext.autodoc.importer._getmro()"
+
+* "sphinx.pycode.ModuleAnalyzer.parse()"
+
+* "sphinx.util.osutil.movefile()"
+
+* "sphinx.util.requests.is_ssl_error()"
+
+
+Features added
+--------------
+
+* #8119: autodoc: Allow to determine whether a member not included in
+  "__all__" attribute of the module should be documented or not via
+  >>:event:`autodoc-skip-member`<< event
+
+* #8219: autodoc: Parameters for generic class are not shown when
+  super class is a generic class and show-inheritance option is given
+  (in Python 3.7 or above)
+
+* autodoc: Add "Documenter.config" as a shortcut to access the config
+  object
+
+* autodoc: Add Optional[t] to annotation of function and method if a
+  default value equal to None is set.
+
+* #8209: autodoc: Add ":no-value:" option to "autoattribute" and
+  "autodata" directive to suppress the default value of the variable
+
+* #8460: autodoc: Support custom types defined by typing.NewType
+
+* #8285: napoleon: Add >>:confval:`napoleon_attr_annotations`<< to
+  merge type hints on source code automatically if any type is
+  specified in docstring
+
+* #8236: napoleon: Support numpydoc's "Receives" section
+
+* #6914: Add a new event >>:event:`warn-missing-reference`<< to custom
+  warning messages when failed to resolve a cross-reference
+
+* #6914: Emit a detailed warning when failed to resolve a ":ref:"
+  reference
+
+* #6629: linkcheck: The builder now handles rate limits. See
+  >>:confval:`linkcheck_retry_on_rate_limit`<< for details.
+
+
+Bugs fixed
+----------
+
+* #7613: autodoc: autodoc does not respect __signature__ of the class
+
+* #4606: autodoc: the location of the warning is incorrect for
+  inherited method
+
+* #8105: autodoc: the signature of class constructor is incorrect if
+  the class is decorated
+
+* #8434: autodoc: >>:confval:`autodoc_type_aliases`<< does not effect
+  to variables and attributes
+
+* #8443: autodoc: autodata directive can't create document for PEP-526
+  based type annotated variables
+
+* #8443: autodoc: autoattribute directive can't create document for
+  PEP-526 based uninitalized variables
+
+* #8480: autodoc: autoattribute could not create document for
+  __slots__ attributes
+
+* #8503: autodoc: autoattribute could not create document for a
+  GenericAlias as class attributes correctly
+
+* #8534: autodoc: autoattribute could not create document for a
+  commented attribute in alias class
+
+* #8452: autodoc: autodoc_type_aliases doesn't work when
+  autodoc_typehints is set to "description"
+
+* #8541: autodoc: autodoc_type_aliases doesn't work for the type
+  annotation to instance attributes
+
+* #8460: autodoc: autodata and autoattribute directives do not display
+  type information of TypeVars
+
+* #8493: autodoc: references to builtins not working in class aliases
+
+* #8522: autodoc:  "__bool__" method could be called
+
+* #8067: autodoc: A typehint for the instance variable having
+  type_comment on super class is not displayed
+
+* #8545: autodoc: a __slots__ attribute is not documented even having
+  docstring
+
+* #741: autodoc: inherited-members doesn't work for instance
+  attributes on super class
+
+* #8477: autosummary: non utf-8 reST files are generated when template
+  contains multibyte characters
+
+* #8501: autosummary: summary extraction splits text after "el at."
+  unexpectedly
+
+* #8524: html: Wrong url_root has been generated on a document named
+  "index"
+
+* #8419: html search: Do not load "language_data.js" in non-search
+  pages
+
+* #8549: i18n: "-D gettext_compact=0" is no longer working
+
+* #8454: graphviz: The layout option for graph and digraph directives
+  don't work
+
+* #8131: linkcheck: Use GET when HEAD requests cause Too Many
+  Redirects, to accommodate infinite redirect loops on HEAD
+
+* #8437: Makefile: "make clean" with empty BUILDDIR is dangerous
+
+* #8365: py domain: ":type:" and ":rtype:" gives false ambiguous class
+  lookup warnings
+
+* #8352: std domain: Failed to parse an option that starts with
+  bracket
+
+* #8519: LaTeX: Prevent page brake in the middle of a seealso
+
+* #8520: C, fix copying of AliasNode.
+
+
+Release 3.3.1 (released Nov 12, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #8372: autodoc: autoclass directive became slower than Sphinx-3.2
+
+* #7727: autosummary: raise PycodeError when documenting python
+  package without __init__.py
+
+* #8350: autosummary: autosummary_mock_imports causes slow down builds
+
+* #8364: C, properly initialize attributes in empty symbols.
+
+* #8399: i18n: Put system locale path after the paths specified by
+  configuration
+
+
+Release 3.3.0 (released Nov 02, 2020)
+=====================================
+
+
+Deprecated
+----------
+
+* "sphinx.builders.latex.LaTeXBuilder.usepackages"
+
+* "sphinx.builders.latex.LaTeXBuilder.usepackages_afger_hyperref"
+
+* "sphinx.ext.autodoc.SingledispatchFunctionDocumenter"
+
+* "sphinx.ext.autodoc.SingledispatchMethodDocumenter"
+
+
+Features added
+--------------
+
+* #8100: html: Show a better error message for failures on copying
+  html_static_files
+
+* #8141: C: added a "maxdepth" option to "c:alias" to insert nested
+  declarations.
+
+* #8081: LaTeX: Allow to add LaTeX package via
+  "app.add_latex_package()" until just before writing .tex file
+
+* #7996: manpage: Add >>:confval:`man_make_section_directory`<< to
+  make a section directory on build man page
+
+* #8289: epub: Allow to suppress "duplicated ToC entry found" warnings
+  from epub builder using >>:confval:`suppress_warnings`<<.
+
+* #8298: sphinx-quickstart: Add "sphinx-quickstart --no-sep" option
+
+* #8304: sphinx.testing: Register public markers in
+  sphinx.testing.fixtures
+
+* #8051: napoleon: use the obj role for all See Also items
+
+* #8050: napoleon: Apply >>:confval:`napoleon_preprocess_types`<< to
+  every field
+
+* C and C++, show line numbers for previous declarations when
+  duplicates are detected.
+
+* #8183: Remove substitution_reference nodes from doctree only on
+  LaTeX builds
+
+
+Bugs fixed
+----------
+
+* #8085: i18n: Add support for having single text domain
+
+* #6640: i18n: Failed to override system message translation
+
+* #8143: autodoc: AttributeError is raised when False value is passed
+  to autodoc_default_options
+
+* #8103: autodoc: functools.cached_property is not considered as a
+  property
+
+* #8190: autodoc: parsing error is raised if some extension replaces
+  docstring by string not ending with blank lines
+
+* #8142: autodoc: Wrong constructor signature for the class derived
+  from typing.Generic
+
+* #8157: autodoc: TypeError is raised when annotation has invalid
+  __args__
+
+* #7964: autodoc: Tuple in default value is wrongly rendered
+
+* #8200: autodoc: type aliases break type formatting of autoattribute
+
+* #7786: autodoc: can't detect overloaded methods defined in other
+  file
+
+* #8294: autodoc: single-string __slots__ is not handled correctly
+
+* #7785: autodoc: autodoc_typehints='none' does not effect to
+  overloaded functions
+
+* #8192: napoleon: description is disappeared when it contains inline
+  literals
+
+* #8142: napoleon: Potential of regex denial of service in google
+  style docs
+
+* #8169: LaTeX: pxjahyper loaded even when latex_engine is not platex
+
+* #8215: LaTeX: 'oneside' classoption causes build warning
+
+* #8175: intersphinx: Potential of regex denial of service by broken
+  inventory
+
+* #8277: sphinx-build: missing and redundant spacing (and etc) for
+  console output on building
+
+* #7973: imgconverter: Check availability of imagemagick many times
+
+* #8255: py domain: number in default argument value is changed from
+  hexadecimal to decimal
+
+* #8316: html: Prevent arrow keys changing page when button elements
+  are focused
+
+* #8343: html search: Fix unnecessary load of images when parsing the
+  document
+
+* #8254: html theme: Line numbers misalign with code lines
+
+* #8093: The highlight warning has wrong location in some builders
+  (LaTeX, singlehtml and so on)
+
+* #8215: Eliminate Fancyhdr build warnings for oneside documents
+
+* #8239: Failed to refer a token in productionlist if it is indented
+
+* #8268: linkcheck: Report HTTP errors when "linkcheck_anchors" is
+  "True"
+
+* #8245: linkcheck: take source directory into account for local files
+
+* #8321: linkcheck: "tel:" schema hyperlinks are detected as errors
+
+* #8323: linkcheck: An exit status is incorrect when links having
+  unsupported schema found
+
+* #8188: C, add missing items to internal object types dictionary,
+  e.g., preventing intersphinx from resolving them.
+
+* C, fix anon objects in intersphinx.
+
+* #8270, C++, properly reject functions as duplicate declarations if a
+  non-function declaration of the same name already exists.
+
+* C, fix references to function parameters. Link to the function
+  instead of a non-existing anchor.
+
+* #6914: figure numbers are unexpectedly assigned to uncaptioned items
+
+* #8320: make "inline" line numbers un-selectable
+
+
+Testing
+-------
+
+* #8257: Support parallel build in sphinx.testing
+
+
+Release 3.2.1 (released Aug 14, 2020)
+=====================================
+
+
+Features added
+--------------
+
+* #8095: napoleon: Add >>:confval:`napoleon_preprocess_types`<< to
+  enable the type preprocessor for numpy style docstrings
+
+* #8114: C and C++, parse function attributes after parameters and
+  qualifiers.
+
+
+Bugs fixed
+----------
+
+* #8074: napoleon: Crashes during processing C-ext module
+
+* #8088: napoleon: "Inline literal start-string without end-string"
+  warning in Numpy style Parameters section
+
+* #8084: autodoc: KeyError is raised on documenting an attribute of
+  the broken class
+
+* #8091: autodoc: AttributeError is raised on documenting an attribute
+  on Python 3.5.2
+
+* #8099: autodoc: NameError is raised when target code uses
+  "TYPE_CHECKING"
+
+* C++, fix parsing of template template paramters, broken by the fix
+  of #7944
+
+
+Release 3.2.0 (released Aug 08, 2020)
+=====================================
+
+
+Deprecated
+----------
+
+* "sphinx.ext.autodoc.members_set_option()"
+
+* "sphinx.ext.autodoc.merge_special_members_option()"
+
+* "sphinx.writers.texinfo.TexinfoWriter.desc"
+
+* C, parsing of pre-v3 style type directives and roles, along with the
+  options >>:confval:`c_allow_pre_v3`<< and
+  >>:confval:`c_warn_on_allowed_pre_v3`<<.
+
+
+Features added
+--------------
+
+* #2076: autodoc: Allow overriding of exclude-members in skip-member
+  function
+
+* #8034: autodoc: ":private-member:" can take an explicit list of
+  member names to be documented
+
+* #2024: autosummary: Add >>:confval:`autosummary_filename_map`<< to
+  avoid conflict of filenames between two object with different case
+
+* #8011: autosummary: Support instance attributes as a target of
+  autosummary directive
+
+* #7849: html: Add >>:confval:`html_codeblock_linenos_style`<< to
+  change the style of line numbers for code-blocks
+
+* #7853: C and C++, support parameterized GNU style attributes.
+
+* #7888: napoleon: Add aliases Warn and Raise.
+
+* #7690: napoleon: parse type strings and make them hyperlinks as
+  possible.  The conversion rule can be updated via
+  >>:confval:`napoleon_type_aliases`<<
+
+* #8049: napoleon: Create a hyperlink for each the type of parameter
+  when >>:confval:`napoleon_use_params`<< is False
+
+* C, added "c:alias" directive for inserting copies of existing
+  declarations.
+
+* #7745: html: inventory is broken if the docname contains a space
+
+* #7991: html search: Allow searching for numbers
+
+* #7902: html theme: Add a new option
+  >>:confval:`globaltoc_maxdepth`<< to control the behavior of
+  globaltoc in sidebar
+
+* #7840: i18n: Optimize the dependencies check on bootstrap
+
+* #7768: i18n: >>:confval:`figure_language_filename`<< supports
+  "docpath" token
+
+* #5208: linkcheck: Support checks for local links
+
+* #5090: setuptools: Link verbosity to distutils' -v and -q option
+
+* #6698: doctest: Add ":trim-doctest-flags:" and ":no-trim-doctest-
+  flags:" options to doctest, testcode and testoutput directives
+
+* #7052: add ":noindexentry:" to the Python, C, C++, and Javascript
+  domains. Update the documentation to better reflect the relationship
+  between this option and the ":noindex:" option.
+
+* #7899: C, add possibility of parsing of some pre-v3 style type
+  directives and roles and try to convert them to equivalent v3
+  directives/roles. Set the new option >>:confval:`c_allow_pre_v3`<<
+  to "True" to enable this. The warnings printed from this
+  functionality can be suppressed by setting
+  >>:confval:`c_warn_on_allowed_pre_v3``<< to "True". The
+  functionality is immediately deprecated.
+
+* #7999: C, add support for named variadic macro arguments.
+
+* #8071: Allow to suppress "self referenced toctrees" warning
+
+
+Bugs fixed
+----------
+
+* #7886: autodoc: TypeError is raised on mocking generic-typed classes
+
+* #7935: autodoc: function signature is not shown when the function
+  has a parameter having "inspect._empty" as its default value
+
+* #7901: autodoc: type annotations for overloaded functions are not
+  resolved
+
+* #904: autodoc: An instance attribute cause a crash of autofunction
+  directive
+
+* #1362: autodoc: "private-members" option does not work for class
+  attributes
+
+* #7983: autodoc: Generator type annotation is wrongly rendered in
+  py36
+
+* #8030: autodoc: An uninitialized annotated instance variable is not
+  documented when ":inherited-members:" option given
+
+* #8032: autodoc: A type hint for the instance variable defined at
+  parent class is not shown in the document of the derived class
+
+* #8041: autodoc: An annotated instance variable on super class is not
+  documented when derived class has other annotated instance variables
+
+* #7839: autosummary: cannot handle umlauts in function names
+
+* #7865: autosummary: Failed to extract summary line when
+  abbreviations found
+
+* #7866: autosummary: Failed to extract correct summary line when
+  docstring contains a hyperlink target
+
+* #7469: autosummary: "Module attributes" header is not translatable
+
+* #7940: apidoc: An extra newline is generated at the end of the rst
+  file if a module has submodules
+
+* #4258: napoleon: decorated special methods are not shown
+
+* #7799: napoleon: parameters are not escaped for combined params in
+  numpydoc
+
+* #7780: napoleon: multiple paramaters declaration in numpydoc was
+  wrongly recognized when napoleon_use_params=True
+
+* #7715: LaTeX: "numfig_secnum_depth > 1" leads to wrong figure links
+
+* #7846: html theme: XML-invalid files were generated
+
+* #7894: gettext: Wrong source info is shown when using rst_epilog
+
+* #7691: linkcheck: HEAD requests are not used for checking
+
+* #4888: i18n: Failed to add an explicit title to ":ref:" role on
+  translation
+
+* #7928: py domain: failed to resolve a type annotation for the
+  attribute
+
+* #8008: py domain: failed to parse a type annotation containing
+  ellipsis
+
+* #7994: std domain: option directive does not generate old node_id
+  compatible with 2.x or older
+
+* #7968: i18n: The content of "math" directive is interpreted as reST
+  on translation
+
+* #7768: i18n: The "root" element for
+  >>:confval:`figure_language_filename`<< is not a path that user
+  specifies in the document
+
+* #7993: texinfo: TypeError is raised for nested object descriptions
+
+* #7993: texinfo: a warning not supporting desc_signature_line node is
+  shown
+
+* #7869: "abbr" role without an explanation will show the explanation
+  from the previous abbr role
+
+* #8048: graphviz: graphviz.css was copied on building non-HTML
+  document
+
+* C and C++, removed "noindex" directive option as it did nothing.
+
+* #7619: Duplicated node IDs are generated if node has multiple IDs
+
+* #2050: Symbols sections are appeared twice in the index page
+
+* #8017: Fix circular import in sphinx.addnodes
+
+* #7986: CSS: make "highlight" selector more robust
+
+* #7944: C++, parse non-type template parameters starting with a
+  dependent qualified name.
+
+* C, don't deepcopy the entire symbol table and make a mess every time
+  an enumerator is handled.
+
+
+Release 3.1.2 (released Jul 05, 2020)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #7650: autodoc: the signature of base function will be shown for
+  decorated functions, not a signature of decorator
+
+
+Bugs fixed
+----------
+
+* #7844: autodoc: Failed to detect module when relative module name
+  given
+
+* #7856: autodoc: AttributeError is raised when non-class object is
+  given to the autoclass directive
+
+* #7850: autodoc: KeyError is raised for invalid mark up when
+  autodoc_typehints is 'description'
+
+* #7812: autodoc: crashed if the target name matches to both an
+  attribute and module that are same name
+
+* #7650: autodoc: function signature becomes "(*args, **kwargs)" if
+  the function is decorated by generic decorator
+
+* #7812: autosummary: generates broken stub files if the target code
+  contains an attribute and module that are same name
+
+* #7806: viewcode: Failed to resolve viewcode references on 3rd party
+  builders
+
+* #7838: html theme: List items have extra vertical space
+
+* #7878: html theme: Undesired interaction between "overflow" and
+  "float"
+
+
+Release 3.1.1 (released Jun 14, 2020)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #7808: napoleon: a type for attribute are represented as typed field
+
+
+Features added
+--------------
+
+* #7807: autodoc: Show detailed warning when type_comment is
+  mismatched with its signature
+
+
+Bugs fixed
+----------
+
+* #7808: autodoc: Warnings raised on variable and attribute type
+  annotations
+
+* #7802: autodoc: EOFError is raised on parallel build
+
+* #7821: autodoc: TypeError is raised for overloaded C-ext function
+
+* #7805: autodoc: an object which descriptors returns is unexpectedly
+  documented
+
+* #7807: autodoc: wrong signature is shown for the function using
+  contextmanager
+
+* #7812: autosummary: generates broken stub files if the target code
+  contains an attribute and module that are same name
+
+* #7808: napoleon: Warnings raised on variable and attribute type
+  annotations
+
+* #7811: sphinx.util.inspect causes circular import problem
+
+
+Release 3.1.0 (released Jun 08, 2020)
+=====================================
+
+
+Dependencies
+------------
+
+* #7746: mathjax: Update to 2.7.5
+
+
+Incompatible changes
+--------------------
+
+* #7477: imgconverter: Invoke "magick convert" command by default on
+  Windows
+
+
+Deprecated
+----------
+
+* The first argument for
+  sphinx.ext.autosummary.generate.AutosummaryRenderer has been changed
+  to Sphinx object
+
+* "sphinx.ext.autosummary.generate.AutosummaryRenderer" takes an
+  object type as an argument
+
+* The "ignore" argument of "sphinx.ext.autodoc.Documenter.get_doc()"
+
+* The "template_dir" argument of "sphinx.ext.autosummary.generate.
+  AutosummaryRenderer"
+
+* The "module" argument of "sphinx.ext.autosummary.generate.
+  find_autosummary_in_docstring()"
+
+* The "builder" argument of "sphinx.ext.autosummary.generate.
+  generate_autosummary_docs()"
+
+* The "template_dir" argument of "sphinx.ext.autosummary.generate.
+  generate_autosummary_docs()"
+
+* The "ignore" argument of "sphinx.util.docstring.prepare_docstring()"
+
+* "sphinx.ext.autosummary.generate.AutosummaryRenderer.exists()"
+
+* "sphinx.util.rpartition()"
+
+
+Features added
+--------------
+
+* LaTeX: Make the "toplevel_sectioning" setting optional in LaTeX
+  theme
+
+* LaTeX: Allow to override papersize and pointsize from LaTeX themes
+
+* LaTeX: Add >>:confval:`latex_theme_options`<< to override theme
+  options
+
+* #7410: Allow to suppress "circular toctree references detected"
+  warnings using >>:confval:`suppress_warnings`<<
+
+* C, added scope control directives, "c:namespace", "c:namespace-
+  push", and "c:namespace-pop".
+
+* #2044: autodoc: Suppress default value for instance attributes
+
+* #7473: autodoc: consider a member public if docstring contains
+  ":meta public:" in info-field-list
+
+* #7487: autodoc: Allow to generate docs for singledispatch functions
+  by py:autofunction
+
+* #7143: autodoc: Support final classes and methods
+
+* #7384: autodoc: Support signatures defined by "__new__()",
+  metaclasses and builtin base classes
+
+* #2106: autodoc: Support multiple signatures on docstring
+
+* #4422: autodoc: Support GenericAlias in Python 3.7 or above
+
+* #3610: autodoc: Support overloaded functions
+
+* #7722: autodoc: Support TypeVar
+
+* #7466: autosummary: headings in generated documents are not
+  translated
+
+* #7490: autosummary: Add ":caption:" option to autosummary directive
+  to set a caption to the toctree
+
+* #7469: autosummary: Support module attributes
+
+* #248, #6040: autosummary: Add ":recursive:" option to autosummary
+  directive to generate stub files recursively
+
+* #4030: autosummary: Add >>:confval:`autosummary_context`<< to add
+  template variables for custom templates
+
+* #7530: html: Support nested <kbd> elements
+
+* #7481: html theme: Add right margin to footnote/citation labels
+
+* #7482, #7717: html theme: CSS spacing for code blocks with captions
+  and line numbers
+
+* #7443: html theme: Add new options >>:confval:`globaltoc_collapse`<<
+  and >>:confval:`globaltoc_includehidden`<< to control the behavior
+  of globaltoc in sidebar
+
+* #7484: html theme: Avoid clashes between sidebar and other blocks
+
+* #7476: html theme: Relbar breadcrumb should contain current page
+
+* #7506: html theme: A canonical URL is not escaped
+
+* #7533: html theme: Avoid whitespace at the beginning of
+  genindex.html
+
+* #7541: html theme: Add a "clearer" at the end of the "body"
+
+* #7542: html theme: Make admonition/topic/sidebar scrollable
+
+* #7543: html theme: Add top and bottom margins to tables
+
+* #7695: html theme: Add viewport meta tag for basic theme
+
+* #7721: html theme: classic: default codetextcolor/codebgcolor
+  doesn't override Pygments
+
+* C and C++: allow semicolon in the end of declarations.
+
+* C++, parse parameterized noexcept specifiers.
+
+* #7294: C++, parse expressions with user-defined literals.
+
+* C++, parse trailing return types.
+
+* #7143: py domain: Add ":final:" option to "py:class:",
+  "py:exception:" and "py:method:" directives
+
+* #7596: py domain: Change a type annotation for variables to a
+  hyperlink
+
+* #7770: std domain: "option" directive support arguments in the form
+  of "foo[=bar]"
+
+* #7582: napoleon: a type for attribute are represented like type
+  annotation
+
+* #7734: napoleon: overescaped trailing underscore on attribute
+
+* #7247: linkcheck: Add >>:confval:`linkcheck_request_headers`<< to
+  send custom HTTP headers for specific host
+
+* #7792: setuptools: Support "--verbosity" option
+
+* #7683: Add "allowed_exceptions" parameter to "Sphinx.emit()" to
+  allow handlers to raise specified exceptions
+
+* #7295: C++, parse (trailing) requires clauses.
+
+
+Bugs fixed
+----------
+
+* #6703: autodoc: incremental build does not work for imported objects
+
+* #7564: autodoc: annotations not to be shown for descriptors
+
+* #6588: autodoc: Decorated inherited method has no documentation
+
+* #7469: autodoc: The change of autodoc-process-docstring for
+  variables is cached unexpectedly
+
+* #7559: autodoc: misdetects a sync function is async
+
+* #6857: autodoc: failed to detect a classmethod on Enum class
+
+* #7562: autodoc: a typehint contains spaces is wrongly rendered under
+  autodoc_typehints='description' mode
+
+* #7551: autodoc: failed to import nested class
+
+* #7362: autodoc: does not render correct signatures for built-in
+  functions
+
+* #7654: autodoc: "Optional[Union[foo, bar]]" is presented as
+  "Union[foo, bar, None]"
+
+* #7629: autodoc: autofunction emits an unfriendly warning if an
+  invalid object specified
+
+* #7650: autodoc: undecorated signature is shown for decorated
+  functions
+
+* #7676: autodoc: typo in the default value of autodoc_member_order
+
+* #7676: autodoc: wrong value for :member-order: option is ignored
+  silently
+
+* #7676: autodoc: member-order="bysource" does not work for C module
+
+* #3673: autodoc: member-order="bysource" does not work for a module
+  having __all__
+
+* #7668: autodoc: wrong retann value is passed to a handler of
+  autodoc-proccess-signature
+
+* #7711: autodoc: fails with ValueError when processing numpy objects
+
+* #7791: autodoc: TypeError is raised on documenting singledispatch
+  function
+
+* #7551: autosummary: a nested class is indexed as non-nested class
+
+* #7661: autosummary: autosummary directive emits warnings twices if
+  failed to import the target module
+
+* #7685: autosummary: The template variable "members" contains
+  imported members even if
+  >>:confval:`autossummary_imported_members`<< is False
+
+* #7671: autosummary: The location of import failure warning is
+  missing
+
+* #7535: sphinx-autogen: crashes when custom template uses inheritance
+
+* #7536: sphinx-autogen: crashes when template uses i18n feature
+
+* #7781: sphinx-build: Wrong error message when outdir is not
+  directory
+
+* #7653: sphinx-quickstart: Fix multiple directory creation for nested
+  relpath
+
+* #2785: html: Bad alignment of equation links
+
+* #7718: html theme: some themes does not respect background color of
+  Pygments style (agogo, haiku, nature, pyramid, scrolls, sphinxdoc
+  and traditional)
+
+* #7544: html theme: inconsistent padding in admonitions
+
+* #7581: napoleon: bad parsing of inline code in attribute docstrings
+
+* #7628: imgconverter: runs imagemagick once unnecessary for builders
+  not supporting images
+
+* #7610: incorrectly renders consecutive backslashes for docutils-0.16
+
+* #7646: handle errors on event handlers
+
+* #4187: LaTeX: EN DASH disappears from PDF bookmarks in Japanese
+  documents
+
+* #7701: LaTeX: Anonymous indirect hyperlink target causes duplicated
+  labels
+
+* #7723: LaTeX: pdflatex crashed when URL contains a single quote
+
+* #7756: py domain: The default value for positional only argument is
+  not shown
+
+* #7760: coverage: Add >>:confval:`coverage_show_missing_items`<< to
+  show coverage result to console
+
+* C++, fix rendering and xrefs in nested names explicitly starting in
+  global scope, e.g., "::A::B".
+
+* C, fix rendering and xrefs in nested names explicitly starting in
+  global scope, e.g., ".A.B".
+
+* #7763: C and C++, don't crash during display stringification of
+  unary expressions and fold expressions.
+
+
+Release 3.0.4 (released May 27, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #7567: autodoc: parametrized types are shown twice for generic types
+
+* #7637: autodoc: system defined TypeVars are shown in Python 3.9
+
+* #7696: html: Updated jQuery version from 3.4.1 to 3.5.1 for security
+  reasons
+
+* #7611: md5 fails when OpenSSL FIPS is enabled
+
+* #7626: release package does not contain "CODE_OF_CONDUCT"
+
+
+Release 3.0.3 (released Apr 26, 2020)
+=====================================
+
+
+Features added
+--------------
+
+* C, parse array declarators with static, qualifiers, and VLA
+  specification.
+
+
+Bugs fixed
+----------
+
+* #7516: autodoc: crashes if target object raises an error on
+  accessing its attributes
+
+
+Release 3.0.2 (released Apr 19, 2020)
+=====================================
+
+
+Features added
+--------------
+
+* C, parse attributes and add >>:confval:`c_id_attributes`<< and
+  >>:confval:`c_paren_attributes`<< to support user-defined
+  attributes.
+
+
+Bugs fixed
+----------
+
+* #7461: py domain: fails with IndexError for empty tuple in type
+  annotation
+
+* #7510: py domain: keyword-only arguments are documented as having a
+  default of None
+
+* #7418: std domain: "term" role could not match case-insensitively
+
+* #7461: autodoc: empty tuple in type annotation is not shown
+  correctly
+
+* #7479: autodoc: Sphinx builds has been slower since 3.0.0 on mocking
+
+* C++, fix spacing issue in east-const declarations.
+
+* #7414: LaTeX: Xindy language options were incorrect
+
+* sphinx crashes with ImportError on python3.5.1
+
+
+Release 3.0.1 (released Apr 11, 2020)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #7418: std domain: "term" role becomes case sensitive
+
+
+Bugs fixed
+----------
+
+* #7428: py domain: a reference to class "None" emits a nitpicky
+  warning
+
+* #7445: py domain: a return annotation "None" in the function
+  signature is not converted to a hyperlink when using intersphinx
+
+* #7418: std domain: duplication warning for glossary terms is case
+  insensitive
+
+* #7438: C++, fix merging overloaded functions in parallel builds.
+
+* #7422: autodoc: fails with ValueError when using
+  autodoc_mock_imports
+
+* #7435: autodoc: "autodoc_typehints='description'" doesn't suppress
+  typehints in signature for classes/methods
+
+* #7451: autodoc: fails with AttributeError when an object returns
+  non-string object as a "__doc__" member
+
+* #7423: crashed when giving a non-string object to logger
+
+* #7479: html theme: Do not include xmlns attribute with HTML 5
+  doctype
+
+* #7426: html theme: Escape some links in HTML templates
+
+
+Release 3.0.0 (released Apr 06, 2020)
+=====================================
+
+
+Dependencies
+------------
+
+3.0.0b1
+
+* LaTeX: drop dependency on **extractbb** for image inclusion in
+  Japanese documents as ".xbb" files are unneeded by **dvipdfmx**
+  since TeXLive2015 (refs: #6189)
+
+* babel-2.0 or above is available (Unpinned)
+
+
+Incompatible changes
+--------------------
+
+3.0.0b1
+
+* Drop features and APIs deprecated in 1.8.x
+
+* #247: autosummary: stub files are overwritten automatically by
+  default.  see >>:confval:`autosummary_generate_overwrite`<< to
+  change the behavior
+
+* #5923: autodoc: the members of "object" class are not documented by
+  default when ":inherited-members:" and ":special-members:" are
+  given.
+
+* #6830: py domain: "meta" fields in info-field-list becomes reserved.
+  They are not displayed on output document now
+
+* #6417: py domain: doctree of desc_parameterlist has been changed.
+  The argument names, annotations and default values are wrapped with
+  inline node
+
+* The structure of "sphinx.events.EventManager.listeners" has changed
+
+* Due to the scoping changes for "productionlist" some uses of "token"
+  must be modified to include the scope which was previously ignored.
+
+* #6903: Internal data structure of Python, reST and standard domains
+  have changed.  The node_id is added to the index of objects and
+  modules.  Now they contains a pair of docname and node_id for cross
+  reference.
+
+* #7276: C++ domain: Non intended behavior is removed such as
+  "say_hello_" links to ".. cpp:function:: say_hello()"
+
+* #7210: js domain: Non intended behavior is removed such as
+  "parseInt_" links to ".. js:function:: parseInt"
+
+* #7229: rst domain: Non intended behavior is removed such as
+  "numref_" links to ".. rst:role:: numref"
+
+* #6903: py domain: Non intended behavior is removed such as
+  "say_hello_" links to ".. py:function:: say_hello()"
+
+* #7246: py domain: Drop special cross reference helper for
+  exceptions, functions and methods
+
+* The C domain has been rewritten, with additional directives and
+  roles. The existing ones are now more strict, resulting in new
+  warnings.
+
+* The attribute "sphinx_cpp_tagname" in the "desc_signature_line" node
+  has been renamed to "sphinx_line_type".
+
+* #6462: double backslashes in domain directives are no longer
+  replaced by single backslashes as default. A new configuration value
+  >>:confval:`strip_signature_backslash`<< can be used by users to
+  reenable it.
+
+3.0.0 final
+
+* #7222: "sphinx.util.inspect.unwrap()" is renamed to "unwrap_all()"
+
+
+Deprecated
+----------
+
+3.0.0b1
+
+* "desc_signature['first']"
+
+* "sphinx.directives.DescDirective"
+
+* "sphinx.domains.std.StandardDomain.add_object()"
+
+* "sphinx.domains.python.PyDecoratorMixin"
+
+* "sphinx.ext.autodoc.get_documenters()"
+
+* "sphinx.ext.autosummary.process_autosummary_toc()"
+
+* "sphinx.parsers.Parser.app"
+
+* "sphinx.testing.path.Path.text()"
+
+* "sphinx.testing.path.Path.bytes()"
+
+* "sphinx.util.inspect.getargspec()"
+
+* "sphinx.writers.latex.LaTeXWriter.format_docclass()"
+
+
+Features added
+--------------
+
+3.0.0b1
+
+* #247: autosummary: Add >>:confval:`autosummary_generate_overwrite`<<
+  to overwrite old stub file
+
+* #5923: autodoc: ":inherited-members:" option takes a name of
+  anchestor class not to document inherited members of the class and
+  uppers
+
+* #6830: autodoc: consider a member private if docstring contains
+  ":meta private:" in info-field-list
+
+* #7165: autodoc: Support Annotated type (PEP-593)
+
+* #2815: autodoc: Support singledispatch functions and methods
+
+* #7079: autodoc: >>:confval:`autodoc_typehints`<< accepts
+  ""description"" configuration.  It shows typehints as object
+  description
+
+* #7314: apidoc: Propagate "--maxdepth" option through package
+  documents
+
+* #6558: glossary: emit a warning for duplicated glossary entry
+
+* #3106: domain: Register hyperlink target for index page
+  automatically
+
+* #6558: std domain: emit a warning for duplicated generic objects
+
+* #6830: py domain: Add new event: >>:event:`object-description-
+  transform`<<
+
+* #6895: py domain: Do not emit nitpicky warnings for built-in types
+
+* py domain: Support lambda functions in function signature
+
+* #6417: py domain: Allow to make a style for arguments of functions
+  and methods
+
+* #7238, #7239: py domain: Emit a warning on describing a python
+  object if the entry is already added as the same name
+
+* #7341: py domain: type annotations in singature are converted to
+  cross refs
+
+* Support priority of event handlers. For more detail, see
+  "Sphinx.connect()"
+
+* #3077: Implement the scoping for "productionlist" as indicated in
+  the documentation.
+
+* #1027: Support backslash line continuation in "productionlist".
+
+* #7108: config: Allow to show an error message from conf.py via
+  "ConfigError"
+
+* #7032: html: >>:confval:`html_scaled_image_link`<< will be disabled
+  for images having "no-scaled-link" class
+
+* #7144: Add CSS class indicating its domain for each desc node
+
+* #7211: latex: Use babel for Chinese document when using XeLaTeX
+
+* #6672: LaTeX: Support LaTeX Theming (experimental)
+
+* #7005: LaTeX: Add LaTeX styling macro for "kbd" role
+
+* #7220: genindex: Show "main" index entries at first
+
+* #7103: linkcheck: writes all links to "output.json"
+
+* #7025: html search: full text search can be disabled for individual
+  document using ":nosearch:" file-wide metadata
+
+* #7293: html search: Allow to override JavaScript splitter via
+  "SearchLanguage.js_splitter_code"
+
+* #7142: html theme: Add a theme option: "pygments_dark_style" to
+  switch the style of code-blocks in dark mode
+
+* The C domain has been rewritten adding for example:
+
+  * Cross-referencing respecting the current scope.
+
+  * Possible to document anonymous entities.
+
+  * More specific directives and roles for each type of entitiy, e.g.,
+    handling scoping of enumerators.
+
+  * New role "c:expr" for rendering expressions and types in text.
+
+* Added "SphinxDirective.get_source_info()" and
+  "SphinxRole.get_source_info()".
+
+* #7324: sphinx-build: Emit a warning if multiple files having
+  different file extensions for same document found
+
+3.0.0 final
+
+* Added "ObjectDescription.transform_content()".
+
+
+Bugs fixed
+----------
+
+3.0.0b1
+
+* C++, fix cross reference lookup in certain cases involving function
+  overloads.
+
+* #5078: C++, fix cross reference lookup when a directive contains
+  multiple declarations.
+
+* C++, suppress warnings for directly dependent typenames in cross
+  references generated automatically in signatures.
+
+* #5637: autodoc: Incorrect handling of nested class names on show-
+  inheritance
+
+* #7267: autodoc: error message for invalid directive options has
+  wrong location
+
+* #7329: autodoc: info-field-list is wrongly generated from type hints
+  into the class description even if "autoclass_content='class'" set
+
+* #7331: autodoc: a cython-function is not recognized as a function
+
+* #5637: inheritance_diagram: Incorrect handling of nested class names
+
+* #7139: "code-block:: guess" does not work
+
+* #7325: html: source_suffix containing dot leads to wrong source link
+
+* #7357: html: Resizing SVG image fails with ValueError
+
+* #7278: html search: Fix use of "html_file_suffix" instead of
+  "html_link_suffix" in search results
+
+* #7297: html theme: "bizstyle" does not support "sidebarwidth"
+
+* #3842: singlehtml: Path to images broken when master doc is not in
+  source root
+
+* #7179: std domain: Fix whitespaces are suppressed on referring
+  GenericObject
+
+* #7289: console: use bright colors instead of bold
+
+* #1539: C, parse array types.
+
+* #2377: C, parse function pointers even in complex types.
+
+* #7345: sphinx-build: Sphinx crashes if output directory exists as a
+  file
+
+* #7290: sphinx-build: Ignore bdb.BdbQuit when handling exceptions
+
+* #6240: napoleon: Attributes and Methods sections ignore :noindex:
+  option
+
+3.0.0 final
+
+* #7364: autosummary: crashed when >>:confval:`autosummary_generate`<<
+  is False
+
+* #7370: autosummary: raises UnboundLocalError when unknown module
+  given
+
+* #7367: C++, alternate operator spellings are now supported.
+
+* C, alternate operator spellings are now supported.
+
+* #7368: C++, comma operator in expressions, pack expansion in
+  template argument lists, and more comprehensive error messages in
+  some cases.
+
+* C, C++, fix crash and wrong duplicate warnings related to anon
+  symbols.
+
+* #6477: Escape first "!" in a cross reference linking no longer
+  possible
+
+* #7219: py domain: The index entry generated by "py:function"
+  directive is different with one from "index" directive with
+  "builtin" type
+
+* #7301: capital characters are not allowed for node_id
+
+* #7301: epub: duplicated node_ids are generated
+
+* #6564: html: a width of table was ignored on HTML builder
+
+* #7401: Incorrect argument is passed for >>:event:`env-get-
+  outdated`<< handlers
+
+* #7355: autodoc: a signature of cython-function is not recognized
+  well
+
+* #7222: autodoc: "__wrapped__" functions are not documented correctly
+
+* #7409: intersphinx: ValueError is raised when an extension sets up
+  >>:confval:`intersphinx_mapping`<< on >>:event:`config-inited`<<
+  event
+
+* #7343: Sphinx builds has been slower since 2.4.0 on debug mode
+
+
+Release 2.4.4 (released Mar 05, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #7197: LaTeX: platex cause error to build image directive with
+  target url
+
+* #7223: Sphinx builds has been slower since 2.4.0
+
+
+Release 2.4.3 (released Feb 22, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #7184: autodoc: "*args" and "**kwarg" in type comments are not
+  handled properly
+
+* #7189: autodoc: classmethod coroutines are not detected
+
+* #7183: intersphinx: ":attr:" reference to property is broken
+
+* #6244, #6387: html search: Search breaks/hangs when built with
+  dirhtml builder
+
+* #7195: todo: emit doctree-resolved event with non-document node
+  incorrectly
+
+
+Release 2.4.2 (released Feb 19, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #7138: autodoc: "autodoc.typehints" crashed when variable has
+  unbound object as a value
+
+* #7156: autodoc: separator for keyword only arguments is not shown
+
+* #7146: autodoc: IndexError is raised on suppressed type_comment
+  found
+
+* #7161: autodoc: typehints extension does not support parallel build
+
+* #7178: autodoc: TypeError is raised on fetching type annotations
+
+* #7151: crashed when extension assigns a value to "env.indexentries"
+
+* #7170: text: Remove debug print
+
+* #7137: viewcode: Avoid to crash when non-python code given
+
+
+Release 2.4.1 (released Feb 11, 2020)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #7120: html: crashed when on scaling SVG images which have float
+  dimensions
+
+* #7126: autodoc: TypeError: 'getset_descriptor' object is not
+  iterable
+
+
+Release 2.4.0 (released Feb 09, 2020)
+=====================================
+
+
+Deprecated
+----------
+
+* The "decode" argument of "sphinx.pycode.ModuleAnalyzer()"
+
+* "sphinx.directives.other.Index"
+
+* "sphinx.environment.temp_data['gloss_entries']"
+
+* "sphinx.environment.BuildEnvironment.indexentries"
+
+* "sphinx.environment.collectors.indexentries.IndexEntriesCollector"
+
+* "sphinx.ext.apidoc.INITPY"
+
+* "sphinx.ext.apidoc.shall_skip()"
+
+* "sphinx.io.FiletypeNotFoundError"
+
+* "sphinx.io.get_filetype()"
+
+* "sphinx.pycode.ModuleAnalyzer.encoding"
+
+* "sphinx.roles.Index"
+
+* "sphinx.util.detect_encoding()"
+
+* "sphinx.util.get_module_source()"
+
+* "sphinx.util.inspect.Signature"
+
+* "sphinx.util.inspect.safe_getmembers()"
+
+* "sphinx.writers.latex.LaTeXTranslator.settings.author"
+
+* "sphinx.writers.latex.LaTeXTranslator.settings.contentsname"
+
+* "sphinx.writers.latex.LaTeXTranslator.settings.docclass"
+
+* "sphinx.writers.latex.LaTeXTranslator.settings.docname"
+
+* "sphinx.writers.latex.LaTeXTranslator.settings.title"
+
+* "sphinx.writers.latex.ADDITIONAL_SETTINGS"
+
+* "sphinx.writers.latex.DEFAULT_SETTINGS"
+
+* "sphinx.writers.latex.LUALATEX_DEFAULT_FONTPKG"
+
+* "sphinx.writers.latex.PDFLATEX_DEFAULT_FONTPKG"
+
+* "sphinx.writers.latex.XELATEX_DEFAULT_FONTPKG"
+
+* "sphinx.writers.latex.XELATEX_GREEK_DEFAULT_FONTPKG"
+
+
+Features added
+--------------
+
+* #6910: inheritance_diagram: Make the background of diagrams
+  transparent
+
+* #6446: duration: Add "sphinx.ext.durations" to inspect which
+  documents slow down the build
+
+* #6837: LaTeX: Support a nested table
+
+* #7115: LaTeX: Allow to override LATEXOPTS and LATEXMKOPTS via
+  environment variable
+
+* #6966: graphviz: Support ":class:" option
+
+* #6696: html: ":scale:" option of image/figure directive not working
+  for SVG images (imagesize-1.2.0 or above is required)
+
+* #6994: imgconverter: Support illustrator file (.ai) to .png
+  conversion
+
+* autodoc: Support Positional-Only Argument separator (PEP-570
+  compliant)
+
+* autodoc: Support type annotations for variables
+
+* #2755: autodoc: Add new event: >>:event:`autodoc-before-process-
+  signature`<<
+
+* #2755: autodoc: Support type_comment style (ex. "# type: (str) ->
+  str") annotation (python3.8+ or typed_ast is required)
+
+* #7051: autodoc: Support instance variables without defaults
+  (PEP-526)
+
+* #6418: autodoc: Add a new extension "sphinx.ext.autodoc.typehints".
+  It shows typehints as object description if "autodoc_typehints =
+  "description"" set. This is an experimental extension and it will be
+  integrated into autodoc core in Sphinx-3.0
+
+* SphinxTranslator now calls visitor/departure method for super node
+  class if visitor/departure method for original node class not found
+
+* #6418: Add new event: >>:event:`object-description-transform`<<
+
+* py domain: "py:data" and "py:attribute" take new options named
+  ":type:" and ":value:" to describe its type and initial value
+
+* #6785: py domain: ":py:attr:" is able to refer properties again
+
+* #6772: apidoc: Add "-q" option for quiet mode
+
+
+Bugs fixed
+----------
+
+* #6925: html: Remove redundant type="text/javascript" from <script>
+  elements
+
+* #7112: html: SVG image is not layouted as float even if aligned
+
+* #6906, #6907: autodoc: failed to read the source codes encoeded in
+  cp1251
+
+* #6961: latex: warning for babel shown twice
+
+* #7059: latex: LaTeX compilation falls into infinite loop (wrapfig
+  issue)
+
+* #6581: latex: ":reversed:" option for toctree does not effect to
+  LaTeX build
+
+* #6559: Wrong node-ids are generated in glossary directive
+
+* #6986: apidoc: misdetects module name for .so file inside module
+
+* #6899: apidoc: private members are not shown even if "--private"
+  given
+
+* #6327: apidoc: Support a python package consisted of __init__.so
+  file
+
+* #6999: napoleon: fails to parse tilde in :exc: role
+
+* #7019: gettext: Absolute path used in message catalogs
+
+* #7023: autodoc: nested partial functions are not listed
+
+* #7023: autodoc: partial functions imported from other modules are
+  listed as module members without :impoprted-members: option
+
+* #6889: autodoc: Trailing comma in ":members::" option causes cryptic
+  warning
+
+* #6568: autosummary: "autosummary_imported_members" is ignored on
+  generating a stub file for submodule
+
+* #7055: linkcheck: redirect is treated as an error
+
+* #7088: HTML template: If "navigation_with_keys" option is activated,
+  modifier keys are ignored, which means the feature can interfere
+  with browser features
+
+* #7090: std domain: Can't assign numfig-numbers for custom container
+  nodes
+
+* #7106: std domain: enumerated nodes are marked as duplicated when
+  extensions call "note_explicit_target()"
+
+* #7095: dirhtml: Cross references are broken via intersphinx and
+  ":doc:" role
+
+* C++:
+
+  * Don't crash when using the "struct" role in some cases.
+
+  * Don't warn when using the "var"/"member" role for function
+    parameters.
+
+  * Render call and braced-init expressions correctly.
+
+* #7097: Filenames of images generated by
+  "sphinx.transforms.post_transforms.images.ImageConverter" or its
+  subclasses (used for latex build) are now sanitized, to prevent
+  broken paths
+
+
+Release 2.3.1 (released Dec 22, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #6936: sphinx-autogen: raises AttributeError
+
+
+Release 2.3.0 (released Dec 15, 2019)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #6742: "end-before" option of "literalinclude" directive does not
+  match the first line of the code block.
+
+* #1331: Change default User-Agent header to ""Sphinx/X.Y.Z
+  requests/X.Y.Z python/X.Y.Z"".  It can be changed via
+  >>:confval:`user_agent`<<.
+
+* #6867: text: content of admonitions starts after a blank line
+
+
+Deprecated
+----------
+
+* "sphinx.builders.gettext.POHEADER"
+
+* "sphinx.io.SphinxStandaloneReader.app"
+
+* "sphinx.io.SphinxStandaloneReader.env"
+
+* "sphinx.util.texescape.tex_escape_map"
+
+* "sphinx.util.texescape.tex_hl_escape_map_new"
+
+* "sphinx.writers.latex.LaTeXTranslator.no_contractions"
+
+
+Features added
+--------------
+
+* #6707: C++, support bit-fields.
+
+* #267: html: Eliminate prompt characters of doctest block from
+  copyable text
+
+* #6548: html: Use favicon for OpenSearch if available
+
+* #6729: html theme: agogo theme now supports "rightsidebar" option
+
+* #6780: Add PEP-561 Support
+
+* #6762: latex: Allow to load additional LaTeX packages via
+  "extrapackages" key of >>:confval:`latex_elements`<<
+
+* #1331: Add new config variable: >>:confval:`user_agent`<<
+
+* #6000: LaTeX: have backslash also be an inline literal word wrap
+  break character
+
+* #4186: LaTeX: Support upLaTeX as a new >>:confval:`latex_engine`<<
+  (experimental)
+
+* #6812: Improve a warning message when extensions are not parallel
+  safe
+
+* #6818: Improve Intersphinx performance for multiple remote
+  inventories.
+
+* #2546: apidoc: .so file support
+
+* #6798: autosummary: emit "autodoc-skip-member" event on generating
+  stub file
+
+* #6483: i18n: make explicit titles in toctree translatable
+
+* #6816: linkcheck: Add >>:confval:`linkcheck_auth`<< option to
+  provide authentication information when doing "linkcheck" builds
+
+* #6872: linkcheck: Handles HTTP 308 Permanent Redirect
+
+* #6613: html: Wrap section number in span tag
+
+* #6781: gettext: Add >>:confval:`gettext_last_translator' and
+  :confval:`gettext_language_team`<< to customize headers of POT file
+
+
+Bugs fixed
+----------
+
+* #6668: LaTeX: Longtable before header has incorrect distance (refs:
+  latex3/latex2e#173)
+
+* #6618: LaTeX: Avoid section names at the end of a page
+
+* #6738: LaTeX: Do not replace unicode characters by LaTeX macros on
+  unicode supported LaTeX engines: ¶, §, €, ∞, ±, →, ‣, –, superscript
+  and subscript digits go through "as is" (as default OpenType font
+  supports them)
+
+* #6704: linkcheck: Be defensive and handle newly defined HTTP error
+  code
+
+* #6806: linkcheck: Failure on parsing content
+
+* #6655: image URLs containing "data:" causes gettext builder crashed
+
+* #6584: i18n: Error when compiling message catalogs on Hindi
+
+* #6718: i18n: KeyError is raised if section title and table title are
+  same
+
+* #6743: i18n: >>:confval:`rst_prolog`<< breaks the translation
+
+* #6708: mathbase: Some deprecated functions have removed
+
+* #6709: autodoc: mock object does not work as a class decorator
+
+* #5070: epub: Wrong internal href fragment links
+
+* #6712: Allow not to install sphinx.testing as runtime (mainly for
+  ALT Linux)
+
+* #6741: html: search result was broken with empty
+  >>:confval:`html_file_suffix`<<
+
+* #6001: LaTeX does not wrap long code lines at backslash character
+
+* #6804: LaTeX: PDF build breaks if admonition of danger type contains
+  code-block long enough not to fit on one page
+
+* #6809: LaTeX: code-block in a danger type admonition can easily
+  spill over bottom of page
+
+* #6793: texinfo: Code examples broken following "sidebar"
+
+* #6813: An orphan warning is emitted for included document on
+  Windows.  Thanks to @drillan
+
+* #6850: Fix smartypants module calls re.sub() with wrong options
+
+* #6824: HTML search: If a search term is partially matched in the
+  title and fully matched in a text paragraph on the same page, the
+  search does not include this match.
+
+* #6848: config.py shouldn't pop extensions from overrides
+
+* #6867: text: extra spaces are inserted to hyphenated words on
+  folding lines
+
+* #6886: LaTeX: xelatex converts straight double quotes into right
+  curly ones (shows when >>:confval:`smartquotes`<< is "False")
+
+* #6890: LaTeX: even with smartquotes off, PDF output transforms
+  straight quotes and consecutive hyphens into curly quotes and dashes
+
+* #6876: LaTeX: multi-line display of authors on title page has ragged
+  edges
+
+* #6887: Sphinx crashes with docutils-0.16b0
+
+* #6920: sphinx-build: A console message is wrongly highlighted
+
+* #6900: sphinx-build: "-D" option does not considers "0" and "1" as a
+  boolean value
+
+
+Release 2.2.2 (released Dec 03, 2019)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #6803: For security reason of python, parallel mode is disabled on
+  macOS and Python3.8+
+
+
+Bugs fixed
+----------
+
+* #6776: LaTeX: 2019-10-01 LaTeX release breaks "sphinxcyrillic.sty"
+
+* #6815: i18n: French, Hindi, Chinese, Japanese and Korean translation
+  messages has been broken
+
+* #6803: parallel build causes AttributeError on macOS and Python3.8
+
+
+Release 2.2.1 (released Oct 26, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #6641: LaTeX: Undefined control sequence "\sphinxmaketitle"
+
+* #6710: LaTeX not well configured for Greek language as main language
+
+* #6759: validation of html static paths and extra paths no longer
+  throws an error if the paths are in different directories
+
+
+Release 2.2.0 (released Aug 19, 2019)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* apidoc: template files are renamed to ".rst_t"
+
+* html: Field lists will be styled by grid layout
+
+
+Deprecated
+----------
+
+* "sphinx.domains.math.MathDomain.add_equation()"
+
+* "sphinx.domains.math.MathDomain.get_next_equation_number()"
+
+* The "info" and "warn" arguments of
+  "sphinx.ext.autosummary.generate.generate_autosummary_docs()"
+
+* "sphinx.ext.autosummary.generate._simple_info()"
+
+* "sphinx.ext.autosummary.generate._simple_warn()"
+
+* "sphinx.ext.todo.merge_info()"
+
+* "sphinx.ext.todo.process_todo_nodes()"
+
+* "sphinx.ext.todo.process_todos()"
+
+* "sphinx.ext.todo.purge_todos()"
+
+
+Features added
+--------------
+
+* #5124: graphviz: ":graphviz_dot:" option is renamed to ":layout:"
+
+* #1464: html: emit a warning if >>:confval:`html_static_path`<< and
+  >>:confval:`html_extra_path`<< directories are inside output
+  directory
+
+* #6514: html: Add a label to search input for accessability purposes
+
+* #5602: apidoc: Add "--templatedir" option
+
+* #6475: Add "override" argument to "app.add_autodocumenter()"
+
+* #6310: imgmath: let >>:confval:`imgmath_use_preview`<< work also
+  with the SVG format for images rendering inline math
+
+* #6533: LaTeX: refactor visit_enumerated_list() to use
+  "\sphinxsetlistlabels"
+
+* #6628: quickstart: Use "https://docs.python.org/3/" for default
+  setting of >>:confval:`intersphinx_mapping`<<
+
+* #6419: sphinx-build: give reasons why rebuilded
+
+
+Bugs fixed
+----------
+
+* py domain: duplicated warning does not point the location of source
+  code
+
+* #6499: html: Sphinx never updates a copy of >>:confval:`html_logo`<<
+  even if original file has changed
+
+* #1125: html theme: scrollbar is hard to see on classic theme and
+  macOS
+
+* #5502: linkcheck: Consider HTTP 503 response as not an error
+
+* #6439: Make generated download links reproducible
+
+* #6486: UnboundLocalError is raised if broken extension installed
+
+* #6567: autodoc: >>:confval:`autodoc_inherit_docstrings`<< does not
+  effect to "__init__()" and "__new__()"
+
+* #6574: autodoc: >>:confval:`autodoc_member_order`<< does not refer
+  order of imports when "'bysource'" order
+
+* #6574: autodoc: missing type annotation for variadic and keyword
+  parameters
+
+* #6589: autodoc: Formatting issues with autodoc_typehints='none'
+
+* #6605: autodoc: crashed when target code contains custom method-like
+  objects
+
+* #6498: autosummary: crashed with wrong autosummary_generate setting
+
+* #6507: autosummary: crashes without no autosummary_generate setting
+
+* #6511: LaTeX: autonumbered list can not be customized in LaTeX since
+  Sphinx 1.8.0 (refs: #6533)
+
+* #6531: Failed to load last environment object when extension added
+
+* #736: Invalid sort in pair index
+
+* #6527: >>:confval:`last_updated`<< wrongly assumes timezone as UTC
+
+* #5592: std domain: "option" directive registers an index entry for
+  each comma separated option
+
+* #6549: sphinx-build: Escaped characters in error messages
+
+* #6545: doctest comments not getting trimmed since Sphinx 1.8.0
+
+* #6561: glossary: Wrong hyperlinks are generated for non alphanumeric
+  terms
+
+* #6620: i18n: classifiers of definition list are not translated with
+  docutils-0.15
+
+* #6474: "DocFieldTransformer" raises AttributeError when given
+  directive is not a subclass of ObjectDescription
+
+
+Release 2.1.2 (released Jun 19, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #6497: custom lexers fails highlighting when syntax error
+
+* #6478, #6488: info field lists are incorrectly recognized
+
+
+Release 2.1.1 (released Jun 10, 2019)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #6447: autodoc: Stop to generate document for undocumented module
+  variables
+
+
+Bugs fixed
+----------
+
+* #6442: LaTeX: admonitions of "note" type can get separated from
+  immediately preceding section title by pagebreak
+
+* #6448: autodoc: crashed when autodocumenting classes with "__slots__
+  = None"
+
+* #6451: autodoc: generates docs for "optional import"ed modules as
+  variables
+
+* #6452: autosummary: crashed when generating document of properties
+
+* #6455: napoleon: docstrings for properties are not processed
+
+* #6436: napoleon: "Unknown target name" error if variable name ends
+  with underscore
+
+* #6440: apidoc: missing blank lines between modules
+
+
+Release 2.1.0 (released Jun 02, 2019)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* Ignore filenames without file extension given to
+  "Builder.build_specific()" API directly
+
+* #6230: The anchor of term in glossary directive is changed if it is
+  consisted by non-ASCII characters
+
+* #4550: html: Centering tables by default using CSS
+
+* #6239: latex: xelatex and xeCJK are used for Chinese documents by
+  default
+
+* "Sphinx.add_lexer()" now takes a Lexer class instead of instance.
+  An instance of lexers are still supported until Sphinx-3.x.
+
+
+Deprecated
+----------
+
+* "sphinx.builders.latex.LaTeXBuilder.apply_transforms()"
+
+* "sphinx.builders._epub_base.EpubBuilder.esc()"
+
+* "sphinx.directives.Acks"
+
+* "sphinx.directives.Author"
+
+* "sphinx.directives.Centered"
+
+* "sphinx.directives.Class"
+
+* "sphinx.directives.CodeBlock"
+
+* "sphinx.directives.Figure"
+
+* "sphinx.directives.HList"
+
+* "sphinx.directives.Highlight"
+
+* "sphinx.directives.Include"
+
+* "sphinx.directives.Index"
+
+* "sphinx.directives.LiteralInclude"
+
+* "sphinx.directives.Meta"
+
+* "sphinx.directives.Only"
+
+* "sphinx.directives.SeeAlso"
+
+* "sphinx.directives.TabularColumns"
+
+* "sphinx.directives.TocTree"
+
+* "sphinx.directives.VersionChange"
+
+* "sphinx.domains.python.PyClassmember"
+
+* "sphinx.domains.python.PyModulelevel"
+
+* "sphinx.domains.std.StandardDomain._resolve_citation_xref()"
+
+* "sphinx.domains.std.StandardDomain.note_citations()"
+
+* "sphinx.domains.std.StandardDomain.note_citation_refs()"
+
+* "sphinx.domains.std.StandardDomain.note_labels()"
+
+* "sphinx.environment.NoUri"
+
+* "sphinx.ext.apidoc.format_directive()"
+
+* "sphinx.ext.apidoc.format_heading()"
+
+* "sphinx.ext.apidoc.makename()"
+
+* "sphinx.ext.autodoc.importer.MockFinder"
+
+* "sphinx.ext.autodoc.importer.MockLoader"
+
+* "sphinx.ext.autodoc.importer.mock()"
+
+* "sphinx.ext.autosummary.autolink_role()"
+
+* "sphinx.ext.imgmath.DOC_BODY"
+
+* "sphinx.ext.imgmath.DOC_BODY_PREVIEW"
+
+* "sphinx.ext.imgmath.DOC_HEAD"
+
+* "sphinx.transforms.CitationReferences"
+
+* "sphinx.transforms.SmartQuotesSkipper"
+
+* "sphinx.util.docfields.DocFieldTransformer.preprocess_fieldtypes()"
+
+* "sphinx.util.node.find_source_node()"
+
+* "sphinx.util.i18n.find_catalog()"
+
+* "sphinx.util.i18n.find_catalog_files()"
+
+* "sphinx.util.i18n.find_catalog_source_files()"
+
+For more details, see deprecation APIs list.
+
+
+Features added
+--------------
+
+* Add a helper class
+  "sphinx.transforms.post_transforms.SphinxPostTransform"
+
+* Add helper methods
+
+  * "PythonDomain.note_module()"
+
+  * "PythonDomain.note_object()"
+
+  * "SphinxDirective.set_source_info()"
+
+* #6180: Support "--keep-going" with BuildDoc setup command
+
+* "math" directive now supports ":class:" option
+
+* todo: "todo" directive now supports ":name:" option
+
+* Enable override via environment of "SPHINXOPTS" and "SPHINXBUILD"
+  Makefile variables (refs: #6232, #6303)
+
+* #6287: autodoc: Unable to document bound instance methods exported
+  as module functions
+
+* #6289: autodoc: >>:confval:`autodoc_default_options`<< now supports
+  "imported-members" option
+
+* #4777: autodoc: Support coroutine
+
+* #744: autodoc: Support abstractmethod
+
+* #6325: autodoc: Support attributes in __slots__.  For dict-style
+  __slots__, autodoc considers values as a docstring of the attribute
+
+* #6361: autodoc: Add >>:confval:`autodoc_typehints`<< to suppress
+  typehints from signature
+
+* #1063: autodoc: "automodule" directive now handles undocumented
+  module level variables
+
+* #6212 autosummary: Add >>:confval:`autosummary_imported_members`<<
+  to display imported members on autosummary
+
+* #6271: "make clean" is catastrophically broken if building into '.'
+
+* #6363: Support "%O%" environment variable in make.bat
+
+* #4777: py domain: Add ":async:" option to "py:function" directive
+
+* py domain: Add new options to "py:method" directive
+
+  * ":abstractmethod:"
+
+  * ":async:"
+
+  * ":classmethod:"
+
+  * ":property:"
+
+  * ":staticmethod:"
+
+* rst domain: Add "directive:option" directive to describe the option
+  for directive
+
+* #6306: html: Add a label to search form for accessability purposes
+
+* #4390: html: Consistent and semantic CSS for signatures
+
+* #6358: The "rawsource" property of "production" nodes now contains
+  the full production rule
+
+* #6373: autosectionlabel: Allow suppression of warnings
+
+* coverage: Support a new "coverage_ignore_pyobjects" option
+
+* #6239: latex: Support to build Chinese documents
+
+
+Bugs fixed
+----------
+
+* #6230: Inappropriate node_id has been generated by glossary
+  directive if term is consisted by non-ASCII characters
+
+* #6213: ifconfig: contents after headings are not shown
+
+* commented term in glossary directive is wrongly recognized
+
+* #6299: rst domain: rst:directive directive generates waste space
+
+* #6379: py domain: Module index (py-modindex.html) has duplicate
+  titles
+
+* #6331: man: invalid output when doctest follows rubric
+
+* #6351: "Hyperlink target is not referenced" message is shown even if
+  referenced
+
+* #6165: autodoc: "tab_width" setting of docutils has been ignored
+
+* #6347: autodoc: crashes with a plain Tuple on Python 3.6 and 3.5
+
+* #6311: autosummary: autosummary table gets confused by complex type
+  hints
+
+* #6350: autosummary: confused by an argument having some kind of
+  default value
+
+* Generated Makefiles lack a final EOL (refs: #6232)
+
+* #6375: extlinks: Cannot escape angle brackets in link caption
+
+* #6378: linkcheck: Send commonly used User-Agent
+
+* #6387: html search: failed to search document with haiku and scrolls
+  themes
+
+* #6408: html search: Fix the ranking of search results
+
+* #6406: Wrong year is returned for "SOURCE_DATE_EPOCH"
+
+* #6402: image directive crashes by unknown image format
+
+* #6286: C++, allow 8 and 9 in hexadecimal integer literals.
+
+* #6305: Fix the string in quickstart for 'path' argument of parser
+
+* LaTeX: Figures in admonitions produced errors (refs: #6364)
+
+
+Release 2.0.1 (released Apr 08, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* LaTeX: some system labels are not translated
+
+* RemovedInSphinx30Warning is marked as pending
+
+* deprecation warnings are not emitted
+
+  * sphinx.application.CONFIG_FILENAME
+
+  * sphinx.builders.htmlhelp
+
+  * >>:confval:`viewcode_import`<<
+
+* #6208: C++, properly parse full xrefs that happen to have a short
+  xref as prefix
+
+* #6220, #6225: napoleon: AttributeError is raised for raised section
+  having references
+
+* #6245: circular import error on importing SerializingHTMLBuilder
+
+* #6243: LaTeX: 'releasename' setting for latex_elements is ignored
+
+* #6244: html: Search function is broken with 3rd party themes
+
+* #6263: html: HTML5Translator crashed with invalid field node
+
+* #6262: html theme: The style of field lists has changed in bizstyle
+  theme
+
+
+Release 2.0.0 (released Mar 29, 2019)
+=====================================
+
+
+Dependencies
+------------
+
+2.0.0b1
+
+* LaTeX builder now depends on TeX Live 2015 or above.
+
+* LaTeX builder (with "'pdflatex'" >>:confval:`latex_engine`<<) will
+  process Unicode Greek letters in text (not in math mark-up) via the
+  text font and will not escape them to math mark-up. See the
+  discussion of the "'fontenc'" key of >>:confval:`latex_elements`<<;
+  such (optional) support for Greek adds, for example on Ubuntu
+  xenial, the "texlive-lang-greek" and (if default font set-up is not
+  modified) "cm-super(-minimal)" as additional Sphinx LaTeX
+  requirements.
+
+* LaTeX builder with >>:confval:`latex_engine`<< set to "'xelatex'" or
+  to "'lualatex'" requires (by default) the "FreeFont" fonts, which in
+  Ubuntu xenial are provided by package "fonts-freefont-otf", and e.g.
+  in Fedora 29 via package "texlive-gnu-freefont".
+
+* requests 2.5.0 or above
+
+* The six package is no longer a dependency
+
+* The sphinxcontrib-websupport package is no longer a dependency
+
+* Some packages are separated to sub packages:
+
+  * sphinxcontrib.applehelp
+
+  * sphinxcontrib.devhelp
+
+  * sphinxcontrib.htmlhelp
+
+  * sphinxcontrib.jsmath
+
+  * sphinxcontrib.serializinghtml
+
+  * sphinxcontrib.qthelp
+
+
+Incompatible changes
+--------------------
+
+2.0.0b1
+
+* Drop python 2.7 and 3.4 support
+
+* Drop docutils 0.11 support
+
+* Drop features and APIs deprecated in 1.7.x
+
+* The default setting for >>:confval:`master_doc`<< is changed to
+  "'index'" which has been longly used as default of sphinx-
+  quickstart.
+
+* LaTeX: Move message resources to "sphinxmessage.sty"
+
+* LaTeX: Stop using "\captions<lang>" macro for some labels
+
+* LaTeX: for "'xelatex'" and "'lualatex'", use the "FreeFont" OpenType
+  fonts as default choice (refs: #5645)
+
+* LaTeX: "'xelatex'" and "'lualatex'" now use "\small" in code-blocks
+  (due to "FreeMono" character width) like "'pdflatex'" already did
+  (due to "Courier" character width).  You may need to adjust this via
+  >>:confval:`latex_elements`<< "'fvset'" key, in case of usage of
+  some other OpenType fonts (refs: #5768)
+
+* LaTeX: Greek letters in text are not escaped to math mode mark-up,
+  and they will use the text font not the math font. The "LGR" font
+  encoding must be added to the "'fontenc'" key of
+  >>:confval:`latex_elements`<< for this to work (only if it is needed
+  by the document, of course).
+
+* LaTeX: setting the >>:confval:`language`<< to "'en'" triggered
+  "Sonny" option of "fncychap", now it is "Bjarne" to match case of no
+  language specified. (refs: #5772)
+
+* #5770: doctest: Follow >>:confval:`highlight_language`<< on
+  highlighting doctest block.  As a result, they are highlighted as
+  python3 by default.
+
+* The order of argument for "HTMLTranslator", "HTML5Translator" and
+  "ManualPageTranslator" are changed
+
+* LaTeX: hard-coded redefinitions of "\l@section" and "\l@subsection"
+  formerly done during loading of "'manual'" docclass get executed
+  later, at time of "\sphinxtableofcontents".  This means that custom
+  user definitions from LaTeX preamble now get overwritten.  Use
+  "\sphinxtableofcontentshook" to insert custom user definitions.  See
+  Macros.
+
+* quickstart: Simplify generated "conf.py"
+
+* #4148: quickstart: some questions are removed.  They are still able
+  to specify via command line options
+
+* websupport: unbundled from sphinx core. Please use sphinxcontrib-
+  websupport
+
+* C++, the visibility of base classes is now always rendered as
+  present in the input. That is, "private" is now shown, where it was
+  ellided before.
+
+* LaTeX: graphics inclusion of oversized images rescales to not exceed
+  the text width and height, even if width and/or height option were
+  used. (refs: #5956)
+
+* epub: "epub_title" defaults to the >>:confval:`project`<< option
+
+* #4550: All tables and figures without "align" option are displayed
+  to center
+
+* #4587: html: Output HTML5 by default
+
+2.0.0b2
+
+* texinfo: image files are copied into "name-figure" directory
+
+
+Deprecated
+----------
+
+2.0.0b1
+
+* Support for evaluating Python 2 syntax is deprecated. This includes
+  configuration files which should be converted to Python 3.
+
+* The arguments of "EpubBuilder.build_mimetype()",
+  "EpubBuilder.build_container()", "EpubBuilder.bulid_content()",
+  "EpubBuilder.build_toc()" and "EpubBuilder.build_epub()"
+
+* The arguments of "Epub3Builder.build_navigation_doc()"
+
+* The config variables
+
+  * >>:confval:`html_experimental_html5_writer`<<
+
+* The "encoding" argument of "autodoc.Documenter.get_doc()",
+  "autodoc.DocstringSignatureMixin.get_doc()",
+  "autodoc.DocstringSignatureMixin._find_signature()", and
+  "autodoc.ClassDocumenter.get_doc()" are deprecated.
+
+* The "importer" argument of "sphinx.ext.autodoc.importer._MockModule"
+
+* The "nodetype" argument of "sphinx.search.WordCollector.
+  is_meta_keywords()"
+
+* The "suffix" argument of "env.doc2path()" is deprecated.
+
+* The string style "base" argument of "env.doc2path()" is deprecated.
+
+* The fallback to allow omitting the "filename" argument from an
+  overridden "IndexBuilder.feed()" method is deprecated.
+
+* "sphinx.addnodes.abbreviation"
+
+* "sphinx.application.Sphinx._setting_up_extension"
+
+* "sphinx.builders.epub3.Epub3Builder.validate_config_value()"
+
+* "sphinx.builders.html.SingleFileHTMLBuilder"
+
+* "sphinx.builders.htmlhelp.HTMLHelpBuilder.open_file()"
+
+* "sphinx.cmd.quickstart.term_decode()"
+
+* "sphinx.cmd.quickstart.TERM_ENCODING"
+
+* "sphinx.config.check_unicode()"
+
+* "sphinx.config.string_classes"
+
+* "sphinx.domains.cpp.DefinitionError.description"
+
+* "sphinx.domains.cpp.NoOldIdError.description"
+
+* "sphinx.domains.cpp.UnsupportedMultiCharacterCharLiteral.decoded"
+
+* "sphinx.ext.autodoc.importer._MockImporter"
+
+* "sphinx.ext.autosummary.Autosummary.warn()"
+
+* "sphinx.ext.autosummary.Autosummary.genopt"
+
+* "sphinx.ext.autosummary.Autosummary.warnings"
+
+* "sphinx.ext.autosummary.Autosummary.result"
+
+* "sphinx.ext.doctest.doctest_encode()"
+
+* "sphinx.io.SphinxBaseFileInput"
+
+* "sphinx.io.SphinxFileInput.supported"
+
+* "sphinx.io.SphinxRSTFileInput"
+
+* "sphinx.registry.SphinxComponentRegistry.add_source_input()"
+
+* "sphinx.roles.abbr_role()"
+
+* "sphinx.roles.emph_literal_role()"
+
+* "sphinx.roles.menusel_role()"
+
+* "sphinx.roles.index_role()"
+
+* "sphinx.roles.indexmarkup_role()"
+
+* "sphinx.testing.util.remove_unicode_literal()"
+
+* "sphinx.util.attrdict"
+
+* "sphinx.util.force_decode()"
+
+* "sphinx.util.get_matching_docs()"
+
+* "sphinx.util.inspect.Parameter"
+
+* "sphinx.util.jsonimpl"
+
+* "sphinx.util.osutil.EEXIST"
+
+* "sphinx.util.osutil.EINVAL"
+
+* "sphinx.util.osutil.ENOENT"
+
+* "sphinx.util.osutil.EPIPE"
+
+* "sphinx.util.osutil.walk()"
+
+* "sphinx.util.PeekableIterator"
+
+* "sphinx.util.pycompat.NoneType"
+
+* "sphinx.util.pycompat.TextIOWrapper"
+
+* "sphinx.util.pycompat.UnicodeMixin"
+
+* "sphinx.util.pycompat.htmlescape"
+
+* "sphinx.util.pycompat.indent"
+
+* "sphinx.util.pycompat.sys_encoding"
+
+* "sphinx.util.pycompat.terminal_safe()"
+
+* "sphinx.util.pycompat.u"
+
+* "sphinx.writers.latex.ExtBabel"
+
+* "sphinx.writers.latex.LaTeXTranslator._make_visit_admonition()"
+
+* "sphinx.writers.latex.LaTeXTranslator.babel_defmacro()"
+
+* "sphinx.writers.latex.LaTeXTranslator.collect_footnotes()"
+
+* "sphinx.writers.latex.LaTeXTranslator.generate_numfig_format()"
+
+* "sphinx.writers.texinfo.TexinfoTranslator._make_visit_admonition()"
+
+* "sphinx.writers.text.TextTranslator._make_depart_admonition()"
+
+* template variables for LaTeX template
+
+  * "logo"
+
+  * "numfig_format"
+
+  * "pageautorefname"
+
+  * "translatablestrings"
+
+For more details, see deprecation APIs list.
+
+
+Features added
+--------------
+
+2.0.0b1
+
+* #1618: The search results preview of generated HTML documentation is
+  reader-friendlier: instead of showing the snippets as raw
+  reStructuredText markup, Sphinx now renders the corresponding HTML.
+  This means the Sphinx extension Sphinx: pretty search results is no
+  longer necessary.  Note that changes to the search function of your
+  custom or 3rd-party HTML template might overwrite this improvement.
+
+* #4182: autodoc: Support >>:confval:`suppress_warnings`<<
+
+* #5533: autodoc: >>:confval:`autodoc_default_options`<< supports
+  "member-order"
+
+* #5394: autodoc: Display readable names in type annotations for
+  mocked objects
+
+* #5459: autodoc: >>:confval:`autodoc_default_options`<< accepts
+  "True" as a value
+
+* #1148: autodoc: Add "autodecorator" directive for decorators
+
+* #5635: autosummary: Add >>:confval:`autosummary_mock_imports`<< to
+  mock external libraries on importing targets
+
+* #4018: htmlhelp: Add >>:confval:`htmlhelp_file_suffix`<< and
+  >>:confval:`htmlhelp_link_suffix`<<
+
+* #5559: text: Support complex tables (colspan and rowspan)
+
+* LaTeX: support rendering (not in math, yet) of Greek and Cyrillic
+  Unicode letters in non-Cyrillic document even with "'pdflatex'" as
+  >>:confval:`latex_engine`<< (refs: #5645)
+
+* #5660: The "versionadded", "versionchanged" and "deprecated"
+  directives are now generated with their own specific CSS classes
+  ("added", "changed" and "deprecated", respectively) in addition to
+  the generic "versionmodified" class.
+
+* #5841: apidoc: Add --extensions option to sphinx-apidoc
+
+* #4981: C++, added an alias directive for inserting lists of
+  declarations, that references existing declarations (e.g., for
+  making a synopsis).
+
+* C++: add "cpp:struct" to complement "cpp:class".
+
+* #1341 the HTML search considers words that contain a search term of
+  length three or longer a match.
+
+* #4611: epub: Show warning for duplicated ToC entries
+
+* #1851: Allow to omit an argument for "code-block" directive.  If
+  omitted, it follows "highlight" or >>:confval:`highlight_language`<<
+
+* #4587: html: Add >>:confval:`html4_writer`<< to use old HTML4 writer
+
+* #6016: HTML search: A placeholder for the search summary prevents
+  search result links from changing their position when the search
+  terminates.  This makes navigating search results easier.
+
+* #5196: linkcheck also checks remote images exist
+
+* #5924: githubpages: create CNAME file for custom domains when
+  >>:confval:`html_baseurl`<< set
+
+* #4261: autosectionlabel: restrict the labeled sections by new config
+  value; >>:confval:`autosectionlabel_maxdepth`<<
+
+
+Bugs fixed
+----------
+
+2.0.0b1
+
+* #1682: LaTeX: writer should not translate Greek unicode, but use
+  textgreek package
+
+* #5247: LaTeX: PDF does not build with default font config for
+  Russian language and "'xelatex'" or "'lualatex'" as
+  >>:confval:`latex_engine`<< (refs: #5251)
+
+* #5248: LaTeX: Greek letters in section titles disappear from PDF
+  bookmarks
+
+* #5249: LaTeX: Unicode Greek letters in math directive break PDF
+  build (fix requires extra set-up, see >>:confval:`latex_elements`<<
+  "'textgreek'" key and/or >>:confval:`latex_engine`<< setting)
+
+* #5772: LaTeX: should the Bjarne style of fncychap be used for
+  English also if passed as language option?
+
+* #5179: LaTeX: (lualatex only) escaping of ">" by "\textgreater{}" is
+  not enough as "\textgreater{}\textgreater{}" applies TeX-ligature
+
+* LaTeX: project name is not escaped if >>:confval:`latex_documents`<<
+  omitted
+
+* LaTeX: authors are not shown if >>:confval:`latex_documents`<<
+  omitted
+
+* HTML: Invalid HTML5 file is generated for a glossary having multiple
+  terms for one description (refs: #4611)
+
+* QtHelp: OS dependent path separator is used in .qhp file
+
+* HTML search: search always returns nothing when multiple search
+  terms are used and one term is shorter than three characters
+
+2.0.0b2
+
+* #6096: html: Anchor links are not added to figures
+
+* #3620: html: Defer searchindex.js rather than loading it via ajax
+
+* #6113: html: Table cells and list items have large margins
+
+* #5508: "linenothreshold" option for "highlight" directive was
+  ignored
+
+* texinfo: "make install-info" causes syntax error
+
+* texinfo: "make install-info" fails on macOS
+
+* #3079: texinfo: image files are not copied on "make install-info"
+
+* #5391: A cross reference in heading is rendered as literal
+
+* #5946: C++, fix "cpp:alias" problems in LaTeX (and singlehtml)
+
+* #6147: classes attribute of "citation_reference" node is lost
+
+* AssertionError is raised when custom "citation_reference" node
+  having classes attribute refers missing citation (refs: #6147)
+
+* #2155: Support "code" directive
+
+* C++, fix parsing of braced initializers.
+
+* #6172: AttributeError is raised for old styled index nodes
+
+* #4872: inheritance_diagram: correctly describe behavior of "parts"
+  option in docs, allow negative values.
+
+* #6178: i18n: Captions missing in translations for hidden TOCs
+
+2.0.0 final
+
+* #6196: py domain: unexpected prefix is generated
+
+
+Testing
+-------
+
+2.0.0b1
+
+* Stop to use "SPHINX_TEST_TEMPDIR" envvar
+
+2.0.0b2
+
+* Add a helper function: "sphinx.testing.restructuredtext.parse()"
+
+
+Release 1.8.5 (released Mar 10, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* LaTeX: Remove extraneous space after author names on PDF title page
+  (refs: #6004)
+
+* #6026: LaTeX: A cross reference to definition list does not work
+
+* #6046: LaTeX: "TypeError" is raised when invalid latex_elements
+  given
+
+* #6067: LaTeX: images having a target are concatenated to next line
+
+* #6067: LaTeX: images having a target are not aligned even if
+  specified
+
+* #6149: LaTeX: ":index:" role in titles causes "Use of \@icentercr
+  doesn't match its definition" error on latexpdf build
+
+* #6019: imgconverter: Including multipage PDF fails
+
+* #6047: autodoc: "autofunction" emits a warning for method objects
+
+* #6028: graphviz: Ensure the graphviz filenames are reproducible
+
+* #6068: doctest: "skipif" option may remove the code block from
+  documentation
+
+* #6136: ":name:" option for "math" directive causes a crash
+
+* #6139: intersphinx: ValueError on failure reporting
+
+* #6135: changes: Fix UnboundLocalError when any module found
+
+* #3859: manpage: code-block captions are not displayed correctly
+
+
+Release 1.8.4 (released Feb 03, 2019)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #3707: latex: no bold checkmark (✔) available.
+
+* #5605: with the documentation language set to Chinese, English words
+  could not be searched.
+
+* #5889: LaTeX: user "numfig_format" is stripped of spaces and may
+  cause build failure
+
+* C++, fix hyperlinks for declarations involving east cv-qualifiers.
+
+* #5755: C++, fix duplicate declaration error on function templates
+  with constraints in the return type.
+
+* C++, parse unary right fold expressions and binary fold expressions.
+
+* pycode could not handle egg files on windows
+
+* #5928: KeyError: 'DOCUTILSCONFIG' when running build
+
+* #5936: LaTeX: PDF build broken by inclusion of image taller than
+  page height in an admonition
+
+* #5231: "make html" does not read and build "po" files in "locale"
+  dir
+
+* #5954: ":scale:" image option may break PDF build if image in an
+  admonition
+
+* #5966: mathjax has not been loaded on incremental build
+
+* #5960: LaTeX: modified PDF layout since September 2018 TeXLive
+  update of "parskip.sty"
+
+* #5948: LaTeX: duplicated labels are generated for sections
+
+* #5958: versionadded directive causes crash with Python 3.5.0
+
+* #5995: autodoc: autodoc_mock_imports conflict with metaclass on
+  Python 3.7
+
+* #5871: texinfo: a section title "." is not allowed
+
+
+Release 1.8.3 (released Dec 26, 2018)
+=====================================
+
+
+Features added
+--------------
+
+* LaTeX: it is possible to insert custom material to appear on back of
+  title page, see discussion of "'maketitle'" key of
+  >>:confval:`latex_elements`<< ("'manual'" docclass only)
+
+
+Bugs fixed
+----------
+
+* #5725: mathjax: Use CDN URL for "latest" version by default
+
+* #5460: html search does not work with some 3rd party themes
+
+* #5520: LaTeX, caption package incompatibility since Sphinx 1.6
+
+* #5614: autodoc: incremental build is broken when builtin modules are
+  imported
+
+* #5627: qthelp: index.html missing in QtHelp
+
+* #5659: linkcheck: crashes for a hyperlink containing multibyte
+  character
+
+* #5754: DOC: Fix some mistakes in */latex*
+
+* #5810: LaTeX: sphinxVerbatim requires explicit "hllines" set-up
+  since 1.6.6 (refs: #1238)
+
+* #5636: C++, fix parsing of floating point literals.
+
+* #5496 (again): C++, fix assertion in partial builds with duplicates.
+
+* #5724: quickstart: sphinx-quickstart fails when $LC_ALL is empty
+
+* #1956: Default conf.py is not PEP8-compliant
+
+* #5849: LaTeX: document class "\maketitle" is overwritten with no
+  possibility to use original meaning in place of Sphinx custom one
+
+* #5834: apidoc: wrong help for "--tocfile"
+
+* #5800: todo: crashed if todo is defined in TextElement
+
+* #5846: htmlhelp: convert hex escaping to decimal escaping in
+  .hhc/.hhk files
+
+* htmlhelp: broken .hhk file generated when title contains a double
+  quote
+
+
+Release 1.8.2 (released Nov 11, 2018)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #5497: Do not include MathJax.js and jsmath.js unless it is really
+  needed
+
+
+Features added
+--------------
+
+* #5471: Show appropriate deprecation warnings
+
+
+Bugs fixed
+----------
+
+* #5490: latex: enumerated list causes a crash with recommonmark
+
+* #5492: sphinx-build fails to build docs w/ Python < 3.5.2
+
+* #3704: latex: wrong "\label" positioning for figures with a legend
+
+* #5496: C++, fix assertion when a symbol is declared more than twice.
+
+* #5493: gettext: crashed with broken template
+
+* #5495: csv-table directive with file option in included file is
+  broken (refs: #4821)
+
+* #5498: autodoc: unable to find type hints for a "functools.partial"
+
+* #5480: autodoc: unable to find type hints for unresolvable Forward
+  references
+
+* #5419: incompatible math_block node has been generated
+
+* #5548: Fix ensuredir() in case of pre-existing file
+
+* #5549: graphviz Correctly deal with non-existing static dir
+
+* #3002: i18n: multiple footnote_references referring same footnote
+  cause duplicated node_ids
+
+* #5563: latex: footnote_references generated by extension causes a
+  LaTeX builder crash
+
+* #5561: make all-pdf fails with old xindy version
+
+* #5557: quickstart: --no-batchfile isn't honored
+
+* #3080: texinfo: multiline rubrics are broken
+
+* #3080: texinfo: multiline citations are broken
+
+
+Release 1.8.1 (released Sep 22, 2018)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* LaTeX "\pagestyle" commands have been moved to the LaTeX template.
+  No changes in PDF, except possibly if "\sphinxtableofcontents",
+  which contained them, had been customized in "conf.py". (refs:
+  #5455)
+
+
+Bugs fixed
+----------
+
+* #5418: Incorrect default path for sphinx-build -d/doctrees files
+
+* #5421: autodoc emits deprecation warning for
+  >>:confval:`autodoc_default_flags`<<
+
+* #5422: lambda object causes PicklingError on storing environment
+
+* #5417: Sphinx fails to build with syntax error in Python 2.7.5
+
+* #4911: add latexpdf to make.bat for non make-mode
+
+* #5436: Autodoc does not work with enum subclasses with
+  properties/methods
+
+* #5437: autodoc: crashed on modules importing eggs
+
+* #5433: latex: ImportError: cannot import name 'DEFAULT_SETTINGS'
+
+* #5431: autodoc: "autofunction" emits a warning for callable objects
+
+* #5457: Fix TypeError in error message when override is prohibited
+
+* #5453: PDF builds of 'howto' documents have no page numbers
+
+* #5463: mathbase: math_role and MathDirective was disappeared in
+  1.8.0
+
+* #5454: latex: Index has disappeared from PDF for Japanese documents
+
+* #5432: py domain: ":type:" field can't process ":term:" references
+
+* #5426: py domain: TypeError has been raised for class attribute
+
+
+Release 1.8.0 (released Sep 13, 2018)
+=====================================
+
+
+Dependencies
+------------
+
+1.8.0b1
+
+* LaTeX: >>:confval:`latex_use_xindy`<<, if "True" (default for
+  "xelatex/lualatex"), instructs "make latexpdf" to use **xindy** for
+  general index.  Make sure your LaTeX distribution includes it.
+  (refs: #5134)
+
+* LaTeX: "latexmk" is required for "make latexpdf" on Windows
+
+
+Incompatible changes
+--------------------
+
+1.8.0b2
+
+* #5282: html theme: refer "pygments_style" settings of HTML themes
+  preferentially
+
+* The URL of download files are changed
+
+* #5127: quickstart: "Makefile" and "make.bat" are not overwritten if
+  exists
+
+1.8.0b1
+
+* #5156: the "sphinx.ext.graphviz: extension runs `dot" in the
+  directory of the document being built instead of in the root
+  directory of the documentation.
+
+* #4460: extensions which stores any data to environment should return
+  the version of its env data structure as metadata.  In detail,
+  please see Extension metadata.
+
+* Sphinx expects source parser modules to have supported file formats
+  as "Parser.supported" attribute
+
+* The default value of >>:confval:`epub_author`<< and
+  >>:confval:`epub_publisher`<< are changed from "'unknown'" to the
+  value of >>:confval:`author`<<.  This is same as a "conf.py" file
+  sphinx-build generates.
+
+* The "gettext_compact" attribute is removed from "document.settings"
+  object.  Please use "config.gettext_compact" instead.
+
+* The processing order on reading phase is changed.  smart_quotes,
+  sphinx domains, >>:event:`doctree-read`<< event and versioning
+  doctrees are invoked earlier than so far. For more details, please
+  read a description of "Sphinx.add_transform()"
+
+* #4827: All "substitution_definition" nodes are removed from doctree
+  on reading phase
+
+* "docutils.conf" in "$HOME" or "/etc" directories are ignored.  Only
+  "docutils.conf" from confdir is obeyed.
+
+* #789: ":samp:" role supports to escape curly braces with backslash
+
+* #4811: The files under >>:confval:`html_static_path`<< are excluded
+  from source files.
+
+* latex: Use "\sphinxcite" for citation references instead "\hyperref"
+
+* The config value "viewcode_import" is renamed to
+  >>:confval:`viewcode_follow_imported_members`<< (refs: #4035)
+
+* #1857: latex: >>:confval:`latex_show_pagerefs`<< does not add
+  pagerefs for citations
+
+* #4648: latex: Now "rubric" elements are rendered as unnumbered
+  section title
+
+* #4983: html: The anchor for productionlist tokens has been changed
+
+* Modifying a template variable "script_files" in templates is allowed
+  now. Please use "app.add_js_file()" instead.
+
+* #5072: Save environment object also with only new documents
+
+* #5035: qthelp builder allows dashes in
+  >>:confval:`qthelp_namespace`<<
+
+* LaTeX: with lualatex or xelatex use by default **xindy** as UTF-8
+  able replacement of **makeindex** (refs: #5134).  After upgrading
+  Sphinx, please clean latex build repertory of existing project
+  before new build.
+
+* #5163: html: hlist items are now aligned to top
+
+* "highlightlang" directive is processed on resolving phase
+
+* #4000: LaTeX: template changed.  Following elements moved to it:
+
+  * "\begin{document}"
+
+  * "shorthandoff" variable
+
+  * "maketitle" variable
+
+  * "tableofcontents" variable
+
+
+Deprecated
+----------
+
+1.8.0b2
+
+* "sphinx.io.SphinxI18nReader.set_lineno_for_reporter()" is deprecated
+
+* "sphinx.io.SphinxI18nReader.line" is deprecated
+
+* "sphinx.util.i18n.find_catalog_source_file()" has changed; the
+  *gettext_compact* argument has been deprecated
+
+* #5403: "sphinx.util.images.guess_mimetype()" has changed; the
+  *content* argument has been deprecated
+
+1.8.0b1
+
+* >>:confval:`source_parsers`<< is deprecated
+
+* >>:confval:`autodoc_default_flags`<< is deprecated
+
+* quickstart: "--epub" option becomes default, so it is deprecated
+
+* Drop function based directive support.  For now, Sphinx only
+  supports class based directives (see "Directive")
+
+* "sphinx.util.docutils.directive_helper()" is deprecated
+
+* "sphinx.cmdline" is deprecated
+
+* "sphinx.make_mode" is deprecated
+
+* "sphinx.locale.l_()" is deprecated
+
+* #2157: helper function "warn()" for HTML themes is deprecated
+
+* "app.override_domain()" is deprecated
+
+* "app.add_stylesheet()" is deprecated
+
+* "app.add_javascript()" is deprecated
+
+* "app.import_object()" is deprecated
+
+* "app.add_source_parser()" has changed;  the *suffix* argument has
+  been deprecated
+
+* "sphinx.versioning.prepare()" is deprecated
+
+* "Config.__init__()" has changed;  the *dirname*, *filename* and
+  *tags* argument has been deprecated
+
+* "Config.check_types()" is deprecated
+
+* "Config.check_unicode()" is deprecated
+
+* "sphinx.application.CONFIG_FILENAME" is deprecated
+
+* "highlightlang" directive is deprecated
+
+* "BuildEnvironment.load()" is deprecated
+
+* "BuildEnvironment.loads()" is deprecated
+
+* "BuildEnvironment.frompickle()" is deprecated
+
+* "env.read_doc()" is deprecated
+
+* "env.update()" is deprecated
+
+* "env._read_serial()" is deprecated
+
+* "env._read_parallel()" is deprecated
+
+* "env.write_doctree()" is deprecated
+
+* "env._nitpick_ignore" is deprecated
+
+* "env.versionchanges" is deprecated
+
+* "env.dump()" is deprecated
+
+* "env.dumps()" is deprecated
+
+* "env.topickle()" is deprecated
+
+* "env.note_versionchange()" is deprecated
+
+* "sphinx.writers.latex.Table.caption_footnotetexts" is deprecated
+
+* "sphinx.writers.latex.Table.header_footnotetexts" is deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.footnotestack" is deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.in_container_literal_block" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.next_section_ids" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.next_hyperlink_ids" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.restrict_footnote()" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.unrestrict_footnote()" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.push_hyperlink_ids()" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.pop_hyperlink_ids()" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.check_latex_elements()" is
+  deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.bibitems" is deprecated
+
+* "sphinx.writers.latex.LaTeXTranslator.hlsettingstack" is deprecated
+
+* "sphinx.writers.latex.ExtBabel.get_shorthandoff()" is deprecated
+
+* "sphinx.writers.html.HTMLTranslator.highlightlang" is deprecated
+
+* "sphinx.writers.html.HTMLTranslator.highlightlang_base" is
+  deprecated
+
+* "sphinx.writers.html.HTMLTranslator.highlightlangopts" is deprecated
+
+* "sphinx.writers.html.HTMLTranslator.highlightlinenothreshold" is
+  deprecated
+
+* "sphinx.writers.html5.HTMLTranslator.highlightlang" is deprecated
+
+* "sphinx.writers.html5.HTMLTranslator.highlightlang_base" is
+  deprecated
+
+* "sphinx.writers.html5.HTMLTranslator.highlightlangopts" is
+  deprecated
+
+* "sphinx.writers.html5.HTMLTranslator.highlightlinenothreshold" is
+  deprecated
+
+* "sphinx.ext.mathbase" extension is deprecated
+
+* "sphinx.ext.mathbase.math" node is deprecated
+
+* "sphinx.ext.mathbase.displaymath" node is deprecated
+
+* "sphinx.ext.mathbase.eqref" node is deprecated
+
+* "sphinx.ext.mathbase.is_in_section_title()" is deprecated
+
+* "sphinx.ext.mathbase.MathDomain" is deprecated
+
+* "sphinx.ext.mathbase.MathDirective" is deprecated
+
+* "sphinx.ext.mathbase.math_role" is deprecated
+
+* "sphinx.ext.mathbase.setup_math()" is deprecated
+
+* "sphinx.directives.other.VersionChanges" is deprecated
+
+* "sphinx.highlighting.PygmentsBridge.unhighlight()" is deprecated
+
+* "sphinx.ext.mathbase.get_node_equation_number()" is deprecated
+
+* "sphinx.ext.mathbase.wrap_displaymath()" is deprecated
+
+* The "trim_doctest_flags" argument of
+  "sphinx.highlighting.PygmentsBridge" is deprecated
+
+For more details, see deprecation APIs list
+
+
+Features added
+--------------
+
+1.8.0b2
+
+* #5388: Ensure frozen object descriptions are reproducible
+
+* #5362: apidoc: Add "--tocfile" option to change the filename of ToC
+
+1.8.0b1
+
+* Add >>:event:`config-inited`<< event
+
+* Add "sphinx.config.Any" to represent the config value accepts any
+  type of value
+
+* >>:confval:`source_suffix`<< allows a mapping fileext to file types
+
+* Add >>:confval:`author`<< as a configuration value
+
+* #2852: imgconverter: Support to convert GIF to PNG
+
+* "sphinx-build" command supports i18n console output
+
+* Add "app.add_message_catalog()" and
+  "sphinx.locale.get_translations()" to support translation for 3rd
+  party extensions
+
+* helper function "warning()" for HTML themes is added
+
+* Add "Domain.enumerable_nodes" to manage own enumerable nodes for
+  domains (experimental)
+
+* Add a new keyword argument "override" to Application APIs
+
+* LaTeX: new key "'fvset'" for >>:confval:`latex_elements`<<. For
+  XeLaTeX/LuaLaTeX its default sets "fanvyvrb" to use normal, not
+  small, fontsize in code-blocks (refs: #4793)
+
+* Add >>:confval:`html_css_files`<< and >>:confval:`epub_css_files`<<
+  for adding CSS files from configuration
+
+* Add >>:confval:`html_js_files`<< for adding JS files from
+  configuration
+
+* #4834: Ensure set object descriptions are reproducible.
+
+* #4828: Allow to override >>:confval:`numfig_format`<< partially.
+  Full definition is not needed.
+
+* Improve warning messages during including (refs: #4818)
+
+* LaTeX: separate customizability of "guilabel" and "menuselection"
+  (refs: #4830)
+
+* Add "Config.read()" classmethod to create a new config object from
+  configuration file
+
+* #4866: Wrap graphviz diagrams in "<div>" tag
+
+* viewcode: Add >>:event:`viewcode-find-source`<< and >>:event
+  :`viewcode-follow-imported`<< to load source code without loading
+
+* #4785: napoleon: Add strings to translation file for localisation
+
+* #4927: Display a warning when invalid values are passed to
+  linenothreshold option of highlight directive
+
+* C++:
+
+  * Add a "cpp:texpr" role as a sibling to "cpp:expr".
+
+  * Add support for unions.
+
+  * #3593, #2683: add support for anonymous entities using names
+    staring with "@".
+
+  * #5147: add support for (most) character literals.
+
+  * Cross-referencing entities inside primary templates is supported,
+    and now properly documented.
+
+  * #1552: add new cross-referencing format for "cpp:any" and
+    "cpp:func" roles, for referencing specific function overloads.
+
+* #3606: MathJax should be loaded with async attribute
+
+* html: Output "canonical_url" metadata if >>:confval:`html_baseurl`<<
+  set (refs: #4193)
+
+* #5029: autosummary: expose "inherited_members" to template
+
+* #3784: mathjax: Add >>:confval:`mathjax_options`<< to give options
+  to script tag for mathjax
+
+* #726, #969: mathjax: Add >>:confval:`mathjax_config`<< to give in-
+  line configurations for mathjax
+
+* #4362: latex: Don't overwrite .tex file if document not changed
+
+* #1431: latex: Add alphanumeric enumerated list support
+
+* Add >>:confval:`latex_use_xindy`<< for UTF-8 savvy indexing,
+  defaults to "True" if >>:confval:`latex_engine`<< is "'xelatex'" or
+  "'lualatex'". (refs: #5134, #5192, #5212)
+
+* #4976: "SphinxLoggerAdapter.info()" now supports "location"
+  parameter
+
+* #5122: setuptools: support nitpicky option
+
+* #2820: autoclass directive supports nested class
+
+* Add "app.add_html_math_renderer()" to register a math renderer for
+  HTML
+
+* Apply >>:confval:`trim_doctest_flags`<< to all builders (cf. text,
+  manpages)
+
+* #5140: linkcheck: Add better Accept header to HTTP client
+
+* #4614: sphinx-build: Add "--keep-going" option to show all warnings
+
+* Add "math:numref" role to refer equations (Same as "eq")
+
+* quickstart: epub builder is enabled by default
+
+* #5246: Add >>:confval:`singlehtml_sidebars`<< to configure sidebars
+  for singlehtml builder
+
+* #5273: doctest: Skip doctest conditionally
+
+* #5306: autodoc: emit a warning for invalid typehints
+
+* #4075, #5215: autodoc: Add >>:confval:`autodoc_default_options`<<
+  which accepts option values as dict
+
+
+Bugs fixed
+----------
+
+1.8.0b2
+
+* html: search box overrides to other elements if scrolled
+
+* i18n: warnings for translation catalogs have wrong line numbers
+  (refs: #5321)
+
+* #5325: latex: cross references has been broken by multiply labeled
+  objects
+
+* C++, fixes for symbol addition and lookup. Lookup should no longer
+  break in partial builds. See also #5337.
+
+* #5348: download reference to remote file is not displayed
+
+* #5282: html theme: "pygments_style" of theme was overridden by
+  "conf.py" by default
+
+* #4379: toctree shows confusing warning when document is excluded
+
+* #2401: autodoc: ":members:" causes ":special-members:" not to be
+  shown
+
+* autodoc: ImportError is replaced by AttributeError for deeper module
+
+* #2720, #4034: Incorrect links with ":download:", duplicate names,
+  and parallel builds
+
+* #5290: autodoc: failed to analyze source code in egg package
+
+* #5399: Sphinx crashes if unknown po file exists
+
+1.8.0b1
+
+* i18n: message catalogs were reset on each initialization
+
+* #4850: latex: footnote inside footnote was not rendered
+
+* #4945: i18n: fix lang_COUNTRY not fallback correctly for
+  IndexBuilder. Thanks to Shengjing Zhu.
+
+* #4983: productionlist directive generates invalid IDs for the tokens
+
+* #5132: lualatex: PDF build fails if indexed word starts with Unicode
+  character
+
+* #5133: latex: index headings "Symbols" and "Numbers" not
+  internationalized
+
+* #5114: sphinx-build: Handle errors on scanning documents
+
+* epub: spine has been broken when "self" is listed on toctree (refs:
+  #4611)
+
+* #344: autosummary does not understand docstring of module level
+  attributes
+
+* #5191: C++, prevent nested declarations in functions to avoid lookup
+  problems.
+
+* #5126: C++, add missing isPack method for certain template parameter
+  types.
+
+* #5187: C++, parse attributes on declarators as well.
+
+* C++, parse delete expressions and basic new expressions as well.
+
+* #5002: graphviz: SVGs do not adapt to the column width
+
+
+Features removed
+----------------
+
+1.8.0b1
+
+* "sphinx.ext.pngmath" extension
+
+
+Documentation
+-------------
+
+1.8.0b1
+
+* #5083: Fix wrong make.bat option for internationalization.
+
+* #5115: napoleon: add admonitions added by #4613 to the docs.
+
+
+Release 1.7.9 (released Sep 05, 2018)
+=====================================
+
+
+Features added
+--------------
+
+* #5359: Make generated texinfo files reproducible by sorting the
+  anchors
+
+
+Bugs fixed
+----------
+
+* #5361: crashed on incremental build if document uses include
+  directive
+
+
+Release 1.7.8 (released Aug 29, 2018)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* The type of "env.included" has been changed to dict of set
+
+
+Bugs fixed
+----------
+
+* #5320: intersphinx: crashed if invalid url given
+
+* #5326: manpage: crashed when invalid docname is specified as
+  "man_pages"
+
+* #5322: autodoc: "Any" typehint causes formatting error
+
+* #5327: "document isn't included in any toctree" warning on rebuild
+  with generated files
+
+* #5335: quickstart: escape sequence has been displayed with MacPorts'
+  python
+
+
+Release 1.7.7 (released Aug 19, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #5198: document not in toctree warning when including files only for
+  parallel builds
+
+* LaTeX: reduce "Token not allowed in a PDF string" hyperref warnings
+  in latex console output (refs: #5236)
+
+* LaTeX: suppress "remreset Warning: The remreset package is obsolete"
+  in latex console output with recent LaTeX (refs: #5237)
+
+* #5234: PDF output: usage of PAPER environment variable is broken
+  since Sphinx 1.5
+
+* LaTeX: fix the >>:confval:`latex_engine`<< documentation regarding
+  Latin Modern font with XeLaTeX/LuaLateX (refs: #5251)
+
+* #5280: autodoc: Fix wrong type annotations for complex typing
+
+* autodoc: Optional types are wrongly rendered
+
+* #5291: autodoc crashed by ForwardRef types
+
+* #5211: autodoc: No docs generated for functools.partial functions
+
+* #5306: autodoc: "getargspec()" raises NameError for invalid
+  typehints
+
+* #5298: imgmath: math_number_all causes equations to have two numbers
+  in html
+
+* #5294: sphinx-quickstart blank prompts in PowerShell
+
+
+Release 1.7.6 (released Jul 17, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #5037: LaTeX "\sphinxupquote{}" breaks in Russian
+
+* sphinx.testing uses deprecated pytest API; "Node.get_marker(name)"
+
+* #5016: crashed when recommonmark.AutoStrictify is enabled
+
+* #5022: latex: crashed with docutils package provided by
+  Debian/Ubuntu
+
+* #5009: latex: a label for table is vanished if table does not have a
+  caption
+
+* #5048: crashed with numbered toctree
+
+* #2410: C, render empty argument lists for macros.
+
+* C++, fix lookup of full template specializations with no template
+  arguments.
+
+* #4667: C++, fix assertion on missing references in global scope when
+  using intersphinx. Thanks to Alan M. Carroll.
+
+* #5019: autodoc: crashed by Form Feed Character
+
+* #5032: autodoc: loses the first staticmethod parameter for old
+  styled classes
+
+* #5036: quickstart: Typing Ctrl-U clears the whole of line
+
+* #5066: html: "relations" sidebar is not shown by default
+
+* #5091: latex: curly braces in index entries are not handled
+  correctly
+
+* #5070: epub: Wrong internal href fragment links
+
+* #5104: apidoc: Interface of "sphinx.apidoc:main()" has changed
+
+* #4272: PDF builds of French projects have issues with XeTeX
+
+* #5076: napoleon raises RuntimeError with python 3.7
+
+* #5125: sphinx-build: Interface of "sphinx:main()" has changed
+
+* sphinx-build: "sphinx.cmd.build.main()" refers "sys.argv" instead of
+  given argument
+
+* #5146: autosummary: warning is emitted when the first line of
+  docstring ends with literal notation
+
+* autosummary: warnings of autosummary indicates wrong location (refs:
+  #5146)
+
+* #5143: autodoc: crashed on inspecting dict like object which does
+  not support sorting
+
+* #5139: autodoc: Enum argument missing if it shares value with
+  another
+
+* #4946: py domain: rtype field could not handle "None" as a type
+
+* #5176: LaTeX: indexing of terms containing "@", "!", or """ fails
+
+* #5161: html: crashes if copying static files are failed
+
+* #5167: autodoc: Fix formatting type annotations for tuples with more
+  than two arguments
+
+* #3329: i18n: crashed by auto-symbol footnote references
+
+* #5158: autosummary: module summary has been broken when it starts
+  with heading
+
+
+Release 1.7.5 (released May 29, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #4924: html search: Upper characters problem in any other languages
+
+* #4932: apidoc: some subpackage is ignored if sibling subpackage
+  contains a module starting with underscore
+
+* #4863, #4938, #4939: i18n doesn't handle correctly node.title as
+  used for contents, topic, admonition, table and section.
+
+* #4913: i18n: literal blocks in bullet list are not translated
+
+* #4962: C++, raised TypeError on duplicate declaration.
+
+* #4825: C++, properly parse expr roles and give better error messages
+  when (escaped) line breaks are present.
+
+* C++, properly use "desc_addname" nodes for prefixes of names.
+
+* C++, parse pack expansions in function calls.
+
+* #4915, #4916: links on search page are broken when using dirhtml
+  builder
+
+* #4969: autodoc: constructor method should not have return annotation
+
+* latex: deeply nested enumerated list which is beginning with non-1
+  causes LaTeX engine crashed
+
+* #4978: latex: shorthandoff is not set up for Brazil locale
+
+* #4928: i18n: Ignore dot-directories like .git/ in LC_MESSAGES/
+
+* #4946: py domain: type field could not handle "None" as a type
+
+* #4979: latex: Incorrect escaping of curly braces in index entries
+
+* #4956: autodoc: Failed to extract document from a subclass of the
+  class on mocked module
+
+* #4973: latex: glossary directive adds whitespace to each item
+
+* #4980: latex: Explicit labels on code blocks are duplicated
+
+* #4919: node.asdom() crashes if toctree has :numbered: option
+
+* #4914: autodoc: Parsing error when using dataclasses without default
+  values
+
+* #4931: autodoc: crashed when handler for autodoc-skip-member raises
+  an error
+
+* #4931: autodoc: crashed when subclass of mocked class are processed
+  by napoleon module
+
+* #5007: sphinx-build crashes when error log contains a "%" character
+
+
+Release 1.7.4 (released Apr 25, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #4885, #4887: domains: Crashed with duplicated objects
+
+* #4889: latex: sphinx.writers.latex causes recursive import
+
+
+Release 1.7.3 (released Apr 23, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #4769: autodoc loses the first staticmethod parameter
+
+* #4790: autosummary: too wide two column tables in PDF builds
+
+* #4795: Latex customization via "_templates/longtable.tex_t" is
+  broken
+
+* #4789: imgconverter: confused by convert.exe of Windows
+
+* #4783: On windows, Sphinx crashed when drives of srcdir and outdir
+  are different
+
+* #4812: autodoc ignores type annotated variables
+
+* #4817: wrong URLs on warning messages
+
+* #4784: latex: >>:confval:`latex_show_urls`<< assigns incorrect
+  footnote numbers if hyperlinks exists inside substitutions
+
+* #4837: latex with class memoir Error: Font command "\sf" is not
+  supported
+
+* #4803: latex: too slow in proportion to number of auto numbered
+  footnotes
+
+* #4838: htmlhelp: The entries in .hhp file is not ordered
+
+* toctree directive tries to glob for URL having query_string
+
+* #4871: html search: Upper characters problem in German
+
+* #4717: latex: Compilation for German docs failed with LuaLaTeX and
+  XeLaTeX
+
+* #4459: duplicated labels detector does not work well in parallel
+  build
+
+* #4878: Crashed with extension which returns invalid metadata
+
+
+Release 1.7.2 (released Mar 21, 2018)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #4520: apidoc: folders with an empty __init__.py are no longer
+  excluded from TOC
+
+
+Bugs fixed
+----------
+
+* #4669: sphinx.build_main and sphinx.make_main throw NameError
+
+* #4685: autosummary emits meaningless warnings
+
+* autodoc: crashed when invalid options given
+
+* pydomain: always strip parenthesis if empty (refs: #1042)
+
+* #4689: autosummary: unexpectedly strips docstrings containing "i.e."
+
+* #4701: viewcode: Misplaced "<div>" in viewcode html output
+
+* #4444: Don't require numfig to use :numref: on sections
+
+* #4727: Option clash for package textcomp
+
+* #4725: Sphinx does not work with python 3.5.0 and 3.5.1
+
+* #4716: Generation PDF file with TexLive on Windows, file not found
+  error
+
+* #4574: vertical space before equation in latex
+
+* #4720: message when an image is mismatched for builder is not clear
+
+* #4655, #4684: Incomplete localization strings in Polish and Chinese
+
+* #2286: Sphinx crashes when error is happens in rendering HTML pages
+
+* #4688: Error to download remote images having long URL
+
+* #4754: sphinx/pycode/__init__.py raises AttributeError
+
+* #1435: qthelp builder should htmlescape keywords
+
+* epub: Fix docTitle elements of toc.ncx is not escaped
+
+* #4520: apidoc: Subpackage not in toc (introduced in 1.6.6) now fixed
+
+* #4767: html: search highlighting breaks mathjax equations
+
+
+Release 1.7.1 (released Feb 23, 2018)
+=====================================
+
+
+Deprecated
+----------
+
+* #4623: "sphinx.build_main()" is deprecated.
+
+* autosummary: The interface of
+  "sphinx.ext.autosummary.get_documenter()" has been changed (Since
+  1.7.0)
+
+* #4664: "sphinx.ext.intersphinx.debug()" is deprecated.
+
+For more details, see deprecation APIs list
+
+
+Bugs fixed
+----------
+
+* #4608: epub: Invalid meta tag is generated
+
+* #4260: autodoc: keyword only argument separator is not disappeared
+  if it is appeared at top of the argument list
+
+* #4622: epub: >>:confval:`epub_scheme`<< does not effect to
+  content.opf
+
+* #4627: graphviz: Fit graphviz images to page
+
+* #4617: quickstart: PROJECT_DIR argument is required
+
+* #4623: sphinx.build_main no longer exists in 1.7.0
+
+* #4615: The argument of "sphinx.build" has been changed in 1.7.0
+
+* autosummary: The interface of
+  "sphinx.ext.autosummary.get_documenter()" has been changed
+
+* #4630: Have order on msgids in sphinx.pot deterministic
+
+* #4563: autosummary: Incorrect end of line punctuation detection
+
+* #4577: Enumerated sublists with explicit start with wrong number
+
+* #4641: A external link in TOC cannot contain "?" with ":glob:"
+  option
+
+* C++, add missing parsing of explicit casts and typeid in expression
+  parsing.
+
+* C++, add missing parsing of "this" in expression parsing.
+
+* #4655: Fix incomplete localization strings in Polish
+
+* #4653: Fix error reporting for parameterless ImportErrors
+
+* #4664: Reading objects.inv fails again
+
+* #4662: "any" refs with "term" targets crash when an ambiguity is
+  encountered
+
+
+Release 1.7.0 (released Feb 12, 2018)
+=====================================
+
+
+Dependencies
+------------
+
+1.7.0b1
+
+* Add "packaging" package
+
+
+Incompatible changes
+--------------------
+
+1.7.0b1
+
+* #3668: The arguments has changed of main functions for each command
+
+* #3893: Unknown html_theme_options throw warnings instead of errors
+
+* #3927: Python parameter/variable types should match classes, not all
+  objects
+
+* #3962: sphinx-apidoc now recognizes given directory as an implicit
+  namespace package when "--implicit-namespaces" option given, not
+  subdirectories of given directory.
+
+* #3929: apidoc: Move sphinx.apidoc to sphinx.ext.apidoc
+
+* #4226: apidoc: Generate new style makefile (make-mode)
+
+* #4274: sphinx-build returns 2 as an exit code on argument error
+
+* #4389: output directory will be created after loading extensions
+
+* autodoc does not generate warnings messages to the generated
+  document even if >>:confval:`keep_warnings`<< is True.  They are
+  only emitted to stderr.
+
+* shebang line is removed from generated conf.py
+
+* #2557: autodoc: >>:confval:`autodoc_mock_imports`<< only mocks
+  specified modules with their descendants.  It does not mock their
+  ancestors.  If you want to mock them, please specify the name of
+  ancestors explicitly.
+
+* #3620: html theme: move DOCUMENTATION_OPTIONS to independent
+  JavaScript file (refs: #4295)
+
+* #4246: Limit width of text body for all themes. Configurable via
+  theme options "body_min_width" and "body_max_width".
+
+* #4771: apidoc: The "exclude_patterns" arguments are ignored if they
+  are placed just after command line options
+
+1.7.0b2
+
+* #4467: html theme: Rename "csss" block to "css"
+
+
+Deprecated
+----------
+
+1.7.0b1
+
+* using a string value for >>:confval:`html_sidebars`<< is deprecated
+  and only list values will be accepted at 2.0.
+
+* "format_annotation()" and "formatargspec()" is deprecated.  Please
+  use "sphinx.util.inspect.Signature" instead.
+
+* "sphinx.ext.autodoc.AutodocReporter" is replaced by
+  "sphinx.util.docutils. switch_source_input()" and now deprecated.
+  It will be removed in Sphinx-2.0.
+
+* "sphinx.ext.autodoc.add_documenter()" and "AutoDirective._register"
+  is now deprecated.  Please use "app.add_autodocumenter()" instead.
+
+* "AutoDirective._special_attrgetters" is now deprecated.  Please use
+  "app.add_autodoc_attrgetter()" instead.
+
+
+Features added
+--------------
+
+1.7.0b1
+
+* C++, handle "decltype(auto)".
+
+* #2406: C++, add proper parsing of expressions, including linking of
+  identifiers.
+
+* C++, add a "cpp:expr" role for inserting inline C++ expressions or
+  types.
+
+* C++, support explicit member instantiations with shorthand
+  "template" prefix
+
+* C++, make function parameters linkable, like template params.
+
+* #3638: Allow to change a label of reference to equation using
+  "math_eqref_format"
+
+* Now >>:confval:`suppress_warnings`<< accepts following
+  configurations:
+
+  * "ref.python" (ref: #3866)
+
+* #3872: Add latex key to configure literal blocks caption position in
+  PDF output (refs #3792, #1723)
+
+* In case of missing docstring try to retrieve doc from base classes
+  (ref: #3140)
+
+* #4023: Clarify error message when any role has more than one target.
+
+* #3973: epub: allow to override build date
+
+* #3972: epub: Sort manifest entries by filename
+
+* #4052: viewcode: Sort before highlighting module code
+
+* #1448: qthelp: Add new config value; >>:confval:`qthelp_namespace`<<
+
+* #4140: html themes: Make body tag inheritable
+
+* #4168: improve zh search with jieba
+
+* HTML themes can set up default sidebars through "theme.conf"
+
+* #3160: html: Use "<kdb>" to represent ":kbd:" role
+
+* #4212: autosummary: catch all exceptions when importing modules
+
+* #4166: Add >>:confval:`math_numfig`<< for equation numbering by
+  section (refs: #3991, #4080). Thanks to Oliver Jahn.
+
+* #4311: Let LaTeX obey >>:confval:`numfig_secnum_depth`<< for
+  figures, tables, and code-blocks
+
+* #947: autodoc now supports ignore-module-all to ignore a module's
+  "__all__"
+
+* #4332: Let LaTeX obey >>:confval:`math_numfig`<< for equation
+  numbering
+
+* #4093: sphinx-build creates empty directories for unknown
+  targets/builders
+
+* Add "top-classes" option for the "sphinx.ext.inheritance_diagram"
+  extension to limit the scope of inheritance graphs.
+
+* #4183: doctest: ":pyversion:" option also follows PEP-440
+  specification
+
+* #4235: html: Add >>:confval:`manpages_url`<< to make manpage roles
+  to hyperlinks
+
+* #3570: autodoc: Do not display 'typing.' module for type hints
+
+* #4354: sphinx-build now emits finish message.  Builders can modify
+  it through "Builder.epilog" attribute
+
+* #4245: html themes: Add "language" to javascript vars list
+
+* #4079: html: Add "notranslate" class to each code-blocks, literals
+  and maths to let Google Translate know they are not translatable
+
+* #4137: doctest: doctest block is always highlighted as python
+  console (pycon)
+
+* #4137: doctest: testcode block is always highlighted as python
+
+* #3998: text: Assign section numbers by default.  You can control it
+  using >>:confval:`text_add_secnumbers`<< and
+  >>:confval:`text_secnumber_suffix`<<
+
+1.7.0b2
+
+* #4271: sphinx-build supports an option called "-j auto" to adjust
+  numbers of processes automatically.
+
+* Napoleon: added option to specify custom section tags.
+
+
+Features removed
+----------------
+
+1.7.0b1
+
+* Configuration variables
+
+  * html_use_smartypants
+
+  * latex_keep_old_macro_names
+
+  * latex_elements['footer']
+
+* utility methods of "sphinx.application.Sphinx" class
+
+  * buildername (property)
+
+  * _display_chunk()
+
+  * old_status_iterator()
+
+  * status_iterator()
+
+  * _directive_helper()
+
+* utility methods of "sphinx.environment.BuildEnvironment" class
+
+  * currmodule (property)
+
+  * currclass (property)
+
+* epub2 builder
+
+* prefix and colorfunc parameter for warn()
+
+* "sphinx.util.compat" module
+
+* "sphinx.util.nodes.process_only_nodes()"
+
+* LaTeX environment "notice", use "sphinxadmonition" instead
+
+* LaTeX "\sphinxstylethead", use "\sphinxstyletheadfamily"
+
+* C++, support of function concepts. Thanks to mickk-on-cpp.
+
+* Not used and previously not documented LaTeX macros "\shortversion"
+  and "\setshortversion"
+
+
+Bugs fixed
+----------
+
+1.7.0b1
+
+* #3882: Update the order of files for HTMLHelp and QTHelp
+
+* #3962: sphinx-apidoc does not recognize implicit namespace packages
+  correctly
+
+* #4094: C++, allow empty template argument lists.
+
+* C++, also hyperlink types in the name of declarations with qualified
+  names.
+
+* C++, do not add index entries for declarations inside concepts.
+
+* C++, support the template disambiguator for dependent names.
+
+* #4314: For PDF 'howto' documents, numbering of code-blocks differs
+  from the one of figures and tables
+
+* #4330: PDF 'howto' documents have an incoherent default LaTeX
+  tocdepth counter setting
+
+* #4198: autosummary emits multiple 'autodoc-process-docstring' event.
+  Thanks to Joel Nothman.
+
+* #4081: Warnings and errors colored the same when building
+
+* latex: Do not display 'Release' label if >>:confval:`release`<< is
+  not set
+
+1.7.0b2
+
+* #4415: autodoc classifies inherited classmethods as regular methods
+
+* #4415: autodoc classifies inherited staticmethods as regular methods
+
+* #4472: DOCUMENTATION_OPTIONS is not defined
+
+* #4491: autodoc: prefer _MockImporter over other importers in
+  sys.meta_path
+
+* #4490: autodoc: type annotation is broken with python 3.7.0a4+
+
+* utils package is no longer installed
+
+* #3952: apidoc: module header is too escaped
+
+* #4275: Formats accepted by sphinx.util.i18n.format_date are limited
+
+* #4493: recommonmark raises AttributeError if AutoStructify enabled
+
+* #4209: intersphinx: In link title, "v" should be optional if target
+  has no version
+
+* #4230: slowdown in writing pages with sphinx 1.6
+
+* #4522: epub: document is not rebuilt even if config changed
+
+1.7.0b3
+
+* #4019: inheritance_diagram AttributeError stopping make process
+
+* #4531: autosummary: methods are not treated as attributes
+
+* #4538: autodoc: "sphinx.ext.autodoc.Options" has been moved
+
+* #4539: autodoc emits warnings for partialmethods
+
+* #4223: doctest: failing tests reported in wrong file, at wrong line
+
+* i18n: message catalogs are not compiled if specific filenames are
+  given for "sphinx-build" as arguments (refs: #4560)
+
+* #4027: sphinx.ext.autosectionlabel now expects labels to be the same
+  as they are in the raw source; no smart quotes, nothig fancy.
+
+* #4581: apidoc: Excluded modules still included
+
+
+Testing
+-------
+
+1.7.0b1
+
+* Add support for docutils 0.14
+
+* Add tests for the "sphinx.ext.inheritance_diagram" extension.
+
+
+Release 1.6.7 (released Feb 04, 2018)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #1922: html search: Upper characters problem in French
+
+* #4412: Updated jQuery version from 3.1.0 to 3.2.1
+
+* #4438: math: math with labels with whitespace cause html error
+
+* #2437: make full reference for classes, aliased with "alias of"
+
+* #4434: pure numbers as link targets produce warning
+
+* #4477: Build fails after building specific files
+
+* #4449: apidoc: include "empty" packages that contain modules
+
+* #3917: citation labels are transformed to ellipsis
+
+* #4501: graphviz: epub3 validation error caused if graph is not
+  clickable
+
+* #4514: graphviz: workaround for wrong map ID which graphviz
+  generates
+
+* #4525: autosectionlabel does not support parallel build
+
+* #3953: Do not raise warning when there is a working intersphinx
+  inventory
+
+* #4487: math: ValueError is raised on parallel build. Thanks to
+  jschueller.
+
+* #2372: autosummary: invalid signatures are shown for type annotated
+  functions
+
+* #3942: html: table is not aligned to center even if ":align: center"
+
+
+Release 1.6.6 (released Jan 08, 2018)
+=====================================
+
+
+Features added
+--------------
+
+* #4181: autodoc: Sort dictionary keys when possible
+
+* "VerbatimHighlightColor" is a new LaTeX 'sphinxsetup' key (refs:
+  #4285)
+
+* Easier customizability of LaTeX macros involved in rendering of
+  code-blocks
+
+* Show traceback if conf.py raises an exception (refs: #4369)
+
+* Add >>:confval:`smartquotes`<< to disable smart quotes through
+  "conf.py" (refs: #3967)
+
+* Add >>:confval:`smartquotes_action`<< and
+  >>:confval:`smartquotes_excludes`<< (refs: #4142, #4357)
+
+
+Bugs fixed
+----------
+
+* #4334: sphinx-apidoc: Don't generate references to non-existing
+  files in TOC
+
+* #4206: latex: reST label between paragraphs loses paragraph break
+
+* #4231: html: Apply fixFirefoxAnchorBug only under Firefox
+
+* #4221: napoleon depends on autodoc, but users need to load it
+  manually
+
+* #2298: automodule fails to document a class attribute
+
+* #4099: C++: properly link class reference to class from inside
+  constructor
+
+* #4267: PDF build broken by Unicode U+2116 NUMERO SIGN character
+
+* #4249: PDF output: Pygments error highlighting increases line
+  spacing in code blocks
+
+* #1238: Support ":emphasize-lines:" in PDF output
+
+* #4279: Sphinx crashes with pickling error when run with multiple
+  processes and remote image
+
+* #1421: Respect the quiet flag in sphinx-quickstart
+
+* #4281: Race conditions when creating output directory
+
+* #4315: For PDF 'howto' documents, "latex_toplevel_sectioning='part'"
+  generates "\chapter" commands
+
+* #4214: Two todolist directives break sphinx-1.6.5
+
+* Fix links to external option docs with intersphinx (refs: #3769)
+
+* #4091: Private members not documented without :undoc-members:
+
+
+Release 1.6.5 (released Oct 23, 2017)
+=====================================
+
+
+Features added
+--------------
+
+* #4107: Make searchtools.js compatible with pre-Sphinx1.5 templates
+
+* #4112: Don't override the smart_quotes setting if it was already set
+
+* #4125: Display reference texts of original and translated passages
+  on i18n warning message
+
+* #4147: Include the exception when logging PO/MO file read/write
+
+
+Bugs fixed
+----------
+
+* #4085: Failed PDF build from image in parsed-literal using ":align:"
+  option
+
+* #4100: Remove debug print from autodoc extension
+
+* #3987: Changing theme from alabaster causes HTML build to fail
+
+* #4096: C++, don't crash when using the wrong role type. Thanks to
+  mitya57.
+
+* #4070, #4111: crashes when the warning message contains format
+  strings (again)
+
+* #4108: Search word highlighting breaks SVG images
+
+* #3692: Unable to build HTML if writing .buildinfo failed
+
+* #4152: HTML writer crashes if a field list is placed on top of the
+  document
+
+* #4063: Sphinx crashes when labeling directive ".. todolist::"
+
+* #4134: [doc] "docutils.conf" is not documented explicitly
+
+* #4169: Chinese language doesn't trigger Chinese search automatically
+
+* #1020: ext.todo todolist not linking to the page in pdflatex
+
+* #3965: New quickstart generates wrong SPHINXBUILD in Makefile
+
+* #3739: ":module:" option is ignored at content of pyobjects
+
+* #4149: Documentation: Help choosing >>:confval:`latex_engine`<<
+
+* #4090: [doc] >>:confval:`latex_additional_files`<< with extra LaTeX
+  macros should not use ".tex" extension
+
+* Failed to convert reST parser error to warning (refs: #4132)
+
+
+Release 1.6.4 (released Sep 26, 2017)
+=====================================
+
+
+Features added
+--------------
+
+* #3926: Add "autodoc_warningiserror" to suppress the behavior of "-W"
+  option during importing target modules on autodoc
+
+
+Bugs fixed
+----------
+
+* #3924: docname lost after dynamically parsing RST in extension
+
+* #3946: Typo in sphinx.sty (this was a bug with no effect in default
+  context)
+
+* pep:
+     and :rfc: does not supports "default-role" directive (refs:
+     #3960)
+
+* #3960: default_role = 'guilabel' not functioning
+
+* Missing "texinputs_win/Makefile" to be used in latexpdf builder on
+  windows.
+
+* #4026: nature: Fix macOS Safari scrollbar color
+
+* #3877: Fix for C++ multiline signatures.
+
+* #4006: Fix crash on parallel build
+
+* #3969: private instance attributes causes AttributeError
+
+* #4041: C++, remove extra name linking in function pointers.
+
+* #4038: C, add missing documentation of "member" role.
+
+* #4044: An empty multicolumn cell causes extra row height in PDF
+  output
+
+* #4049: Fix typo in output of sphinx-build -h
+
+* #4062: hashlib.sha1() must take bytes, not unicode on Python 3
+
+* Avoid indent after index entries in latex (refs: #4066)
+
+* #4070: crashes when the warning message contains format strings
+
+* #4067: Return non-zero exit status when make subprocess fails
+
+* #4055: graphviz: the :align: option does not work for SVG output
+
+* #4055: graphviz: the :align: center option does not work for latex
+  output
+
+* #4051: "warn()" function for HTML theme outputs 'None' string
+
+
+Release 1.6.3 (released Jul 02, 2017)
+=====================================
+
+
+Features added
+--------------
+
+* latex: hint that code-block continues on next page (refs: #3764,
+  #3792)
+
+
+Bugs fixed
+----------
+
+* #3821: Failed to import sphinx.util.compat with docutils-0.14rc1
+
+* #3829: sphinx-quickstart template is incomplete regarding use of
+  alabaster
+
+* #3772: 'str object' has no attribute 'filename'
+
+* Emit wrong warnings if citation label includes hyphens (refs: #3565)
+
+* #3858: Some warnings are not colored when using --color option
+
+* #3775: Remove unwanted whitespace in default template
+
+* #3835: sphinx.ext.imgmath fails to convert SVG images if project
+  directory name contains spaces
+
+* #3850: Fix color handling in make mode's help command
+
+* #3865: use of self.env.warn in sphinx extension fails
+
+* #3824: production lists apply smart quotes transform since Sphinx
+  1.6.1
+
+* latex: fix "\sphinxbfcode" swallows initial space of argument
+
+* #3878: Quotes in auto-documented class attributes should be straight
+  quotes in PDF output
+
+* #3881: LaTeX figure floated to next page sometimes leaves extra
+  vertical whitespace
+
+* #3885: duplicated footnotes raises IndexError
+
+* #3873: Failure of deprecation warning mechanism of
+  "sphinx.util.compat.Directive"
+
+* #3874: Bogus warnings for "citation not referenced" for cross-file
+  citations
+
+* #3860: Don't download images when builders not supported images
+
+* #3860: Remote image URIs without filename break builders not
+  supported remote images
+
+* #3833: command line messages are translated unintentionally with
+  "language" setting.
+
+* #3840: make checking "epub_uid" strict
+
+* #3851, #3706: Fix about box drawing characters for PDF output
+
+* #3900: autosummary could not find methods
+
+* #3902: Emit error if "latex_documents" contains non-unicode string
+  in py2
+
+
+Release 1.6.2 (released May 28, 2017)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #3789: Do not require typing module for python>=3.5
+
+
+Bugs fixed
+----------
+
+* #3754: HTML builder crashes if HTML theme appends own stylesheets
+
+* #3756: epub: Entity 'mdash' not defined
+
+* #3758: Sphinx crashed if logs are emitted in conf.py
+
+* #3755: incorrectly warns about dedent with literalinclude
+
+* #3742: RTD PDF builds of Sphinx own docs are missing an index entry
+  in the bookmarks and table of contents. This is
+  rtfd/readthedocs.org#2857 issue, a workaround is obtained using some
+  extra LaTeX code in Sphinx's own "conf.py"
+
+* #3770: Build fails when a "code-block" has the option emphasize-
+  lines and the number indicated is higher than the number of lines
+
+* #3774: Incremental HTML building broken when using citations
+
+* #3763: got epubcheck validations error if epub_cover is set
+
+* #3779: 'ImportError' in sphinx.ext.autodoc due to broken
+  'sys.meta_path'. Thanks to Tatiana Tereshchenko.
+
+* #3796: env.resolve_references() crashes when non-document node given
+
+* #3803: Sphinx crashes with invalid PO files
+
+* #3791: PDF "continued on next page" for long tables isn't
+  internationalized
+
+* #3788: smartquotes emits warnings for unsupported languages
+
+* #3807: latex Makefile for "make latexpdf" is only for unixen
+
+* #3781: double hyphens in option directive are compiled as endashes
+
+* #3817: latex builder raises AttributeError
+
+
+Release 1.6.1 (released May 16, 2017)
+=====================================
+
+
+Dependencies
+------------
+
+1.6b1
+
+* (updated) latex output is tested with Ubuntu trusty's texlive
+  packages (Feb. 2014) and earlier tex installations may not be fully
+  compliant, particularly regarding Unicode engines xelatex and
+  lualatex
+
+* (added) latexmk is required for "make latexpdf" on GNU/Linux and Mac
+  OS X (refs: #3082)
+
+
+Incompatible changes
+--------------------
+
+1.6b1
+
+* #1061, #2336, #3235: Now generation of autosummary doesn't contain
+  imported members by default. Thanks to Luc Saffre.
+
+* LaTeX "\includegraphics" command isn't overloaded: only
+  "\sphinxincludegraphics" has the custom code to fit image to
+  available width if oversized.
+
+* The subclasses of "sphinx.domains.Index" should override
+  "generate()" method.  The default implementation raises
+  NotImplementedError
+
+* LaTeX positioned long tables horizontally centered, and short ones
+  flushed left (no text flow around table.) The position now defaults
+  to center in both cases, and it will obey Docutils 0.13 ":align:"
+  option (refs #3415, #3377)
+
+* option directive also allows all punctuations for the option name
+  (refs: #3366)
+
+* #3413: if "literalinclude"'s ":start-after:" is used, make ":lines:"
+  relative (refs #3412)
+
+* "literalinclude" directive does not allow the combination of
+  ":diff:" option and other options (refs: #3416)
+
+* LuaLaTeX engine uses "fontspec" like XeLaTeX. It is advised
+  "latex_engine = 'lualatex'" be used only on up-to-date TeX installs
+  (refs #3070, #3466)
+
+* >>:confval:`latex_keep_old_macro_names`<< default value has been
+  changed from "True" to "False". This means that some LaTeX macros
+  for styling are by default defined only with "\sphinx.." prefixed
+  names. (refs: #3429)
+
+* Footer "Continued on next page" of LaTeX longtable's now not framed
+  (refs: #3497)
+
+* #3529: The arguments of "BuildEnvironment.__init__" is changed
+
+* #3082: Use latexmk for pdf (and dvi) targets (Unix-like platforms
+  only)
+
+* #3558: Emit warnings if footnotes and citations are not referenced.
+  The warnings can be suppressed by "suppress_warnings".
+
+* latex made available (non documented) colour macros from a file
+  distributed with pdftex engine for Plain TeX. This is removed in
+  order to provide better support for multiple TeX engines. Only
+  interface from "color" or "xcolor" packages should be used by
+  extensions of Sphinx latex writer. (refs #3550)
+
+* "Builder.env" is not filled at instantiation
+
+* #3594: LaTeX: single raw directive has been considered as block
+  level element
+
+* #3639: If "html_experimental_html5_writer" is available, epub
+  builder use it by default.
+
+* "Sphinx.add_source_parser()" raises an error if duplicated
+
+1.6b2
+
+* #3345: Replace the custom smartypants code with Docutils'
+  smart_quotes. Thanks to Dmitry Shachnev, and to Günter Milde at
+  Docutils.
+
+1.6b3
+
+* LaTeX package "eqparbox" is not used and not loaded by Sphinx
+  anymore
+
+* LaTeX package "multirow" is not used and not loaded by Sphinx
+  anymore
+
+* Add line numbers to citation data in std domain
+
+1.6 final
+
+* LaTeX package "threeparttable" is not used and not loaded by Sphinx
+  anymore (refs #3686, #3532, #3377)
+
+
+Features removed
+----------------
+
+* Configuration variables
+
+  * epub3_contributor
+
+  * epub3_description
+
+  * epub3_page_progression_direction
+
+  * html_translator_class
+
+  * html_use_modindex
+
+  * latex_font_size
+
+  * latex_paper_size
+
+  * latex_preamble
+
+  * latex_use_modindex
+
+  * latex_use_parts
+
+* "termsep" node
+
+* defindex.html template
+
+* LDML format support in "today", "today_fmt" and
+  "html_last_updated_fmt"
+
+* ":inline:" option for the directives of sphinx.ext.graphviz
+  extension
+
+* sphinx.ext.pngmath extension
+
+* "sphinx.util.compat.make_admonition()"
+
+
+Features added
+--------------
+
+1.6b1
+
+* #3136: Add ":name:" option to the directives in
+  "sphinx.ext.graphviz"
+
+* #2336: Add "imported_members" option to "sphinx-autogen" command to
+  document imported members.
+
+* C++, add ":tparam-line-spec:" option to templated declarations. When
+  specified, each template parameter will be rendered on a separate
+  line.
+
+* #3359: Allow sphinx.js in a user locale dir to override sphinx.js
+  from Sphinx
+
+* #3303: Add ":pyversion:" option to the doctest directive.
+
+* #3378: (latex) support for ":widths:" option of table directives
+  (refs: #3379, #3381)
+
+* #3402: Allow to suppress "download file not readable" warnings using
+  >>:confval:`suppress_warnings`<<.
+
+* #3377: latex: Add support for Docutils 0.13 ":align:" option for
+  tables (but does not implement text flow around table).
+
+* latex: footnotes from inside tables are hyperlinked (except from
+  captions or headers) (refs: #3422)
+
+* Emit warning if over dedent has detected on "literalinclude"
+  directive (refs: #3416)
+
+* Use for LuaLaTeX same default settings as for XeLaTeX (i.e.
+  "fontspec" and "polyglossia"). (refs: #3070, #3466)
+
+* Make "'extraclassoptions'" key of "latex_elements" public (refs
+  #3480)
+
+* #3463: Add warning messages for required EPUB3 metadata. Add default
+  value to "epub_description" to avoid warning like other settings.
+
+* #3476: setuptools: Support multiple builders
+
+* latex: merged cells in LaTeX tables allow code-blocks, lists,
+  blockquotes... as do normal cells (refs: #3435)
+
+* HTML builder uses experimental HTML5 writer if
+  "html_experimental_html5_writer" is True and docutils 0.13 or later
+  is installed.
+
+* LaTeX macros to customize space before and after tables in PDF
+  output (refs #3504)
+
+* #3348: Show decorators in literalinclude and viewcode directives
+
+* #3108: Show warning if :start-at: and other literalinclude options
+  does not match to the text
+
+* #3609: Allow to suppress "duplicate citation" warnings using
+  "suppress_warnings"
+
+* #2803: Discovery of builders by entry point
+
+* #1764, #1676: Allow setting 'rel' and 'title' attributes for
+  stylesheets
+
+* #3589: Support remote images on non-HTML builders
+
+* #3589: Support images in Data URI on non-HTML builders
+
+* #2961: improve >>:confval:`autodoc_mock_imports`<<. Now the config
+  value only requires to declare the top-level modules that should be
+  mocked. Thanks to Robin Jarry.
+
+* #3449: On py3, autodoc use inspect.signature for more accurate
+  signature calculation. Thanks to Nathaniel J. Smith.
+
+* #3641: Epub theme supports HTML structures that are generated by
+  HTML5 writer.
+
+* #3644 autodoc uses inspect instead of checking types. Thanks to
+  Jeroen Demeyer.
+
+* Add a new extension; "sphinx.ext.imgconverter". It converts images
+  in the document to appropriate format for builders
+
+* latex: Use templates to render tables (refs #3389, 2a37b0e)
+
+1.6b2
+
+* "LATEXMKOPTS" variable for the Makefile in "$BUILDDIR/latex" to pass
+  options to "latexmk" when executing "make latexpdf" (refs #3695,
+  #3720)
+
+* Add a new event "env-check-consistency" to check consistency to
+  extensions
+
+* Add "Domain.check_consistency()" to check consistency
+
+
+Bugs fixed
+----------
+
+1.6b1
+
+* "literalinclude" directive expands tabs after dedent-ing (refs:
+  #3416)
+
+* #1574: Paragraphs in table cell doesn't work in Latex output
+
+* #3288: Table with merged headers not wrapping text
+
+* #3491: Inconsistent vertical space around table and longtable in PDF
+
+* #3506: Depart functions for all admonitions in HTML writer now
+  properly pass "node" to "depart_admonition".
+
+* #2693: Sphinx latex style file wrongly inhibits colours for section
+  headings for latex+dvi(ps,pdf,pdfmx)
+
+* C++, properly look up "any" references.
+
+* #3624: sphinx.ext.intersphinx couldn't load inventories compressed
+  with gzip
+
+* #3551: PDF information dictionary is lacking author and title data
+
+* #3351: intersphinx does not refers context like "py:module",
+  "py:class" and so on.
+
+* Fail to load template file if the parent template is archived
+
+1.6b2
+
+* #3661: sphinx-build crashes on parallel build
+
+* #3669: gettext builder fails with "ValueError: substring not found"
+
+* #3660: Sphinx always depends on sphinxcontrib-websupport and its
+  dependencies
+
+* #3472: smart quotes getting wrong in latex (at least with list of
+  strings via autoattribute) (refs: #3345, #3666)
+
+1.6b3
+
+* #3588: No compact (p tag) html output in the i18n document build
+  even when >>:confval:`html_compact_lists`<< is True.
+
+* The "make latexpdf" from 1.6b1 (for GNU/Linux and Mac OS, using
+  "latexmk") aborted earlier in case of LaTeX errors than was the case
+  with 1.5 series, due to hard-coded usage of "--halt-on-error" option
+  (refs #3695)
+
+* #3683: sphinx.websupport module is not provided by default
+
+* #3683: Failed to build document if builder.css_file.insert() is
+  called
+
+* #3714: viewcode extension not taking "highlight_code='none'" in
+  account
+
+* #3698: Moving :doc: to std domain broke backwards compatibility
+
+* #3633: misdetect unreferenced citations
+
+1.6 final
+
+* LaTeX tables do not allow multiple paragraphs in a header cell
+
+* LATEXOPTS is not passed over correctly to pdflatex since 1.6b3
+
+* #3532: Figure or literal block captions in cells of short tables
+  cause havoc in PDF output
+
+* Fix: in PDF captions of tables are rendered differently whether
+  table is of longtable class or not (refs #3686)
+
+* #3725: Todo looks different from note in LaTeX output
+
+* #3479: stub-columns have no effect in LaTeX output
+
+* #3738: Nonsensical code in theming.py
+
+* #3746: PDF builds fail with latexmk 4.48 or earlier due to undefined
+  options "-pdfxe" and "-pdflua"
+
+
+Deprecated
+----------
+
+1.6b1
+
+* "sphinx.util.compat.Directive" class is now deprecated. Please use
+  instead "docutils.parsers.rst.Directive"
+
+* "sphinx.util.compat.docutils_version" is now deprecated
+
+* #2367: "Sphinx.warn()", "Sphinx.info()" and other logging methods
+  are now deprecated.  Please use "sphinx.util.logging" (Logging API)
+  instead.
+
+* #3318: "notice" is now deprecated as LaTeX environment name and will
+  be removed at Sphinx 1.7. Extension authors please use
+  "sphinxadmonition" instead (as Sphinx does since 1.5.)
+
+* "Sphinx.status_iterator()" and "Sphinx.old_status_iterator()" is now
+  deprecated.  Please use "sphinx.util:status_iterator()" instead.
+
+* "Sphinx._directive_helper()" is deprecated. Please use
+  "sphinx.util.docutils.directive_helper()" instead.
+
+* "BuildEnvironment.set_warnfunc()" is now deprecated
+
+* Following methods of "BuildEnvironment" is now deprecated.
+
+  * "BuildEnvironment.note_toctree()"
+
+  * "BuildEnvironment.get_toc_for()"
+
+  * "BuildEnvironment.get_toctree_for()"
+
+  * "BuildEnvironment.create_index()"
+
+  Please use "sphinx.environment.adapters" modules instead.
+
+* latex package  "footnote" is not loaded anymore by its bundled
+  replacement "footnotehyper-sphinx". The redefined macros keep the
+  same names as in the original package.
+
+* #3429: deprecate config setting "latex_keep_old_macro_names". It
+  will be removed at 1.7, and already its default value has changed
+  from "True" to "False".
+
+* #3221: epub2 builder is deprecated
+
+* #3254: "sphinx.websupport" is now separated into independent
+  package; "sphinxcontrib-websupport".  "sphinx.websupport" will be
+  removed in Sphinx-2.0.
+
+* #3628: "sphinx_themes" entry_point is deprecated.  Please use
+  "sphinx.html_themes" instead.
+
+1.6b2
+
+* #3662: "builder.css_files" is deprecated.  Please use
+  "add_stylesheet()" API instead.
+
+1.6 final
+
+* LaTeX "\sphinxstylethead" is deprecated at 1.6 and will be removed
+  at 1.7. Please move customization into new macro
+  "\sphinxstyletheadfamily".
+
+
+Testing
+-------
+
+1.6 final
+
+* #3458: Add "sphinx.testing" (experimental)
+
+
+Release 1.6 (unreleased)
+========================
+
+* not released (because of package script error)
+
+
+Release 1.5.6 (released May 15, 2017)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #3614: Sphinx crashes with requests-2.5.0
+
+* #3618: autodoc crashes with tupled arguments
+
+* #3664: No space after the bullet in items of a latex list produced
+  by Sphinx
+
+* #3657: EPUB builder crashes if a document starting with genindex
+  exists
+
+* #3588: No compact (p tag) html output in the i18n document build
+  even when >>:confval:`html_compact_lists`<< is True.
+
+* #3685: AttributeError when using 3rd party domains
+
+* #3702: LaTeX writer styles figure legends with a hard-coded "\small"
+
+* #3708: LaTeX writer allows irc scheme
+
+* #3717: Stop enforcing that favicon's must be .ico
+
+* #3731, #3732: Protect isenumclass predicate against non-class
+  arguments
+
+* #3320: Warning about reference target not being found for container
+  types
+
+* Misspelled ARCHIVEPREFIX in Makefile for latex build repertory
+
+
+Release 1.5.5 (released Apr 03, 2017)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #3597: python domain raises UnboundLocalError if invalid name given
+
+* #3599: Move to new MathJax CDN
+
+
+Release 1.5.4 (released Apr 02, 2017)
+=====================================
+
+
+Features added
+--------------
+
+* #3470: Make genindex support all kinds of letters, not only Latin
+  ones
+
+
+Bugs fixed
+----------
+
+* #3445: setting "'inputenc'" key to "\\usepackage[utf8x]{inputenc}"
+  leads to failed PDF build
+
+* EPUB file has duplicated "nav.xhtml" link in "content.opf" except
+  first time build
+
+* #3488: objects.inv has broken when "release" or "version" contain
+  return code
+
+* #2073, #3443, #3490: gettext builder that writes pot files unless
+  the content are same without creation date. Thanks to Yoshiki
+  Shibukawa.
+
+* #3487: intersphinx: failed to refer options
+
+* #3496: latex longtable's last column may be much wider than its
+  contents
+
+* #3507: wrong quotes in latex output for productionlist directive
+
+* #3533: Moving from Sphinx 1.3.1 to 1.5.3 breaks LaTeX compilation of
+  links rendered as code
+
+* #2665, #2607: Link names in C++ docfields, and make it possible for
+  other domains.
+
+* #3542: C++, fix parsing error of non-type template argument with
+  template.
+
+* #3065, #3520: python domain fails to recognize nested class
+
+* #3575: Problems with pdflatex in a Turkish document built with
+  sphinx has reappeared (refs #2997, #2397)
+
+* #3577: Fix intersphinx debug tool
+
+* A LaTeX command such as "\\large" inserted in the title items of
+  >>:confval:`latex_documents`<< causes failed PDF build (refs #3551,
+  #3567)
+
+
+Release 1.5.3 (released Feb 26, 2017)
+=====================================
+
+
+Features added
+--------------
+
+* Support requests-2.0.0 (experimental) (refs: #3367)
+
+* (latex) PDF page margin dimensions may be customized (refs: #3387)
+
+* "literalinclude" directive allows combination of ":pyobject:" and
+  ":lines:" options (refs: #3416)
+
+* #3400: make-mode doesn't use subprocess on building docs
+
+
+Bugs fixed
+----------
+
+* #3370: the caption of code-block is not picked up for translation
+
+* LaTeX: >>:confval:`release`<< is not escaped (refs: #3362)
+
+* #3364: sphinx-quickstart prompts overflow on Console with 80 chars
+  width
+
+* since 1.5, PDF's TOC and bookmarks lack an entry for general Index
+  (refs: #3383)
+
+* #3392: "'releasename'" in >>:confval:`latex_elements`<< is not
+  working
+
+* #3356: Page layout for Japanese "'manual'" docclass has a shorter
+  text area
+
+* #3394: When "'pointsize'" is not "10pt", Japanese "'manual'"
+  document gets wrong PDF page dimensions
+
+* #3399: quickstart: conf.py was not overwritten by template
+
+* #3366: option directive does not allow punctuations
+
+* #3410: return code in >>:confval:`release`<< breaks html search
+
+* #3427: autodoc: memory addresses are not stripped on Windows
+
+* #3428: xetex build tests fail due to fontspec v2.6 defining
+  "\strong"
+
+* #3349: Result of "IndexBuilder.load()" is broken
+
+* #3450: &nbsp is appeared in EPUB docs
+
+* #3418: Search button is misaligned in nature and pyramid theme
+
+* #3421: Could not translate a caption of tables
+
+* #3552: linkcheck raises UnboundLocalError
+
+
+Release 1.5.2 (released Jan 22, 2017)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* Dependency requirement updates: requests 2.4.0 or above (refs:
+  #3268, #3310)
+
+
+Features added
+--------------
+
+* #3241: emit latex warning if buggy titlesec (ref #3210)
+
+* #3194: Refer the $MAKE environment variable to determine "make"
+  command
+
+* Emit warning for nested numbered toctrees (refs: #3142)
+
+* #978: "intersphinx_mapping" also allows a list as a parameter
+
+* #3340: (LaTeX) long lines in >>:dudir:`parsed-literal`<< are wrapped
+  like in "code-block", inline math and footnotes are fully
+  functional.
+
+
+Bugs fixed
+----------
+
+* #3246: xapian search adapter crashes
+
+* #3253: In Py2 environment, building another locale with a non-
+  captioned toctree produces "None" captions
+
+* #185: References to section title including raw node has broken
+
+* #3255: In Py3.4 environment, autodoc doesn't support documentation
+  for attributes of Enum class correctly.
+
+* #3261: "latex_use_parts" makes sphinx crash
+
+* The warning type "misc.highlighting_failure" does not work
+
+* #3294: "add_latex_package()" make crashes non-LaTeX builders
+
+* The caption of table are rendered as invalid HTML (refs: #3287)
+
+* #3268: Sphinx crashes with requests package from Debian jessie
+
+* #3284: Sphinx crashes on parallel build with an extension which
+  raises unserializable exception
+
+* #3315: Bibliography crashes on latex build with docclass 'memoir'
+
+* #3328: Could not refer rubric implicitly
+
+* #3329: emit warnings if po file is invalid and can't read it. Also
+  writing mo
+
+* #3337: Ugly rendering of definition list term's classifier
+
+* #3335: gettext does not extract field_name of a field in a
+  field_list
+
+* #2952: C++, fix refs to operator() functions.
+
+* Fix Unicode super- and subscript digits in "code-block" and parsed-
+  literal LaTeX output (ref #3342)
+
+* LaTeX writer: leave """ character inside parsed-literal as is (ref
+  #3341)
+
+* #3234: intersphinx failed for encoded inventories
+
+* #3158: too much space after captions in PDF output
+
+* #3317: An URL in parsed-literal contents gets wrongly rendered in
+  PDF if with hyphen
+
+* LaTeX crash if the filename of an image inserted in parsed-literal
+  via a substitution contains an hyphen (ref #3340)
+
+* LaTeX rendering of inserted footnotes in parsed-literal is wrong
+  (ref #3340)
+
+* Inline math in parsed-literal is not rendered well by LaTeX (ref
+  #3340)
+
+* #3308: Parsed-literals don't wrap very long lines with pdf builder
+  (ref #3340)
+
+* #3295: Could not import extension sphinx.builders.linkcheck
+
+* #3285: autosummary: asterisks are escaped twice
+
+* LaTeX, pass dvipdfm option to geometry package for Japanese
+  documents (ref #3363)
+
+* Fix parselinenos() could not parse left half open range (cf. "-4")
+
+
+Release 1.5.1 (released Dec 13, 2016)
+=====================================
+
+
+Features added
+--------------
+
+* #3214: Allow to suppress "unknown mimetype" warnings from epub
+  builder using >>:confval:`suppress_warnings`<<.
+
+
+Bugs fixed
+----------
+
+* #3195: Can not build in parallel
+
+* #3198: AttributeError is raised when toctree has 'self'
+
+* #3211: Remove untranslated sphinx locale catalogs (it was covered by
+  untranslated it_IT)
+
+* #3212: HTML Builders crashes with docutils-0.13
+
+* #3207: more latex problems with references inside parsed-literal
+  directive ("\DUrole")
+
+* #3205: sphinx.util.requests crashes with old pyOpenSSL (< 0.14)
+
+* #3220: KeyError when having a duplicate citation
+
+* #3200: LaTeX: xref inside desc_name not allowed
+
+* #3228: "build_sphinx" command crashes when missing dependency
+
+* #2469: Ignore updates of catalog files for gettext builder. Thanks
+  to Hiroshi Ohkubo.
+
+* #3183: Randomized jump box order in generated index page.
+
+
+Release 1.5 (released Dec 5, 2016)
+==================================
+
+
+Incompatible changes
+--------------------
+
+1.5a1
+
+* latex, package fancybox is not any longer a dependency of sphinx.sty
+
+* Use "'locales'" as a default value of "locale_dirs"
+
+* latex, package ifthen is not any longer a dependency of sphinx.sty
+
+* latex, style file does not modify fancyvrb's Verbatim (also
+  available as OriginalVerbatim) but uses sphinxVerbatim for name of
+  custom wrapper.
+
+* latex, package newfloat is not used (and not included) anymore (ref
+  #2660; it was used since 1.3.4 and shipped with Sphinx since 1.4).
+
+* latex, literal blocks in tables do not use OriginalVerbatim but
+  sphinxVerbatimintable which handles captions and wraps lines (ref
+  #2704).
+
+* latex, replace "pt" by TeX equivalent "bp" if found in "width" or
+  "height" attribute of an image.
+
+* latex, if "width" or "height" attribute of an image is given with no
+  unit, use "px" rather than ignore it.
+
+* latex: Separate stylesheets of pygments to independent .sty file
+
+* #2454: The filename of sourcelink is now changed.  The value of
+  "html_sourcelink_suffix" will be appended to the original filename
+  (like "index.rst.txt").
+
+* "sphinx.util.copy_static_entry()" is now deprecated. Use
+  "sphinx.util.fileutil.copy_asset()" instead.
+
+* "sphinx.util.osutil.filecopy()" skips copying if the file has not
+  been changed (ref: #2510, #2753)
+
+* Internet Explorer 6-8, Opera 12.1x or Safari 5.1+ support is dropped
+  because jQuery version is updated from 1.11.0 to 3.1.0 (ref: #2634,
+  #2773)
+
+* QtHelpBuilder doesn't generate search page (ref: #2352)
+
+* QtHelpBuilder uses "nonav" theme instead of default one to improve
+  readability.
+
+* latex: To provide good default settings to Japanese documents,
+  Sphinx uses "jreport" and "jsbook" as docclass if
+  >>:confval:`language`<< is "ja".
+
+* "sphinx-quickstart" now allows a project version is empty
+
+* Fix :download: role on epub/qthelp builder. They ignore the role
+  because they don't support it.
+
+* "sphinx.ext.viewcode" doesn't work on epub building by default.
+  "viewcode_enable_epub" option
+
+* "sphinx.ext.viewcode" disabled on singlehtml builder.
+
+* Use make-mode of "sphinx-quickstart" by default.  To disable this,
+  use "-M" option
+
+* Fix "genindex.html", Sphinx's document template, link address to
+  itself to satisfy xhtml standard.
+
+* Use epub3 builder by default.  And the old epub builder is renamed
+  to epub2.
+
+* Fix "epub" and "epub3" builders that contained links to "genindex"
+  even if "epub_use_index = False".
+
+* "html_translator_class" is now deprecated. Use
+  "Sphinx.set_translator()" API instead.
+
+* Drop python 2.6 and 3.3 support
+
+* Drop epub3 builder's "epub3_page_progression_direction" option (use
+  "epub3_writing_mode").
+
+* #2877: Rename "latex_elements['footer']" to
+  "latex_elements['atendofbody']"
+
+1.5a2
+
+* #2983: Rename "epub3_description" and "epub3_contributor" to
+  "epub_description" and "epub_contributor".
+
+* Remove themes/basic/defindex.html; no longer used
+
+* Sphinx does not ship anymore (but still uses) LaTeX style file
+  "fncychap"
+
+* #2435: Slim down quickstarted conf.py
+
+* The "sphinx.sty" latex package does not load itself "hyperref", as
+  this is done later in the preamble of the latex output via
+  "'hyperref'" key.
+
+* Sphinx does not ship anymore a custom modified LaTeX style file
+  "tabulary". The non-modified package is used.
+
+* #3057: By default, footnote marks in latex PDF output are not
+  preceded by a space anymore, "\sphinxBeforeFootnote" allows user
+  customization if needed.
+
+* LaTeX target requires that option "hyperfootnotes" of package
+  "hyperref" be left unchanged to its default (i.e. "true") (refs:
+  #3022)
+
+1.5 final
+
+* #2986: "themes/basic/defindex.html" is now deprecated
+
+* Emit warnings that will be deprecated in Sphinx 1.6 by default.
+  Users can change the behavior by setting the environment variable
+  PYTHONWARNINGS. Please refer Deprecation Warnings.
+
+* #2454: new JavaScript variable "SOURCELINK_SUFFIX" is added
+
+
+Deprecated
+----------
+
+These features are removed in Sphinx-1.6:
+
+* LDML format  support in i18n feature
+
+* "sphinx.addnodes.termsep"
+
+* Some functions and classes in "sphinx.util.pycompat": "zip_longest",
+  "product", "all", "any", "next", "open", "class_types",
+  "base_exception", "relpath", "StringIO", "BytesIO". Please use the
+  standard library version instead;
+
+If any deprecation warning like "RemovedInSphinxXXXWarning" are
+displayed, please refer Deprecation Warnings.
+
+
+Features added
+--------------
+
+1.5a1
+
+* #2951: Add "--implicit-namespaces" PEP-0420 support to apidoc.
+
+* Add ":caption:" option for sphinx.ext.inheritance_diagram.
+
+* #2471: Add config variable for default doctest flags.
+
+* Convert linkcheck builder to requests for better encoding handling
+
+* #2463, #2516: Add keywords of "meta" directive to search index
+
+* ":maxdepth:" option of toctree affects "secnumdepth" (ref: #2547)
+
+* #2575: Now "sphinx.ext.graphviz" allows ":align:" option
+
+* Show warnings if unknown key is specified to "latex_elements"
+
+* Show warnings if no domains match with "primary_domain" (ref: #2001)
+
+* C++, show warnings when the kind of role is misleading for the kind
+  of target it refers to (e.g., using the "class" role for a
+  function).
+
+* latex, writer abstracts more of text styling into customizable
+  macros, e.g. the "visit_emphasis" will output "\sphinxstyleemphasis"
+  rather than "\emph" (which may be in use elsewhere or in an added
+  LaTeX package). See list at end of "sphinx.sty" (ref: #2686)
+
+* latex, public names for environments and parameters used by note,
+  warning, and other admonition types, allowing full customizability
+  from the "'preamble'" key or an input file (ref: feature request
+  #2674, #2685)
+
+* latex, better computes column widths of some tables (as a result,
+  there will be slight changes as tables now correctly fill the line
+  width; ref: #2708)
+
+* latex, sphinxVerbatim environment is more easily customizable (ref:
+  #2704). In addition to already existing VerbatimColor and
+  VerbatimBorderColor:
+
+  * two lengths "\sphinxverbatimsep" and "\sphinxverbatimborder",
+
+  * booleans "\ifsphinxverbatimwithframe" and
+    "\ifsphinxverbatimwrapslines".
+
+* latex, captions for literal blocks inside tables are handled, and
+  long code lines wrapped to fit table cell (ref: #2704)
+
+* #2597: Show warning messages as darkred
+
+* latex, allow image dimensions using px unit (default is 96px=1in)
+
+* Show warnings if invalid dimension units found
+
+* #2650: Add "--pdb" option to setup.py command
+
+* latex, make the use of "\small" for code listings customizable (ref
+  #2721)
+
+* #2663: Add "--warning-is-error" option to setup.py command
+
+* Show warnings if deprecated latex options are used
+
+* Add sphinx.config.ENUM to check the config values is in candidates
+
+* math: Add hyperlink marker to each equations in HTML output
+
+* Add new theme "nonav" that doesn't include any navigation links.
+  This is for any help generator like qthelp.
+
+* #2680: "sphinx.ext.todo" now emits warnings if "todo_emit_warnings"
+  enabled. Also, it emits an additional event named "todo-defined" to
+  handle the TODO entries in 3rd party extensions.
+
+* Python domain signature parser now uses the xref mixin for
+  'exceptions', allowing exception classes to be autolinked.
+
+* #2513: Add "latex_engine" to switch the LaTeX engine by conf.py
+
+* #2682: C++, basic support for attributes (C++11 style and GNU
+  style). The new configuration variables 'cpp_id_attributes' and
+  'cpp_paren_attributes' can be used to introduce custom attributes.
+
+* #1958: C++, add configuration variable 'cpp_index_common_prefix' for
+  removing prefixes from the index text of C++ objects.
+
+* C++, added concept directive. Thanks to mickk-on-cpp.
+
+* C++, added support for template introduction syntax. Thanks to
+  mickk-on-cpp.
+
+* #2725: latex builder: allow to use user-defined template file
+  (experimental)
+
+* apidoc now avoids invalidating cached files by not writing to files
+  whose content doesn't change. This can lead to significant
+  performance wins if apidoc is run frequently.
+
+* #2851: "sphinx.ext.math" emits missing-reference event if equation
+  not found
+
+* #1210: "eqref" role now supports cross reference
+
+* #2892: Added "-a" ("--append-syspath") option to "sphinx-apidoc"
+
+* #1604: epub3 builder: Obey font-related CSS when viewing in iBooks.
+
+* #646: "option" directive support '.' character as a part of options
+
+* Add document about kindlegen and fix document structure for it.
+
+* #2474: Add "intersphinx_timeout" option to "sphinx.ext.intersphinx"
+
+* #2926: EPUB3 builder supports vertical mode ("epub3_writing_mode"
+  option)
+
+* #2695: "build_sphinx" subcommand for setuptools handles exceptions
+  as same as "sphinx-build" does
+
+* #326: "numref" role can also refer sections
+
+* #2916: "numref" role can also refer caption as an its linktext
+
+1.5a2
+
+* #3008: "linkcheck" builder ignores self-signed certificate URL
+
+* #3020: new "'geometry'" key to "latex_elements" whose default uses
+  LaTeX style file "geometry.sty" to set page layout
+
+* #2843: Add :start-at: and :end-at: options to literalinclude
+  directive
+
+* #2527: Add ":reversed:" option to toctree directive
+
+* Add "-t" and "-d" option to "sphinx-quickstart" to support
+  templating generated sphinx project.
+
+* #3028: Add "{path}" and "{basename}" to the format of
+  "figure_language_filename"
+
+* new "'hyperref'" key in the "latex_elements" dictionary (ref #3030)
+
+* #3022: Allow code-blocks in footnotes for LaTeX PDF output
+
+1.5b1
+
+* #2513: A better default settings for XeLaTeX
+
+* #3096: "'maxlistdepth'" key to work around LaTeX list limitations
+
+* #3060: autodoc supports documentation for attributes of Enum class.
+  Now autodoc render just the value of Enum attributes instead of Enum
+  attribute representation.
+
+* Add "--extensions" to "sphinx-quickstart" to support enable
+  arbitrary extensions from command line (ref: #2904)
+
+* #3104, #3122: "'sphinxsetup'" for key=value styling of Sphinx LaTeX
+
+* #3071: Autodoc: Allow mocked module decorators to pass-through
+  functions unchanged
+
+* #2495: linkcheck: Allow skipping anchor checking using
+  >>:confval:`linkcheck_anchors_ignore`<<
+
+* #3083: let Unicode no-break space act like LaTeX "~" (fixed #3019)
+
+* #3116: allow word wrap in PDF output for inline literals (ref #3110)
+
+* #930: sphinx-apidoc allow wildcards for excluding paths. Thanks to
+  Nick Coghlan.
+
+* #3121: add "inlineliteralwraps" option to control if inline literal
+  word-wraps in latex
+
+1.5 final
+
+* #3095: Add >>:confval:`tls_verify`<< and >>:confval:`tls_cacerts`<<
+  to support self-signed HTTPS servers in linkcheck and intersphinx
+
+* #2215: make.bat generated by sphinx-quickstart can be called from
+  another dir. Thanks to Timotheus Kampik.
+
+* #3185: Add new warning type "misc.highlighting_failure"
+
+
+Bugs fixed
+----------
+
+1.5a1
+
+* #2707: (latex) the column width is badly computed for tabular
+
+* #2799: Sphinx installs roles and directives automatically on
+  importing sphinx module.  Now Sphinx installs them on running
+  application.
+
+* "sphinx.ext.autodoc" crashes if target code imports * from mock
+  modules by "autodoc_mock_imports".
+
+* #1953: "Sphinx.add_node" does not add handlers the translator
+  installed by "html_translator_class"
+
+* #1797: text builder inserts blank line on top
+
+* #2894: quickstart main() doesn't use argv argument
+
+* #2874: gettext builder could not extract all text under the "only"
+  directives
+
+* #2485: autosummary crashes with multiple source_suffix values
+
+* #1734: Could not translate the caption of toctree directive
+
+* Could not translate the content of meta directive (ref: #1734)
+
+* #2550: external links are opened in help viewer
+
+* #2687: Running Sphinx multiple times produces 'already registered'
+  warnings
+
+1.5a2
+
+* #2810: Problems with pdflatex in an Italian document
+
+* Use "latex_elements.papersize" to specify papersize of LaTeX in
+  Makefile
+
+* #2988: linkcheck: retry with GET request if denied HEAD request
+
+* #2990: linkcheck raises "Can't convert 'bytes' object to str
+  implicitly" error if linkcheck_anchors enabled
+
+* #3004: Invalid link types "top" and "up" are used
+
+* #3009: Bad rendering of parsed-literals in LaTeX since Sphinx 1.4.4
+
+* #3000: "option" directive generates invalid HTML anchors
+
+* #2984: Invalid HTML has been generated if "html_split_index" enabled
+
+* #2986: themes/basic/defindex.html should be changed for html5
+  friendly
+
+* #2987: Invalid HTML has been generated if multiple IDs are assigned
+  to a list
+
+* #2891: HTML search does not provide all the results
+
+* #1986: Title in PDF Output
+
+* #147: Problem with latex chapter style
+
+* #3018: LaTeX problem with page layout dimensions and chapter titles
+
+* Fix an issue with "\pysigline" in LaTeX style file (ref #3023)
+
+* #3038: "sphinx.ext.math*" raises TypeError if labels are duplicated
+
+* #3031: incompatibility with LaTeX package "tocloft"
+
+* #3003: literal blocks in footnotes are not supported by Latex
+
+* #3047: spacing before footnote in pdf output is not coherent and
+  allows breaks
+
+* #3045: HTML search index creator should ignore "raw" content if now
+  html
+
+* #3039: English stemmer returns wrong word if the word is capitalized
+
+* Fix make-mode Makefile template (ref #3056, #2936)
+
+1.5b1
+
+* #2432: Fix unwanted * between varargs and keyword only args. Thanks
+  to Alex Grönholm.
+
+* #3062: Failed to build PDF using 1.5a2 (undefined "\hypersetup" for
+  Japanese documents since PR#3030)
+
+* Better rendering of multiline signatures in html.
+
+* #777: LaTeX output "too deeply nested" (ref #3096)
+
+* Let LaTeX image inclusion obey "scale" before textwidth fit (ref
+  #2865, #3059)
+
+* #3019: LaTeX fails on description of C function with arguments (ref
+  #3083)
+
+* fix latex inline literals where "< > -" gobbled a space
+
+1.5 final
+
+* #3069: Even if "'babel'" key is set to empty string, LaTeX output
+  contains one "\addto\captions..."
+
+* #3123: user "'babel'" key setting is not obeyed anymore
+
+* #3155: Fix JavaScript for "html_sourcelink_suffix" fails with IE and
+  Opera
+
+* #3085: keep current directory after breaking build documentation.
+  Thanks to Timotheus Kampik.
+
+* #3181: pLaTeX crashes with a section contains endash
+
+* #3180: latex: add stretch/shrink between successive singleline or
+  multipleline cpp signatures (ref #3072)
+
+* #3128: globing images does not support .svgz file
+
+* #3015: fix a broken test on Windows.
+
+* #1843: Fix documentation of descriptor classes that have a custom
+  metaclass. Thanks to Erik Bray.
+
+* #3190: util.split_docinfo fails to parse multi-line field bodies
+
+* #3024, #3037: In Python3, application.Sphinx._log crushed when the
+  log message cannot be encoded into console encoding.
+
+
+Testing
+-------
+
+* To simplify, sphinx uses external mock package even if unittest.mock
+  exists.
+
+
+Release 1.4.9 (released Nov 23, 2016)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #2936: Fix doc/Makefile that can't build man because doc/man exists
+
+* #3058: Using the same 'caption' attribute in multiple 'toctree'
+  directives results in warning / error
+
+* #3068: Allow the '=' character in the -D option of sphinx-build.py
+
+* #3074: "add_source_parser()" crashes in debug mode
+
+* #3135: "sphinx.ext.autodoc" crashes with plain Callable
+
+* #3150: Fix query word splitter in JavaScript. It behaves as same as
+  Python's regular expression.
+
+* #3093: gettext build broken on substituted images.
+
+* #3093: gettext build broken on image node under "note" directive.
+
+* imgmath: crashes on showing error messages if image generation
+  failed
+
+* #3117: LaTeX writer crashes if admonition is placed before first
+  section title
+
+* #3164: Change search order of "sphinx.ext.inheritance_diagram"
+
+
+Release 1.4.8 (released Oct 1, 2016)
+====================================
+
+
+Bugs fixed
+----------
+
+* #2996: The wheel package of Sphinx got crash with ImportError
+
+
+Release 1.4.7 (released Oct 1, 2016)
+====================================
+
+
+Bugs fixed
+----------
+
+* #2890: Quickstart should return an error consistently on all error
+  conditions
+
+* #2870: flatten genindex columns' heights.
+
+* #2856: Search on generated HTML site doesn't find some symbols
+
+* #2882: Fall back to a GET request on 403 status in linkcheck
+
+* #2902: jsdump.loads fails to load search index if keywords starts
+  with underscore
+
+* #2900: Fix epub content.opf: add auto generated orphan files to
+  spine.
+
+* #2899: Fix "hasdoc()" function in Jinja2 template. It will detect
+  "genindex", "search" also.
+
+* #2901: Fix epub result: skip creating links from image tags to
+  original image files.
+
+* #2917: inline code is hyphenated on HTML
+
+* #1462: autosummary warns for namedtuple with attribute with trailing
+  underscore
+
+* Could not reference equations if ":nowrap:" option specified
+
+* #2873: code-block overflow in latex (due to commas)
+
+* #1060, #2056: sphinx.ext.intersphinx: broken links are generated if
+  relative paths are used in "intersphinx_mapping"
+
+* #2931: code-block directive with same :caption: causes warning of
+  duplicate target.  Now "code-block" and "literalinclude" does not
+  define hyperlink target using its caption automatically.
+
+* #2962: latex: missing label of longtable
+
+* #2968: autodoc: show-inheritance option breaks docstrings
+
+
+Release 1.4.6 (released Aug 20, 2016)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* #2867: linkcheck builder crashes with six-1.4.  Now Sphinx depends
+  on six-1.5 or later
+
+
+Bugs fixed
+----------
+
+* applehelp: Sphinx crashes if "hiutil" or "codesign" commands not
+  found
+
+* Fix "make clean" abort issue when build dir contains regular files
+  like "DS_Store".
+
+* Reduce epubcheck warnings/errors:
+
+  * Fix DOCTYPE to html5
+
+  * Change extension from .html to .xhtml.
+
+  * Disable search page on epub results
+
+* #2778: Fix autodoc crashes if obj.__dict__ is a property method and
+  raises exception
+
+* Fix duplicated toc in epub3 output.
+
+* #2775: Fix failing linkcheck with servers not supporting identity
+  encoding
+
+* #2833: Fix formatting instance annotations in ext.autodoc.
+
+* #1911: "-D" option of "sphinx-build" does not override the
+  "extensions" variable
+
+* #2789: "sphinx.ext.intersphinx" generates wrong hyperlinks if the
+  inventory is given
+
+* parsing errors for caption of code-blocks are displayed in document
+  (ref: #2845)
+
+* #2846: "singlehtml" builder does not include figure numbers
+
+* #2816: Fix data from builds cluttering the "Domain.initial_data"
+  class attributes
+
+
+Release 1.4.5 (released Jul 13, 2016)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* latex, inclusion of non-inline images from image directive resulted
+  in non-coherent whitespaces depending on original image width; new
+  behaviour by necessity differs from earlier one in some cases. (ref:
+  #2672)
+
+* latex, use of "\includegraphics" to refer to Sphinx custom variant
+  is deprecated; in future it will revert to original LaTeX macro,
+  custom one already has alternative name "\sphinxincludegraphics".
+
+
+Features added
+--------------
+
+* new config option "latex_keep_old_macro_names", defaults to True. If
+  False, lets macros (for text styling) be defined only with
+  "\sphinx"-prefixed names
+
+* latex writer allows user customization of "shadowed" boxes (topics),
+  via three length variables.
+
+* woff-format web font files now supported by the epub builder.
+
+
+Bugs fixed
+----------
+
+* jsdump fix for python 3: fixes the HTML search on python > 3
+
+* #2676: (latex) Error with verbatim text in captions since Sphinx
+  1.4.4
+
+* #2629: memoir class crashes LaTeX. Fixed by
+  "latex_keep_old_macro_names=False" (ref 2675)
+
+* #2684: "sphinx.ext.intersphinx" crashes with six-1.4.1
+
+* #2679: "float" package needed for "'figure_align': 'H'" latex option
+
+* #2671: image directive may lead to inconsistent spacing in pdf
+
+* #2705: "toctree" generates empty bullet_list if ":titlesonly:"
+  specified
+
+* #2479: "sphinx.ext.viewcode" uses python2 highlighter by default
+
+* #2700: HtmlHelp builder has hard coded index.html
+
+* latex, since 1.4.4 inline literal text is followed by spurious space
+
+* #2722: C++, fix id generation for var/member declarations to include
+  namespaces.
+
+* latex, images (from image directive) in lists or quoted blocks did
+  not obey indentation (fixed together with #2671)
+
+* #2733: since Sphinx-1.4.4 "make latexpdf" generates lots of hyperref
+  warnings
+
+* #2731: "sphinx.ext.autodoc" does not access propertymethods which
+  raises any exceptions
+
+* #2666: C++, properly look up nested names involving constructors.
+
+* #2579: Could not refer a label including both spaces and colons via
+  "sphinx.ext.intersphinx"
+
+* #2718: Sphinx crashes if the document file is not readable
+
+* #2699: hyperlinks in help HTMLs are broken if "html_file_suffix" is
+  set
+
+* #2723: extra spaces in latex pdf output from multirow cell
+
+* #2735: latexpdf "Underfull \hbox (badness 10000)" warnings from
+  title page
+
+* #2667: latex crashes if resized images appeared in section title
+
+* #2763: (html) Provide default value for required "alt" attribute for
+  image tags of SVG source, required to validate and now consistent w/
+  other formats.
+
+
+Release 1.4.4 (released Jun 12, 2016)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #2630: latex: sphinx.sty notice environment formatting problem
+
+* #2632: Warning directives fail in quote environment latex build
+
+* #2633: Sphinx crashes with old styled indices
+
+* Fix a "\begin{\minipage}" typo in sphinx.sty from 1.4.2 (ref:
+  68becb1)
+
+* #2622: Latex produces empty pages after title and table of contents
+
+* #2640: 1.4.2 LaTeX crashes if code-block inside warning directive
+
+* Let LaTeX use straight quotes also in inline code (ref #2627)
+
+* #2351: latex crashes if enumerated lists are placed on footnotes
+
+* #2646: latex crashes if math contains twice empty lines
+
+* #2480: "sphinx.ext.autodoc": memory addresses were shown
+
+* latex: allow code-blocks appearing inside lists and quotes at
+  maximal nesting depth (ref #777, #2624, #2651)
+
+* #2635: Latex code directives produce inconsistent frames based on
+  viewing resolution
+
+* #2639: Sphinx now bundles iftex.sty
+
+* Failed to build PDF with framed.sty 0.95
+
+* Sphinx now bundles needspace.sty
+
+
+Release 1.4.3 (released Jun 5, 2016)
+====================================
+
+
+Bugs fixed
+----------
+
+* #2530: got "Counter too large" error on building PDF if large
+  numbered footnotes existed in admonitions
+
+* "width" option of figure directive does not work if "align" option
+  specified at same time (ref: #2595)
+
+* #2590: The "inputenc" package breaks compiling under lualatex and
+  xelatex
+
+* #2540: date on latex front page use different font
+
+* Suppress "document isn't included in any toctree" warning if the
+  document is included (ref: #2603)
+
+* #2614: Some tables in PDF output will end up shifted if user sets
+  non zero parindent in preamble
+
+* #2602: URL redirection breaks the hyperlinks generated by
+  "sphinx.ext.intersphinx"
+
+* #2613: Show warnings if merged extensions are loaded
+
+* #2619: make sure amstext LaTeX package always loaded (ref: d657225,
+  488ee52, 9d82cad and #2615)
+
+* #2593: latex crashes if any figures in the table
+
+
+Release 1.4.2 (released May 29, 2016)
+=====================================
+
+
+Features added
+--------------
+
+* Now >>:confval:`suppress_warnings`<< accepts following
+  configurations (ref: #2451, #2466):
+
+  * "app.add_node"
+
+  * "app.add_directive"
+
+  * "app.add_role"
+
+  * "app.add_generic_role"
+
+  * "app.add_source_parser"
+
+  * "image.data_uri"
+
+  * "image.nonlocal_uri"
+
+* #2453: LaTeX writer allows page breaks in topic contents; and their
+  horizontal extent now fits in the line width (with shadow in
+  margin). Also warning-type admonitions allow page breaks and their
+  vertical spacing has been made more coherent with the one for hint-
+  type notices (ref #2446).
+
+* #2459: the framing of literal code-blocks in LaTeX output (and not
+  only the code lines themselves) obey the indentation in lists or
+  quoted blocks.
+
+* #2343: the long source lines in code-blocks are wrapped (without
+  modifying the line numbering) in LaTeX output (ref #1534, #2304).
+
+
+Bugs fixed
+----------
+
+* #2370: the equations are slightly misaligned in LaTeX writer
+
+* #1817, #2077: suppress pep8 warnings on conf.py generated by sphinx-
+  quickstart
+
+* #2407: building docs crash if document includes large data image
+  URIs
+
+* #2436: Sphinx does not check version by >>:confval:`needs_sphinx`<<
+  if loading extensions failed
+
+* #2397: Setup shorthandoff for Turkish documents
+
+* #2447: VerbatimBorderColor wrongly used also for captions of PDF
+
+* #2456: C++, fix crash related to document merging (e.g., singlehtml
+  and Latex builders).
+
+* #2446: latex(pdf) sets local tables of contents (or more generally
+  topic nodes) in unbreakable boxes, causes overflow at bottom
+
+* #2476: Omit MathJax markers if :nowrap: is given
+
+* #2465: latex builder fails in case no caption option is provided to
+  toctree directive
+
+* Sphinx crashes if self referenced toctree found
+
+* #2481: spelling mistake for mecab search splitter. Thanks to Naoki
+  Sato.
+
+* #2309: Fix could not refer "indirect hyperlink targets" by ref-role
+
+* intersphinx fails if mapping URL contains any port
+
+* #2088: intersphinx crashes if the mapping URL requires basic auth
+
+* #2304: auto line breaks in latexpdf codeblocks
+
+* #1534: Word wrap long lines in Latex verbatim blocks
+
+* #2460: too much white space on top of captioned literal blocks in
+  PDF output
+
+* Show error reason when multiple math extensions are loaded (ref:
+  #2499)
+
+* #2483: any figure number was not assigned if figure title contains
+  only non text objects
+
+* #2501: Unicode subscript numbers are normalized in LaTeX
+
+* #2492: Figure directive with :figwidth: generates incorrect Latex-
+  code
+
+* The caption of figure is always put on center even if ":align:" was
+  specified
+
+* #2526: LaTeX writer crashes if the section having only images
+
+* #2522: Sphinx touches mo files under installed directory that caused
+  permission error.
+
+* #2536: C++, fix crash when an immediately nested scope has the same
+  name as the current scope.
+
+* #2555: Fix crash on any-references with unicode.
+
+* #2517: wrong bookmark encoding in PDF if using LuaLaTeX
+
+* #2521: generated Makefile causes BSD make crashed if sphinx-build
+  not found
+
+* #2470: "typing" backport package causes autodoc errors with python
+  2.7
+
+* "sphinx.ext.intersphinx" crashes if non-string value is used for key
+  of "intersphinx_mapping"
+
+* #2518: "intersphinx_mapping" disallows non alphanumeric keys
+
+* #2558: unpack error on devhelp builder
+
+* #2561: Info builder crashes when a footnote contains a link
+
+* #2565: The descriptions of objects generated by
+  "sphinx.ext.autosummary" overflow lines at LaTeX writer
+
+* Extend pdflatex config in sphinx.sty to subparagraphs (ref: #2551)
+
+* #2445: "rst_prolog" and "rst_epilog" affect to non reST sources
+
+* #2576: "sphinx.ext.imgmath" crashes if subprocess raises error
+
+* #2577: "sphinx.ext.imgmath": Invalid argument are passed to dvisvgm
+
+* #2556: Xapian search does not work with Python 3
+
+* #2581: The search doesn't work if language="es" (Spanish)
+
+* #2382: Adjust spacing after abbreviations on figure numbers in LaTeX
+  writer
+
+* #2383: The generated footnote by "latex_show_urls" overflows lines
+
+* #2497, #2552: The label of search button does not fit for the button
+  itself
+
+
+Release 1.4.1 (released Apr 12, 2016)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* The default format of "today_fmt" and "html_last_updated_fmt" is
+  back to strftime format again.  Locale Date Markup Language is also
+  supported for backward compatibility until Sphinx-1.5.
+
+
+Translations
+------------
+
+* Added Welsh translation, thanks to Geraint Palmer.
+
+* Added Greek translation, thanks to Stelios Vitalis.
+
+* Added Esperanto translation, thanks to Dinu Gherman.
+
+* Added Hindi translation, thanks to Purnank H. Ghumalia.
+
+* Added Romanian translation, thanks to Razvan Stefanescu.
+
+
+Bugs fixed
+----------
+
+* C++, added support for "extern" and "thread_local".
+
+* C++, type declarations are now using the prefixes "typedef",
+  "using", and "type", depending on the style of declaration.
+
+* #2413: C++, fix crash on duplicate declarations
+
+* #2394: Sphinx crashes when html_last_updated_fmt is invalid
+
+* #2408: dummy builder not available in Makefile and make.bat
+
+* #2412: hyperlink targets are broken in LaTeX builder
+
+* figure directive crashes if non paragraph item is given as caption
+
+* #2418: time formats no longer allowed in today_fmt
+
+* #2395: Sphinx crashes if unicode character in image filename
+
+* #2396: "too many values to unpack" in genindex-single
+
+* #2405: numref link in PDF jumps to the wrong location
+
+* #2414: missing number in PDF hyperlinks to code listings
+
+* #2440: wrong import for gmtime. Thanks to Uwe L. Korn.
+
+
+Release 1.4 (released Mar 28, 2016)
+===================================
+
+
+Incompatible changes
+--------------------
+
+* Drop "PorterStemmer" package support. Use "PyStemmer" instead of
+  "PorterStemmer" to accelerate stemming.
+
+* sphinx_rtd_theme has become optional. Please install it manually.
+  Refs #2087, #2086, #1845 and #2097. Thanks to Victor Zverovich.
+
+* #2231: Use DUrole instead of DUspan for custom roles in LaTeX
+  writer. It enables to take title of roles as an argument of custom
+  macros.
+
+* #2022: 'Thumbs.db' and '.DS_Store' are added to "exclude_patterns"
+  default values in conf.py that will be provided on sphinx-
+  quickstart.
+
+* #2027, #2208: The "html_title" accepts string values only. And The
+  None value cannot be accepted.
+
+* "sphinx.ext.graphviz": show graph image in inline by default
+
+* #2060, #2224: The "manpage" role now generate
+  "sphinx.addnodes.manpage" node instead of
+  "sphinx.addnodes.literal_emphasis" node.
+
+* #2022: >>:confval:`html_extra_path`<< also copies dotfiles in the
+  extra directory, and refers to >>:confval:`exclude_patterns`<< to
+  exclude extra files and directories.
+
+* #2300: enhance autoclass:: to use the docstring of __new__ if
+  __init__ method's is missing of empty
+
+* #2251: Previously, under glossary directives, multiple terms for one
+  definition are converted into single "term" node and the each terms
+  in the term node are separated by "termsep" node. In new
+  implementation, each terms are converted into individual "term"
+  nodes and "termsep" node is removed. By this change, output layout
+  of every builders are changed a bit.
+
+* The default highlight language is now Python 3.  This means that
+  source code is highlighted as Python 3 (which is mostly a superset
+  of Python 2), and no parsing is attempted to distinguish valid code.
+  To get the old behavior back, add "highlight_language = "python"" to
+  conf.py.
+
+* Locale Date Markup Language like ""MMMM dd, YYYY"" is default format
+  for "today_fmt" and "html_last_updated_fmt".  However strftime
+  format like ""%B %d, %Y"" is also supported for backward
+  compatibility until Sphinx-1.5. Later format will be disabled from
+  Sphinx-1.5.
+
+* #2327: "latex_use_parts" is deprecated now. Use
+  "latex_toplevel_sectioning" instead.
+
+* #2337: Use "\url{URL}" macro instead of "\href{URL}{URL}" in LaTeX
+  writer.
+
+* #1498: manpage writer: don't make whole of item in definition list
+  bold if it includes strong node.
+
+* #582: Remove hint message from quick search box for html output.
+
+* #2378: Sphinx now bundles newfloat.sty
+
+
+Features added
+--------------
+
+* #2092: add todo directive support in napoleon package.
+
+* #1962: when adding directives, roles or nodes from an extension,
+  warn if such an element is already present (built-in or added by
+  another extension).
+
+* #1909: Add "doc" references to Intersphinx inventories.
+
+* C++ type alias support (e.g., ".. type:: T = int").
+
+* C++ template support for classes, functions, type aliases, and
+  variables (#1729, #1314).
+
+* C++, added new scope management directives "namespace-push" and
+  "namespace-pop".
+
+* #1970: Keyboard shortcuts to navigate Next and Previous topics
+
+* Intersphinx: Added support for fetching Intersphinx inventories with
+  URLs using HTTP basic auth.
+
+* C++, added support for template parameter in function info field
+  lists.
+
+* C++, added support for pointers to member (function).
+
+* #2113: Allow ":class:" option to code-block directive.
+
+* #2192: Imgmath (pngmath with svg support).
+
+* #2200: Support XeTeX and LuaTeX for the LaTeX builder.
+
+* #1906: Use xcolor over color for fcolorbox where available for LaTeX
+  output.
+
+* #2216: Texinputs makefile improvements.
+
+* #2170: Support for Chinese language search index.
+
+* #2214: Add sphinx.ext.githubpages to publish the docs on GitHub
+  Pages
+
+* #1030: Make page reference names for latex_show_pagerefs
+  translatable
+
+* #2162: Add Sphinx.add_source_parser() to add source_suffix and
+  source_parsers from extension
+
+* #2207: Add sphinx.parsers.Parser class; a base class for new parsers
+
+* #656: Add "graphviz_dot" option to graphviz directives to switch the
+  "dot" command
+
+* #1939: Added the "dummy" builder: syntax check without output.
+
+* #2230: Add "math_number_all" option to number all displayed math in
+  math extensions
+
+* #2235: "needs_sphinx" supports micro version comparison
+
+* #2282: Add "language" attribute to html tag in the "basic" theme
+
+* #1779: Add EPUB 3 builder
+
+* #1751: Add >>:confval:`todo_link_only`<< to avoid file path and line
+  indication on "todolist". Thanks to Francesco Montesano.
+
+* #2199: Use "imagesize" package to obtain size of images.
+
+* #1099: Add configurable retries to the linkcheck builder. Thanks to
+  Alex Gaynor.  Also don't check anchors starting with "!".
+
+* #2300: enhance autoclass:: to use the docstring of __new__ if
+  __init__ method's is missing of empty
+
+* #1858: Add Sphinx.add_enumerable_node() to add enumerable nodes for
+  numfig feature
+
+* #1286, #2099: Add "sphinx.ext.autosectionlabel" extension to allow
+  reference sections using its title. Thanks to Tadhg O'Higgins.
+
+* #1854: Allow to choose Janome for Japanese splitter.
+
+* #1853: support custom text splitter on html search with
+  "language='ja'".
+
+* #2320: classifier of glossary terms can be used for index entries
+  grouping key The classifier also be used for translation. See also
+  Glossary.
+
+* #2308: Define "\tablecontinued" macro to redefine the style of
+  continued label for longtables.
+
+* Select an image by similarity if multiple images are globbed by "..
+  image:: filename.*"
+
+* #1921: Support figure substitutions by >>:confval:`language`<< and
+  >>:confval:`figure_language_filename`<<
+
+* #2245: Add "latex_elements["passoptionstopackages"]" option to call
+  PassOptionsToPackages in early stage of preambles.
+
+* #2340: Math extension: support alignment of multiple equations for
+  MathJax.
+
+* #2338: Define "\titleref" macro to redefine the style of "title-
+  reference" roles.
+
+* Define "\menuselection" and "\accelerator" macros to redefine the
+  style of "menuselection" roles.
+
+* Define "\crossref" macro to redefine the style of references
+
+* #2301: Texts in the classic html theme should be hyphenated.
+
+* #2355: Define "\termref" macro to redefine the style of "term"
+  roles.
+
+* Add >>:confval:`suppress_warnings`<< to suppress arbitrary warning
+  message (experimental)
+
+* #2229: Fix no warning is given for unknown options
+
+* #2327: Add "latex_toplevel_sectioning" to switch the top level
+  sectioning of LaTeX document.
+
+
+Bugs fixed
+----------
+
+* #1913: C++, fix assert bug for enumerators in next-to-global and
+  global scope.
+
+* C++, fix parsing of 'signed char' and 'unsigned char' as types.
+
+* C++, add missing support for 'friend' functions.
+
+* C++, add missing support for virtual base classes (thanks to
+  Rapptz).
+
+* C++, add support for final classes.
+
+* C++, fix parsing of types prefixed with 'enum'.
+
+* #2023: Dutch search support uses Danish stemming info.
+
+* C++, add support for user-defined literals.
+
+* #1804: Now html output wraps overflowed long-line-text in the
+  sidebar. Thanks to Hassen ben tanfous.
+
+* #2183: Fix porterstemmer causes "make json" to fail.
+
+* #1899: Ensure list is sent to OptParse.
+
+* #2164: Fix wrong check for pdftex inside sphinx.sty (for graphicx
+  package option).
+
+* #2165, #2218: Remove faulty and non-need conditional from
+  sphinx.sty.
+
+* Fix broken LaTeX code is generated if unknown language is given
+
+* #1944: Fix rst_prolog breaks file-wide metadata
+
+* #2074: make gettext should use canonical relative paths for .pot.
+  Thanks to anatoly techtonik.
+
+* #2311: Fix sphinx.ext.inheritance_diagram raises AttributeError
+
+* #2251: Line breaks in .rst files are transferred to .pot files in a
+  wrong way.
+
+* #794: Fix date formatting in latex output is not localized
+
+* Remove "image/gif" from supported_image_types of LaTeX writer
+  (#2272)
+
+* Fix ValueError is raised if LANGUAGE is empty string
+
+* Fix unpack warning is shown when the directives generated from
+  "Sphinx.add_crossref_type" is used
+
+* The default highlight language is now "default".  This means that
+  source code is highlighted as Python 3 (which is mostly a superset
+  of Python 2) if possible.  To get the old behavior back, add
+  "highlight_language = "python"" to conf.py.
+
+* #2329: Refresh environment forcedly if source directory has changed.
+
+* #2331: Fix code-blocks are filled by block in dvi; remove "xcdraw"
+  option from xcolor package
+
+* Fix the confval type checker emits warnings if unicode is given to
+  confvals which expects string value
+
+* #2360: Fix numref in LaTeX output is broken
+
+* #2361: Fix additional paragraphs inside the "compound" directive are
+  indented
+
+* #2364: Fix KeyError 'rootSymbol' on Sphinx upgrade from older
+  version.
+
+* #2348: Move amsmath and amssymb to before fontpkg on LaTeX writer.
+
+* #2368: Ignore emacs lock files like ".#foo.rst" by default.
+
+* #2262: literal_block and its caption has been separated by pagebreak
+  in LaTeX output.
+
+* #2319: Fix table counter is overridden by code-block's in LaTeX.
+  Thanks to jfbu.
+
+* Fix unpack warning if combined with 3rd party domain extensions.
+
+* #1153: Fix figures in sidebar causes latex build error.
+
+* #2358: Fix user-preamble could not override the tocdepth definition.
+
+* #2358: Reduce tocdepth if "part" or "chapter" is used for
+  top_sectionlevel
+
+* #2351: Fix footnote spacing
+
+* #2363: Fix "toctree()" in templates generates broken links in
+  SingleHTMLBuilder.
+
+* #2366: Fix empty hyperref is generated on toctree in HTML builder.
+
+
+Documentation
+-------------
+
+* #1757: Fix for usage of >>:confval:`html_last_updated_fmt`<<. Thanks
+  to Ralf Hemmecke.
+
+
+Release 1.3.6 (released Feb 29, 2016)
+=====================================
+
+
+Features added
+--------------
+
+* #1873, #1876, #2278: Add "page_source_suffix" html context variable.
+  This should be introduced with >>:confval:`source_parsers`<<
+  feature. Thanks for Eric Holscher.
+
+
+Bugs fixed
+----------
+
+* #2265: Fix babel is used in spite of disabling it on
+  "latex_elements"
+
+* #2295: Avoid mutating dictionary errors while enumerating members in
+  autodoc with Python 3
+
+* #2291: Fix pdflatex "Counter too large" error from footnotes inside
+  tables of contents
+
+* #2292: Fix some footnotes disappear from LaTeX output
+
+* #2287: "sphinx.transforms.Locale" always uses rst parser. Sphinx
+  i18n feature should support parsers that specified source_parsers.
+
+* #2290: Fix "sphinx.ext.mathbase" use of amsfonts may break user
+  choice of math fonts
+
+* #2324: Print a hint how to increase the recursion limit when it is
+  hit.
+
+* #1565, #2229: Revert new warning; the new warning will be triggered
+  from version 1.4 on.
+
+* #2329: Refresh environment forcedly if source directory has changed.
+
+* #2019: Fix the domain objects in search result are not escaped
+
+
+Release 1.3.5 (released Jan 24, 2016)
+=====================================
+
+
+Bugs fixed
+----------
+
+* Fix line numbers was not shown on warnings in LaTeX and texinfo
+  builders
+
+* Fix filenames were not shown on warnings of citations
+
+* Fix line numbers was not shown on warnings in LaTeX and texinfo
+  builders
+
+* Fix line numbers was not shown on warnings of indices
+
+* #2026: Fix LaTeX builder raises error if parsed-literal includes
+  links
+
+* #2243: Ignore strange docstring types for classes, do not crash
+
+* #2247: Fix #2205 breaks make html for definition list with
+  classifiers that contains regular-expression like string
+
+* #1565: Sphinx will now emit a warning that highlighting was skipped
+  if the syntax is incorrect for "code-block", "literalinclude" and so
+  on.
+
+* #2211: Fix paragraphs in table cell doesn't work in Latex output
+
+* #2253: ":pyobject:" option of "literalinclude" directive can't
+  detect indented body block when the block starts with blank or
+  comment lines.
+
+* Fix TOC is not shown when no ":maxdepth:" for toctrees (ref: #771)
+
+* Fix warning message for ":numref:" if target is in orphaned doc
+  (ref: #2244)
+
+
+Release 1.3.4 (released Jan 12, 2016)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #2134: Fix figure caption with reference causes latex build error
+
+* #2094: Fix rubric with reference not working in Latex
+
+* #2147: Fix literalinclude code in latex does not break in pages
+
+* #1833: Fix email addresses is showed again if latex_show_urls is not
+  None
+
+* #2176: sphinx.ext.graphviz: use <object> instead of <img> to embed
+  svg
+
+* #967: Fix SVG inheritance diagram is not hyperlinked (clickable)
+
+* #1237: Fix footnotes not working in definition list in LaTeX
+
+* #2168: Fix raw directive does not work for text writer
+
+* #2171: Fix cannot linkcheck url with unicode
+
+* #2182: LaTeX: support image file names with more than 1 dots
+
+* #2189: Fix previous sibling link for first file in subdirectory uses
+  last file, not intended previous from root toctree
+
+* #2003: Fix decode error under python2 (only) when "make linkcheck"
+  is run
+
+* #2186: Fix LaTeX output of mathbb in math
+
+* #1480, #2188: LaTeX: Support math in section titles
+
+* #2071: Fix same footnote in more than two section titles =>
+  LaTeX/PDF Bug
+
+* #2040: Fix UnicodeDecodeError in sphinx-apidoc when author contains
+  non-ascii characters
+
+* #2193: Fix shutil.SameFileError if source directory and destination
+  directory are same
+
+* #2178: Fix unparsable C++ cross-reference when referencing a
+  function with :cpp:any:
+
+* #2206: Fix Sphinx latex doc build failed due to a footnotes
+
+* #2201: Fix wrong table caption for tables with over 30 rows
+
+* #2213: Set <blockquote> in the classic theme to fit with <p>
+
+* #1815: Fix linkcheck does not raise an exception if warniserror set
+  to true and link is broken
+
+* #2197: Fix slightly cryptic error message for missing index.rst file
+
+* #1894: Unlisted phony targets in quickstart Makefile
+
+* #2125: Fix unifies behavior of collapsed fields ("GroupedField" and
+  "TypedField")
+
+* #1408: Check latex_logo validity before copying
+
+* #771: Fix latex output doesn't set tocdepth
+
+* #1820: On Windows, console coloring is broken with colorama version
+  0.3.3. Now sphinx use colorama>=0.3.5 to avoid this problem.
+
+* #2072: Fix footnotes in chapter-titles do not appear in PDF output
+
+* #1580: Fix paragraphs in longtable don't work in Latex output
+
+* #1366: Fix centered image not centered in latex
+
+* #1860: Fix man page using ":samp:" with braces - font doesn't reset
+
+* #1610: Sphinx crashes in Japanese indexing in some systems
+
+* Fix Sphinx crashes if mecab initialization failed
+
+* #2160: Fix broken TOC of PDFs if section includes an image
+
+* #2172: Fix dysfunctional admonition "\py@lightbox" in sphinx.sty.
+  Thanks to jfbu.
+
+* #2198,#2205: "make gettext" generate broken msgid for definition
+  lists.
+
+* #2062: Escape characters in doctests are treated incorrectly with
+  Python 2.
+
+* #2225: Fix if the option does not begin with dash, linking is not
+  performed
+
+* #2226: Fix math is not HTML-encoded when :nowrap: is given (jsmath,
+  mathjax)
+
+* #1601, #2220: 'any' role breaks extended domains behavior. Affected
+  extensions doesn't support resolve_any_xref and resolve_xref returns
+  problematic node instead of None.  sphinxcontrib-httpdomain is one
+  of them.
+
+* #2229: Fix no warning is given for unknown options
+
+
+Release 1.3.3 (released Dec 2, 2015)
+====================================
+
+
+Bugs fixed
+----------
+
+* #2177: Fix parallel hangs
+
+* #2012: Fix exception occurred if "numfig_format" is invalid
+
+* #2142: Provide non-minified JS code in "sphinx/search/non-minified-
+  js/*.js" for source distribution on PyPI.
+
+* #2148: Error while building devhelp target with non-ASCII document.
+
+
+Release 1.3.2 (released Nov 29, 2015)
+=====================================
+
+
+Features added
+--------------
+
+* #1935: Make "numfig_format" overridable in latex_elements.
+
+
+Bugs fixed
+----------
+
+* #1976: Avoid "2.0" version of Babel because it doesn't work with
+  Windows environment.
+
+* Add a "default.css" stylesheet (which imports "classic.css") for
+  compatibility
+
+* #1788: graphviz extension raises exception when caption option is
+  present.
+
+* #1789: ":pyobject:" option of "literalinclude" directive includes
+  following lines after class definitions
+
+* #1790: "literalinclude" strips empty lines at the head and tail
+
+* #1802: load plugin themes automatically when theme.conf use it as
+  'inherit'. Thanks to Takayuki Hirai.
+
+* #1794: custom theme extended from alabaster or sphinx_rtd_theme
+  can't find base theme.
+
+* #1834: compatibility for docutils-0.13: handle_io_errors keyword
+  argument for docutils.io.FileInput cause TypeError.
+
+* #1823: '.' as <module_path> for sphinx-apidoc cause an unfriendly
+  error. Now '.' is converted to absolute path automatically.
+
+* Fix a crash when setting up extensions which do not support
+  metadata.
+
+* #1784: Provide non-minified JS code in "sphinx/search/non-minified-
+  js/*.js"
+
+* #1822, #1892: Fix regression for #1061. autosummary can't generate
+  doc for imported members since sphinx-1.3b3. Thanks to Eric Larson.
+
+* #1793, #1819: "see also" misses a linebreak in text output. Thanks
+  to Takayuki Hirai.
+
+* #1780, #1866: "make text" shows "class" keyword twice. Thanks to
+  Takayuki Hirai.
+
+* #1871: Fix for LaTeX output of tables with one column and multirows.
+
+* Work around the lack of the HTMLParserError exception in Python 3.5.
+
+* #1949: Use "safe_getattr" in the coverage builder to avoid aborting
+  with descriptors that have custom behavior.
+
+* #1915: Do not generate smart quotes in doc field type annotations.
+
+* #1796: On py3, automated .mo building caused UnicodeDecodeError.
+
+* #1923: Use babel features only if the babel latex element is
+  nonempty.
+
+* #1942: Fix a KeyError in websupport.
+
+* #1903: Fix strange id generation for glossary terms.
+
+* "make text" will crush if a definition list item has more than 1
+  classifiers as: "term : classifier1 : classifier2".
+
+* #1855: make gettext generates broken po file for definition lists
+  with classifier.
+
+* #1869: Fix problems when dealing with files containing non-ASCII
+  characters. Thanks to Marvin Schmidt.
+
+* #1798: Fix building LaTeX with references in titles.
+
+* #1725: On py2 environment, doctest with using non-ASCII characters
+  causes "'ascii' codec can't decode byte" exception.
+
+* #1540: Fix RuntimeError with circular referenced toctree
+
+* #1983: i18n translation feature breaks references which uses section
+  name.
+
+* #1990: Use caption of toctree to title of tableofcontents in LaTeX
+
+* #1987: Fix ampersand is ignored in ":menuselection:" and
+  ":guilabel:" on LaTeX builder
+
+* #1994: More supporting non-standard parser (like recommonmark
+  parser) for Translation and WebSupport feature. Now node.rawsource
+  is fall backed to node.astext() during docutils transforming.
+
+* #1989: "make blahblah" on Windows indicate help messages for sphinx-
+  build every time.  It was caused by wrong make.bat that generated by
+  Sphinx-1.3.0/1.3.1.
+
+* On Py2 environment, conf.py that is generated by sphinx-quickstart
+  should have u prefixed config value for 'version' and 'release'.
+
+* #2102: On Windows + Py3, using "|today|" and non-ASCII date format
+  will raise UnicodeEncodeError.
+
+* #1974: UnboundLocalError: local variable 'domain' referenced before
+  assignment when using "any" role and "sphinx.ext.intersphinx" in
+  same time.
+
+* #2121: multiple words search doesn't find pages when words across on
+  the page title and the page content.
+
+* #1884, #1885: plug-in html themes cannot inherit another plug-in
+  theme. Thanks to Suzumizaki.
+
+* #1818: "sphinx.ext.todo" directive generates broken html class
+  attribute as 'admonition-' when >>:confval:`language`<< is specified
+  with non-ASCII linguistic area like 'ru' or 'ja'. To fix this, now
+  "todo" directive can use ":class:" option.
+
+* #2140: Fix footnotes in table has broken in LaTeX
+
+* #2127: MecabBinder for html searching feature doesn't work with
+  Python 3. Thanks to Tomoko Uchida.
+
+
+Release 1.3.1 (released Mar 17, 2015)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #1769: allows generating quickstart files/dirs for destination dir
+  that doesn't overwrite existent files/dirs. Thanks to WAKAYAMA
+  shirou.
+
+* #1773: sphinx-quickstart doesn't accept non-ASCII character as a
+  option argument.
+
+* #1766: the message "least Python 2.6 to run" is at best misleading.
+
+* #1772: cross reference in docstrings like ":param .write:" breaks
+  building.
+
+* #1770, #1774: "literalinclude" with empty file occurs exception.
+  Thanks to Takayuki Hirai.
+
+* #1777: Sphinx 1.3 can't load extra theme. Thanks to tell-k.
+
+* #1776: "source_suffix = ['.rst']" cause unfriendly error on prior
+  version.
+
+* #1771: automated .mo building doesn't work properly.
+
+* #1783: Autodoc: Python2 Allow unicode string in __all__. Thanks to
+  Jens Hedegaard Nielsen.
+
+* #1781: Setting "html_domain_indices" to a list raises a type check
+  warnings.
+
+
+Release 1.3 (released Mar 10, 2015)
+===================================
+
+
+Incompatible changes
+--------------------
+
+* Roles "ref", "term" and "menusel" now don't generate
+  >>:durole:`emphasis`<< nodes anymore.  If you want to keep italic
+  style, adapt your stylesheet.
+
+* Role "numref" uses "%s" as special character to indicate position of
+  figure numbers instead "#" symbol.
+
+
+Features added
+--------------
+
+* Add convenience directives and roles to the C++ domain: directive
+  "cpp:var" as alias for "cpp:member", role ":cpp:var" as alias for
+  ":cpp:member", and role "any" for cross-reference to any C++
+  declaraction. #1577, #1744
+
+* The >>:confval:`source_suffix`<< config value can now be a list of
+  multiple suffixes.
+
+* Add the ability to specify source parsers by source suffix with the
+  >>:confval:`source_parsers`<< config value.
+
+* #1675: A new builder, AppleHelpBuilder, has been added that builds
+  Apple Help Books.
+
+
+Bugs fixed
+----------
+
+* 1.3b3 change breaks a previous gettext output that contains
+  duplicated msgid such as "foo bar" and "version changes in 1.3: foo
+  bar".
+
+* #1745: latex builder cause maximum recursion depth exceeded when a
+  footnote has a footnote mark itself.
+
+* #1748: SyntaxError in sphinx/ext/ifconfig.py with Python 2.6.
+
+* #1658, #1750: No link created (and warning given) if option does not
+  begin with -, / or +. Thanks to Takayuki Hirai.
+
+* #1753: C++, added missing support for more complex declarations.
+
+* #1700: Add ":caption:" option for "toctree".
+
+* #1742: ":name:" option is provided for "toctree", "code-block" and
+  "literalinclude" directives.
+
+* #1756: Incorrect section titles in search that was introduced from
+  1.3b3.
+
+* #1746: C++, fixed name lookup procedure, and added missing lookups
+  in declarations.
+
+* #1765: C++, fix old id generation to use fully qualified names.
+
+
+Documentation
+-------------
+
+* #1651: Add "vartype" field description for python domain.
+
+
+Release 1.3b3 (released Feb 24, 2015)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* Dependency requirement updates: docutils 0.11, Pygments 2.0
+
+* The "gettext_enables" config value has been renamed to
+  "gettext_additional_targets".
+
+* #1735: Use https://docs.python.org/ instead of "http" protocol. It
+  was used for "sphinx.ext.intersphinx" and some documentation.
+
+
+Features added
+--------------
+
+* #1346: Add new default theme;
+
+  * Add 'alabaster' theme.
+
+  * Add 'sphinx_rtd_theme' theme.
+
+  * The 'default' html theme has been renamed to 'classic'. 'default'
+    is still available, however it will emit notice a recommendation
+    that using new 'alabaster' theme.
+
+* Added "highlight_options" configuration value.
+
+* The "language" config value is now available in the HTML templates.
+
+* The "env-updated" event can now return a value, which is interpreted
+  as an iterable of additional docnames that need to be rewritten.
+
+* #772: Support for scoped and unscoped enums in C++. Enumerators in
+  unscoped enums are injected into the parent scope in addition to the
+  enum scope.
+
+* Add "todo_include_todos" config option to quickstart conf file,
+  handled as described in documentation.
+
+* HTML breadcrumb items tag has class "nav-item" and "nav-item-N"
+  (like nav-item-0, 1, 2...).
+
+* New option "sphinx-quickstart --use-make-mode" for generating
+  Makefile that use sphinx-build make-mode.
+
+* #1235: i18n: several node can be translated if it is set to
+  "gettext_additional_targets" in conf.py. Supported nodes are:
+
+  * 'literal-block'
+
+  * 'doctest-block'
+
+  * 'raw'
+
+  * 'image'
+
+* #1227: Add "html_scaled_image_link" config option to conf.py, to
+  control scaled image link.
+
+
+Bugs fixed
+----------
+
+* LaTeX writer now generates correct markup for cells spanning
+  multiple rows.
+
+* #1674: Do not crash if a module's "__all__" is not a list of
+  strings.
+
+* #1629: Use VerbatimBorderColor to add frame to code-block in LaTeX
+
+* On windows, make-mode didn't work on Win32 platform if sphinx was
+  invoked as "python sphinx-build.py".
+
+* #1687: linkcheck now treats 401 Unauthorized responses as "working".
+
+* #1690: toctrees with "glob" option now can also contain entries for
+  single documents with explicit title.
+
+* #1591: html search results for C++ elements now has correct
+  interpage links.
+
+* bizstyle theme: nested long title pages make long breadcrumb that
+  breaks page layout.
+
+* bizstyle theme: all breadcrumb items become 'Top' on some mobile
+  browser (iPhone5s safari).
+
+* #1722: restore "toctree()" template function behavior that was
+  changed at 1.3b1.
+
+* #1732: i18n: localized table caption raises exception.
+
+* #1718: ":numref:" does not work with capital letters in the label
+
+* #1630: resolve CSS conflicts, "div.container" css target for literal
+  block wrapper now renamed to "div.literal-block-wrapper".
+
+* "sphinx.util.pycompat" has been restored in its backwards-
+  compatibility; slated for removal in Sphinx 1.4.
+
+* #1719: LaTeX writer does not respect "numref_format" option in
+  captions
+
+
+Release 1.3b2 (released Dec 5, 2014)
+====================================
+
+
+Incompatible changes
+--------------------
+
+* update bundled ez_setup.py for setuptools-7.0 that requires Python
+  2.6 or later.
+
+
+Features added
+--------------
+
+* #1597: Added possibility to return a new template name from "html-
+  page-context".
+
+* PR#314, #1150: Configuration values are now checked for their type.
+  A warning is raised if the configured and the default value do not
+  have the same type and do not share a common non-trivial base class.
+
+
+Bugs fixed
+----------
+
+* PR#311: sphinx-quickstart does not work on python 3.4.
+
+* Fix >>:confval:`autodoc_docstring_signature`<< not working with
+  signatures in class docstrings.
+
+* Rebuilding cause crash unexpectedly when source files were added.
+
+* #1607: Fix a crash when building latexpdf with "howto" class
+
+* #1251: Fix again. Sections which depth are lower than :tocdepth:
+  should not be shown on localtoc sidebar.
+
+* make-mode didn't work on Win32 platform if sphinx was installed by
+  wheel package.
+
+
+Release 1.3b1 (released Oct 10, 2014)
+=====================================
+
+
+Incompatible changes
+--------------------
+
+* Dropped support for Python 2.5, 3.1 and 3.2.
+
+* Dropped support for docutils versions up to 0.9.
+
+* Removed the "sphinx.ext.oldcmarkup" extension.
+
+* The deprecated config values "exclude_trees", "exclude_dirnames" and
+  "unused_docs" have been removed.
+
+* A new node, "sphinx.addnodes.literal_strong", has been added, for
+  text that should appear literally (i.e. no smart quotes) in strong
+  font.  Custom writers will have to be adapted to handle this node.
+
+* PR#269, #1476: replace "<tt>" tag by "<code>". User customized
+  stylesheets should be updated If the css contain some styles for
+  "tt>" tag. Thanks to Takeshi Komiya.
+
+* #1543: "templates_path" is automatically added to "exclude_patterns"
+  to avoid reading autosummary rst templates in the templates
+  directory.
+
+* Custom domains should implement the new "Domain.resolve_any_xref"
+  method to make the "any" role work properly.
+
+* gettext builder: gettext doesn't emit uuid information to generated
+  pot files by default. Please set "True" to "gettext_uuid" to emit
+  uuid information. Additionally, if the "python-levenshtein" 3rd-
+  party package is installed, it will improve the calculation time.
+
+* gettext builder: disable extracting/apply 'index' node by default.
+  Please set 'index' to "gettext_enables" to enable extracting index
+  entries.
+
+* PR#307: Add frame to code-block in LaTeX. Thanks to Takeshi Komiya.
+
+
+Features added
+--------------
+
+* Add support for Python 3.4.
+
+* Add support for docutils 0.12
+
+* Added "sphinx.ext.napoleon" extension for NumPy and Google style
+  docstring support.
+
+* Added support for parallel reading (parsing) of source files with
+  the "sphinx-build -j" option.  Third-party extensions will need to
+  be checked for compatibility and may need to be adapted if they
+  store information in the build environment object.  See "env-merge-
+  info".
+
+* Added the "any" role that can be used to find a cross-reference of
+  *any* type in *any* domain.  Custom domains should implement the new
+  "Domain.resolve_any_xref" method to make this work properly.
+
+* Exception logs now contain the last 10 messages emitted by Sphinx.
+
+* Added support for extension versions (a string returned by
+  "setup()", these can be shown in the traceback log files).  Version
+  requirements for extensions can be specified in projects using the
+  new "needs_extensions" config value.
+
+* Changing the default role within a document with the >>:dudir
+  :`default-role`<< directive is now supported.
+
+* PR#214: Added stemming support for 14 languages, so that the built-
+  in document search can now handle these.  Thanks to Shibukawa
+  Yoshiki.
+
+* PR#296, PR#303, #76: numfig feature: Assign numbers to figures,
+  tables and code-blocks. This feature is configured with "numfig",
+  "numfig_secnum_depth" and "numfig_format". Also "numref" role is
+  available. Thanks to Takeshi Komiya.
+
+* PR#202: Allow "." and "~" prefixed references in ":param:" doc
+  fields for Python.
+
+* PR#184: Add "autodoc_mock_imports", allowing to mock imports of
+  external modules that need not be present when autodocumenting.
+
+* #925: Allow list-typed config values to be provided on the command
+  line, like "-D key=val1,val2".
+
+* #668: Allow line numbering of "code-block" and "literalinclude"
+  directives to start at an arbitrary line number, with a new "lineno-
+  start" option.
+
+* PR#172, PR#266: The "code-block" and "literalinclude" directives now
+  can have a "caption" option that shows a filename before the code in
+  the output. Thanks to Nasimul Haque, Takeshi Komiya.
+
+* Prompt for the document language in sphinx-quickstart.
+
+* PR#217: Added config values to suppress UUID and location
+  information in generated gettext catalogs.
+
+* PR#236, #1456: apidoc: Add a -M option to put module documentation
+  before submodule documentation. Thanks to Wes Turner and Luc Saffre.
+
+* #1434: Provide non-minified JS files for jquery.js and underscore.js
+  to clarify the source of the minified files.
+
+* PR#252, #1291: Windows color console support. Thanks to meu31.
+
+* PR#255: When generating latex references, also insert latex
+  target/anchor for the ids defined on the node. Thanks to Olivier
+  Heurtier.
+
+* PR#229: Allow registration of other translators. Thanks to Russell
+  Sim.
+
+* Add app.set_translator() API to register or override a Docutils
+  translator class like "html_translator_class".
+
+* PR#267, #1134: add 'diff' parameter to literalinclude. Thanks to
+  Richard Wall and WAKAYAMA shirou.
+
+* PR#272: Added 'bizstyle' theme. Thanks to Shoji KUMAGAI.
+
+* Automatically compile "*.mo" files from "*.po" files when
+  "gettext_auto_build" is True (default) and "*.po" is newer than
+  "*.mo" file.
+
+* #623: "sphinx.ext.viewcode" supports imported function/class
+  aliases.
+
+* PR#275: "sphinx.ext.intersphinx" supports multiple target for the
+  inventory. Thanks to Brigitta Sipocz.
+
+* PR#261: Added the "env-before-read-docs" event that can be connected
+  to modify the order of documents before they are read by the
+  environment.
+
+* #1284: Program options documented with "option" can now start with
+  "+".
+
+* PR#291: The caption of "code-block" is recognized as a title of ref
+  target. Thanks to Takeshi Komiya.
+
+* PR#298: Add new API: "add_latex_package()". Thanks to Takeshi
+  Komiya.
+
+* #1344: add "gettext_enables" to enable extracting 'index' to gettext
+  catalog output / applying translation catalog to generated
+  documentation.
+
+* PR#301, #1583: Allow the line numbering of the directive
+  "literalinclude" to match that of the included file, using a new
+  "lineno-match" option. Thanks to Jeppe Pihl.
+
+* PR#299: add various options to sphinx-quickstart. Quiet mode option
+  "--quiet" will skips wizard mode. Thanks to WAKAYAMA shirou.
+
+* #1623: Return types specified with ":rtype:" are now turned into
+  links if possible.
+
+
+Bugs fixed
+----------
+
+* #1438: Updated jQuery version from 1.8.3 to 1.11.1.
+
+* #1568: Fix a crash when a "centered" directive contains a reference.
+
+* Now sphinx.ext.autodoc works with python-2.5 again.
+
+* #1563: "add_search_language()" raises AssertionError for correct
+  type of argument. Thanks to rikoman.
+
+* #1174: Fix smart quotes being applied inside roles like "program" or
+  "makevar".
+
+* PR#235: comment db schema of websupport lacked a length of the
+  node_id field. Thanks to solos.
+
+* #1466,PR#241: Fix failure of the cpp domain parser to parse C+11
+  "variadic templates" declarations. Thanks to Victor Zverovich.
+
+* #1459,PR#244: Fix default mathjax js path point to "http://" that
+  cause mixed-content error on HTTPS server. Thanks to sbrandtb and
+  robo9k.
+
+* PR#157: autodoc remove spurious signatures from @property decorated
+  attributes. Thanks to David Ham.
+
+* PR#159: Add coverage targets to quickstart generated Makefile and
+  make.bat. Thanks to Matthias Troffaes.
+
+* #1251: When specifying toctree :numbered: option and :tocdepth:
+  metadata, sub section number that is larger depth than ":tocdepth:"
+  is shrunk.
+
+* PR#260: Encode underscore in citation labels for latex export.
+  Thanks to Lennart Fricke.
+
+* PR#264: Fix could not resolve xref for figure node with :name:
+  option. Thanks to Takeshi Komiya.
+
+* PR#265: Fix could not capture caption of graphviz node by xref.
+  Thanks to Takeshi Komiya.
+
+* PR#263, #1013, #1103: Rewrite of C++ domain. Thanks to Jakob Lykke
+  Andersen.
+
+  * Hyperlinks to all found nested names and template arguments
+    (#1103).
+
+  * Support for function types everywhere, e.g., in
+    std::function<bool(int, int)> (#1013).
+
+  * Support for virtual functions.
+
+  * Changed interpretation of function arguments to following standard
+    prototype declarations, i.e., void f(arg) means that arg is the
+    type of the argument, instead of it being the name.
+
+  * Updated tests.
+
+  * Updated documentation with elaborate description of what
+    declarations are supported and how the namespace declarations
+    influence declaration and cross-reference lookup.
+
+  * Index names may be different now. Elements are indexed by their
+    fully qualified name. It should be rather easy to change this
+    behaviour and potentially index by namespaces/classes as well.
+
+* PR#258, #939: Add dedent option for "code-block" and
+  "literalinclude". Thanks to Zafar Siddiqui.
+
+* PR#268: Fix numbering section does not work at singlehtml mode. It
+  still ad-hoc fix because there is a issue that section IDs are
+  conflicted. Thanks to Takeshi Komiya.
+
+* PR#273, #1536: Fix RuntimeError with numbered circular toctree.
+  Thanks to Takeshi Komiya.
+
+* PR#274: Set its URL as a default title value if URL appears in
+  toctree. Thanks to Takeshi Komiya.
+
+* PR#276, #1381: "rfc" and "pep" roles support custom link text.
+  Thanks to Takeshi Komiya.
+
+* PR#277, #1513: highlights for function pointers in argument list of
+  "c:function". Thanks to Takeshi Komiya.
+
+* PR#278: Fix section entries were shown twice if toctree has been put
+  under only directive. Thanks to Takeshi Komiya.
+
+* #1547: pgen2 tokenizer doesn't recognize "..." literal (Ellipsis for
+  py3).
+
+* PR#294: On LaTeX builder, wrap float environment on writing
+  literal_block to avoid separation of caption and body. Thanks to
+  Takeshi Komiya.
+
+* PR#295, #1520: "make.bat latexpdf" mechanism to "cd" back to the
+  current directory. Thanks to Peter Suter.
+
+* PR#297, #1571: Add imgpath property to all builders. It make easier
+  to develop builder extensions. Thanks to Takeshi Komiya.
+
+* #1584: Point to master doc in HTML "top" link.
+
+* #1585: Autosummary of modules broken in Sphinx-1.2.3.
+
+* #1610: Sphinx cause AttributeError when MeCab search option is
+  enabled and python-mecab is not installed.
+
+* #1674: Do not crash if a module's "__all__" is not a list of
+  strings.
+
+* #1673: Fix crashes with >>:confval:`nitpick_ignore`<< and ":doc:"
+  references.
+
+* #1686: ifconfig directive doesn't care about default config values.
+
+* #1642: Fix only one search result appearing in Chrome.
+
+
+Documentation
+-------------
+
+* Add clarification about the syntax of tags. ("doc/markup/misc.rst")
+
+
+Release 1.2.3 (released Sep 1, 2014)
+====================================
+
+
+Features added
+--------------
+
+* #1518: "sphinx-apidoc" command now has a "--version" option to show
+  version information and exit
+
+* New locales: Hebrew, European Portuguese, Vietnamese.
+
+
+Bugs fixed
+----------
+
+* #636: Keep straight single quotes in literal blocks in the LaTeX
+  build.
+
+* #1419: Generated i18n sphinx.js files are missing message catalog
+  entries from '.js_t' and '.html'. The issue was introduced from
+  Sphinx-1.1
+
+* #1363: Fix i18n: missing python domain's cross-references with
+  currentmodule directive or currentclass directive.
+
+* #1444: autosummary does not create the description from attributes
+  docstring.
+
+* #1457: In python3 environment, make linkcheck cause "Can't convert
+  'bytes' object to str implicitly" error when link target url has a
+  hash part. Thanks to Jorge_C.
+
+* #1467: Exception on Python3 if nonexistent method is specified by
+  automethod
+
+* #1441: autosummary can't handle nested classes correctly.
+
+* #1499: With non-callable "setup" in a conf.py, now sphinx-build
+  emits a user-friendly error message.
+
+* #1502: In autodoc, fix display of parameter defaults containing
+  backslashes.
+
+* #1226: autodoc, autosummary: importing setup.py by automodule will
+  invoke setup process and execute "sys.exit()". Now sphinx avoids
+  SystemExit exception and emits warnings without unexpected
+  termination.
+
+* #1503: py:function directive generate incorrectly signature when
+  specifying a default parameter with an empty list "[]". Thanks to
+  Geert Jansen.
+
+* #1508: Non-ASCII filename raise exception on make singlehtml, latex,
+  man, texinfo and changes.
+
+* #1531: On Python3 environment, docutils.conf with 'source_link=true'
+  in the general section cause type error.
+
+* PR#270, #1533: Non-ASCII docstring cause UnicodeDecodeError when
+  uses with inheritance-diagram directive. Thanks to WAKAYAMA shirou.
+
+* PR#281, PR#282, #1509: TODO extension not compatible with
+  websupport. Thanks to Takeshi Komiya.
+
+* #1477: gettext does not extract nodes.line in a table or list.
+
+* #1544: "make text" generates wrong table when it has empty table
+  cells.
+
+* #1522: Footnotes from table get displayed twice in LaTeX. This
+  problem has been appeared from Sphinx-1.2.1 by #949.
+
+* #508: Sphinx every time exit with zero when is invoked from setup.py
+  command. ex. "python setup.py build_sphinx -b doctest" return zero
+  even if doctest failed.
+
+
+Release 1.2.2 (released Mar 2, 2014)
+====================================
+
+
+Bugs fixed
+----------
+
+* PR#211: When checking for existence of the "html_logo" file, check
+  the full relative path and not the basename.
+
+* PR#212: Fix traceback with autodoc and "__init__" methods without
+  docstring.
+
+* PR#213: Fix a missing import in the setup command.
+
+* #1357: Option names documented by "option" are now again allowed to
+  not start with a dash or slash, and referencing them will work
+  correctly.
+
+* #1358: Fix handling of image paths outside of the source directory
+  when using the "wildcard" style reference.
+
+* #1374: Fix for autosummary generating overly-long summaries if first
+  line doesn't end with a period.
+
+* #1383: Fix Python 2.5 compatibility of sphinx-apidoc.
+
+* #1391: Actually prevent using "pngmath" and "mathjax" extensions at
+  the same time in sphinx-quickstart.
+
+* #1386: Fix bug preventing more than one theme being added by the
+  entry point mechanism.
+
+* #1370: Ignore "toctree" nodes in text writer, instead of raising.
+
+* #1364: Fix 'make gettext' fails when the '.. todolist::' directive
+  is present.
+
+* #1367: Fix a change of PR#96 that break
+  sphinx.util.docfields.Field.make_field interface/behavior for "item"
+  argument usage.
+
+
+Documentation
+-------------
+
+* Extended the documentation about building extensions.
+
+
+Release 1.2.1 (released Jan 19, 2014)
+=====================================
+
+
+Bugs fixed
+----------
+
+* #1335: Fix autosummary template overloading with exclamation prefix
+  like "{% extends "!autosummary/class.rst" %}" cause infinite
+  recursive function call. This was caused by PR#181.
+
+* #1337: Fix autodoc with "autoclass_content="both"" uses useless
+  "object.__init__" docstring when class does not have "__init__".
+  This was caused by a change for #1138.
+
+* #1340: Can't search alphabetical words on the HTML quick search
+  generated with language='ja'.
+
+* #1319: Do not crash if the "html_logo" file does not exist.
+
+* #603: Do not use the HTML-ized title for building the search index
+  (that resulted in "literal" being found on every page with a literal
+  in the title).
+
+* #751: Allow production lists longer than a page in LaTeX by using
+  longtable.
+
+* #764: Always look for stopwords lowercased in JS search.
+
+* #814: autodoc: Guard against strange type objects that don't have
+  "__bases__".
+
+* #932: autodoc: Do not crash if "__doc__" is not a string.
+
+* #933: Do not crash if an "option" value is malformed (contains
+  spaces but no option name).
+
+* #908: On Python 3, handle error messages from LaTeX correctly in the
+  pngmath extension.
+
+* #943: In autosummary, recognize "first sentences" to pull from the
+  docstring if they contain uppercase letters.
+
+* #923: Take the entire LaTeX document into account when caching
+  pngmath-generated images.  This rebuilds them correctly when
+  "pngmath_latex_preamble" changes.
+
+* #901: Emit a warning when using docutils' new "math" markup without
+  a Sphinx math extension active.
+
+* #845: In code blocks, when the selected lexer fails, display line
+  numbers nevertheless if configured.
+
+* #929: Support parsed-literal blocks in LaTeX output correctly.
+
+* #949: Update the tabulary.sty packed with Sphinx.
+
+* #1050: Add anonymous labels into "objects.inv" to be referenced via
+  "intersphinx".
+
+* #1095: Fix print-media stylesheet being included always in the
+  "scrolls" theme.
+
+* #1085: Fix current classname not getting set if class description
+  has ":noindex:" set.
+
+* #1181: Report option errors in autodoc directives more gracefully.
+
+* #1155: Fix autodocumenting C-defined methods as attributes in Python
+  3.
+
+* #1233: Allow finding both Python classes and exceptions with the
+  "class" and "exc" roles in intersphinx.
+
+* #1198: Allow "image" for the "figwidth" option of the
+  >>:dudir:`figure`<< directive as documented by docutils.
+
+* #1152: Fix pycode parsing errors of Python 3 code by including two
+  grammar versions for Python 2 and 3, and loading the appropriate
+  version for the running Python version.
+
+* #1017: Be helpful and tell the user when the argument to "option"
+  does not match the required format.
+
+* #1345: Fix two bugs with "nitpick_ignore"; now you don't have to
+  remove the store environment for changes to have effect.
+
+* #1072: In the JS search, fix issues searching for upper-cased words
+  by lowercasing words before stemming.
+
+* #1299: Make behavior of the "math" directive more consistent and
+  avoid producing empty environments in LaTeX output.
+
+* #1308: Strip HTML tags from the content of "raw" nodes before
+  feeding it to the search indexer.
+
+* #1249: Fix duplicate LaTeX page numbering for manual documents.
+
+* #1292: In the linkchecker, retry HEAD requests when denied by HTTP
+  405. Also make the redirect code apparent and tweak the output a bit
+  to be more obvious.
+
+* #1285: Avoid name clashes between C domain objects and section
+  titles.
+
+* #848: Always take the newest code in incremental rebuilds with the
+  "sphinx.ext.viewcode" extension.
+
+* #979, #1266: Fix exclude handling in "sphinx-apidoc".
+
+* #1302: Fix regression in "sphinx.ext.inheritance_diagram" when
+  documenting classes that can't be pickled.
+
+* #1316: Remove hard-coded "font-face" resources from epub theme.
+
+* #1329: Fix traceback with empty translation msgstr in .po files.
+
+* #1300: Fix references not working in translated documents in some
+  instances.
+
+* #1283: Fix a bug in the detection of changed files that would try to
+  access doctrees of deleted documents.
+
+* #1330: Fix "exclude_patterns" behavior with subdirectories in the
+  "html_static_path".
+
+* #1323: Fix emitting empty "<ul>" tags in the HTML writer, which is
+  not valid HTML.
+
+* #1147: Don't emit a sidebar search box in the "singlehtml" builder.
+
+
+Documentation
+-------------
+
+* #1325: Added a "Intersphinx" tutorial section. ("doc/tutorial.rst")
+
+
+Release 1.2 (released Dec 10, 2013)
+===================================
+
+
+Features added
+--------------
+
+* Added "sphinx.version_info" tuple for programmatic checking of the
+  Sphinx version.
+
+
+Incompatible changes
+--------------------
+
+* Removed the "sphinx.ext.refcounting" extension -- it is very
+  specific to CPython and has no place in the main distribution.
+
+
+Bugs fixed
+----------
+
+* Restore "versionmodified" CSS class for versionadded/changed and
+  deprecated directives.
+
+* PR#181: Fix "html_theme_path = ['.']" is a trigger of rebuild all
+  documents always (This change keeps the current "theme changes cause
+  a rebuild" feature).
+
+* #1296: Fix invalid charset in HTML help generated HTML files for
+  default locale.
+
+* PR#190: Fix gettext does not extract figure caption and rubric title
+  inside other blocks. Thanks to Michael Schlenker.
+
+* PR#176: Make sure setup_command test can always import Sphinx.
+  Thanks to Dmitry Shachnev.
+
+* #1311: Fix test_linkcode.test_html fails with C locale and Python 3.
+
+* #1269: Fix ResourceWarnings with Python 3.2 or later.
+
+* #1138: Fix: When "autodoc_docstring_signature = True" and
+  "autoclass_content = 'init'" or "'both'", __init__ line should be
+  removed from class documentation.
+
+
+Release 1.2 beta3 (released Oct 3, 2013)
+========================================
+
+
+Features added
+--------------
+
+* The Sphinx error log files will now include a list of the loaded
+  extensions for help in debugging.
+
+
+Incompatible changes
+--------------------
+
+* PR#154: Remove "sphinx" prefix from LaTeX class name except
+  'sphinxmanual' and 'sphinxhowto'. Now you can use your custom
+  document class without 'sphinx' prefix. Thanks to Erik B.
+
+
+Bugs fixed
+----------
+
+* #1265: Fix i18n: crash when translating a section name that is
+  pointed to from a named target.
+
+* A wrong condition broke the search feature on first page that is
+  usually index.rst.  This issue was introduced in 1.2b1.
+
+* #703: When Sphinx can't decode filenames with non-ASCII characters,
+  Sphinx now catches UnicodeError and will continue if possible
+  instead of raising the exception.
+
+
+Release 1.2 beta2 (released Sep 17, 2013)
+=========================================
+
+
+Features added
+--------------
+
+* "apidoc" now ignores "_private" modules by default, and has an
+  option "-P" to include them.
+
+* "apidoc" now has an option to not generate headings for packages and
+  modules, for the case that the module docstring already includes a
+  reST heading.
+
+* PR#161: "apidoc" can now write each module to a standalone page
+  instead of combining all modules in a package on one page.
+
+* Builders: rebuild i18n target document when catalog updated.
+
+* Support docutils.conf 'writers' and 'html4css1 writer' section in
+  the HTML writer.  The latex, manpage and texinfo writers also
+  support their respective 'writers' sections.
+
+* The new "html_extra_path" config value allows to specify directories
+  with files that should be copied directly to the HTML output
+  directory.
+
+* Autodoc directives for module data and attributes now support an
+  "annotation" option, so that the default display of the
+  data/attribute value can be overridden.
+
+* PR#136: Autodoc directives now support an "imported-members" option
+  to include members imported from different modules.
+
+* New locales: Macedonian, Sinhala, Indonesian.
+
+* Theme package collection by using setuptools plugin mechanism.
+
+
+Incompatible changes
+--------------------
+
+* PR#144, #1182: Force timezone offset to LocalTimeZone on POT-
+  Creation-Date that was generated by gettext builder. Thanks to
+  masklinn and Jakub Wilk.
+
+
+Bugs fixed
+----------
+
+* PR#132: Updated jQuery version to 1.8.3.
+
+* PR#141, #982: Avoid crash when writing PNG file using Python 3.
+  Thanks to Marcin Wojdyr.
+
+* PR#145: In parallel builds, sphinx drops second document file to
+  write. Thanks to tychoish.
+
+* PR#151: Some styling updates to tables in LaTeX.
+
+* PR#153: The "extensions" config value can now be overridden.
+
+* PR#155: Added support for some C++11 function qualifiers.
+
+* Fix: 'make gettext' caused UnicodeDecodeError when templates contain
+  utf-8 encoded strings.
+
+* #828: use inspect.getfullargspec() to be able to document functions
+  with keyword-only arguments on Python 3.
+
+* #1090: Fix i18n: multiple cross references (term, ref, doc) in the
+  same line return the same link.
+
+* #1157: Combination of 'globaltoc.html' and hidden toctree caused
+  exception.
+
+* #1159: fix wrong generation of objects inventory for Python modules,
+  and add a workaround in intersphinx to fix handling of affected
+  inventories.
+
+* #1160: Citation target missing caused an AssertionError.
+
+* #1162, PR#139: singlehtml builder didn't copy images to _images/.
+
+* #1173: Adjust setup.py dependencies because Jinja2 2.7 discontinued
+  compatibility with Python < 3.3 and Python < 2.6.  Thanks to
+  Alexander Dupuy.
+
+* #1185: Don't crash when a Python module has a wrong or no encoding
+  declared, and non-ASCII characters are included.
+
+* #1188: sphinx-quickstart raises UnicodeEncodeError if "Project
+  version" includes non-ASCII characters.
+
+* #1189: "Title underline is too short" WARNING is given when using
+  fullwidth characters to "Project name" on quickstart.
+
+* #1190: Output TeX/texinfo/man filename has no basename (only
+  extension) when using non-ASCII characters in the "Project name" on
+  quickstart.
+
+* #1192: Fix escaping problem for hyperlinks in the manpage writer.
+
+* #1193: Fix i18n: multiple link references in the same line return
+  the same link.
+
+* #1176: Fix i18n: footnote reference number missing for auto numbered
+  named footnote and auto symbol footnote.
+
+* PR#146,#1172: Fix ZeroDivisionError in parallel builds. Thanks to
+  tychoish.
+
+* #1204: Fix wrong generation of links to local intersphinx targets.
+
+* #1206: Fix i18n: gettext did not translate admonition directive's
+  title.
+
+* #1232: Sphinx generated broken ePub files on Windows.
+
+* #1259: Guard the debug output call when emitting events; to prevent
+  the repr() implementation of arbitrary objects causing build
+  failures.
+
+* #1142: Fix NFC/NFD normalizing problem of rst filename on Mac OS X.
+
+* #1234: Ignoring the string consists only of white-space characters.
+
+
+Release 1.2 beta1 (released Mar 31, 2013)
+=========================================
+
+
+Incompatible changes
+--------------------
+
+* Removed "sphinx.util.compat.directive_dwim()" and
+  "sphinx.roles.xfileref_role()" which were deprecated since version
+  1.0.
+
+* PR#122: the files given in "latex_additional_files" now override TeX
+  files included by Sphinx, such as "sphinx.sty".
+
+* PR#124: the node generated by "versionadded", "versionchanged" and
+  "deprecated" directives now includes all added markup (such as "New
+  in version X") as child nodes, and no additional text must be
+  generated by writers.
+
+* PR#99: the "seealso" directive now generates admonition nodes
+  instead of the custom "seealso" node.
+
+
+Features added
+--------------
+
+* Markup
+
+  * The "toctree" directive and the "toctree()" template function now
+    have an "includehidden" option that includes hidden toctree
+    entries (bugs #790 and #1047).  A bug in the "maxdepth" option for
+    the "toctree()" template function has been fixed (bug #1046).
+
+  * PR#99: Strip down seealso directives to normal admonitions.  This
+    removes their unusual CSS classes (admonition-see-also),
+    inconsistent LaTeX admonition title ("See Also" instead of "See
+    also"), and spurious indentation in the text builder.
+
+* HTML builder
+
+  * #783: Create a link to full size image if it is scaled with width
+    or height.
+
+  * #1067: Improve the ordering of the JavaScript search results:
+    matches in titles come before matches in full text, and object
+    results are better categorized.  Also implement a pluggable search
+    scorer.
+
+  * #1053: The "rightsidebar" and "collapsiblesidebar" HTML theme
+    options now work together.
+
+  * Update to jQuery 1.7.1 and Underscore.js 1.3.1.
+
+* Texinfo builder
+
+  * An "Index" node is no longer added when there are no entries.
+
+  * "deffn" categories are no longer capitalized if they contain
+    capital letters.
+
+  * "desc_annotation" nodes are now rendered.
+
+  * "strong" and "emphasis" nodes are now formatted like "literal"s.
+    The reason for this is because the standard Texinfo markup
+    ("*strong*" and "_emphasis_") resulted in confusing output due to
+    the common usage of using these constructs for documenting
+    parameter names.
+
+  * Field lists formatting has been tweaked to better display "Info
+    field lists".
+
+  * "system_message" and "problematic" nodes are now formatted in a
+    similar fashion as done by the text builder.
+
+  * "en-dash" and "em-dash" conversion of hyphens is no longer
+    performed in option directive signatures.
+
+  * "@ref" is now used instead of "@pxref" for cross-references which
+    prevents the word "see" from being added before the link (does not
+    affect the Info output).
+
+  * The "@finalout" command has been added for better TeX output.
+
+  * "transition" nodes are now formatted using underscores ("_")
+    instead of asterisks ("*").
+
+  * The default value for the "paragraphindent" has been changed from
+    2 to 0 meaning that paragraphs are no longer indented by default.
+
+  * #1110: A new configuration value "texinfo_no_detailmenu" has been
+    added for controlling whether a "@detailmenu" is added in the
+    "Top" node's menu.
+
+  * Detailed menus are no longer created except for the "Top" node.
+
+  * Fixed an issue where duplicate domain indices would result in
+    invalid output.
+
+* LaTeX builder:
+
+  * PR#115: Add "'transition'" item in "latex_elements" for
+    customizing how transitions are displayed. Thanks to Jeff Klukas.
+
+  * PR#114: The LaTeX writer now includes the "cmap" package by
+    default. The "'cmappkg'" item in "latex_elements" can be used to
+    control this. Thanks to Dmitry Shachnev.
+
+  * The "'fontpkg'" item in "latex_elements" now defaults to "''" when
+    the >>:confval:`language`<< uses the Cyrillic script.  Suggested
+    by Dmitry Shachnev.
+
+  * The "latex_documents", "texinfo_documents", and "man_pages"
+    configuration values will be set to default values based on the
+    >>:confval:`master_doc`<< if not explicitly set in "conf.py".
+    Previously, if these values were not set, no output would be
+    generated by their respective builders.
+
+* Internationalization:
+
+  * Add i18n capabilities for custom templates.  For example: The
+    Sphinx reference documentation in doc directory provides a
+    "sphinx.pot" file with message strings from
+    "doc/_templates/*.html" when using "make gettext".
+
+  * PR#61,#703: Add support for non-ASCII filename handling.
+
+* Other builders:
+
+  * Added the Docutils-native XML and pseudo-XML builders.  See
+    "XMLBuilder" and "PseudoXMLBuilder".
+
+  * PR#45: The linkcheck builder now checks "#anchor"s for existence.
+
+  * PR#123, #1106: Add "epub_use_index" configuration value.  If
+    provided, it will be used instead of "html_use_index" for epub
+    builder.
+
+  * PR#126: Add "epub_tocscope" configuration value. The setting
+    controls the generation of the epub toc. The user can now also
+    include hidden toc entries.
+
+  * PR#112: Add "epub_show_urls" configuration value.
+
+* Extensions:
+
+  * PR#52: "special_members" flag to autodoc now behaves like
+    "members".
+
+  * PR#47: Added "sphinx.ext.linkcode" extension.
+
+  * PR#25: In inheritance diagrams, the first line of the class
+    docstring is now the tooltip for the class.
+
+* Command-line interfaces:
+
+  * PR#75: Added "--follow-links" option to sphinx-apidoc.
+
+  * #869: sphinx-build now has the option "-T" for printing the full
+    traceback after an unhandled exception.
+
+  * sphinx-build now supports the standard "--help" and "--version"
+    options.
+
+  * sphinx-build now provides more specific error messages when called
+    with invalid options or arguments.
+
+  * sphinx-build now has a verbose option "-v" which can be repeated
+    for greater effect.  A single occurrence provides a slightly more
+    verbose output than normal.  Two or more occurrences of this
+    option provides more detailed output which may be useful for
+    debugging.
+
+* Locales:
+
+  * PR#74: Fix some Russian translation.
+
+  * PR#54: Added Norwegian bokmaal translation.
+
+  * PR#35: Added Slovak translation.
+
+  * PR#28: Added Hungarian translation.
+
+  * #1113: Add Hebrew locale.
+
+  * #1097: Add Basque locale.
+
+  * #1037: Fix typos in Polish translation. Thanks to Jakub Wilk.
+
+  * #1012: Update Estonian translation.
+
+* Optimizations:
+
+  * Speed up building the search index by caching the results of the
+    word stemming routines.  Saves about 20 seconds when building the
+    Python documentation.
+
+  * PR#108: Add experimental support for parallel building with a new
+    "sphinx-build -j" option.
+
+
+Documentation
+-------------
+
+* PR#88: Added the "Sphinx Developer's Guide" ("doc/devguide.rst")
+  which outlines the basic development process of the Sphinx project.
+
+* Added a detailed "Installing Sphinx" document ("doc/install.rst").
+
+
+Bugs fixed
+----------
+
+* PR#124: Fix paragraphs in versionmodified are ignored when it has no
+  dangling paragraphs.  Fix wrong html output (nested "<p>" tag).  Fix
+  versionmodified is not translatable.  Thanks to Nozomu Kaneko.
+
+* PR#111: Respect add_autodoc_attrgetter() even when inherited-members
+  is set. Thanks to A. Jesse Jiryu Davis.
+
+* PR#97: Fix footnote handling in translated documents.
+
+* Fix text writer not handling visit_legend for figure directive
+  contents.
+
+* Fix text builder not respecting wide/fullwidth characters: title
+  underline width, table layout width and text wrap width.
+
+* Fix leading space in LaTeX table header cells.
+
+* #1132: Fix LaTeX table output for multi-row cells in the first
+  column.
+
+* #1128: Fix Unicode errors when trying to format time strings with a
+  non-standard locale.
+
+* #1127: Fix traceback when autodoc tries to tokenize a non-Python
+  file.
+
+* #1126: Fix double-hyphen to en-dash conversion in wrong places such
+  as command-line option names in LaTeX.
+
+* #1123: Allow whitespaces in filenames given to "literalinclude".
+
+* #1120: Added improvements about i18n for themes "basic", "haiku" and
+  "scrolls" that Sphinx built-in. Thanks to Leonardo J. Caballero G.
+
+* #1118: Updated Spanish translation. Thanks to Leonardo J. Caballero
+  G.
+
+* #1117: Handle .pyx files in sphinx-apidoc.
+
+* #1112: Avoid duplicate download files when referenced from documents
+  in different ways (absolute/relative).
+
+* #1111: Fix failure to find uppercase words in search when
+  "html_search_language" is 'ja'. Thanks to Tomo Saito.
+
+* #1108: The text writer now correctly numbers enumerated lists with
+  non-default start values (based on patch by Ewan Edwards).
+
+* #1102: Support multi-context "with" statements in autodoc.
+
+* #1090: Fix gettext not extracting glossary terms.
+
+* #1074: Add environment version info to the generated search index to
+  avoid compatibility issues with old builds.
+
+* #1070: Avoid un-pickling issues when running Python 3 and the saved
+  environment was created under Python 2.
+
+* #1069: Fixed error caused when autodoc would try to format
+  signatures of "partial" functions without keyword arguments (patch
+  by Artur Gaspar).
+
+* #1062: sphinx.ext.autodoc use __init__ method signature for class
+  signature.
+
+* #1055: Fix web support with relative path to source directory.
+
+* #1043: Fix sphinx-quickstart asking again for yes/no questions
+  because "input()" returns values with an extra 'r' on Python 3.2.0 +
+  Windows. Thanks to Régis Décamps.
+
+* #1041: Fix failure of the cpp domain parser to parse a const type
+  with a modifier.
+
+* #1038: Fix failure of the cpp domain parser to parse C+11 "static
+  constexpr" declarations.  Thanks to Jakub Wilk.
+
+* #1029: Fix intersphinx_mapping values not being stable if the
+  mapping has plural key/value set with Python 3.3.
+
+* #1028: Fix line block output in the text builder.
+
+* #1024: Improve Makefile/make.bat error message if Sphinx is not
+  found. Thanks to Anatoly Techtonik.
+
+* #1018: Fix "container" directive handling in the text builder.
+
+* #1015: Stop overriding jQuery contains() in the JavaScript.
+
+* #1010: Make pngmath images transparent by default; IE7+ should
+  handle it.
+
+* #1008: Fix test failures with Python 3.3.
+
+* #995: Fix table-of-contents and page numbering for the LaTeX "howto"
+  class.
+
+* #976: Fix gettext does not extract index entries.
+
+* PR#72: #975: Fix gettext not extracting definition terms before
+  docutils 0.10.
+
+* #961: Fix LaTeX output for triple quotes in code snippets.
+
+* #958: Do not preserve "environment.pickle" after a failed build.
+
+* #955: Fix i18n transformation.
+
+* #940: Fix gettext does not extract figure caption.
+
+* #920: Fix PIL packaging issue that allowed to import "Image" without
+  PIL namespace.  Thanks to Marc Schlaich.
+
+* #723: Fix the search function on local files in WebKit based
+  browsers.
+
+* #440: Fix coarse timestamp resolution in some filesystem generating
+  a wrong list of outdated files.
+
+
+Release 1.1.3 (Mar 10, 2012)
+============================
+
+* PR#40: Fix "safe_repr" function to decode bytestrings with non-ASCII
+  characters correctly.
+
+* PR#37: Allow configuring sphinx-apidoc via "SPHINX_APIDOC_OPTIONS".
+
+* PR#34: Restore Python 2.4 compatibility.
+
+* PR#36: Make the "bibliography to TOC" fix in LaTeX output specific
+  to the document class.
+
+* #695: When the highlight language "python" is specified explicitly,
+  do not try to parse the code to recognize non-Python snippets.
+
+* #859: Fix exception under certain circumstances when not finding
+  appropriate objects to link to.
+
+* #860: Do not crash when encountering invalid doctest examples, just
+  emit a warning.
+
+* #864: Fix crash with some settings of "modindex_common_prefix".
+
+* #862: Fix handling of "-D" and "-A" options on Python 3.
+
+* #851: Recognize and warn about circular toctrees, instead of running
+  into recursion errors.
+
+* #853: Restore compatibility with docutils trunk.
+
+* #852: Fix HtmlHelp index entry links again.
+
+* #854: Fix inheritance_diagram raising attribute errors on builtins.
+
+* #832: Fix crashes when putting comments or lone terms in a glossary.
+
+* #834, #818: Fix HTML help language/encoding mapping for all Sphinx
+  supported languages.
+
+* #844: Fix crashes when dealing with Unicode output in doctest
+  extension.
+
+* #831: Provide "--project" flag in setup_command as advertised.
+
+* #875: Fix reading config files under Python 3.
+
+* #876: Fix quickstart test under Python 3.
+
+* #870: Fix spurious KeyErrors when removing documents.
+
+* #892: Fix single-HTML builder misbehaving with the master document
+  in a subdirectory.
+
+* #873: Fix assertion errors with empty "only" directives.
+
+* #816: Fix encoding issues in the Qt help builder.
+
+
+Release 1.1.2 (Nov 1, 2011) -- 1.1.1 is a silly version number anyway!
+======================================================================
+
+* #809: Include custom fixers in the source distribution.
+
+
+Release 1.1.1 (Nov 1, 2011)
+===========================
+
+* #791: Fix QtHelp, DevHelp and HtmlHelp index entry links.
+
+* #792: Include "sphinx-apidoc" in the source distribution.
+
+* #797: Don't crash on a misformatted glossary.
+
+* #801: Make intersphinx work properly without SSL support.
+
+* #805: Make the "Sphinx.add_index_to_domain" method work correctly.
+
+* #780: Fix Python 2.5 compatibility.
+
+
+Release 1.1 (Oct 9, 2011)
+=========================
+
+
+Incompatible changes
+--------------------
+
+* The "py:module" directive doesn't output its "platform" option value
+  anymore.  (It was the only thing that the directive did output, and
+  therefore quite inconsistent.)
+
+* Removed support for old dependency versions; requirements are now:
+
+  * Pygments >= 1.2
+
+  * Docutils >= 0.7
+
+  * Jinja2   >= 2.3
+
+
+Features added
+--------------
+
+* Added Python 3.x support.
+
+* New builders and subsystems:
+
+  * Added a Texinfo builder.
+
+  * Added i18n support for content, a "gettext" builder and related
+    utilities.
+
+  * Added the "websupport" library and builder.
+
+  * #98: Added a "sphinx-apidoc" script that autogenerates a hierarchy
+    of source files containing autodoc directives to document modules
+    and packages.
+
+  * #273: Add an API for adding full-text search support for languages
+    other than English.  Add support for Japanese.
+
+* Markup:
+
+  * #138: Added an "index" role, to make inline index entries.
+
+  * #454: Added more index markup capabilities: marking see/seealso
+    entries, and main entries for a given key.
+
+  * #460: Allowed limiting the depth of section numbers for HTML using
+    the "toctree"'s "numbered" option.
+
+  * #586: Implemented improved "glossary" markup which allows multiple
+    terms per definition.
+
+  * #478: Added "py:decorator" directive to describe decorators.
+
+  * C++ domain now supports array definitions.
+
+  * C++ domain now supports doc fields (":param x:" inside
+    directives).
+
+  * Section headings in "only" directives are now correctly handled.
+
+  * Added "emphasize-lines" option to source code directives.
+
+  * #678: C++ domain now supports superclasses.
+
+* HTML builder:
+
+  * Added "pyramid" theme.
+
+  * #559: "html_add_permalinks" is now a string giving the text to
+    display in permalinks.
+
+  * #259: HTML table rows now have even/odd CSS classes to enable
+    "Zebra styling".
+
+  * #554: Add theme option "sidebarwidth" to the basic theme.
+
+* Other builders:
+
+  * #516: Added new value of the "latex_show_urls" option to show the
+    URLs in footnotes.
+
+  * #209: Added "text_newlines" and "text_sectionchars" config values.
+
+  * Added "man_show_urls" config value.
+
+  * #472: linkcheck builder: Check links in parallel, use HTTP HEAD
+    requests and allow configuring the timeout.  New config values:
+    "linkcheck_timeout" and "linkcheck_workers".
+
+  * #521: Added "linkcheck_ignore" config value.
+
+  * #28: Support row/colspans in tables in the LaTeX builder.
+
+* Configuration and extensibility:
+
+  * #537: Added "nitpick_ignore".
+
+  * #306: Added >>:event:`env-get-outdated`<< event.
+
+  * "Application.add_stylesheet()" now accepts full URIs.
+
+* Autodoc:
+
+  * #564: Add "autodoc_docstring_signature".  When enabled (the
+    default), autodoc retrieves the signature from the first line of
+    the docstring, if it is found there.
+
+  * #176: Provide "private-members" option for autodoc directives.
+
+  * #520: Provide "special-members" option for autodoc directives.
+
+  * #431: Doc comments for attributes can now be given on the same
+    line as the assignment.
+
+  * #437: autodoc now shows values of class data attributes.
+
+  * autodoc now supports documenting the signatures of
+    "functools.partial" objects.
+
+* Other extensions:
+
+  * Added the "sphinx.ext.mathjax" extension.
+
+  * #443: Allow referencing external graphviz files.
+
+  * Added "inline" option to graphviz directives, and fixed the
+    default (block-style) in LaTeX output.
+
+  * #590: Added "caption" option to graphviz directives.
+
+  * #553: Added "testcleanup" blocks in the doctest extension.
+
+  * #594: "trim_doctest_flags" now also removes "<BLANKLINE>"
+    indicators.
+
+  * #367: Added automatic exclusion of hidden members in inheritance
+    diagrams, and an option to selectively enable it.
+
+  * Added "pngmath_add_tooltips".
+
+  * The math extension displaymath directives now support "name" in
+    addition to "label" for giving the equation label, for
+    compatibility with Docutils.
+
+* New locales:
+
+  * #221: Added Swedish locale.
+
+  * #526: Added Iranian locale.
+
+  * #694: Added Latvian locale.
+
+  * Added Nepali locale.
+
+  * #714: Added Korean locale.
+
+  * #766: Added Estonian locale.
+
+* Bugs fixed:
+
+  * #778: Fix "hide search matches" link on pages linked by search.
+
+  * Fix the source positions referenced by the "viewcode" extension.
+
+
+Release 1.0.8 (Sep 23, 2011)
+============================
+
+* #627: Fix tracebacks for AttributeErrors in autosummary generation.
+
+* Fix the "abbr" role when the abbreviation has newlines in it.
+
+* #727: Fix the links to search results with custom object types.
+
+* #648: Fix line numbers reported in warnings about undefined
+  references.
+
+* #696, #666: Fix C++ array definitions and template arguments that
+  are not type names.
+
+* #633: Allow footnotes in section headers in LaTeX output.
+
+* #616: Allow keywords to be linked via intersphinx.
+
+* #613: Allow Unicode characters in production list token names.
+
+* #720: Add dummy visitors for graphviz nodes for text and man.
+
+* #704: Fix image file duplication bug.
+
+* #677: Fix parsing of multiple signatures in C++ domain.
+
+* #637: Ignore Emacs lock files when looking for source files.
+
+* #544: Allow .pyw extension for importable modules in autodoc.
+
+* #700: Use "$(MAKE)" in quickstart-generated Makefiles.
+
+* #734: Make sidebar search box width consistent in browsers.
+
+* #644: Fix spacing of centered figures in HTML output.
+
+* #767: Safely encode SphinxError messages when printing them to
+  sys.stderr.
+
+* #611: Fix LaTeX output error with a document with no sections but a
+  link target.
+
+* Correctly treat built-in method descriptors as methods in autodoc.
+
+* #706: Stop monkeypatching the Python textwrap module.
+
+* #657: viewcode now works correctly with source files that have non-
+  ASCII encoding.
+
+* #669: Respect the "noindex" flag option in py:module directives.
+
+* #675: Fix IndexErrors when including nonexisting lines with
+  "literalinclude".
+
+* #676: Respect custom function/method parameter separator strings.
+
+* #682: Fix JS incompatibility with jQuery >= 1.5.
+
+* #693: Fix double encoding done when writing HTMLHelp .hhk files.
+
+* #647: Do not apply SmartyPants in parsed-literal blocks.
+
+* C++ domain now supports array definitions.
+
+
+Release 1.0.7 (Jan 15, 2011)
+============================
+
+* #347: Fix wrong generation of directives of static methods in
+  autosummary.
+
+* #599: Import PIL as "from PIL import Image".
+
+* #558: Fix longtables with captions in LaTeX output.
+
+* Make token references work as hyperlinks again in LaTeX output.
+
+* #572: Show warnings by default when reference labels cannot be
+  found.
+
+* #536: Include line number when complaining about missing reference
+  targets in nitpicky mode.
+
+* #590: Fix inline display of graphviz diagrams in LaTeX output.
+
+* #589: Build using app.build() in setup command.
+
+* Fix a bug in the inheritance diagram exception that caused base
+  classes to be skipped if one of them is a builtin.
+
+* Fix general index links for C++ domain objects.
+
+* #332: Make admonition boundaries in LaTeX output visible.
+
+* #573: Fix KeyErrors occurring on rebuild after removing a file.
+
+* Fix a traceback when removing files with globbed toctrees.
+
+* If an autodoc object cannot be imported, always re-read the document
+  containing the directive on next build.
+
+* If an autodoc object cannot be imported, show the full traceback of
+  the import error.
+
+* Fix a bug where the removal of download files and images wasn't
+  noticed.
+
+* #571: Implement "~" cross-reference prefix for the C domain.
+
+* Fix regression of LaTeX output with the fix of #556.
+
+* #568: Fix lookup of class attribute documentation on descriptors so
+  that comment documentation now works.
+
+* Fix traceback with "only" directives preceded by targets.
+
+* Fix tracebacks occurring for duplicate C++ domain objects.
+
+* Fix JavaScript domain links to objects with "$" in their name.
+
+
+Release 1.0.6 (Jan 04, 2011)
+============================
+
+* #581: Fix traceback in Python domain for empty cross-reference
+  targets.
+
+* #283: Fix literal block display issues on Chrome browsers.
+
+* #383, #148: Support sorting a limited range of accented characters
+  in the general index and the glossary.
+
+* #570: Try decoding "-D" and "-A" command-line arguments with the
+  locale's preferred encoding.
+
+* #528: Observe "locale_dirs" when looking for the JS translations
+  file.
+
+* #574: Add special code for better support of Japanese documents in
+  the LaTeX builder.
+
+* Regression of #77: If there is only one parameter given with
+  ":param:" markup, the bullet list is now suppressed again.
+
+* #556: Fix missing paragraph breaks in LaTeX output in certain
+  situations.
+
+* #567: Emit the "autodoc-process-docstring" event even for objects
+  without a docstring so that it can add content.
+
+* #565: In the LaTeX builder, not only literal blocks require
+  different table handling, but also quite a few other list-like block
+  elements.
+
+* #515: Fix tracebacks in the viewcode extension for Python objects
+  that do not have a valid signature.
+
+* Fix strange reports of line numbers for warnings generated from
+  autodoc-included docstrings, due to different behavior depending on
+  docutils version.
+
+* Several fixes to the C++ domain.
+
+
+Release 1.0.5 (Nov 12, 2010)
+============================
+
+* #557: Add CSS styles required by docutils 0.7 for aligned images and
+  figures.
+
+* In the Makefile generated by LaTeX output, do not delete pdf files
+  on clean; they might be required images.
+
+* #535: Fix LaTeX output generated for line blocks.
+
+* #544: Allow ".pyw" as a source file extension.
+
+
+Release 1.0.4 (Sep 17, 2010)
+============================
+
+* #524: Open intersphinx inventories in binary mode on Windows, since
+  version 2 contains zlib-compressed data.
+
+* #513: Allow giving non-local URIs for JavaScript files, e.g. in the
+  JSMath extension.
+
+* #512: Fix traceback when "intersphinx_mapping" is empty.
+
+
+Release 1.0.3 (Aug 23, 2010)
+============================
+
+* #495: Fix internal vs. external link distinction for links coming
+  from a docutils table-of-contents.
+
+* #494: Fix the "maxdepth" option for the "toctree()" template
+  callable when used with "collapse=True".
+
+* #507: Fix crash parsing Python argument lists containing brackets in
+  string literals.
+
+* #501: Fix regression when building LaTeX docs with figures that
+  don't have captions.
+
+* #510: Fix inheritance diagrams for classes that are not picklable.
+
+* #497: Introduce separate background color for the sidebar collapse
+  button, making it easier to see.
+
+* #502, #503, #496: Fix small layout bugs in several builtin themes.
+
+
+Release 1.0.2 (Aug 14, 2010)
+============================
+
+* #490: Fix cross-references to objects of types added by the
+  "add_object_type()" API function.
+
+* Fix handling of doc field types for different directive types.
+
+* Allow breaking long signatures, continuing with backlash-escaped
+  newlines.
+
+* Fix unwanted styling of C domain references (because of a namespace
+  clash with Pygments styles).
+
+* Allow references to PEPs and RFCs with explicit anchors.
+
+* #471: Fix LaTeX references to figures.
+
+* #482: When doing a non-exact search, match only the given type of
+  object.
+
+* #481: Apply non-exact search for Python reference targets with
+  ".name" for modules too.
+
+* #484: Fix crash when duplicating a parameter in an info field list.
+
+* #487: Fix setting the default role to one provided by the
+  "oldcmarkup" extension.
+
+* #488: Fix crash when json-py is installed, which provides a "json"
+  module but is incompatible to simplejson.
+
+* #480: Fix handling of target naming in intersphinx.
+
+* #486: Fix removal of "!" for all cross-reference roles.
+
+
+Release 1.0.1 (Jul 27, 2010)
+============================
+
+* #470: Fix generated target names for reST domain objects; they are
+  not in the same namespace.
+
+* #266: Add Bengali language.
+
+* #473: Fix a bug in parsing JavaScript object names.
+
+* #474: Fix building with SingleHTMLBuilder when there is no toctree.
+
+* Fix display names for objects linked to by intersphinx with explicit
+  targets.
+
+* Fix building with the JSON builder.
+
+* Fix hyperrefs in object descriptions for LaTeX.
+
+
+Release 1.0 (Jul 23, 2010)
+==========================
+
+
+Incompatible changes
+--------------------
+
+* Support for domains has been added.  A domain is a collection of
+  directives and roles that all describe objects belonging together,
+  e.g. elements of a programming language.  A few builtin domains are
+  provided:
+
+  * Python
+
+  * C
+
+  * C++
+
+  * JavaScript
+
+  * reStructuredText
+
+* The old markup for defining and linking to C directives is now
+  deprecated.  It will not work anymore in future versions without
+  activating the "oldcmarkup" extension; in Sphinx 1.0, it is
+  activated by default.
+
+* Removed support for old dependency versions; requirements are now:
+
+  * docutils >= 0.5
+
+  * Jinja2   >= 2.2
+
+* Removed deprecated elements:
+
+  * "exclude_dirs" config value
+
+  * "sphinx.builder" module
+
+
+Features added
+--------------
+
+* General:
+
+  * Added a "nitpicky" mode that emits warnings for all missing
+    references.  It is activated by the "sphinx-build -n" command-line
+    switch or the >>:confval:`nitpicky`<< config value.
+
+  * Added "latexpdf" target in quickstart Makefile.
+
+* Markup:
+
+  * The "menuselection" and "guilabel" roles now support ampersand
+    accelerators.
+
+  * New more compact doc field syntax is now recognized: ":param type
+    name: description".
+
+  * Added "tab-width" option to "literalinclude" directive.
+
+  * Added "titlesonly" option to "toctree" directive.
+
+  * Added the "prepend" and "append" options to the "literalinclude"
+    directive.
+
+  * #284: All docinfo metadata is now put into the document metadata,
+    not just the author.
+
+  * The "ref" role can now also reference tables by caption.
+
+  * The >>:dudir:`include`<< directive now supports absolute paths,
+    which are interpreted as relative to the source directory.
+
+  * In the Python domain, references like ":func:`.name`" now look for
+    matching names with any prefix if no direct match is found.
+
+* Configuration:
+
+  * Added "rst_prolog" config value.
+
+  * Added "html_secnumber_suffix" config value to control section
+    numbering format.
+
+  * Added "html_compact_lists" config value to control docutils'
+    compact lists feature.
+
+  * The "html_sidebars" config value can now contain patterns as keys,
+    and the values can be lists that explicitly select which sidebar
+    templates should be rendered.  That means that the builtin sidebar
+    contents can be included only selectively.
+
+  * "html_static_path" can now contain single file entries.
+
+  * The new universal config value "exclude_patterns" makes the old
+    "unused_docs", "exclude_trees" and "exclude_dirnames" obsolete.
+
+  * Added "html_output_encoding" config value.
+
+  * Added the "latex_docclass" config value and made the "twoside"
+    documentclass option overridable by "oneside".
+
+  * Added the "trim_doctest_flags" config value, which is true by
+    default.
+
+  * Added "html_show_copyright" config value.
+
+  * Added "latex_show_pagerefs" and "latex_show_urls" config values.
+
+  * The behavior of "html_file_suffix" changed slightly: the empty
+    string now means "no suffix" instead of "default suffix", use
+    "None" for "default suffix".
+
+* New builders:
+
+  * Added a builder for the Epub format.
+
+  * Added a builder for manual pages.
+
+  * Added a single-file HTML builder.
+
+* HTML output:
+
+  * Inline roles now get a CSS class with their name, allowing styles
+    to customize their appearance.  Domain-specific roles get two
+    classes, "domain" and "domain-rolename".
+
+  * References now get the class "internal" if they are internal to
+    the whole project, as opposed to internal to the current page.
+
+  * External references can be styled differently with the new
+    "externalrefs" theme option for the default theme.
+
+  * In the default theme, the sidebar can experimentally now be made
+    collapsible using the new "collapsiblesidebar" theme option.
+
+  * #129: Toctrees are now wrapped in a "div" tag with class "toctree-
+    wrapper" in HTML output.
+
+  * The "toctree" callable in templates now has a "maxdepth" keyword
+    argument to control the depth of the generated tree.
+
+  * The "toctree" callable in templates now accepts a "titles_only"
+    keyword argument.
+
+  * Added "htmltitle" block in layout template.
+
+  * In the JavaScript search, allow searching for object names
+    including the module name, like "sys.argv".
+
+  * Added new theme "haiku", inspired by the Haiku OS user guide.
+
+  * Added new theme "nature".
+
+  * Added new theme "agogo", created by Andi Albrecht.
+
+  * Added new theme "scrolls", created by Armin Ronacher.
+
+  * #193: Added a "visitedlinkcolor" theme option to the default
+    theme.
+
+  * #322: Improved responsiveness of the search page by loading the
+    search index asynchronously.
+
+* Extension API:
+
+  * Added >>:event:`html-collect-pages`<<.
+
+  * Added "needs_sphinx" config value and "require_sphinx()"
+    application API method.
+
+  * #200: Added "add_stylesheet()" application API method.
+
+* Extensions:
+
+  * Added the "viewcode" extension.
+
+  * Added the "extlinks" extension.
+
+  * Added support for source ordering of members in autodoc, with
+    "autodoc_member_order = 'bysource'".
+
+  * Added "autodoc_default_flags" config value, which can be used to
+    select default flags for all autodoc directives.
+
+  * Added a way for intersphinx to refer to named labels in other
+    projects, and to specify the project you want to link to.
+
+  * #280: Autodoc can now document instance attributes assigned in
+    "__init__" methods.
+
+  * Many improvements and fixes to the "autosummary" extension, thanks
+    to Pauli Virtanen.
+
+  * #309: The "graphviz" extension can now output SVG instead of PNG
+    images, controlled by the "graphviz_output_format" config value.
+
+  * Added "alt" option to "graphviz" extension directives.
+
+  * Added "exclude" argument to "autodoc.between()".
+
+* Translations:
+
+  * Added Croatian translation, thanks to Bojan Mihelač.
+
+  * Added Turkish translation, thanks to Firat Ozgul.
+
+  * Added Catalan translation, thanks to Pau Fernández.
+
+  * Added simplified Chinese translation.
+
+  * Added Danish translation, thanks to Hjorth Larsen.
+
+  * Added Lithuanian translation, thanks to Dalius Dobravolskas.
+
+* Bugs fixed:
+
+  * #445: Fix links to result pages when using the search function of
+    HTML built with the "dirhtml" builder.
+
+  * #444: In templates, properly re-escape values treated with the
+    "striptags" Jinja filter.
+
+
+Previous versions
+=================
+
+The changelog for versions before 1.0 can be found in the file
+"CHANGES.old" in the source distribution or at GitHub.
diff --git a/_build/doc/contents.txt b/_build/doc/contents.txt
new file mode 100644
index 000000000..aca9fbd63
--- /dev/null
+++ b/_build/doc/contents.txt
@@ -0,0 +1,130 @@
+Sphinx documentation contents
+*****************************
+
+* Using Sphinx
+
+  * Getting Started
+
+  * Installing Sphinx
+
+  * reStructuredText
+
+  * Markdown
+
+  * Configuration
+
+  * Builders
+
+  * Extensions
+
+  * HTML Theming
+
+  * Internationalization
+
+  * Setuptools integration
+
+  * Sphinx Web Support
+
+* Extending Sphinx
+
+  * Developing extensions overview
+
+  * Extension tutorials
+
+  * Configuring builders
+
+  * HTML theme development
+
+* Man Pages
+
+  * Core Applications
+
+  * Additional Applications
+
+* Templating
+
+  * Do I need to use Sphinx's templates to produce HTML?
+
+  * Jinja/Sphinx Templating Primer
+
+  * Working with the builtin templates
+
+* LaTeX customization
+
+  * The "latex_elements" configuration setting
+
+  * The "sphinxsetup" configuration setting
+
+  * LaTeX macros and environments
+
+* Developing extensions for Sphinx
+
+  * Important objects
+
+  * Build Phases
+
+  * Extension metadata
+
+  * APIs used for writing extensions
+
+* Sphinx internals
+
+  * Contributing to Sphinx
+
+  * Sphinx's release process
+
+  * Organization of the Sphinx project
+
+  * Sphinx Code of Conduct
+
+  * Sphinx authors
+
+* Sphinx FAQ
+
+  * How do I...
+
+  * Using Sphinx with...
+
+  * Sphinx vs. Docutils
+
+  * Epub info
+
+  * Texinfo info
+
+* Glossary
+
+* Changelog
+
+* Projects using Sphinx
+
+  * Documentation using the alabaster theme
+
+  * Documentation using the classic theme
+
+  * Documentation using the sphinxdoc theme
+
+  * Documentation using the nature theme
+
+  * Documentation using another builtin theme
+
+  * Documentation using sphinx_rtd_theme
+
+  * Documentation using sphinx_bootstrap_theme
+
+  * Documentation using a custom theme or integrated in a website
+
+  * Homepages and other non-documentation sites
+
+  * Books produced using Sphinx
+
+  * Theses produced using Sphinx
+
+  * Projects integrating Sphinx functionality
+
+
+Indices and tables
+******************
+
+* Module Index
+
+* Glossary
diff --git a/_build/doc/develop.txt b/_build/doc/develop.txt
new file mode 100644
index 000000000..aba19d6d4
--- /dev/null
+++ b/_build/doc/develop.txt
@@ -0,0 +1,183 @@
+Sphinx development
+******************
+
+Sphinx is a maintained by a group of volunteers.  We value every
+contribution!
+
+* The code can be found in a Git repository, at https://github.com
+  /sphinx-doc/sphinx/.
+
+* Issues and feature requests should be raised in the tracker.
+
+* The mailing list for development is at Google Groups.
+
+* There is also the #sphinx-doc IRC channel on freenode.
+
+For more about our development process and methods, refer to
+*/internals/index*.
+
+
+Extensions
+**********
+
+To learn how to write your own extension, see Developing extensions
+for Sphinx.
+
+The sphinx-contrib repository contains many contributed extensions.
+Some of them have their own releases on PyPI, others you can install
+from a checkout.
+
+This is the current list of contributed extensions in that repository:
+
+* aafig: render embedded ASCII art as nice images using aafigure
+
+* actdiag: embed activity diagrams by using actdiag
+
+* adadomain: an extension for Ada support (Sphinx 1.0 needed)
+
+* ansi: parse ANSI color sequences inside documents
+
+* argdoc: automatically generate documentation for command-line
+  arguments, descriptions and help text
+
+* astah: embed diagram by using astah
+
+* autoanysrc: Gather reST documentation from any source files
+
+* autorun: Execute code in a "runblock" directive
+
+* beamer: A builder for Beamer (LaTeX) output.
+
+* blockdiag: embed block diagrams by using blockdiag
+
+* cacoo: embed diagram from Cacoo
+
+* cf3domain: a domain for CFEngine 3 policies
+
+* cheader: The missing c:header directive for Sphinx's built-in C
+  domain
+
+* cheeseshop: easily link to PyPI packages
+
+* clearquest: create tables from ClearQuest queries
+
+* cmakedomain: a domain for CMake
+
+* coffeedomain: a domain for (auto)documenting CoffeeScript source
+  code
+
+* context: a builder for ConTeXt
+
+* disqus: embed Disqus comments in documents
+
+* documentedlist: converts a Python list to a table in the generated
+  documentation
+
+* doxylink: Link to external Doxygen-generated HTML documentation
+
+* domaintools: A tool for easy domain creation
+
+* email: obfuscate email addresses
+
+* erlangdomain: an extension for Erlang support (Sphinx 1.0 needed)
+
+* exceltable: embed Excel spreadsheets into documents using exceltable
+
+* feed: an extension for creating syndication feeds and time-based
+  overviews from your site content
+
+* findanything: an extension to add Sublime Text 2-like findanything
+  panels to your documentation to find pages, sections and index
+  entries while typing
+
+* gnuplot: produces images using gnuplot language
+
+* googleanalytics: track web visitor statistics by using Google
+  Analytics
+
+* googlechart: embed charts by using Google Chart
+
+* googlemaps: embed maps by using Google Maps
+
+* httpdomain: a domain for documenting RESTful HTTP APIs
+
+* hyphenator: client-side hyphenation of HTML using hyphenator
+
+* imgur: embed Imgur images, albums, and metadata in documents
+
+* inlinesyntaxhighlight: inline syntax highlighting
+
+* lassodomain: a domain for documenting Lasso source code
+
+* libreoffice: an extension to include any drawing supported by
+  LibreOffice (e.g. odg, vsd, ...)
+
+* lilypond: an extension inserting music scripts from Lilypond in PNG
+  format
+
+* makedomain: a domain for GNU Make
+
+* matlabdomain: document MATLAB code
+
+* mockautodoc: mock imports
+
+* mscgen: embed mscgen-formatted MSC (Message Sequence Chart)s
+
+* napoleon: supports Google style and NumPy style docstrings
+
+* nicovideo: embed videos from nicovideo
+
+* nwdiag: embed network diagrams by using nwdiag
+
+* omegat: support tools to collaborate with OmegaT (Sphinx 1.1 needed)
+
+* osaka: convert standard Japanese doc to Osaka dialect (this is a
+  joke extension)
+
+* paverutils: an alternate integration of Sphinx with Paver
+
+* phpdomain: an extension for PHP support
+
+* plantuml: embed UML diagram by using PlantUML
+
+* py_directive: Execute python code in a "py" directive and return a
+  math node
+
+* rawfiles: copy raw files, like a CNAME
+
+* requirements: declare requirements wherever you need (e.g. in test
+  docstrings), mark statuses and collect them in a single list
+
+* restbuilder: a builder for reST (reStructuredText) files
+
+* rubydomain: an extension for Ruby support (Sphinx 1.0 needed)
+
+* sadisplay: display SqlAlchemy model sadisplay
+
+* sdedit: an extension inserting sequence diagram by using Quick
+  Sequence Diagram Editor (sdedit)
+
+* seqdiag: embed sequence diagrams by using seqdiag
+
+* slide: embed presentation slides on slideshare and other sites
+
+* swf: embed flash files
+
+* sword: an extension inserting Bible verses from Sword
+
+* tikz: draw pictures with the TikZ/PGF LaTeX package
+
+* traclinks: create TracLinks to a Trac instance from within Sphinx
+
+* versioning: Sphinx extension that allows building versioned docs for
+  self-hosting
+
+* whooshindex: whoosh indexer extension
+
+* youtube: embed videos from YouTube
+
+* zopeext: provide an "autointerface" directive for using Zope
+  interfaces
+
+See the *extension tutorials* on getting started with writing your own
+extensions.
diff --git a/_build/doc/development/builders.txt b/_build/doc/development/builders.txt
new file mode 100644
index 000000000..43ea0983a
--- /dev/null
+++ b/_build/doc/development/builders.txt
@@ -0,0 +1,32 @@
+Configuring builders
+********************
+
+
+Discover builders by entry point
+================================
+
+New in version 1.6.
+
+*builder* extensions can be discovered by means of entry points so
+that they do not have to be listed in the >>:confval:`extensions`<<
+configuration value.
+
+Builder extensions should define an entry point in the
+"sphinx.builders" group. The name of the entry point needs to match
+your builder's "name" attribute, which is the name passed to the
+"sphinx-build -b" option. The entry point value should equal the
+dotted name of the extension module. Here is an example of how an
+entry point for 'mybuilder' can be defined in the extension's
+"setup.py"
+
+   setup(
+       # ...
+       entry_points={
+           'sphinx.builders': [
+               'mybuilder = my.extension.module',
+           ],
+       }
+   )
+
+Note that it is still necessary to register the builder using
+"add_builder()" in the extension's "setup()" function.
diff --git a/_build/doc/development/index.txt b/_build/doc/development/index.txt
new file mode 100644
index 000000000..325b7fba2
--- /dev/null
+++ b/_build/doc/development/index.txt
@@ -0,0 +1,34 @@
+Extending Sphinx
+****************
+
+This guide is aimed at those wishing to develop their own extensions
+for Sphinx. Sphinx possesses significant extensibility capabilities
+including the ability to hook into almost every point of the build
+process.  If you simply wish to use Sphinx with existing extensions,
+refer to */usage/index*.
+
+* Developing extensions overview
+
+  * Make an extension depend on another extension
+
+* Extension tutorials
+
+  * Developing a "Hello world" extension
+
+  * Developing a "TODO" extension
+
+  * Developing a "recipe" extension
+
+* Configuring builders
+
+  * Discover builders by entry point
+
+Theming
+
+* HTML theme development
+
+  * Creating themes
+
+  * Distribute your theme as a Python package
+
+  * Templating
diff --git a/_build/doc/development/overview.txt b/_build/doc/development/overview.txt
new file mode 100644
index 000000000..bdc4f5591
--- /dev/null
+++ b/_build/doc/development/overview.txt
@@ -0,0 +1,30 @@
+Developing extensions overview
+******************************
+
+This page contains general information about developing Sphinx
+extensions.
+
+
+Make an extension depend on another extension
+=============================================
+
+Sometimes your extension depends on the functionality of another
+Sphinx extension. Most Sphinx extensions are activated in a project's
+"conf.py" file, but this is not available to you as an extension
+developer.
+
+To ensure that another extension is activated as a part of your own
+extension, use the "Sphinx.setup_extension()" method. This will
+activate another extension at run-time, ensuring that you have access
+to its functionality.
+
+For example, the following code activates the "recommonmark"
+extension:
+
+   def setup(app):
+       app.setup_extension("recommonmark")
+
+Note:
+
+  Since your extension will depend on another, make sure to include it
+  as a part of your extension's installation requirements.
diff --git a/_build/doc/development/theming.txt b/_build/doc/development/theming.txt
new file mode 100644
index 000000000..26d4f1e4a
--- /dev/null
+++ b/_build/doc/development/theming.txt
@@ -0,0 +1,327 @@
+HTML theme development
+**********************
+
+New in version 0.6.
+
+Note:
+
+  This document provides information about creating your own theme. If
+  you simply wish to use a pre-existing HTML themes, refer to
+  */usage/theming*.
+
+Sphinx supports changing the appearance of its HTML output via
+*themes*.  A theme is a collection of HTML templates, stylesheet(s)
+and other static files. Additionally, it has a configuration file
+which specifies from which theme to inherit, which highlighting style
+to use, and what options exist for customizing the theme's look and
+feel.
+
+Themes are meant to be project-unaware, so they can be used for
+different projects without change.
+
+Note:
+
+  See Developing extensions for Sphinx for more information that may
+  be helpful in developing themes.
+
+
+Creating themes
+===============
+
+Themes take the form of either a directory or a zipfile (whose name is
+the theme name), containing the following:
+
+* A "theme.conf" file.
+
+* HTML templates, if needed.
+
+* A "static/" directory containing any static files that will be
+  copied to the output static directory on build.  These can be
+  images, styles, script files.
+
+The "theme.conf" file is in INI format [1] (readable by the standard
+Python "ConfigParser" module) and has the following structure:
+
+   [theme]
+   inherit = base theme
+   stylesheet = main CSS name
+   pygments_style = stylename
+   sidebars = localtoc.html, relations.html, sourcelink.html, searchbox.html
+
+   [options]
+   variable = default value
+
+* The **inherit** setting gives the name of a "base theme", or "none".
+  The base theme will be used to locate missing templates (most themes
+  will not have to supply most templates if they use "basic" as the
+  base theme), its options will be inherited, and all of its static
+  files will be used as well. If you want to also inherit the
+  stylesheet, include it via CSS' "@import" in your own.
+
+* The **stylesheet** setting gives the name of a CSS file which will
+  be referenced in the HTML header.  If you need more than one CSS
+  file, either include one from the other via CSS' "@import", or use a
+  custom HTML template that adds "<link rel="stylesheet">" tags as
+  necessary.  Setting the >>:confval:`html_style`<< config value will
+  override this setting.
+
+* The **pygments_style** setting gives the name of a Pygments style to
+  use for highlighting.  This can be overridden by the user in the
+  >>:confval:`pygments_style`<< config value.
+
+* The **pygments_dark_style** setting gives the name of a Pygments
+  style to use for highlighting when the CSS media query "(prefers-
+  color-scheme: dark)" evaluates to true. It is injected into the page
+  using "add_css_file()".
+
+* The **sidebars** setting gives the comma separated list of sidebar
+  templates for constructing sidebars.  This can be overridden by the
+  user in the >>:confval:`html_sidebars`<< config value.
+
+* The **options** section contains pairs of variable names and default
+  values. These options can be overridden by the user in
+  >>:confval:`html_theme_options`<< and are accessible from all
+  templates as "theme_<name>".
+
+New in version 1.7: sidebar settings
+
+
+Distribute your theme as a Python package
+=========================================
+
+As a way to distribute your theme, you can use Python package.  Python
+package brings to users easy setting up ways.
+
+To distribute your theme as a Python package, please define an entry
+point called "sphinx.html_themes" in your "setup.py" file, and write a
+"setup()" function to register your themes using "add_html_theme()"
+API in it:
+
+   # 'setup.py'
+   setup(
+       ...
+       entry_points = {
+           'sphinx.html_themes': [
+               'name_of_theme = your_package',
+           ]
+       },
+       ...
+   )
+
+   # 'your_package.py'
+   from os import path
+
+   def setup(app):
+       app.add_html_theme('name_of_theme', path.abspath(path.dirname(__file__)))
+
+If your theme package contains two or more themes, please call
+"add_html_theme()" twice or more.
+
+New in version 1.2: 'sphinx_themes' entry_points feature.
+
+Deprecated since version 1.6: "sphinx_themes" entry_points has been
+deprecated.
+
+New in version 1.6: "sphinx.html_themes" entry_points feature.
+
+
+Templating
+==========
+
+The *guide to templating* is helpful if you want to write your own
+templates.  What is important to keep in mind is the order in which
+Sphinx searches for templates:
+
+* First, in the user's "templates_path" directories.
+
+* Then, in the selected theme.
+
+* Then, in its base theme, its base's base theme, etc.
+
+When extending a template in the base theme with the same name, use
+the theme name as an explicit directory: "{% extends
+"basic/layout.html" %}".  From a user "templates_path" template, you
+can still use the "exclamation mark" syntax as described in the
+templating document.
+
+
+Static templates
+----------------
+
+Since theme options are meant for the user to configure a theme more
+easily, without having to write a custom stylesheet, it is necessary
+to be able to template static files as well as HTML files.  Therefore,
+Sphinx supports so-called "static templates", like this:
+
+If the name of a file in the "static/" directory of a theme (or in the
+user's static path, for that matter) ends with "_t", it will be
+processed by the template engine.  The "_t" will be left from the
+final file name.  For example, the *classic* theme has a file
+"static/classic.css_t" which uses templating to put the color options
+into the stylesheet.  When a documentation is built with the classic
+theme, the output directory will contain a "_static/classic.css" file
+where all template tags have been processed.
+
+
+Use custom page metadata in HTML templates
+------------------------------------------
+
+Any key / value pairs in *field lists* that are placed *before* the
+page's title will be available to the Jinja template when building the
+page within the "meta" attribute. For example, if a page had the
+following text before its first title:
+
+   :mykey: My value
+
+   My first title
+   --------------
+
+Then it could be accessed within a Jinja template like so:
+
+   {%- if meta is mapping %}
+       {{ meta.get("mykey") }}
+   {%- endif %}
+
+Note the check that "meta" is a dictionary ("mapping" in Jinja
+terminology) to ensure that using it in this way is valid.
+
+
+Defining custom template functions
+----------------------------------
+
+Sometimes it is useful to define your own function in Python that you
+wish to then use in a template. For example, if you'd like to insert a
+template value with logic that depends on the user's configuration in
+the project, or if you'd like to include non-trivial checks and
+provide friendly error messages for incorrect configuration in the
+template.
+
+To define your own template function, you'll need to define two
+functions inside your module:
+
+* A **page context event handler** (or **registration**) function.
+  This is connected to the "Sphinx" application via an event callback.
+
+* A **template function** that you will use in your Jinja template.
+
+First, define the registration function, which accepts the arguments
+for >>:event:`html-page-context`<<.
+
+Within the registration function, define the template function that
+you'd like to use within Jinja. The template function should return a
+string or Python objects (lists, dictionaries) with strings inside
+that Jinja uses in the templating process
+
+Note:
+
+  The template function will have access to all of the variables that
+  are passed to the registration function.
+
+At the end of the registration function, add the template function to
+the Sphinx application's context with "context['template_func'] =
+template_func".
+
+Finally, in your extension's "setup()" function, add your registration
+function as a callback for >>:event:`html-page-context`<<.
+
+   # The registration function
+    def setup_my_func(app, pagename, templatename, context, doctree):
+        # The template function
+        def my_func(mystring):
+            return "Your string is %s" % mystring
+        # Add it to the page's context
+        context['my_func'] = my_func
+
+    # Your extension's setup function
+    def setup(app):
+        app.connect("html-page-context", setup_my_func)
+
+Now, you will have access to this function in jinja like so:
+
+   <div>
+   {{ my_func("some string") }}
+   </div>
+
+
+Add your own static files to the build assets
+---------------------------------------------
+
+If you are packaging your own build assets with an extension (e.g., a
+CSS or JavaScript file), you need to ensure that they are placed in
+the "_static/" folder of HTML outputs. To do so, you may copy them
+directly into a build's "_static/" folder at build time, generally via
+an event hook. Here is some sample code to accomplish this:
+
+   def copy_custom_files(app, exc):
+       if app.builder.format == 'html' and not exc:
+           staticdir = path.join(app.builder.outdir, '_static')
+           copy_asset_file('path/to/myextension/_static/myjsfile.js', staticdir)
+
+   def setup(app):
+       app.connect('builder-inited', copy_custom_files)
+
+
+Inject JavaScript based on user configuration
+---------------------------------------------
+
+If your extension makes use of JavaScript, it can be useful to allow
+users to control its behavior using their Sphinx configuration.
+However, this can be difficult to do if your JavaScript comes in the
+form of a static library (which will not be built with Jinja).
+
+There are two ways to inject variables into the JavaScript space based
+on user configuration.
+
+First, you may append "_t" to the end of any static files included
+with your extension. This will cause Sphinx to process these files
+with the templating engine, allowing you to embed variables and
+control behavior.
+
+For example, the following JavaScript structure:
+
+   mymodule/
+   ├── _static
+   │   └── myjsfile.js_t
+   └── mymodule.py
+
+Will result in the following static file placed in your HTML's build
+output:
+
+   _build/
+   └── html
+       └── _static
+           └── myjsfile.js
+
+See Static templates for more information.
+
+Second, you may use the "Sphinx.add_js_file()" method without pointing
+it to a file. Normally, this method is used to insert a new JavaScript
+file into your site. However, if you do *not* pass a file path, but
+instead pass a string to the "body" argument, then this text will be
+inserted as JavaScript into your site's head. This allows you to
+insert variables into your project's JavaScript from Python.
+
+For example, the following code will read in a user-configured value
+and then insert this value as a JavaScript variable, which your
+extension's JavaScript code may use:
+
+   # This function reads in a variable and inserts it into JavaScript
+   def add_js_variable(app):
+       # This is a configuration that you've specified for users in `conf.py`
+       js_variable = app.config['my_javascript_variable']
+       js_text = "var my_variable = '%s';" % js_variable
+       app.add_js_file(None, body=js_text)
+   # We connect this function to the step after the builder is initialized
+   def setup(app):
+       # Tell Sphinx about this configuration variable
+       app.add_config_value('my_javascript_variable')
+       # Run the function after the builder is initialized
+       app.connect('builder-inited', add_js_variable)
+
+As a result, in your theme you can use code that depends on the
+presence of this variable. Users can control the variable's value by
+defining it in their "conf.py" file.
+
+[1] It is not an executable Python file, as opposed to "conf.py",
+    because that would pose an unnecessary security risk if themes are
+    shared.
diff --git a/_build/doc/development/tutorials/examples/README.txt b/_build/doc/development/tutorials/examples/README.txt
new file mode 100644
index 000000000..bb8e3d402
--- /dev/null
+++ b/_build/doc/development/tutorials/examples/README.txt
@@ -0,0 +1,9 @@
+Tutorial examples
+*****************
+
+This directory contains a number of examples used in the tutorials.
+These are intended to be increasingly complex to demonstrate the
+various features of Sphinx, but should aim to be as complicated as
+necessary but no more. Individual sections are referenced by line
+numbers, meaning if you make changes to the source files, you should
+update the references in the documentation accordingly.
diff --git a/_build/doc/development/tutorials/helloworld.txt b/_build/doc/development/tutorials/helloworld.txt
new file mode 100644
index 000000000..9cb6210cd
--- /dev/null
+++ b/_build/doc/development/tutorials/helloworld.txt
@@ -0,0 +1,192 @@
+Developing a "Hello world" extension
+************************************
+
+The objective of this tutorial is to create a very basic extension
+that adds a new directive. This directive will output a paragraph
+containing "hello world".
+
+Only basic information is provided in this tutorial. For more
+information, refer to the other tutorials that go into more details.
+
+Warning:
+
+  For this extension, you will need some basic understanding of
+  docutils and Python.
+
+
+Overview
+========
+
+We want the extension to add the following to Sphinx:
+
+* A "helloworld" directive, that will simply output the text "hello
+  world".
+
+
+Prerequisites
+=============
+
+We will not be distributing this plugin via PyPI and will instead
+include it as part of an existing project. This means you will need to
+use an existing project or create a new one using **sphinx-
+quickstart**.
+
+We assume you are using separate source ("source") and build ("build")
+folders. Your extension file could be in any folder of your project.
+In our case, let's do the following:
+
+1. Create an "_ext" folder in "source"
+
+2. Create a new Python file in the "_ext" folder called
+   "helloworld.py"
+
+Here is an example of the folder structure you might obtain:
+
+   └── source
+       ├── _ext
+       │   └── helloworld.py
+       ├── _static
+       ├── conf.py
+       ├── somefolder
+       ├── index.rst
+       ├── somefile.rst
+       └── someotherfile.rst
+
+
+Writing the extension
+=====================
+
+Open "helloworld.py" and paste the following code in it:
+
+   from docutils import nodes
+   from docutils.parsers.rst import Directive
+
+
+   class HelloWorld(Directive):
+
+       def run(self):
+           paragraph_node = nodes.paragraph(text='Hello World!')
+           return [paragraph_node]
+
+
+   def setup(app):
+       app.add_directive("helloworld", HelloWorld)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+Some essential things are happening in this example, and you will see
+them for all directives.
+
+-[ The directive class ]-
+
+Our new directive is declared in the "HelloWorld" class.
+
+   class HelloWorld(Directive):
+
+       def run(self):
+           paragraph_node = nodes.paragraph(text='Hello World!')
+           return [paragraph_node]
+
+This class extends the docutils' "Directive" class. All extensions
+that create directives should extend this class.
+
+See also: The docutils documentation on creating directives
+
+This class contains a "run" method.  This method is a requirement and
+it is part of every directive.  It contains the main logic of the
+directive and it returns a list of docutils nodes to be processed by
+Sphinx. These nodes are docutils' way of representing the content of a
+document. There are many types of nodes available: text, paragraph,
+reference, table, etc.
+
+See also: The docutils documentation on nodes
+
+The "nodes.paragraph" class creates a new paragraph node. A paragraph
+node typically contains some text that we can set during instantiation
+using the "text" parameter.
+
+-[ The "setup" function ]-
+
+This function is a requirement. We use it to plug our new directive
+into Sphinx.
+
+   def setup(app):
+       app.add_directive("helloworld", HelloWorld)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+The simplest thing you can do it call the "add_directive()" method,
+which is what we've done here. For this particular call, the first
+argument is the name of the directive itself as used in a reST file.
+In this case, we would use "helloworld". For example:
+
+   Some intro text here...
+
+   .. helloworld::
+
+   Some more text here...
+
+We also return the extension metadata that indicates the version of
+our extension, along with the fact that it is safe to use the
+extension for both parallel reading and writing.
+
+
+Using the extension
+===================
+
+The extension has to be declared in your "conf.py" file to make Sphinx
+aware of it. There are two steps necessary here:
+
+1. Add the "_ext" directory to the Python path using
+   "sys.path.append". This should be placed at the top of the file.
+
+2. Update or create the >>:confval:`extensions`<< list and add the
+   extension file name to the list
+
+For example:
+
+   import os
+   import sys
+
+   sys.path.append(os.path.abspath("./_ext"))
+
+   extensions = ['helloworld']
+
+Tip:
+
+  We're not distributing this extension as a Python package, we need
+  to modify the Python path so Sphinx can find our extension. This is
+  why we need the call to "sys.path.append".
+
+You can now use the extension in a file. For example:
+
+   Some intro text here...
+
+   .. helloworld::
+
+   Some more text here...
+
+The sample above would generate:
+
+   Some intro text here...
+
+   Hello World!
+
+   Some more text here...
+
+
+Further reading
+===============
+
+This is the very basic principle of an extension that creates a new
+directive.
+
+For a more advanced example, refer to Developing a "TODO" extension.
diff --git a/_build/doc/development/tutorials/index.txt b/_build/doc/development/tutorials/index.txt
new file mode 100644
index 000000000..60f66018a
--- /dev/null
+++ b/_build/doc/development/tutorials/index.txt
@@ -0,0 +1,13 @@
+Extension tutorials
+*******************
+
+Refer to the following tutorials to get started with extension
+development.
+
+Directive tutorials
+
+* Developing a "Hello world" extension
+
+* Developing a "TODO" extension
+
+* Developing a "recipe" extension
diff --git a/_build/doc/development/tutorials/recipe.txt b/_build/doc/development/tutorials/recipe.txt
new file mode 100644
index 000000000..84eaf5a69
--- /dev/null
+++ b/_build/doc/development/tutorials/recipe.txt
@@ -0,0 +1,495 @@
+Developing a "recipe" extension
+*******************************
+
+The objective of this tutorial is to illustrate roles, directives and
+domains. Once complete, we will be able to use this extension to
+describe a recipe and reference that recipe from elsewhere in our
+documentation.
+
+Note:
+
+  This tutorial is based on a guide first published on opensource.com
+  and is provided here with the original author's permission.
+
+
+Overview
+========
+
+We want the extension to add the following to Sphinx:
+
+* A "recipe" *directive*, containing some content describing the
+  recipe steps, along with a ":contains:" option highlighting the main
+  ingredients of the recipe.
+
+* A "ref" *role*, which provides a cross-reference to the recipe
+  itself.
+
+* A "recipe" *domain*, which allows us to tie together the above role
+  and domain, along with things like indices.
+
+For that, we will need to add the following elements to Sphinx:
+
+* A new directive called "recipe"
+
+* New indexes to allow us to reference ingredient and recipes
+
+* A new domain called "recipe", which will contain the "recipe"
+  directive and "ref" role
+
+
+Prerequisites
+=============
+
+We need the same setup as in the previous extensions. This time, we
+will be putting out extension in a file called "recipe.py".
+
+Here is an example of the folder structure you might obtain:
+
+   └── source
+       ├── _ext
+       │   └── recipe.py
+       ├── conf.py
+       └── index.rst
+
+
+Writing the extension
+=====================
+
+Open "recipe.py" and paste the following code in it, all of which we
+will explain in detail shortly:
+
+   from collections import defaultdict
+
+   from docutils.parsers.rst import directives
+
+   from sphinx import addnodes
+   from sphinx.directives import ObjectDescription
+   from sphinx.domains import Domain, Index
+   from sphinx.roles import XRefRole
+   from sphinx.util.nodes import make_refnode
+
+
+   class RecipeDirective(ObjectDescription):
+       """A custom directive that describes a recipe."""
+
+       has_content = True
+       required_arguments = 1
+       option_spec = {
+           'contains': directives.unchanged_required,
+       }
+
+       def handle_signature(self, sig, signode):
+           signode += addnodes.desc_name(text=sig)
+           return sig
+
+       def add_target_and_index(self, name_cls, sig, signode):
+           signode['ids'].append('recipe' + '-' + sig)
+           if 'noindex' not in self.options:
+               ingredients = [
+                   x.strip() for x in self.options.get('contains').split(',')]
+
+               recipes = self.env.get_domain('recipe')
+               recipes.add_recipe(sig, ingredients)
+
+
+   class IngredientIndex(Index):
+       """A custom index that creates an ingredient matrix."""
+
+       name = 'ingredient'
+       localname = 'Ingredient Index'
+       shortname = 'Ingredient'
+
+       def generate(self, docnames=None):
+           content = defaultdict(list)
+
+           recipes = {name: (dispname, typ, docname, anchor)
+                      for name, dispname, typ, docname, anchor, _
+                      in self.domain.get_objects()}
+           recipe_ingredients = self.domain.data['recipe_ingredients']
+           ingredient_recipes = defaultdict(list)
+
+           # flip from recipe_ingredients to ingredient_recipes
+           for recipe_name, ingredients in recipe_ingredients.items():
+               for ingredient in ingredients:
+                   ingredient_recipes[ingredient].append(recipe_name)
+
+           # convert the mapping of ingredient to recipes to produce the expected
+           # output, shown below, using the ingredient name as a key to group
+           #
+           # name, subtype, docname, anchor, extra, qualifier, description
+           for ingredient, recipe_names in ingredient_recipes.items():
+               for recipe_name in recipe_names:
+                   dispname, typ, docname, anchor = recipes[recipe_name]
+                   content[ingredient].append(
+                       (dispname, 0, docname, anchor, docname, '', typ))
+
+           # convert the dict to the sorted list of tuples expected
+           content = sorted(content.items())
+
+           return content, True
+
+
+   class RecipeIndex(Index):
+       """A custom index that creates an recipe matrix."""
+
+       name = 'recipe'
+       localname = 'Recipe Index'
+       shortname = 'Recipe'
+
+       def generate(self, docnames=None):
+           content = defaultdict(list)
+
+           # sort the list of recipes in alphabetical order
+           recipes = self.domain.get_objects()
+           recipes = sorted(recipes, key=lambda recipe: recipe[0])
+
+           # generate the expected output, shown below, from the above using the
+           # first letter of the recipe as a key to group thing
+           #
+           # name, subtype, docname, anchor, extra, qualifier, description
+           for name, dispname, typ, docname, anchor, _ in recipes:
+               content[dispname[0].lower()].append(
+                   (dispname, 0, docname, anchor, docname, '', typ))
+
+           # convert the dict to the sorted list of tuples expected
+           content = sorted(content.items())
+
+           return content, True
+
+
+   class RecipeDomain(Domain):
+
+       name = 'recipe'
+       label = 'Recipe Sample'
+       roles = {
+           'ref': XRefRole()
+       }
+       directives = {
+           'recipe': RecipeDirective,
+       }
+       indices = {
+           RecipeIndex,
+           IngredientIndex
+       }
+       initial_data = {
+           'recipes': [],  # object list
+           'recipe_ingredients': {},  # name -> object
+       }
+
+       def get_full_qualified_name(self, node):
+           return '{}.{}'.format('recipe', node.arguments[0])
+
+       def get_objects(self):
+           for obj in self.data['recipes']:
+               yield(obj)
+
+       def resolve_xref(self, env, fromdocname, builder, typ, target, node,
+                        contnode):
+           match = [(docname, anchor)
+                    for name, sig, typ, docname, anchor, prio
+                    in self.get_objects() if sig == target]
+
+           if len(match) > 0:
+               todocname = match[0][0]
+               targ = match[0][1]
+
+               return make_refnode(builder, fromdocname, todocname, targ,
+                                   contnode, targ)
+           else:
+               print('Awww, found nothing')
+               return None
+
+       def add_recipe(self, signature, ingredients):
+           """Add a new recipe to the domain."""
+           name = '{}.{}'.format('recipe', signature)
+           anchor = 'recipe-{}'.format(signature)
+
+           self.data['recipe_ingredients'][name] = ingredients
+           # name, dispname, type, docname, anchor, priority
+           self.data['recipes'].append(
+               (name, signature, 'Recipe', self.env.docname, anchor, 0))
+
+
+   def setup(app):
+       app.add_domain(RecipeDomain)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+Let's look at each piece of this extension step-by-step to explain
+what's going on.
+
+-[ The directive class ]-
+
+The first thing to examine is the "RecipeDirective" directive:
+
+   class RecipeDirective(ObjectDescription):
+       """A custom directive that describes a recipe."""
+
+       has_content = True
+       required_arguments = 1
+       option_spec = {
+           'contains': directives.unchanged_required,
+       }
+
+       def handle_signature(self, sig, signode):
+           signode += addnodes.desc_name(text=sig)
+           return sig
+
+       def add_target_and_index(self, name_cls, sig, signode):
+           signode['ids'].append('recipe' + '-' + sig)
+           if 'noindex' not in self.options:
+               ingredients = [
+                   x.strip() for x in self.options.get('contains').split(',')]
+
+               recipes = self.env.get_domain('recipe')
+               recipes.add_recipe(sig, ingredients)
+
+Unlike Developing a "Hello world" extension and Developing a "TODO"
+extension, this directive doesn't derive from
+"docutils.parsers.rst.Directive" and doesn't define a "run" method.
+Instead, it derives from "sphinx.directives.ObjectDescription" and
+defines  "handle_signature" and "add_target_and_index" methods. This
+is because "ObjectDescription" is a special-purpose directive that's
+intended for describing things like classes, functions, or, in our
+case, recipes. More specifically, "handle_signature" implements
+parsing the signature of the directive and passes on the object's name
+and type to its superclass, while "add_taget_and_index" adds a target
+(to link to) and an entry to the index for this node.
+
+We also see that this directive defines "has_content",
+"required_arguments" and "option_spec". Unlike the "TodoDirective"
+directive added in the previous tutorial, this directive takes a
+single argument, the recipe name, and an option, "contains", in
+addition to the nested reStructuredText in the body.
+
+-[ The index classes ]-
+
+   class IngredientIndex(Index):
+       """A custom index that creates an ingredient matrix."""
+
+       name = 'ingredient'
+       localname = 'Ingredient Index'
+       shortname = 'Ingredient'
+
+       def generate(self, docnames=None):
+           content = defaultdict(list)
+
+           recipes = {name: (dispname, typ, docname, anchor)
+                      for name, dispname, typ, docname, anchor, _
+                      in self.domain.get_objects()}
+           recipe_ingredients = self.domain.data['recipe_ingredients']
+           ingredient_recipes = defaultdict(list)
+
+           # flip from recipe_ingredients to ingredient_recipes
+           for recipe_name, ingredients in recipe_ingredients.items():
+               for ingredient in ingredients:
+                   ingredient_recipes[ingredient].append(recipe_name)
+
+           # convert the mapping of ingredient to recipes to produce the expected
+           # output, shown below, using the ingredient name as a key to group
+           #
+           # name, subtype, docname, anchor, extra, qualifier, description
+           for ingredient, recipe_names in ingredient_recipes.items():
+               for recipe_name in recipe_names:
+                   dispname, typ, docname, anchor = recipes[recipe_name]
+                   content[ingredient].append(
+                       (dispname, 0, docname, anchor, docname, '', typ))
+
+           # convert the dict to the sorted list of tuples expected
+           content = sorted(content.items())
+
+           return content, True
+
+   class RecipeIndex(Index):
+       """A custom index that creates an recipe matrix."""
+
+       name = 'recipe'
+       localname = 'Recipe Index'
+       shortname = 'Recipe'
+
+       def generate(self, docnames=None):
+           content = defaultdict(list)
+
+           # sort the list of recipes in alphabetical order
+           recipes = self.domain.get_objects()
+           recipes = sorted(recipes, key=lambda recipe: recipe[0])
+
+           # generate the expected output, shown below, from the above using the
+           # first letter of the recipe as a key to group thing
+           #
+           # name, subtype, docname, anchor, extra, qualifier, description
+           for name, dispname, typ, docname, anchor, _ in recipes:
+               content[dispname[0].lower()].append(
+                   (dispname, 0, docname, anchor, docname, '', typ))
+
+           # convert the dict to the sorted list of tuples expected
+           content = sorted(content.items())
+
+           return content, True
+
+Both "IngredientIndex" and "RecipeIndex" are derived from "Index".
+They implement custom logic to generate a tuple of values that define
+the index. Note that "RecipeIndex" is a simple index that has only one
+entry. Extending it to cover more object types is not yet part of the
+code.
+
+Both indices use the method "Index.generate()" to do their work. This
+method combines the information from our domain, sorts it, and returns
+it in a list structure that will be accepted by Sphinx. This might
+look complicated but all it really is is a list of tuples like
+"('tomato', 'TomatoSoup', 'test', 'rec-TomatoSoup',...)". Refer to the
+*domain API guide* for more information on this API.
+
+These index pages can be referred by combination of domain name and
+its "name" using "ref" role.  For example, "RecipeIndex" can be
+referred by ":ref:`recipe-recipe`".
+
+-[ The domain ]-
+
+A Sphinx domain is a specialized container that ties together roles,
+directives, and indices, among other things. Let's look at the domain
+we're creating here.
+
+   class RecipeDomain(Domain):
+
+       name = 'recipe'
+       label = 'Recipe Sample'
+       roles = {
+           'ref': XRefRole()
+       }
+       directives = {
+           'recipe': RecipeDirective,
+       }
+       indices = {
+           RecipeIndex,
+           IngredientIndex
+       }
+       initial_data = {
+           'recipes': [],  # object list
+           'recipe_ingredients': {},  # name -> object
+       }
+
+       def get_full_qualified_name(self, node):
+           return '{}.{}'.format('recipe', node.arguments[0])
+
+       def get_objects(self):
+           for obj in self.data['recipes']:
+               yield(obj)
+
+       def resolve_xref(self, env, fromdocname, builder, typ, target, node,
+                        contnode):
+           match = [(docname, anchor)
+                    for name, sig, typ, docname, anchor, prio
+                    in self.get_objects() if sig == target]
+
+           if len(match) > 0:
+               todocname = match[0][0]
+               targ = match[0][1]
+
+               return make_refnode(builder, fromdocname, todocname, targ,
+                                   contnode, targ)
+           else:
+               print('Awww, found nothing')
+               return None
+
+       def add_recipe(self, signature, ingredients):
+           """Add a new recipe to the domain."""
+           name = '{}.{}'.format('recipe', signature)
+           anchor = 'recipe-{}'.format(signature)
+
+           self.data['recipe_ingredients'][name] = ingredients
+           # name, dispname, type, docname, anchor, priority
+           self.data['recipes'].append(
+               (name, signature, 'Recipe', self.env.docname, anchor, 0))
+
+There are some interesting things to note about this "recipe" domain
+and domains in general. Firstly, we actually register our directives,
+roles and indices here, via the "directives", "roles" and "indices"
+attributes, rather than via calls later on in "setup". We can also
+note that we aren't actually defining a custom role and are instead
+reusing the "sphinx.roles.XRefRole" role and defining the
+"sphinx.domains.Domain.resolve_xref" method. This method takes two
+arguments, "typ" and "target", which refer to the cross-reference type
+and its target name. We'll use "target" to resolve our destination
+from our domain's "recipes" because we currently have only one type of
+node.
+
+Moving on, we can see that we've defined "initial_data". The values
+defined in "initial_data" will be copied to
+"env.domaindata[domain_name]" as the initial data of the domain, and
+domain instances can access it via "self.data". We see that we have
+defined two items in "initial_data": "recipes" and
+"recipe2ingredient". These contain a list of all objects defined (i.e.
+all recipes) and a hash that maps a canonical ingredient name to the
+list of objects. The way we name objects is common across our
+extension and is defined in the "get_full_qualified_name" method. For
+each object created, the canonical name is "recipe.<recipename>",
+where "<recipename>" is the name the documentation writer gives the
+object (a recipe). This enables the extension to use different object
+types that share the same name. Having a canonical name and central
+place for our objects is a huge advantage. Both our indices and our
+cross-referencing code use this feature.
+
+-[ The "setup" function ]-
+
+As always, the "setup" function is a requirement and is used to hook
+the various parts of our extension into Sphinx. Let's look at the
+"setup" function for this extension.
+
+   def setup(app):
+       app.add_domain(RecipeDomain)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+This looks a little different to what we're used to seeing. There are
+no calls to "add_directive()" or even "add_role()". Instead, we have a
+single call to "add_domain()" followed by some initialization of the
+standard domain. This is because we had already registered our
+directives, roles and indexes as part of the directive itself.
+
+
+Using the extension
+===================
+
+You can now use the extension throughout your project. For example:
+
+index.rst
+
+   Joe's Recipes
+   =============
+
+   Below are a collection of my favourite recipes. I highly recommend the
+   :recipe:ref:`TomatoSoup` recipe in particular!
+
+   .. toctree::
+
+      tomato-soup
+
+tomato-soup.rst
+
+   The recipe contains `tomato` and `cilantro`.
+
+   .. recipe:recipe:: TomatoSoup
+     :contains: tomato cilantro salt pepper
+
+    This recipe is a tasty tomato soup, combine all ingredients
+    and cook.
+
+The important things to note are the use of the ":recipe:ref:" role to
+cross-reference the recipe actually defined elsewhere (using the
+":recipe:recipe:" directive.
+
+
+Further reading
+===============
+
+For more information, refer to the docutils documentation and
+*/extdev/index*.
diff --git a/_build/doc/development/tutorials/todo.txt b/_build/doc/development/tutorials/todo.txt
new file mode 100644
index 000000000..aff6f5eb5
--- /dev/null
+++ b/_build/doc/development/tutorials/todo.txt
@@ -0,0 +1,581 @@
+Developing a "TODO" extension
+*****************************
+
+The objective of this tutorial is to create a more comprehensive
+extension than that created in Developing a "Hello world" extension.
+Whereas that guide just covered writing a custom *directive*, this
+guide adds multiple directives, along with custom nodes, additional
+config values and custom event handlers. To this end, we will cover a
+"todo" extension that adds capabilities to include todo entries in the
+documentation, and to collect these in a central place. This is
+similar the "sphinxext.todo" extension distributed with Sphinx.
+
+
+Overview
+========
+
+Note:
+
+  To understand the design of this extension, refer to Important
+  objects and Build Phases.
+
+We want the extension to add the following to Sphinx:
+
+* A "todo" directive, containing some content that is marked with
+  "TODO" and only shown in the output if a new config value is set.
+  Todo entries should not be in the output by default.
+
+* A "todolist" directive that creates a list of all todo entries
+  throughout the documentation.
+
+For that, we will need to add the following elements to Sphinx:
+
+* New directives, called "todo" and "todolist".
+
+* New document tree nodes to represent these directives,
+  conventionally also called "todo" and "todolist".  We wouldn't need
+  new nodes if the new directives only produced some content
+  representable by existing nodes.
+
+* A new config value "todo_include_todos" (config value names should
+  start with the extension name, in order to stay unique) that
+  controls whether todo entries make it into the output.
+
+* New event handlers: one for the >>:event:`doctree-resolved`<< event,
+  to replace the todo and todolist nodes, one for >>:event:`env-merge-
+  info`<< to merge intermediate results from parallel builds, and one
+  for >>:event:`env-purge-doc`<< (the reason for that will be covered
+  later).
+
+
+Prerequisites
+=============
+
+As with Developing a "Hello world" extension, we will not be
+distributing this plugin via PyPI so once again we need a Sphinx
+project to call this from. You can use an existing project or create a
+new one using **sphinx-quickstart**.
+
+We assume you are using separate source ("source") and build ("build")
+folders. Your extension file could be in any folder of your project.
+In our case, let's do the following:
+
+1. Create an "_ext" folder in "source"
+
+2. Create a new Python file in the "_ext" folder called "todo.py"
+
+Here is an example of the folder structure you might obtain:
+
+   └── source
+       ├── _ext
+       │   └── todo.py
+       ├── _static
+       ├── conf.py
+       ├── somefolder
+       ├── index.rst
+       ├── somefile.rst
+       └── someotherfile.rst
+
+
+Writing the extension
+=====================
+
+Open "todo.py" and paste the following code in it, all of which we
+will explain in detail shortly:
+
+   from docutils import nodes
+   from docutils.parsers.rst import Directive
+
+   from sphinx.locale import _
+   from sphinx.util.docutils import SphinxDirective
+
+
+   class todo(nodes.Admonition, nodes.Element):
+       pass
+
+
+   class todolist(nodes.General, nodes.Element):
+       pass
+
+
+   def visit_todo_node(self, node):
+       self.visit_admonition(node)
+
+
+   def depart_todo_node(self, node):
+       self.depart_admonition(node)
+
+
+   class TodolistDirective(Directive):
+
+       def run(self):
+           return [todolist('')]
+
+
+   class TodoDirective(SphinxDirective):
+
+       # this enables content in the directive
+       has_content = True
+
+       def run(self):
+           targetid = 'todo-%d' % self.env.new_serialno('todo')
+           targetnode = nodes.target('', '', ids=[targetid])
+
+           todo_node = todo('\n'.join(self.content))
+           todo_node += nodes.title(_('Todo'), _('Todo'))
+           self.state.nested_parse(self.content, self.content_offset, todo_node)
+
+           if not hasattr(self.env, 'todo_all_todos'):
+               self.env.todo_all_todos = []
+
+           self.env.todo_all_todos.append({
+               'docname': self.env.docname,
+               'lineno': self.lineno,
+               'todo': todo_node.deepcopy(),
+               'target': targetnode,
+           })
+
+           return [targetnode, todo_node]
+
+
+   def purge_todos(app, env, docname):
+       if not hasattr(env, 'todo_all_todos'):
+           return
+
+       env.todo_all_todos = [todo for todo in env.todo_all_todos
+                             if todo['docname'] != docname]
+
+
+   def merge_todos(app, env, docnames, other):
+       if not hasattr(env, 'todo_all_todos'):
+           env.todo_all_todos = []
+       if hasattr(other, 'todo_all_todos'):
+           env.todo_all_todos.extend(other.todo_all_todos)
+
+
+   def process_todo_nodes(app, doctree, fromdocname):
+       if not app.config.todo_include_todos:
+           for node in doctree.traverse(todo):
+               node.parent.remove(node)
+
+       # Replace all todolist nodes with a list of the collected todos.
+       # Augment each todo with a backlink to the original location.
+       env = app.builder.env
+
+       if not hasattr(env, 'todo_all_todos'):
+           env.todo_all_todos = []
+
+       for node in doctree.traverse(todolist):
+           if not app.config.todo_include_todos:
+               node.replace_self([])
+               continue
+
+           content = []
+
+           for todo_info in env.todo_all_todos:
+               para = nodes.paragraph()
+               filename = env.doc2path(todo_info['docname'], base=None)
+               description = (
+                   _('(The original entry is located in %s, line %d and can be found ') %
+                   (filename, todo_info['lineno']))
+               para += nodes.Text(description, description)
+
+               # Create a reference
+               newnode = nodes.reference('', '')
+               innernode = nodes.emphasis(_('here'), _('here'))
+               newnode['refdocname'] = todo_info['docname']
+               newnode['refuri'] = app.builder.get_relative_uri(
+                   fromdocname, todo_info['docname'])
+               newnode['refuri'] += '#' + todo_info['target']['refid']
+               newnode.append(innernode)
+               para += newnode
+               para += nodes.Text('.)', '.)')
+
+               # Insert into the todolist
+               content.append(todo_info['todo'])
+               content.append(para)
+
+           node.replace_self(content)
+
+
+   def setup(app):
+       app.add_config_value('todo_include_todos', False, 'html')
+
+       app.add_node(todolist)
+       app.add_node(todo,
+                    html=(visit_todo_node, depart_todo_node),
+                    latex=(visit_todo_node, depart_todo_node),
+                    text=(visit_todo_node, depart_todo_node))
+
+       app.add_directive('todo', TodoDirective)
+       app.add_directive('todolist', TodolistDirective)
+       app.connect('doctree-resolved', process_todo_nodes)
+       app.connect('env-purge-doc', purge_todos)
+       app.connect('env-merge-info', merge_todos)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+This is far more extensive extension than the one detailed in
+Developing a "Hello world" extension, however, we will will look at
+each piece step-by-step to explain what's happening.
+
+-[ The node classes ]-
+
+Let's start with the node classes:
+
+   class todo(nodes.Admonition, nodes.Element):
+       pass
+
+
+   class todolist(nodes.General, nodes.Element):
+       pass
+
+
+   def visit_todo_node(self, node):
+       self.visit_admonition(node)
+
+
+   def depart_todo_node(self, node):
+       self.depart_admonition(node)
+
+Node classes usually don't have to do anything except inherit from the
+standard docutils classes defined in "docutils.nodes".  "todo"
+inherits from "Admonition" because it should be handled like a note or
+warning, "todolist" is just a "general" node.
+
+Note:
+
+  Many extensions will not have to create their own node classes and
+  work fine with the nodes already provided by docutils and Sphinx.
+
+Attention:
+
+  It is important to know that while you can extend Sphinx without
+  leaving your "conf.py", if you declare an inherited node right
+  there, you'll hit an unobvious "PickleError". So if something goes
+  wrong, please make sure that you put inherited nodes into a separate
+  Python module.For more details, see:
+
+  * https://github.com/sphinx-doc/sphinx/issues/6751
+
+  * https://github.com/sphinx-doc/sphinx/issues/1493
+
+  * https://github.com/sphinx-doc/sphinx/issues/1424
+
+-[ The directive classes ]-
+
+A directive class is a class deriving usually from
+"docutils.parsers.rst.Directive". The directive interface is also
+covered in detail in the docutils documentation; the important thing
+is that the class should have attributes that configure the allowed
+markup, and a "run" method that returns a list of nodes.
+
+Looking first at the "TodolistDirective" directive:
+
+   class TodolistDirective(Directive):
+
+       def run(self):
+           return [todolist('')]
+
+It's very simple, creating and returning an instance of our "todolist"
+node class.  The "TodolistDirective" directive itself has neither
+content nor arguments that need to be handled. That brings us to the
+"TodoDirective" directive:
+
+   class TodoDirective(SphinxDirective):
+
+       # this enables content in the directive
+       has_content = True
+
+       def run(self):
+           targetid = 'todo-%d' % self.env.new_serialno('todo')
+           targetnode = nodes.target('', '', ids=[targetid])
+
+           todo_node = todo('\n'.join(self.content))
+           todo_node += nodes.title(_('Todo'), _('Todo'))
+           self.state.nested_parse(self.content, self.content_offset, todo_node)
+
+           if not hasattr(self.env, 'todo_all_todos'):
+               self.env.todo_all_todos = []
+
+           self.env.todo_all_todos.append({
+               'docname': self.env.docname,
+               'lineno': self.lineno,
+               'todo': todo_node.deepcopy(),
+               'target': targetnode,
+           })
+
+           return [targetnode, todo_node]
+
+Several important things are covered here. First, as you can see,
+we're now subclassing the "SphinxDirective" helper class instead of
+the usual "Directive" class. This gives us access to the build
+environment instance using the "self.env" property. Without this, we'd
+have to use the rather convoluted "self.state.document.settings.env".
+Then, to act as a link target (from "TodolistDirective"), the
+"TodoDirective" directive needs to return a target node in addition to
+the "todo" node.  The target ID (in HTML, this will be the anchor
+name) is generated by using "env.new_serialno" which returns a new
+unique integer on each call and therefore leads to unique target
+names. The target node is instantiated without any text (the first two
+arguments).
+
+On creating admonition node, the content body of the directive are
+parsed using "self.state.nested_parse".  The first argument gives the
+content body, and the second one gives content offset.  The third
+argument gives the parent node of parsed result, in our case the
+"todo" node. Following this, the "todo" node is added to the
+environment.  This is needed to be able to create a list of all todo
+entries throughout the documentation, in the place where the author
+puts a "todolist" directive.  For this case, the environment attribute
+"todo_all_todos" is used (again, the name should be unique, so it is
+prefixed by the extension name).  It does not exist when a new
+environment is created, so the directive must check and create it if
+necessary.  Various information about the todo entry's location are
+stored along with a copy of the node.
+
+In the last line, the nodes that should be put into the doctree are
+returned: the target node and the admonition node.
+
+The node structure that the directive returns looks like this:
+
+   +--------------------+
+   | target node        |
+   +--------------------+
+   +--------------------+
+   | todo node          |
+   +--------------------+
+     \__+--------------------+
+        | admonition title   |
+        +--------------------+
+        | paragraph          |
+        +--------------------+
+        | ...                |
+        +--------------------+
+
+-[ The event handlers ]-
+
+Event handlers are one of Sphinx's most powerful features, providing a
+way to do hook into any part of the documentation process. There are
+many events provided by Sphinx itself, as detailed in the API guide,
+and we're going to use a subset of them here.
+
+Let's look at the event handlers used in the above example.  First,
+the one for the >>:event:`env-purge-doc`<< event:
+
+   def purge_todos(app, env, docname):
+       if not hasattr(env, 'todo_all_todos'):
+           return
+
+       env.todo_all_todos = [todo for todo in env.todo_all_todos
+                             if todo['docname'] != docname]
+
+Since we store information from source files in the environment, which
+is persistent, it may become out of date when the source file changes.
+Therefore, before each source file is read, the environment's records
+of it are cleared, and the >>:event:`env-purge-doc`<< event gives
+extensions a chance to do the same. Here we clear out all todos whose
+docname matches the given one from the "todo_all_todos" list.  If
+there are todos left in the document, they will be added again during
+parsing.
+
+The next handler, for the >>:event:`env-merge-info`<< event, is used
+during parallel builds. As during parallel builds all threads have
+their own "env", there's multiple "todo_all_todos" lists that need to
+be merged:
+
+   def merge_todos(app, env, docnames, other):
+       if not hasattr(env, 'todo_all_todos'):
+           env.todo_all_todos = []
+       if hasattr(other, 'todo_all_todos'):
+           env.todo_all_todos.extend(other.todo_all_todos)
+
+The other handler belongs to the >>:event:`doctree-resolved`<< event:
+
+   def process_todo_nodes(app, doctree, fromdocname):
+       if not app.config.todo_include_todos:
+           for node in doctree.traverse(todo):
+               node.parent.remove(node)
+
+       # Replace all todolist nodes with a list of the collected todos.
+       # Augment each todo with a backlink to the original location.
+       env = app.builder.env
+
+       if not hasattr(env, 'todo_all_todos'):
+           env.todo_all_todos = []
+
+       for node in doctree.traverse(todolist):
+           if not app.config.todo_include_todos:
+               node.replace_self([])
+               continue
+
+           content = []
+
+           for todo_info in env.todo_all_todos:
+               para = nodes.paragraph()
+               filename = env.doc2path(todo_info['docname'], base=None)
+               description = (
+                   _('(The original entry is located in %s, line %d and can be found ') %
+                   (filename, todo_info['lineno']))
+               para += nodes.Text(description, description)
+
+               # Create a reference
+               newnode = nodes.reference('', '')
+               innernode = nodes.emphasis(_('here'), _('here'))
+               newnode['refdocname'] = todo_info['docname']
+               newnode['refuri'] = app.builder.get_relative_uri(
+                   fromdocname, todo_info['docname'])
+               newnode['refuri'] += '#' + todo_info['target']['refid']
+               newnode.append(innernode)
+               para += newnode
+               para += nodes.Text('.)', '.)')
+
+               # Insert into the todolist
+               content.append(todo_info['todo'])
+               content.append(para)
+
+           node.replace_self(content)
+
+The >>:event:`doctree-resolved`<< event is emitted at the end of phase
+3 (resolving) and allows custom resolving to be done. The handler we
+have written for this event is a bit more involved. If the
+"todo_include_todos" config value (which we'll describe shortly) is
+false, all "todo" and "todolist" nodes are removed from the documents.
+If not, "todo" nodes just stay where and how they are.  "todolist"
+nodes are replaced by a list of todo entries, complete with backlinks
+to the location where they come from.  The list items are composed of
+the nodes from the "todo" entry and docutils nodes created on the fly:
+a paragraph for each entry, containing text that gives the location,
+and a link (reference node containing an italic node) with the
+backreference. The reference URI is built by
+"sphinx.builders.Builder.get_relative_uri()" which creates a suitable
+URI depending on the used builder, and appending the todo node's (the
+target's) ID as the anchor name.
+
+-[ The "setup" function ]-
+
+As noted previously, the "setup" function is a requirement and is used
+to plug directives into Sphinx. However, we also use it to hook up the
+other parts of our extension. Let's look at our "setup" function:
+
+   def setup(app):
+       app.add_config_value('todo_include_todos', False, 'html')
+
+       app.add_node(todolist)
+       app.add_node(todo,
+                    html=(visit_todo_node, depart_todo_node),
+                    latex=(visit_todo_node, depart_todo_node),
+                    text=(visit_todo_node, depart_todo_node))
+
+       app.add_directive('todo', TodoDirective)
+       app.add_directive('todolist', TodolistDirective)
+       app.connect('doctree-resolved', process_todo_nodes)
+       app.connect('env-purge-doc', purge_todos)
+       app.connect('env-merge-info', merge_todos)
+
+       return {
+           'version': '0.1',
+           'parallel_read_safe': True,
+           'parallel_write_safe': True,
+       }
+
+The calls in this function refer to the classes and functions we added
+earlier. What the individual calls do is the following:
+
+* "add_config_value()" lets Sphinx know that it should recognize the
+  new *config value* "todo_include_todos", whose default value should
+  be "False" (this also tells Sphinx that it is a boolean value).
+
+  If the third argument was "'html'", HTML documents would be full
+  rebuild if the config value changed its value.  This is needed for
+  config values that influence reading (build phase 1 (reading)).
+
+* "add_node()" adds a new *node class* to the build system.  It also
+  can specify visitor functions for each supported output format.
+  These visitor functions are needed when the new nodes stay until
+  phase 4 (writing). Since the "todolist" node is always replaced in
+  phase 3 (resolving), it doesn't need any.
+
+* "add_directive()" adds a new *directive*, given by name and class.
+
+* Finally, "connect()" adds an *event handler* to the event whose name
+  is given by the first argument.  The event handler function is
+  called with several arguments which are documented with the event.
+
+With this, our extension is complete.
+
+
+Using the extension
+===================
+
+As before, we need to enable the extension by declaring it in our
+"conf.py" file. There are two steps necessary here:
+
+1. Add the "_ext" directory to the Python path using
+   "sys.path.append". This should be placed at the top of the file.
+
+2. Update or create the >>:confval:`extensions`<< list and add the
+   extension file name to the list
+
+In addition, we may wish to set the "todo_include_todos" config value.
+As noted above, this defaults to "False" but we can set it explicitly.
+
+For example:
+
+   import os
+   import sys
+
+   sys.path.append(os.path.abspath("./_ext"))
+
+   extensions = ['todo']
+
+   todo_include_todos = False
+
+You can now use the extension throughout your project. For example:
+
+index.rst
+
+   Hello, world
+   ============
+
+   .. toctree::
+      somefile.rst
+      someotherfile.rst
+
+   Hello world. Below is the list of TODOs.
+
+   .. todolist::
+
+somefile.rst
+
+   foo
+   ===
+
+   Some intro text here...
+
+   .. todo:: Fix this
+
+someotherfile.rst
+
+   bar
+   ===
+
+   Some more text here...
+
+   .. todo:: Fix that
+
+Because we have configured "todo_include_todos" to "False", we won't
+actually see anything rendered for the "todo" and "todolist"
+directives. However, if we toggle this to true, we will see the output
+described previously.
+
+
+Further reading
+===============
+
+For more information, refer to the docutils documentation and
+*/extdev/index*.
diff --git a/_build/doc/examples.txt b/_build/doc/examples.txt
new file mode 100644
index 000000000..1c9cd24f9
--- /dev/null
+++ b/_build/doc/examples.txt
@@ -0,0 +1,822 @@
+Projects using Sphinx
+*********************
+
+This is an (incomplete) alphabetic list of projects that use Sphinx or
+are experimenting with using it for their documentation.  If you like
+to be included, please mail to the Google group.
+
+I've grouped the list into sections to make it easier to find
+interesting examples.
+
+
+Documentation using the alabaster theme
+=======================================
+
+* Alabaster
+
+* Blinker
+
+* Calibre
+
+* Click (customized)
+
+* coala (customized)
+
+* CodePy
+
+* Eve (Python REST API framework)
+
+* Fabric
+
+* Fityk
+
+* Flask
+
+* Flask-OpenID
+
+* Invoke
+
+* Jinja
+
+* Lino (customized)
+
+* marbl
+
+* MDAnalysis (customized)
+
+* MeshPy
+
+* Molecule
+
+* PyCUDA
+
+* PyOpenCL
+
+* PyLangAcq
+
+* pytest (customized)
+
+* python-apt
+
+* PyVisfile
+
+* Requests
+
+* searx
+
+* Spyder (customized)
+
+* Tablib
+
+* urllib3 (customized)
+
+* Werkzeug (customized)
+
+
+Documentation using the classic theme
+=====================================
+
+* Advanced Generic Widgets (customized)
+
+* Apache CouchDB (customized)
+
+* APSW
+
+* Arb
+
+* Bazaar (customized)
+
+* Beautiful Soup
+
+* Blender API
+
+* Bugzilla
+
+* Buildbot
+
+* CMake (customized)
+
+* Chaco (customized)
+
+* CORE
+
+* CORE Python modules
+
+* Cormoran
+
+* DEAP (customized)
+
+* Director
+
+* EZ-Draw (customized)
+
+* F2py
+
+* Generic Mapping Tools (GMT) (customized)
+
+* Genomedata
+
+* GetFEM++ (customized)
+
+* Glasgow Haskell Compiler (customized)
+
+* Grok (customized)
+
+* GROMACS
+
+* GSL Shell
+
+* Hands-on Python Tutorial
+
+* Kaa (customized)
+
+* Leo
+
+* LEPL (customized)
+
+* Mayavi (customized)
+
+* MediaGoblin (customized)
+
+* mpmath
+
+* OpenCV (customized)
+
+* OpenEXR
+
+* OpenGDA
+
+* Peach^3 (customized)
+
+* Plone (customized)
+
+* PyEMD
+
+* Pyevolve
+
+* Pygame (customized)
+
+* PyMQI
+
+* PyQt4 (customized)
+
+* PyQt5 (customized)
+
+* Python 2
+
+* Python 3 (customized)
+
+* Python Packaging Authority (customized)
+
+* Ring programming language (customized)
+
+* SageMath (customized)
+
+* Segway
+
+* simuPOP (customized)
+
+* Sprox (customized)
+
+* SymPy
+
+* TurboGears (customized)
+
+* tvtk
+
+* Varnish (customized, alabaster for index)
+
+* Waf
+
+* wxPython Phoenix (customized)
+
+* Yum
+
+* z3c
+
+* zc.async (customized)
+
+* Zope (customized)
+
+
+Documentation using the sphinxdoc theme
+=======================================
+
+* ABRT
+
+* cartopy
+
+* Jython
+
+* LLVM
+
+* Matplotlib
+
+* MDAnalysis Tutorial
+
+* NetworkX
+
+* PyCantonese
+
+* Pyre
+
+* pySPACE
+
+* Pysparse
+
+* PyTango
+
+* Python Wild Magic (customized)
+
+* RDKit
+
+* Reteisi (customized)
+
+* Sqlkit (customized)
+
+* Turbulenz
+
+
+Documentation using the nature theme
+====================================
+
+* Alembic
+
+* Cython
+
+* easybuild
+
+* jsFiddle
+
+* libLAS (customized)
+
+* Lmod
+
+* MapServer (customized)
+
+* Pandas
+
+* pyglet (customized)
+
+* Setuptools
+
+* Spring Python
+
+* StatsModels (customized)
+
+* Sylli
+
+
+Documentation using another builtin theme
+=========================================
+
+* Breathe (haiku)
+
+* MPipe (sphinx13)
+
+* NLTK (agogo)
+
+* Programmieren mit PyGTK und Glade (German) (agogo, customized)
+
+* PyPubSub (bizstyle)
+
+* Pylons (pyramid)
+
+* Pyramid web framework (pyramid)
+
+* Sphinx (sphinx13) :-)
+
+* Valence (haiku, customized)
+
+
+Documentation using sphinx_rtd_theme
+====================================
+
+* Annotator
+
+* Ansible (customized)
+
+* Arcade
+
+* aria2
+
+* ASE
+
+* Autofac
+
+* BigchainDB
+
+* Blender Reference Manual
+
+* Blocks
+
+* bootstrap-datepicker
+
+* Certbot
+
+* Chainer (customized)
+
+* CherryPy
+
+* cloud-init
+
+* CodeIgniter
+
+* Conda
+
+* Corda
+
+* Dask
+
+* Databricks (customized)
+
+* Dataiku DSS
+
+* DNF
+
+* Django-cas-ng
+
+* edX
+
+* Electrum
+
+* Elemental
+
+* ESWP3
+
+* Ethereum Homestead
+
+* Exhale
+
+* Faker
+
+* Fidimag
+
+* Flake8
+
+* Flatpak
+
+* FluidDyn
+
+* Fluidsim
+
+* Gallium
+
+* GeoNode
+
+* Glances
+
+* Godot
+
+* Graylog
+
+* GPAW (customized)
+
+* HDF5 for Python (h5py)
+
+* Hyperledger Fabric
+
+* Hyperledger Sawtooth
+
+* IdentityServer
+
+* Idris
+
+* javasphinx
+
+* Julia
+
+* Jupyter Notebook
+
+* Lasagne
+
+* latexindent.pl
+
+* Learning Apache Spark with Python
+
+* LibCEED
+
+* Linguistica
+
+* Linux kernel
+
+* Mailman
+
+* MathJax
+
+* MDTraj (customized)
+
+* micca - MICrobial Community Analysis
+
+* MicroPython
+
+* Minds (customized)
+
+* Mink
+
+* Mockery
+
+* mod_wsgi
+
+* MoinMoin
+
+* Mopidy
+
+* MyHDL
+
+* Nextflow
+
+* NICOS (customized)
+
+* OpenFAST
+
+* Pelican
+
+* picamera
+
+* Pillow
+
+* pip
+
+* Paver
+
+* peewee
+
+* Phinx
+
+* phpMyAdmin
+
+* PROS (customized)
+
+* Pushkin
+
+* Pweave
+
+* PyPy
+
+* python-sqlparse
+
+* PyVISA
+
+* pyvista
+
+* Read The Docs
+
+* Free your information from their silos (French) (customized)
+
+* Releases Sphinx extension
+
+* Qtile
+
+* Quex
+
+* QuTiP
+
+* Satchmo
+
+* Scapy
+
+* SimGrid
+
+* SimPy
+
+* six
+
+* SlamData
+
+* Solidity
+
+* Sonos Controller (SoCo)
+
+* Sphinx AutoAPI
+
+* sphinx-argparse
+
+* Sphinx-Gallery (customized)
+
+* Sphinx with Github Webpages
+
+* SpotBugs
+
+* StarUML
+
+* Sublime Text Unofficial Documentation
+
+* SunPy
+
+* Sylius
+
+* Syncthing
+
+* Tango Controls (customized)
+
+* Topshelf
+
+* Theano
+
+* ThreatConnect
+
+* Tuleap
+
+* TYPO3 (customized)
+
+* Veyon
+
+* uWSGI
+
+* virtualenv
+
+* Wagtail
+
+* Web Application Attack and Audit Framework (w3af)
+
+* Weblate
+
+* x265
+
+* ZeroNet
+
+* Zulip
+
+
+Documentation using sphinx_bootstrap_theme
+==========================================
+
+* Bootstrap Theme
+
+* C/C++ Software Development with Eclipse
+
+* Dataverse
+
+* e-cidadania
+
+* Hangfire
+
+* Hedge
+
+* ObsPy
+
+* Open Dylan
+
+* OPNFV
+
+* Pootle
+
+* PyUblas
+
+* seaborn
+
+
+Documentation using a custom theme or integrated in a website
+=============================================================
+
+* Apache Cassandra
+
+* Astropy
+
+* Bokeh
+
+* Boto 3
+
+* CakePHP
+
+* CasperJS
+
+* Ceph
+
+* Chef
+
+* CKAN
+
+* Confluent Platform
+
+* Django
+
+* Doctrine
+
+* Enterprise Toolkit for Acrobat products
+
+* Gameduino
+
+* gensim
+
+* GeoServer
+
+* gevent
+
+* GHC - Glasgow Haskell Compiler
+
+* Guzzle
+
+* H2O.ai
+
+* Heka
+
+* Istihza (Turkish Python documentation project)
+
+* Kombu
+
+* Lasso
+
+* Mako
+
+* MirrorBrain
+
+* Mitiq
+
+* MongoDB
+
+* Music21
+
+* MyHDL
+
+* ndnSIM
+
+* nose
+
+* ns-3
+
+* NumPy
+
+* ObjectListView
+
+* OpenERP
+
+* OpenCV
+
+* OpenLayers
+
+* OpenTURNS
+
+* Open vSwitch
+
+* PlatformIO
+
+* PyEphem
+
+* Pygments
+
+* Plone User Manual (German)
+
+* PSI4
+
+* PyMOTW
+
+* python-aspectlib (sphinx_py3doc_enhanced_theme)
+
+* QGIS
+
+* qooxdoo
+
+* Roundup
+
+* SaltStack
+
+* scikit-learn
+
+* SciPy
+
+* Scrapy
+
+* Seaborn
+
+* Selenium
+
+* Self
+
+* Substance D
+
+* Sulu
+
+* SQLAlchemy
+
+* tinyTiM
+
+* Twisted
+
+* Ubuntu Packaging Guide
+
+* WebFaction
+
+* WTForms
+
+
+Homepages and other non-documentation sites
+===========================================
+
+* Arizona State University PHY494/PHY598/CHM598 Simulation approaches
+  to Bio-and Nanophysics (classic)
+
+* Benoit Boissinot (classic, customized)
+
+* Computer Networks, Parallelization, and Simulation Laboratory
+  (CNPSLab) (sphinx_rtd_theme)
+
+* Deep Learning Tutorials (sphinxdoc)
+
+* Eric Holscher (alabaster)
+
+* Lei Ma's Statistical Mechanics lecture notes
+  (sphinx_bootstrap_theme)
+
+* Loyola University Chicago COMP 339-439 Distributed Systems course
+  (sphinx_bootstrap_theme)
+
+* Pylearn2 (sphinxdoc, customized)
+
+* PyXLL (sphinx_bootstrap_theme, customized)
+
+* SciPy Cookbook (sphinx_rtd_theme)
+
+* Tech writer at work blog (custom theme)
+
+* The Wine Cellar Book (sphinxdoc)
+
+* Thomas Cokelaer's Python, Sphinx and reStructuredText tutorials
+  (standard)
+
+* UC Berkeley ME233 Advanced Control Systems II course (sphinxdoc)
+
+* Željko Svedružić's Biomolecular Structure and Function Laboratory
+  (BioSFLab) (sphinx_bootstrap_theme)
+
+
+Books produced using Sphinx
+===========================
+
+* "The Art of Community" (Japanese translation)
+
+* "Die Wahrheit des Sehens. Der DEKALOG von Krzysztof Kieślowski"
+
+* "Expert Python Programming"
+
+* "Expert Python Programming" (Japanese translation)
+
+* "Expert Python Programming 2nd Edition" (Japanese translation)
+
+* "The Hitchhiker's Guide to Python"
+
+* "LassoGuide"
+
+* "Learning Sphinx" (in Japanese)
+
+* "Learning System Programming with Go (Japanese)"
+
+* "Mercurial: the definitive guide (Second edition)"
+
+* "Mithril -- The fastest clientside MVC (Japanese)"
+
+* "Pioneers and Prominent Men of Utah"
+
+* "Pomodoro Technique Illustrated" (Japanese translation)
+
+* "Professional Software Development"
+
+* "Python Professional Programming" (in Japanese)
+
+* "Python Professional Programming 2nd Edition" (in Japanese)
+
+* "Python Professional Programming 3rd Edition" (in Japanese)
+
+* Python Course by Yuri Petrov (Russian)
+
+* "Real World HTTP -- Learning The Internet and Web Technology via its
+  history and code (Japanese)"
+
+* "Redmine Primer 5th Edition (in Japanese)"
+
+* "The repoze.bfg Web Application Framework"
+
+* "The Self-Taught Programmer" (Japanese translation)
+
+* "Simple and Steady Way of Learning for Software Engineering" (in
+  Japanese)
+
+* "Software-Dokumentation mit Sphinx"
+
+* "Theoretical Physics Reference"
+
+* "The Varnish Book"
+
+
+Theses produced using Sphinx
+============================
+
+* "A Web-Based System for Comparative Analysis of OpenStreetMap Data
+  by the Use of CouchDB"
+
+* "Content Conditioning and Distribution for Dynamic Virtual Worlds"
+
+* "The Sphinx Thesis Resource"
+
+
+Projects integrating Sphinx functionality
+=========================================
+
+* Read the Docs, a software-as-a-service documentation hosting
+  platform, uses Sphinx to automatically build documentation updates
+  that are pushed to GitHub.
+
+* Spyder, the Scientific Python Development Environment, uses Sphinx
+  in its help pane to render rich documentation for functions, classes
+  and methods automatically or on-demand.
diff --git a/_build/doc/extdev/appapi.txt b/_build/doc/extdev/appapi.txt
new file mode 100644
index 000000000..03f256740
--- /dev/null
+++ b/_build/doc/extdev/appapi.txt
@@ -0,0 +1,867 @@
+Application API
+***************
+
+Each Sphinx extension is a Python module with at least a "setup()"
+function.  This function is called at initialization time with one
+argument, the application object representing the Sphinx process.
+
+class sphinx.application.Sphinx
+
+   This application object has the public API described in the
+   following.
+
+
+Extension setup
+===============
+
+These methods are usually called in an extension's "setup()" function.
+
+Examples of using the Sphinx extension API can be seen in the
+"sphinx.ext" package.
+
+Sphinx.setup_extension(name)
+
+   Import and setup a Sphinx extension module.
+
+   Load the extension given by the module *name*.  Use this if your
+   extension needs the features provided by another extension.  No-op
+   if called twice.
+
+Sphinx.require_sphinx(version)
+
+   Check the Sphinx version if requested.
+
+   Compare *version* (which must be a "major.minor" version string,
+   e.g. "'1.1'") with the version of the running Sphinx, and abort the
+   build when it is too old.
+
+   New in version 1.0.
+
+Sphinx.connect(event, callback)
+
+   Register *callback* to be called when *event* is emitted.
+
+   For details on available core events and the arguments of callback
+   functions, please see Sphinx core events.
+
+   Registered callbacks will be invoked on event in the order of
+   *priority* and registration.  The priority is ascending order.
+
+   The method returns a "listener ID" that can be used as an argument
+   to "disconnect()".
+
+   Changed in version 3.0: Support *priority*
+
+Sphinx.disconnect(listener_id)
+
+   Unregister callback by *listener_id*.
+
+Sphinx.add_builder(builder)
+
+   Register a new builder.
+
+   *builder* must be a class that inherits from "Builder".
+
+   If *override* is True, the given *builder* is forcedly installed
+   even if a builder having the same name is already installed.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_config_value(name, default, rebuild)
+
+   Register a configuration value.
+
+   This is necessary for Sphinx to recognize new values and set
+   default values accordingly.  The *name* should be prefixed with the
+   extension name, to avoid clashes.  The *default* value can be any
+   Python object. The string value *rebuild* must be one of those
+   values:
+
+   * "'env'" if a change in the setting only takes effect when a
+     document is parsed -- this means that the whole environment must
+     be rebuilt.
+
+   * "'html'" if a change in the setting needs a full rebuild of HTML
+     documents.
+
+   * "''" if a change in the setting will not need any special
+     rebuild.
+
+   Changed in version 0.6: Changed *rebuild* from a simple boolean
+   (equivalent to "''" or "'env'") to a string.  However, booleans are
+   still accepted and converted internally.
+
+   Changed in version 0.4: If the *default* value is a callable, it
+   will be called with the config object as its argument in order to
+   get the default value. This can be used to implement config values
+   whose default depends on other values.
+
+Sphinx.add_event(name)
+
+   Register an event called *name*.
+
+   This is needed to be able to emit it.
+
+Sphinx.set_translator(name, translator_class)
+
+   Register or override a Docutils translator class.
+
+   This is used to register a custom output translator or to replace a
+   builtin translator.  This allows extensions to use custom
+   translator and define custom nodes for the translator (see
+   "add_node()").
+
+   If *override* is True, the given *translator_class* is forcedly
+   installed even if a translator for *name* is already installed.
+
+   New in version 1.3.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_node(node, \*\*kwds)
+
+   Register a Docutils node class.
+
+   This is necessary for Docutils internals.  It may also be used in
+   the future to validate nodes in the parsed documents.
+
+   Node visitor functions for the Sphinx HTML, LaTeX, text and manpage
+   writers can be given as keyword arguments: the keyword should be
+   one or more of "'html'", "'latex'", "'text'", "'man'", "'texinfo'"
+   or any other supported translators, the value a 2-tuple of "(visit,
+   depart)" methods.  "depart" can be "None" if the "visit" function
+   raises "docutils.nodes.SkipNode".  Example:
+
+      class math(docutils.nodes.Element): pass
+
+      def visit_math_html(self, node):
+          self.body.append(self.starttag(node, 'math'))
+      def depart_math_html(self, node):
+          self.body.append('</math>')
+
+      app.add_node(math, html=(visit_math_html, depart_math_html))
+
+   Obviously, translators for which you don't specify visitor methods
+   will choke on the node when encountered in a document to translate.
+
+   If *override* is True, the given *node* is forcedly installed even
+   if a node having the same name is already installed.
+
+   Changed in version 0.5: Added the support for keyword arguments
+   giving visit functions.
+
+Sphinx.add_enumerable_node(node, figtype, title_getter=None, \*\*kwds)
+
+   Register a Docutils node class as a numfig target.
+
+   Sphinx numbers the node automatically. And then the users can refer
+   it using "numref".
+
+   *figtype* is a type of enumerable nodes.  Each figtypes have
+   individual numbering sequences.  As a system figtypes, "figure",
+   "table" and "code-block" are defined.  It is able to add custom
+   nodes to these default figtypes.  It is also able to define new
+   custom figtype if new figtype is given.
+
+   *title_getter* is a getter function to obtain the title of node.
+   It takes an instance of the enumerable node, and it must return its
+   title as string.  The title is used to the default title of
+   references for "ref".  By default, Sphinx searches
+   "docutils.nodes.caption" or "docutils.nodes.title" from the node as
+   a title.
+
+   Other keyword arguments are used for node visitor functions. See
+   the "Sphinx.add_node()" for details.
+
+   If *override* is True, the given *node* is forcedly installed even
+   if a node having the same name is already installed.
+
+   New in version 1.4.
+
+Sphinx.add_directive(name, directiveclass)
+
+   Register a Docutils directive.
+
+   *name* must be the prospective directive name.  *cls* is a
+   directive class which inherits "docutils.parsers.rst.Directive".
+   For more details, see the Docutils docs .
+
+   For example, a custom directive named "my-directive" would be added
+   like this:
+
+      from docutils.parsers.rst import Directive, directives
+
+      class MyDirective(Directive):
+          has_content = True
+          required_arguments = 1
+          optional_arguments = 0
+          final_argument_whitespace = True
+          option_spec = {
+              'class': directives.class_option,
+              'name': directives.unchanged,
+          }
+
+          def run(self):
+              ...
+
+      def setup(app):
+          add_directive('my-directive', MyDirective)
+
+   If *override* is True, the given *cls* is forcedly installed even
+   if a directive named as *name* is already installed.
+
+   Changed in version 0.6: Docutils 0.5-style directive classes are
+   now supported.
+
+   Deprecated since version 1.8: Docutils 0.4-style (function based)
+   directives support is deprecated.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_role(name, role)
+
+   Register a Docutils role.
+
+   *name* must be the role name that occurs in the source, *role* the
+   role function. Refer to the Docutils documentation for more
+   information.
+
+   If *override* is True, the given *role* is forcedly installed even
+   if a role named as *name* is already installed.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_generic_role(name, nodeclass)
+
+   Register a generic Docutils role.
+
+   Register a Docutils role that does nothing but wrap its contents in
+   the node given by *nodeclass*.
+
+   If *override* is True, the given *nodeclass* is forcedly installed
+   even if a role named as *name* is already installed.
+
+   New in version 0.6.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_domain(domain)
+
+   Register a domain.
+
+   Make the given *domain* (which must be a class; more precisely, a
+   subclass of "Domain") known to Sphinx.
+
+   If *override* is True, the given *domain* is forcedly installed
+   even if a domain having the same name is already installed.
+
+   New in version 1.0.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_directive_to_domain(domain, name, directiveclass)
+
+   Register a Docutils directive in a domain.
+
+   Like "add_directive()", but the directive is added to the domain
+   named *domain*.
+
+   If *override* is True, the given *directive* is forcedly installed
+   even if a directive named as *name* is already installed.
+
+   New in version 1.0.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_role_to_domain(domain, name, role)
+
+   Register a Docutils role in a domain.
+
+   Like "add_role()", but the role is added to the domain named
+   *domain*.
+
+   If *override* is True, the given *role* is forcedly installed even
+   if a role named as *name* is already installed.
+
+   New in version 1.0.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_index_to_domain(domain, index)
+
+   Register a custom index for a domain.
+
+   Add a custom *index* class to the domain named *domain*.  *index*
+   must be a subclass of "Index".
+
+   If *override* is True, the given *index* is forcedly installed even
+   if an index having the same name is already installed.
+
+   New in version 1.0.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_object_type(directivename, rolename, indextemplate='', parse_node=None, ref_nodeclass=None, objname='', doc_field_types=[])
+
+   Register a new object type.
+
+   This method is a very convenient way to add a new *object* type
+   that can be cross-referenced.  It will do this:
+
+   * Create a new directive (called *directivename*) for documenting
+     an object.  It will automatically add index entries if
+     *indextemplate* is nonempty; if given, it must contain exactly
+     one instance of "%s".  See the example below for how the template
+     will be interpreted.
+
+   * Create a new role (called *rolename*) to cross-reference to these
+     object descriptions.
+
+   * If you provide *parse_node*, it must be a function that takes a
+     string and a docutils node, and it must populate the node with
+     children parsed from the string.  It must then return the name of
+     the item to be used in cross-referencing and index entries.  See
+     the "conf.py" file in the source for this documentation for an
+     example.
+
+   * The *objname* (if not given, will default to *directivename*)
+     names the type of object.  It is used when listing objects, e.g.
+     in search results.
+
+   For example, if you have this call in a custom Sphinx extension:
+
+      app.add_object_type('directive', 'dir', 'pair: %s; directive')
+
+   you can use this markup in your documents:
+
+      .. rst:directive:: function
+
+         Document a function.
+
+      <...>
+
+      See also the :rst:dir:`function` directive.
+
+   For the directive, an index entry will be generated as if you had
+   prepended
+
+      .. index:: pair: function; directive
+
+   The reference node will be of class "literal" (so it will be
+   rendered in a proportional font, as appropriate for code) unless
+   you give the *ref_nodeclass* argument, which must be a docutils
+   node class.  Most useful are "docutils.nodes.emphasis" or
+   "docutils.nodes.strong" -- you can also use
+   "docutils.nodes.generated" if you want no further text decoration.
+   If the text should be treated as literal (e.g. no smart quote
+   replacement), but not have typewriter styling, use
+   "sphinx.addnodes.literal_emphasis" or
+   "sphinx.addnodes.literal_strong".
+
+   For the role content, you have the same syntactical possibilities
+   as for standard Sphinx roles (see Cross-referencing syntax).
+
+   If *override* is True, the given object_type is forcedly installed
+   even if an object_type having the same name is already installed.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_crossref_type(directivename, rolename, indextemplate='', ref_nodeclass=None, objname='')
+
+   Register a new crossref object type.
+
+   This method is very similar to "add_object_type()" except that the
+   directive it generates must be empty, and will produce no output.
+
+   That means that you can add semantic targets to your sources, and
+   refer to them using custom roles instead of generic ones (like
+   "ref").  Example call:
+
+      app.add_crossref_type('topic', 'topic', 'single: %s',
+                            docutils.nodes.emphasis)
+
+   Example usage:
+
+      .. topic:: application API
+
+      The application API
+      -------------------
+
+      Some random text here.
+
+      See also :topic:`this section <application API>`.
+
+   (Of course, the element following the "topic" directive needn't be
+   a section.)
+
+   If *override* is True, the given crossref_type is forcedly
+   installed even if a crossref_type having the same name is already
+   installed.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_transform(transform)
+
+   Register a Docutils transform to be applied after parsing.
+
+   Add the standard docutils "Transform" subclass *transform* to the
+   list of transforms that are applied after Sphinx parses a reST
+   document.
+
+
+   priority range categories for Sphinx transforms
+   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+   +----------------------+----------------------------------------------------------------------------------+
+   | Priority             | Main purpose in Sphinx                                                           |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 0-99                 | Fix invalid nodes by docutils. Translate a doctree.                              |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 100-299              | Preparation                                                                      |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 300-399              | early                                                                            |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 400-699              | main                                                                             |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 700-799              | Post processing. Deadline to modify text and referencing.                        |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 800-899              | Collect referencing and referenced nodes. Domain processing.                     |
+   +----------------------+----------------------------------------------------------------------------------+
+   | 900-999              | Finalize and clean up.                                                           |
+   +----------------------+----------------------------------------------------------------------------------+
+
+   refs: Transform Priority Range Categories
+
+Sphinx.add_post_transform(transform)
+
+   Register a Docutils transform to be applied before writing.
+
+   Add the standard docutils "Transform" subclass *transform* to the
+   list of transforms that are applied before Sphinx writes a
+   document.
+
+Sphinx.add_js_file(filename, **kwargs)
+
+   Register a JavaScript file to include in the HTML output.
+
+   Add *filename* to the list of JavaScript files that the default
+   HTML template will include.  The filename must be relative to the
+   HTML static path , or a full URI with scheme.  If the keyword
+   argument "body" is given, its value will be added between the
+   "<script>" tags. Extra keyword arguments are included as attributes
+   of the "<script>" tag.
+
+   Example:
+
+      app.add_js_file('example.js')
+      # => <script src="_static/example.js"></script>
+
+      app.add_js_file('example.js', async="async")
+      # => <script src="_static/example.js" async="async"></script>
+
+      app.add_js_file(None, body="var myVariable = 'foo';")
+      # => <script>var myVariable = 'foo';</script>
+
+   New in version 0.5.
+
+   Changed in version 1.8: Renamed from "app.add_javascript()". And it
+   allows keyword arguments as attributes of script tag.
+
+Sphinx.add_css_file(filename, **kwargs)
+
+   Register a stylesheet to include in the HTML output.
+
+   Add *filename* to the list of CSS files that the default HTML
+   template will include.  The filename must be relative to the HTML
+   static path, or a full URI with scheme.  The keyword arguments are
+   also accepted for attributes of "<link>" tag.
+
+   Example:
+
+      app.add_css_file('custom.css')
+      # => <link rel="stylesheet" href="_static/custom.css" type="text/css" />
+
+      app.add_css_file('print.css', media='print')
+      # => <link rel="stylesheet" href="_static/print.css"
+      #          type="text/css" media="print" />
+
+      app.add_css_file('fancy.css', rel='alternate stylesheet', title='fancy')
+      # => <link rel="alternate stylesheet" href="_static/fancy.css"
+      #          type="text/css" title="fancy" />
+
+   New in version 1.0.
+
+   Changed in version 1.6: Optional "alternate" and/or "title"
+   attributes can be supplied with the *alternate* (of boolean type)
+   and *title* (a string) arguments. The default is no title and
+   *alternate* = "False". For more information, refer to the
+   documentation.
+
+   Changed in version 1.8: Renamed from "app.add_stylesheet()". And it
+   allows keyword arguments as attributes of link tag.
+
+Sphinx.add_latex_package(packagename, options=None)
+
+   Register a package to include in the LaTeX source code.
+
+   Add *packagename* to the list of packages that LaTeX source code
+   will include.  If you provide *options*, it will be taken to
+   *usepackage* declaration.  If you set *after_hyperref* truthy, the
+   package will be loaded after "hyperref" package.
+
+      app.add_latex_package('mypackage')
+      # => \usepackage{mypackage}
+      app.add_latex_package('mypackage', 'foo,bar')
+      # => \usepackage[foo,bar]{mypackage}
+
+   New in version 1.3.
+
+   New in version 3.1: *after_hyperref* option.
+
+Sphinx.add_lexer(alias, lexer)
+
+   Register a new lexer for source code.
+
+   Use *lexer* to highlight code blocks with the given language
+   *alias*.
+
+   New in version 0.6.
+
+   Changed in version 2.1: Take a lexer class as an argument.  An
+   instance of lexers are still supported until Sphinx-3.x.
+
+Sphinx.add_autodocumenter(cls)
+
+   Register a new documenter class for the autodoc extension.
+
+   Add *cls* as a new documenter class for the "sphinx.ext.autodoc"
+   extension.  It must be a subclass of
+   "sphinx.ext.autodoc.Documenter".  This allows to auto-document new
+   types of objects.  See the source of the autodoc module for
+   examples on how to subclass "Documenter".
+
+   If *override* is True, the given *cls* is forcedly installed even
+   if a documenter having the same name is already installed.
+
+   New in version 0.6.
+
+   Changed in version 2.2: Add *override* keyword.
+
+Sphinx.add_autodoc_attrgetter(type, getter)
+
+   Register a new "getattr"-like function for the autodoc extension.
+
+   Add *getter*, which must be a function with an interface compatible
+   to the "getattr()" builtin, as the autodoc attribute getter for
+   objects that are instances of *typ*.  All cases where autodoc needs
+   to get an attribute of a type are then handled by this function
+   instead of "getattr()".
+
+   New in version 0.6.
+
+Sphinx.add_search_language(cls)
+
+   Register a new language for the HTML search index.
+
+   Add *cls*, which must be a subclass of
+   "sphinx.search.SearchLanguage", as a support language for building
+   the HTML full-text search index.  The class must have a *lang*
+   attribute that indicates the language it should be used for.  See
+   >>:confval:`html_search_language`<<.
+
+   New in version 1.1.
+
+Sphinx.add_source_suffix(suffix, filetype)
+
+   Register a suffix of source files.
+
+   Same as >>:confval:`source_suffix`<<.  The users can override this
+   using the setting.
+
+   If *override* is True, the given *suffix* is forcedly installed
+   even if a same suffix is already installed.
+
+   New in version 1.8.
+
+Sphinx.add_source_parser(parser)
+
+   Register a parser class.
+
+   If *override* is True, the given *parser* is forcedly installed
+   even if a parser for the same suffix is already installed.
+
+   New in version 1.4.
+
+   Changed in version 1.8: *suffix* argument is deprecated.  It only
+   accepts *parser* argument. Use "add_source_suffix()" API to
+   register suffix instead.
+
+   Changed in version 1.8: Add *override* keyword.
+
+Sphinx.add_env_collector(collector)
+
+   Register an environment collector class.
+
+   Refer to Environment Collector API.
+
+   New in version 1.6.
+
+Sphinx.add_html_theme(name, theme_path)
+
+   Register a HTML Theme.
+
+   The *name* is a name of theme, and *path* is a full path to the
+   theme (refs: Distribute your theme as a Python package).
+
+   New in version 1.6.
+
+Sphinx.add_html_math_renderer(name, inline_renderers, block_renderers)
+
+   Register a math renderer for HTML.
+
+   The *name* is a name of math renderer.  Both *inline_renderers* and
+   *block_renderers* are used as visitor functions for the HTML
+   writer: the former for inline math node ("nodes.math"), the latter
+   for block math node ("nodes.math_block").  Regarding visitor
+   functions, see "add_node()" for details.
+
+   New in version 1.8.
+
+Sphinx.add_message_catalog(catalog, locale_dir)
+
+   Register a message catalog.
+
+   The *catalog* is a name of catalog, and *locale_dir* is a base path
+   of message catalog.  For more details, see
+   "sphinx.locale.get_translation()".
+
+   New in version 1.8.
+
+Sphinx.is_parallel_allowed(typ)
+
+   Check parallel processing is allowed or not.
+
+   "typ" is a type of processing; "'read'" or "'write'".
+
+exception sphinx.application.ExtensionError
+
+   All these methods raise this exception if something went wrong with
+   the extension API.
+
+
+Emitting events
+===============
+
+class sphinx.application.Sphinx
+
+   emit(event, \*arguments)
+
+      Emit *event* and pass *arguments* to the callback functions.
+
+      Return the return values of all callbacks as a list.  Do not
+      emit core Sphinx events in extensions!
+
+      Changed in version 3.1: Added *allowed_exceptions* to specify
+      path-through exceptions
+
+   emit_firstresult(event, \*arguments)
+
+      Emit *event* and pass *arguments* to the callback functions.
+
+      Return the result of the first callback that doesn't return
+      "None".
+
+      New in version 0.5.
+
+      Changed in version 3.1: Added *allowed_exceptions* to specify
+      path-through exceptions
+
+
+Sphinx runtime information
+==========================
+
+The application object also provides runtime information as
+attributes.
+
+Sphinx.project
+
+   Target project.  See "Project".
+
+Sphinx.srcdir
+
+   Source directory.
+
+Sphinx.confdir
+
+   Directory containing "conf.py".
+
+Sphinx.doctreedir
+
+   Directory for storing pickled doctrees.
+
+Sphinx.outdir
+
+   Directory for storing built document.
+
+
+Sphinx core events
+==================
+
+These events are known to the core.  The arguments shown are given to
+the registered event handlers.  Use "Sphinx.connect()" in an
+extension's "setup" function (note that "conf.py" can also have a
+"setup" function) to connect handlers to the events.  Example:
+
+   def source_read_handler(app, docname, source):
+       print('do something here...')
+
+   def setup(app):
+       app.connect('source-read', source_read_handler)
+
+Below is an overview of each event that happens during a build. In the
+list below, we include the event name, its callback parameters, and
+the input and output type for that event:
+
+   1. event.config-inited(app,config)
+   2. event.builder-inited(app)
+   3. event.env-get-outdated(app, env, added, changed, removed)
+   4. event.env-before-read-docs(app, env, docnames)
+
+   for docname in docnames:
+      5.  event.env-purge-doc(app, env, docname)
+      if doc changed and not removed:
+         6. source-read(app, docname, source)
+         7. run source parsers: text -> docutils.document (parsers can be added with the app.add_source_parser() API)
+         8. apply transforms (by priority): docutils.document -> docutils.document
+            - event.doctree-read(app, doctree) is called in the middly of transforms,
+              transforms come before/after this event depending on their priority.
+   9. (if running in parallel mode, for each process) event.env-merged-info(app, env, docnames, other)
+   10. event.env-updated(app, env)
+   11. event.env-get-updated(app, env)
+   12. event.env-check-consistency(app, env)
+
+   # The updated-docs list can be builder dependent, but generally includes all new/changed documents,
+   # plus any output from `env-get-updated`, and then all "parent" documents in the ToC tree
+   # For builders that output a single page, they are first joined into a single doctree before post-transforms/doctree-resolved
+   for docname in updated-docs:
+      13. apply post-transforms (by priority): docutils.document -> docutils.document
+      14. event.doctree-resolved(app, doctree, docname)
+          - (for any reference node that fails to resolve) event.missing-reference(env, node, contnode)
+          - (for any reference node that fails to resolve) event.warn-missing-reference(domain, node)
+
+   15. Generate output files
+   16. event.build-finished(app, exception)
+
+Here is a more detailed list of these events.
+
+
+Checking the Sphinx version
+===========================
+
+Use this to adapt your extension to API changes in Sphinx.
+
+sphinx.version_info = (3, 5, 0, 'beta', 0)
+
+   Version info for better programmatic use.
+
+   A tuple of five elements; for Sphinx version 1.2.1 beta 3 this
+   would be "(1, 2, 1, 'beta', 3)". The fourth element can be one of:
+   "alpha", "beta", "rc", "final". "final" always has 0 as the last
+   element.
+
+   New in version 1.2: Before version 1.2, check the string
+   "sphinx.__version__".
+
+
+The Config object
+=================
+
+class sphinx.config.Config(config: Dict[str, Any] = {}, overrides: Dict[str, Any] = {})
+
+   Configuration file abstraction.
+
+   The config object makes the values of all config values available
+   as attributes.
+
+   It is exposed via the "sphinx.application.Application.config" and
+   "sphinx.environment.Environment.config" attributes. For example, to
+   get the value of >>:confval:`language`<<, use either
+   "app.config.language" or "env.config.language".
+
+
+The template bridge
+===================
+
+class sphinx.application.TemplateBridge
+
+   This class defines the interface for a "template bridge", that is,
+   a class that renders templates given a template name and a context.
+
+   init(builder: Builder, theme: sphinx.theming.Theme = None, dirs: List[str] = None) -> None
+
+      Called by the builder to initialize the template system.
+
+      *builder* is the builder object; you'll probably want to look at
+      the value of "builder.config.templates_path".
+
+      *theme* is a "sphinx.theming.Theme" object or None; in the
+      latter case, *dirs* can be list of fixed directories to look for
+      templates.
+
+   newest_template_mtime() -> float
+
+      Called by the builder to determine if output files are outdated
+      because of template changes.  Return the mtime of the newest
+      template file that was changed.  The default implementation
+      returns "0".
+
+   render(template: str, context: Dict) -> None
+
+      Called by the builder to render a template given as a filename
+      with a specified context (a Python dictionary).
+
+   render_string(template: str, context: Dict) -> str
+
+      Called by the builder to render a template given as a string
+      with a specified context (a Python dictionary).
+
+
+Exceptions
+==========
+
+exception sphinx.errors.SphinxError
+
+   Base class for Sphinx errors.
+
+   This is the base class for "nice" exceptions.  When such an
+   exception is raised, Sphinx will abort the build and present the
+   exception category and message to the user.
+
+   Extensions are encouraged to derive from this exception for their
+   custom errors.
+
+   Exceptions *not* derived from "SphinxError" are treated as
+   unexpected and shown to the user with a part of the traceback (and
+   the full traceback saved in a temporary file).
+
+   category
+
+      Description of the exception "category", used in converting the
+      exception to a string ("category: message").  Should be set
+      accordingly in subclasses.
+
+exception sphinx.errors.ConfigError
+
+   Configuration error.
+
+exception sphinx.errors.ExtensionError(message: str, orig_exc: Optional[Exception] = None)
+
+   Extension error.
+
+exception sphinx.errors.ThemeError
+
+   Theme error.
+
+exception sphinx.errors.VersionRequirementError
+
+   Incompatible Sphinx version error.
diff --git a/_build/doc/extdev/builderapi.txt b/_build/doc/extdev/builderapi.txt
new file mode 100644
index 000000000..6fbd99764
--- /dev/null
+++ b/_build/doc/extdev/builderapi.txt
@@ -0,0 +1,113 @@
+Builder API
+***********
+
+class sphinx.builders.Builder
+
+   This is the base class for all builders.
+
+   These attributes should be set on builder classes:
+
+   name = ''
+
+      The builder's name, for the -b command line option.
+
+   format = ''
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   epilog = ''
+
+      The message emitted upon successful build completion. This can
+      be a printf-style template string with the following keys:
+      "outdir", "project"
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   supported_remote_images = False
+
+      The builder supports remote images or not.
+
+   supported_data_uri_images = False
+
+      The builder supports data URIs or not.
+
+   default_translator_class: Type[nodes.NodeVisitor] = None
+
+      default translator class for the builder.  This can be
+      overridden by "app.set_translator()".
+
+   These methods are predefined and will be called from the
+   application:
+
+   get_relative_uri(from_: str, to: str, typ: Optional[str] = None) -> str
+
+      Return a relative URI between two source filenames.
+
+      May raise environment.NoUri if there's no way to return a
+      sensible URI.
+
+   build_all() -> None
+
+      Build all source files.
+
+   build_specific(filenames: List[str]) -> None
+
+      Only rebuild as much as needed for changes in the *filenames*.
+
+   build_update() -> None
+
+      Only rebuild what was changed or added since last build.
+
+   build(docnames: Iterable[str], summary: Optional[str] = None, method: str = 'update') -> None
+
+      Main build method.
+
+      First updates the environment, and then calls "write()".
+
+   These methods can be overridden in concrete builder classes:
+
+   init() -> None
+
+      Load necessary templates and perform initialization.  The
+      default implementation does nothing.
+
+   get_outdated_docs() -> Union[str, Iterable[str]]
+
+      Return an iterable of output files that are outdated, or a
+      string describing what an update build will build.
+
+      If the builder does not output individual files corresponding to
+      source files, return a string here.  If it does, return an
+      iterable of those files that need to be written.
+
+   get_target_uri(docname: str, typ: Optional[str] = None) -> str
+
+      Return the target URI for a document name.
+
+      *typ* can be used to qualify the link characteristic for
+      individual builders.
+
+   prepare_writing(docnames: Set[str]) -> None
+
+      A place where you can add logic before "write_doc()" is run
+
+   write_doc(docname: str, doctree: docutils.nodes.document) -> None
+
+      Where you actually write something to the filesystem.
+
+   finish() -> None
+
+      Finish the building process.
+
+      The default implementation does nothing.
+
+   **Attributes**
+
+   events
+
+      An "EventManager" object.
diff --git a/_build/doc/extdev/collectorapi.txt b/_build/doc/extdev/collectorapi.txt
new file mode 100644
index 000000000..96e9d7b9f
--- /dev/null
+++ b/_build/doc/extdev/collectorapi.txt
@@ -0,0 +1,42 @@
+Environment Collector API
+*************************
+
+class sphinx.environment.collectors.EnvironmentCollector
+
+   An EnvironmentCollector is a specific data collector from each
+   document.
+
+   It gathers data and stores "BuildEnvironment" as a database.
+   Examples of specific data would be images, download files, section
+   titles, metadatas, index entries and toctrees, etc.
+
+   clear_doc(app: Sphinx, env: sphinx.environment.BuildEnvironment, docname: str) -> None
+
+      Remove specified data of a document.
+
+      This method is called on the removal of the document.
+
+   get_outdated_docs(app: Sphinx, env: sphinx.environment.BuildEnvironment, added: Set[str], changed: Set[str], removed: Set[str]) -> List[str]
+
+      Return a list of docnames to re-read.
+
+      This methods is called before reading the documents.
+
+   get_updated_docs(app: Sphinx, env: sphinx.environment.BuildEnvironment) -> List[str]
+
+      Return a list of docnames to re-read.
+
+      This methods is called after reading the whole of documents
+      (experimental).
+
+   merge_other(app: Sphinx, env: sphinx.environment.BuildEnvironment, docnames: Set[str], other: sphinx.environment.BuildEnvironment) -> None
+
+      Merge in specified data regarding docnames from a different
+      *BuildEnvironment* object which coming from a subprocess in
+      parallel builds.
+
+   process_doc(app: Sphinx, doctree: docutils.nodes.document) -> None
+
+      Process a document and gather specific data from it.
+
+      This method is called after the document is read.
diff --git a/_build/doc/extdev/deprecated.txt b/_build/doc/extdev/deprecated.txt
new file mode 100644
index 000000000..f40d274a3
--- /dev/null
+++ b/_build/doc/extdev/deprecated.txt
@@ -0,0 +1,779 @@
+Deprecated APIs
+***************
+
+On developing Sphinx, we are always careful to the compatibility of
+our APIs. But, sometimes, the change of interface are needed for some
+reasons.  In such cases, we've marked them as deprecated. And they are
+kept during the two major versions (for more details, please see
+Deprecation policy).
+
+The following is a list of deprecated interfaces.
+
+
+deprecated APIs
+^^^^^^^^^^^^^^^
+
++------------------------------------------+------------+------------+------------------------------------------+
+| Target                                   | Deprecated | (will be)  | Alternatives                             |
+|                                          |            | Removed    |                                          |
+|==========================================|============|============|==========================================|
+| "sphinx.ext.autodoc.importer.get_module  | 3.5        | 5.0        | "sphinx.ext.autodoc.ModuleDocumenter.ge  |
+| _members()"                              |            |            | t_module_members()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "follow_wrapped" argument of         | 3.4        | 5.0        | N/A                                      |
+| "sphinx.util.inspect.signature()"        |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "no_docstring" argument of "sphinx.  | 3.4        | 5.0        | "sphinx.ext.autodoc.Documenter.get_doc(  |
+| ext.autodoc.Documenter.add_content()"    |            |            | )"                                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.Documenter.get_obje  | 3.4        | 6.0        | "sphinx.ext.autodoc.ClassDocumenter.get  |
+| ct_members()"                            |            |            | _object_members()"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.DataDeclarationDocu  | 3.4        | 5.0        | "sphinx.ext.autodoc.DataDocumenter"      |
+| menter"                                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.GenericAliasDocumen  | 3.4        | 5.0        | "sphinx.ext.autodoc.DataDocumenter"      |
+| ter"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.InstanceAttributeDo  | 3.4        | 5.0        | "sphinx.ext.autodoc.AttributeDocumenter" |
+| cumenter"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.SlotsAttributeDocum  | 3.4        | 5.0        | "sphinx.ext.autodoc.AttributeDocumenter" |
+| enter"                                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.TypeVarDocumenter"   | 3.4        | 5.0        | "sphinx.ext.autodoc.DataDocumenter"      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer._getannota  | 3.4        | 4.0        | "sphinx.util.inspect.getannotations()"   |
+| tions()"                                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer._getmro()"  | 3.4        | 4.0        | "sphinx.util.inspect.getmro()"           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.pycode.ModuleAnalyzer.parse()"   | 3.4        | 5.0        | "sphinx.pycode.ModuleAnalyzer.analyze()" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.movefile()"          | 3.4        | 5.0        | "os.replace()"                           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.requests.is_ssl_error()"    | 3.4        | 5.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.latex.LaTeXBuilder.use  | 3.3        | 5.0        | N/A                                      |
+| packages"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.latex.LaTeXBuilder.use  | 3.3        | 5.0        | N/A                                      |
+| packages_afger_hyperref"                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.SingledispatchFunct  | 3.3        | 5.0        | "sphinx.ext.autodoc.FunctionDocumenter"  |
+| ionDocumenter"                           |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.SingledispatchMetho  | 3.3        | 5.0        | "sphinx.ext.autodoc.MethodDocumenter"    |
+| dDocumenter"                             |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.members_set_option(  | 3.2        | 5.0        | N/A                                      |
+| )"                                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.merge_special_membe  | 3.2        | 5.0        | "sphinx.ext.autodoc.merge_members_optio  |
+| rs_option()"                             |            |            | n()"                                     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.texinfo.TexinfoWriter.d  | 3.2        | 5.0        | "sphinx.writers.texinfo.TexinfoWriter.d  |
+| esc"                                     |            |            | escs"                                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| The first argument for "sphinx.ext.auto  | 3.1        | 5.0        | N/A                                      |
+| summary.generate.AutosummaryRenderer"    |            |            |                                          |
+| has been changed to Sphinx object        |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.generate.Autosu  | 3.1        | 5.0        | N/A                                      |
+| mmaryRenderer" takes an object type as   |            |            |                                          |
+| an argument                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "ignore" argument of "sphinx.ext.au  | 3.1        | 5.0        | N/A                                      |
+| todoc.Documenter.get_doc()"              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "template_dir" argument of "sphinx.  | 3.1        | 5.0        | N/A                                      |
+| ext.autosummary.generate.AutosummaryRen  |            |            |                                          |
+| derer"                                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "module" argument of "sphinx.ext.au  | 3.0        | 5.0        | N/A                                      |
+| tosummary.generate.find_autosummary_in_  |            |            |                                          |
+| docstring()"                             |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "builder" argument of "sphinx.ext.a  | 3.1        | 5.0        | N/A                                      |
+| utosummary.generate.generate_autosummar  |            |            |                                          |
+| y_docs()"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "template_dir" argument of "sphinx.  | 3.1        | 5.0        | N/A                                      |
+| ext.autosummary.generate.generate_autos  |            |            |                                          |
+| ummary_docs()"                           |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.generate.Autosu  | 3.1        | 5.0        | N/A                                      |
+| mmaryRenderer.exists()"                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "ignore" argument of "sphinx.util.d  | 3.1        | 5.0        | N/A                                      |
+| ocstring.prepare_docstring()"            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.rpartition()"               | 3.1        | 5.0        | "str.rpartition()"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "desc_signature['first']"                |            | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.DescDirective"        | 3.0        | 5.0        | "sphinx.directives.ObjectDescription"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.std.StandardDomain.add_  | 3.0        | 5.0        | "sphinx.domains.std.StandardDomain.note  |
+| object()"                                |            |            | _object()"                               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.python.PyDecoratorMixin" | 3.0        | 5.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.get_documenters()"   | 3.0        | 5.0        | "sphinx.registry.documenters"            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.process_autosum  | 3.0        | 5.0        | N/A                                      |
+| mary_toc()"                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.parsers.Parser.app"              | 3.0        | 5.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.testing.path.Path.text()"        | 3.0        | 5.0        | "sphinx.testing.path.Path.read_text()"   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.testing.path.Path.bytes()"       | 3.0        | 5.0        | "sphinx.testing.path.Path.read_bytes()"  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.inspect.getargspec()"       | 3.0        | 5.0        | "inspect.getargspec()"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXWriter.forma  | 3.0        | 5.0        | LaTeX Themes                             |
+| t_docclass()"                            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "decode" argument of                     | 2.4        | 4.0        | N/A                                      |
+| "sphinx.pycode.ModuleAnalyzer()"         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.other.Index"          | 2.4        | 4.0        | "sphinx.domains.index.IndexDirective"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.environment.temp_data['gloss_en  | 2.4        | 4.0        | "documents.nameids"                      |
+| tries']"                                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.environment.BuildEnvironment.in  | 2.4        | 4.0        | "sphinx.domains.index.IndexDomain"       |
+| dexentries"                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.environment.collectors.indexent  | 2.4        | 4.0        | "sphinx.domains.index.IndexDomain"       |
+| ries.IndexEntriesCollector"              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.FiletypeNotFoundError"        | 2.4        | 4.0        | "sphinx.errors.FiletypeNotFoundError"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.apidoc.INITPY"               | 2.4        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.apidoc.shall_skip()"         | 2.4        | 4.0        | "sphinx.ext.apidoc.is_skipped_package"   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.get_filetype()"               | 2.4        | 4.0        | "sphinx.util.get_filetype()"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.pycode.ModuleAnalyzer.encoding"  | 2.4        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.Index"                     | 2.4        | 4.0        | "sphinx.domains.index.IndexRole"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.detect_encoding()"          | 2.4        | 4.0        | "tokenize.detect_encoding()"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.get_module_source()"        | 2.4        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.inspect.Signature"          | 2.4        | 4.0        | "sphinx.util.inspect.signature" and "sp  |
+|                                          |            |            | hinx.util.inspect.stringify_signature()" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.inspect.safe_getmembers()"  | 2.4        | 4.0        | "inspect.getmembers()"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |
+| ettings.author"                          |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | "document['contentsname']"               |
+| ettings.contentsname"                    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | "document['docclass']"                   |
+| ettings.docclass"                        |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |
+| ettings.docname"                         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.s  | 2.4        | 4.0        | N/A                                      |
+| ettings.title"                           |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.ADDITIONAL_SETTIN  | 2.4        | 4.0        | "sphinx.builders.latex.constants.ADDITI  |
+| GS"                                      |            |            | ONAL_SETTINGS"                           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.DEFAULT_SETTINGS"  | 2.4        | 4.0        | "sphinx.builders.latex.constants.DEFAUL  |
+|                                          |            |            | T_SETTINGS"                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LUALATEX_DEFAULT_  | 2.4        | 4.0        | "sphinx.builders.latex.constants.LUALAT  |
+| FONTPKG"                                 |            |            | EX_DEFAULT_FONTPKG"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.PDFLATEX_DEFAULT_  | 2.4        | 4.0        | "sphinx.builders.latex.constants.PDFLAT  |
+| FONTPKG"                                 |            |            | EX_DEFAULT_FONTPKG"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.XELATEX_DEFAULT_F  | 2.4        | 4.0        | "sphinx.builders.latex.constants.XELATE  |
+| ONTPKG"                                  |            |            | X_DEFAULT_FONTPKG"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.XELATEX_GREEK_DEF  | 2.4        | 4.0        | "sphinx.builders.latex.constants.XELATE  |
+| AULT_FONTPKG"                            |            |            | X_GREEK_DEFAULT_FONTPKG"                 |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.gettext.POHEADER"       | 2.3        | 4.0        | "sphinx/templates/gettext/message.pot_t" |
+|                                          |            |            | (template file)                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxStandaloneReader.app"   | 2.3        | 4.0        | "sphinx.io.SphinxStandaloneReader.setup  |
+|                                          |            |            | ()"                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxStandaloneReader.env"   | 2.3        | 4.0        | "sphinx.io.SphinxStandaloneReader.setup  |
+|                                          |            |            | ()"                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.texescape.tex_escape_map"   | 2.3        | 4.0        | "sphinx.util.texescape.escape()"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.texescape.tex_hl_escape_ma  | 2.3        | 4.0        | "sphinx.util.texescape.hlescape()"       |
+| p_new"                                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.n  | 2.3        | 4.0        | N/A                                      |
+| o_contractions"                          |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.math.MathDomain.add_equ  | 2.2        | 4.0        | "sphinx.domains.math.MathDomain.note_eq  |
+| ation()"                                 |            |            | uation()"                                |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.math.MathDomain.get_nex  | 2.2        | 4.0        | "sphinx.domains.math.MathDomain.note_eq  |
+| t_equation_number()"                     |            |            | uation()"                                |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "info" and "warn" arguments of "sph  | 2.2        | 4.0        | "logging.info()" and "logging.warning()" |
+| inx.ext.autosummary.generate.generate_a  |            |            |                                          |
+| utosummary_docs()"                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.generate._simpl  | 2.2        | 4.0        | "logging.info()"                         |
+| e_info()"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.generate._simpl  | 2.2        | 4.0        | "logging.warning()"                      |
+| e_warn()"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.todo.merge_info()"           | 2.2        | 4.0        | "sphinx.ext.todo.TodoDomain"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.todo.process_todo_nodes()"   | 2.2        | 4.0        | "sphinx.ext.todo.TodoDomain"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.todo.process_todos()"        | 2.2        | 4.0        | "sphinx.ext.todo.TodoDomain"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.todo.purge_todos()"          | 2.2        | 4.0        | "sphinx.ext.todo.TodoDomain"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.latex.LaTeXBuilder.app  | 2.1        | 4.0        | N/A                                      |
+| ly_transforms()"                         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders._epub_base.EpubBuilder  | 2.1        | 4.0        | "html.escape()"                          |
+| .esc()"                                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Acks"                 | 2.1        | 4.0        | "sphinx.directives.other.Acks"           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Author"               | 2.1        | 4.0        | "sphinx.directives.other.Author"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Centered"             | 2.1        | 4.0        | "sphinx.directives.other.Centered"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Class"                | 2.1        | 4.0        | "sphinx.directives.other.Class"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.CodeBlock"            | 2.1        | 4.0        | "sphinx.directives.code.CodeBlock"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Figure"               | 2.1        | 4.0        | "sphinx.directives.patches.Figure"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.HList"                | 2.1        | 4.0        | "sphinx.directives.other.HList"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Highlight"            | 2.1        | 4.0        | "sphinx.directives.code.Highlight"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Include"              | 2.1        | 4.0        | "sphinx.directives.other.Include"        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Index"                | 2.1        | 4.0        | "sphinx.directives.other.Index"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.LiteralInclude"       | 2.1        | 4.0        | "sphinx.directives.code.LiteralInclude"  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Meta"                 | 2.1        | 4.0        | "sphinx.directives.patches.Meta"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.Only"                 | 2.1        | 4.0        | "sphinx.directives.other.Only"           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.SeeAlso"              | 2.1        | 4.0        | "sphinx.directives.other.SeeAlso"        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.TabularColumns"       | 2.1        | 4.0        | "sphinx.directives.other.TabularColumns" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.TocTree"              | 2.1        | 4.0        | "sphinx.directives.other.TocTree"        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.VersionChange"        | 2.1        | 4.0        | "sphinx.directives.other.VersionChange"  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.python.PyClassmember"    | 2.1        | 4.0        | "sphinx.domains.python.PyAttribute",     |
+|                                          |            |            | "sphinx.domains.python.PyMethod",        |
+|                                          |            |            | "sphinx.domains.python.PyClassMethod",   |
+|                                          |            |            | "sphinx.domains.python.PyObject" and     |
+|                                          |            |            | "sphinx.domains.python.PyStaticMethod"   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.python.PyModulelevel"    | 2.1        | 4.0        | "sphinx.domains.python.PyFunction",      |
+|                                          |            |            | "sphinx.domains.python.PyObject" and     |
+|                                          |            |            | "sphinx.domains.python.PyVariable"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.std.StandardDomain._res  | 2.1        | 4.0        | "sphinx.domains.citation.CitationDomain  |
+| olve_citation_xref()"                    |            |            | .resolve_xref()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | "sphinx.domains.citation.CitationDomain  |
+| _citations()"                            |            |            | .note_citation()"                        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | "sphinx.domains.citation.CitationDomain  |
+| _citation_refs()"                        |            |            | .note_citation_reference()"              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.std.StandardDomain.note  | 2.1        | 4.0        | "sphinx.domains.std.StandardDomain.proc  |
+| _labels()"                               |            |            | ess_doc()"                               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.environment.NoUri"               | 2.1        | 4.0        | "sphinx.errors.NoUri"                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.apidoc.format_directive()"   | 2.1        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.apidoc.format_heading()"     | 2.1        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.apidoc.makename()"           | 2.1        | 4.0        | "sphinx.ext.apidoc.module_join()"        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer.MockFinder" | 2.1        | 4.0        | "sphinx.ext.autodoc.mock.MockFinder"     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer.MockLoader" | 2.1        | 4.0        | "sphinx.ext.autodoc.mock.MockLoader"     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer.mock()"     | 2.1        | 4.0        | "sphinx.ext.autodoc.mock.mock()"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.autolink_role()" | 2.1        | 4.0        | "sphinx.ext.autosummary.AutoLink"        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.imgmath.DOC_BODY"            | 2.1        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.imgmath.DOC_BODY_PREVIEW"    | 2.1        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.imgmath.DOC_HEAD"            | 2.1        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.transforms.CitationReferences"   | 2.1        | 4.0        | "sphinx.domains.citation.CitationRefere  |
+|                                          |            |            | nceTransform"                            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.transforms.SmartQuotesSkipper"   | 2.1        | 4.0        | "sphinx.domains.citation.CitationDefini  |
+|                                          |            |            | tionTransform"                           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.docfields.DocFieldTransfor  | 2.1        | 4.0        | "sphinx.directives.ObjectDescription.ge  |
+| mer.preprocess_fieldtypes()"             |            |            | t_field_type_map()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.node.find_source_node()"    | 2.1        | 4.0        | "sphinx.util.node.get_node_source()"     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.i18n.find_catalog()"        | 2.1        | 4.0        | "sphinx.util.i18n.docname_to_domain()"   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.i18n.find_catalog_files()"  | 2.1        | 4.0        | "sphinx.util.i18n.CatalogRepository"     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.i18n.find_catalog_source_f  | 2.1        | 4.0        | "sphinx.util.i18n.CatalogRepository"     |
+| iles()"                                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "encoding" argument of                   | 2.0        | 4.0        | N/A                                      |
+| "autodoc.Documenter.get_doc()", "autodo  |            |            |                                          |
+| c.DocstringSignatureMixin.get_doc()", "  |            |            |                                          |
+| autodoc.DocstringSignatureMixin._find_s  |            |            |                                          |
+| ignature()", and                         |            |            |                                          |
+| "autodoc.ClassDocumenter.get_doc()"      |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| arguments of                             | 2.0        | 4.0        | N/A                                      |
+| "EpubBuilder.build_mimetype()",          |            |            |                                          |
+| "EpubBuilder.build_container()",         |            |            |                                          |
+| "EpubBuilder.build_content()",           |            |            |                                          |
+| "EpubBuilder.build_toc()" and            |            |            |                                          |
+| "EpubBuilder.build_epub()"               |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| arguments of                             | 2.0        | 4.0        | N/A                                      |
+| "Epub3Builder.build_navigation_doc()"    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "nodetype" argument of "sphinx.search.W  | 2.0        | 4.0        | N/A                                      |
+| ordCollector.is_meta_keywords()"         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "suffix" argument of                     | 2.0        | 4.0        | N/A                                      |
+| "BuildEnvironment.doc2path()"            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| string style "base" argument of          | 2.0        | 4.0        | "os.path.join()"                         |
+| "BuildEnvironment.doc2path()"            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.addnodes.abbreviation"           | 2.0        | 4.0        | "docutils.nodes.abbreviation"            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.applehelp"              | 2.0        | 4.0        | "sphinxcontrib.applehelp"                |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.devhelp"                | 2.0        | 4.0        | "sphinxcontrib.devhelp"                  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.epub3.Epub3Builder.val  | 2.0        | 4.0        | "sphinx.builders.epub3.validate_config_  |
+| idate_config_value()"                    |            |            | values()"                                |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.html.JSONHTMLBuilder"   | 2.0        | 4.0        | "sphinx.builders.serializinghtml.JSONHT  |
+|                                          |            |            | MLBuilder"                               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.html.PickleHTMLBuilder" | 2.0        | 4.0        | "sphinx.builders.serializinghtml.Pickle  |
+|                                          |            |            | HTMLBuilder"                             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.html.SerializingHTMLBu  | 2.0        | 4.0        | "sphinx.builders.serializinghtml.Serial  |
+| ilder"                                   |            |            | izingHTMLBuilder"                        |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.html.SingleFileHTMLBui  | 2.0        | 4.0        | "sphinx.builders.singlehtml.SingleFileH  |
+| lder"                                    |            |            | TMLBuilder"                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.html.WebHTMLBuilder"    | 2.0        | 4.0        | "sphinx.builders.serializinghtml.Pickle  |
+|                                          |            |            | HTMLBuilder"                             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.htmlhelp"               | 2.0        | 4.0        | "sphinxcontrib.htmlhelp"                 |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.htmlhelp.HTMLHelpBuild  | 2.0        | 4.0        | "open()"                                 |
+| er.open_file()"                          |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.builders.qthelp"                 | 2.0        | 4.0        | "sphinxcontrib.qthelp"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.cmd.quickstart.term_decode()"    | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.cmd.quickstart.TERM_ENCODING"    | 2.0        | 4.0        | "sys.stdin.encoding"                     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.config.check_unicode()"          | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.config.string_classes"           | 2.0        | 4.0        | "[str]"                                  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.cpp.DefinitionError.des  | 2.0        | 4.0        | "str(exc)"                               |
+| cription"                                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.cpp.NoOldIdError.descri  | 2.0        | 4.0        | "str(exc)"                               |
+| ption"                                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.domains.cpp.UnsupportedMultiCha  | 2.0        | 4.0        | "str(exc)"                               |
+| racterCharLiteral.decoded"               |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.Autosummary.war  | 2.0        | 4.0        | N/A                                      |
+| n()"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.Autosummary.gen  | 2.0        | 4.0        | N/A                                      |
+| opt"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.Autosummary.war  | 2.0        | 4.0        | N/A                                      |
+| nings"                                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autosummary.Autosummary.res  | 2.0        | 4.0        | N/A                                      |
+| ult"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.doctest.doctest_encode()"    | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.jsmath"                      | 2.0        | 4.0        | "sphinxcontrib.jsmath"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.abbr_role()"               | 2.0        | 4.0        | "sphinx.roles.Abbreviation"              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.emph_literal_role()"       | 2.0        | 4.0        | "sphinx.roles.EmphasizedLiteral"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.menusel_role()"            | 2.0        | 4.0        | "sphinx.roles.GUILabel" or               |
+|                                          |            |            | "sphinx.roles.MenuSelection"             |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.index_role()"              | 2.0        | 4.0        | "sphinx.roles.Index"                     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.roles.indexmarkup_role()"        | 2.0        | 4.0        | "sphinx.roles.PEP" or "sphinx.roles.RFC" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.testing.util.remove_unicode_lit  | 2.0        | 4.0        | N/A                                      |
+| eral()"                                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.attrdict"                   | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.force_decode()"             | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.get_matching_docs()"        | 2.0        | 4.0        | "sphinx.util.get_matching_files()"       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.inspect.Parameter"          | 2.0        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.jsonimpl"                   | 2.0        | 4.0        | "sphinxcontrib.serializinghtml.jsonimpl" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.EEXIST"              | 2.0        | 4.0        | "errno.EEXIST" or "FileExistsError"      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.EINVAL"              | 2.0        | 4.0        | "errno.EINVAL"                           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.ENOENT"              | 2.0        | 4.0        | "errno.ENOENT" or "FileNotFoundError"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.EPIPE"               | 2.0        | 4.0        | "errno.ENOENT" or "BrokenPipeError"      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.osutil.walk()"              | 2.0        | 4.0        | "os.walk()"                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.NoneType"          | 2.0        | 4.0        | "sphinx.util.typing.NoneType"            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.TextIOWrapper"     | 2.0        | 4.0        | "io.TextIOWrapper"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.UnicodeMixin"      | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.htmlescape()"      | 2.0        | 4.0        | "html.escape()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.indent()"          | 2.0        | 4.0        | "textwrap.indent()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.sys_encoding"      | 2.0        | 4.0        | "sys.getdefaultencoding()"               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.terminal_safe()"   | 2.0        | 4.0        | "sphinx.util.console.terminal_safe()"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.pycompat.u"                 | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.PeekableIterator"           | 2.0        | 4.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| Omitting the "filename" argument in an   | 2.0        | 4.0        | "IndexBuilder.feed(docname, filename,    |
+| overriddent "IndexBuilder.feed()"        |            |            | title, doctree)"                         |
+| method.                                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.ExtBabel"          | 2.0        | 4.0        | "sphinx.builders.latex.util.ExtBabel"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.b  | 2.0        | 4.0        | N/A                                      |
+| abel_defmacro()"                         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.application.Sphinx._setting_up_  | 2.0        | 3.0        | N/A                                      |
+| extension"                               |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The "importer" argument of "sphinx.ext.  | 2.0        | 3.0        | N/A                                      |
+| autodoc.importer._MockModule"            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.importer._MockImpor  | 2.0        | 3.0        | N/A                                      |
+| ter"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxBaseFileInput"          | 2.0        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxFileInput.supported"    | 2.0        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxRSTFileInput"           | 2.0        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.registry.SphinxComponentRegistr  | 2.0        | 3.0        | N/A                                      |
+| y.add_source_input()"                    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator._  | 2.0        | 3.0        | N/A                                      |
+| make_visit_admonition()"                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.c  | 2.0        | 4.0        | N/A                                      |
+| ollect_footnotes()"                      |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.texinfo.TexinfoTranslat  | 2.0        | 3.0        | N/A                                      |
+| or._make_visit_admonition()"             |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.text.TextTranslator._ma  | 2.0        | 3.0        | N/A                                      |
+| ke_depart_admonition()"                  |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.g  | 2.0        | 4.0        | N/A                                      |
+| enerate_numfig_format()"                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "highlightlang"                          | 1.8        | 4.0        | "highlight"                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "add_stylesheet()"                       | 1.8        | 4.0        | "add_css_file()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "add_javascript()"                       | 1.8        | 4.0        | "add_js_file()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| >>:confval:`autodoc_default_flags`<<     | 1.8        | 4.0        | >>:confval:`autodoc_default_options`<<   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "content" arguments of                   | 1.8        | 3.0        | N/A                                      |
+| "sphinx.util.image.guess_mimetype()"     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "gettext_compact" arguments of "sphinx.  | 1.8        | 3.0        | N/A                                      |
+| util.i18n.find_catalog_source_files()"   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxI18nReader.set_lineno_  | 1.8        | 3.0        | N/A                                      |
+| for_reporter()"                          |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.io.SphinxI18nReader.line"        | 1.8        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.directives.other.VersionChanges" | 1.8        | 3.0        | "sphinx.domains.changeset.VersionChange  |
+|                                          |            |            | s"                                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.highlighting.PygmentsBridge.unh  | 1.8        | 3.0        | N/A                                      |
+| ighlight()"                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "trim_doctest_flags" arguments of        | 1.8        | 3.0        | N/A                                      |
+| "sphinx.highlighting.PygmentsBridge"     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase"                    | 1.8        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.MathDomain"         | 1.8        | 3.0        | "sphinx.domains.math.MathDomain"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.MathDirective"      | 1.8        | 3.0        | "sphinx.directives.patches.MathDirectiv  |
+|                                          |            |            | e"                                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.math_role()"        | 1.8        | 3.0        | "docutils.parsers.rst.roles.math_role()" |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.setup_math()"       | 1.8        | 3.0        | "add_html_math_renderer()"               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.is_in_section_titl  | 1.8        | 3.0        | N/A                                      |
+| e()"                                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.get_node_equation_  | 1.8        | 3.0        | "sphinx.util.math.get_node_equation_num  |
+| number()"                                |            |            | ber()"                                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.wrap_displaymath()" | 1.8        | 3.0        | "sphinx.util.math.wrap_displaymath()"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.math" (node)        | 1.8        | 3.0        | "docutils.nodes.math"                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.displaymath" (node) | 1.8        | 3.0        | "docutils.nodes.math_block"              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.mathbase.eqref" (node)       | 1.8        | 3.0        | "sphinx.builders.latex.nodes.math_refer  |
+|                                          |            |            | ence"                                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "viewcode_import" (config value)         | 1.8        | 3.0        | >>:confval:`viewcode_follow_imported_me  |
+|                                          |            |            | mbers`<<                                 |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.Table.caption_foo  | 1.8        | 3.0        | N/A                                      |
+| tnotetexts"                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.Table.header_foot  | 1.8        | 3.0        | N/A                                      |
+| notetexts"                               |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.f  | 1.8        | 3.0        | N/A                                      |
+| ootnotestack"                            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.i  | 1.8        | 3.0        | N/A                                      |
+| n_container_literal_block"               |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.n  | 1.8        | 3.0        | N/A                                      |
+| ext_section_ids"                         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.n  | 1.8        | 3.0        | N/A                                      |
+| ext_hyperlink_ids"                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.r  | 1.8        | 3.0        | N/A                                      |
+| estrict_footnote()"                      |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.u  | 1.8        | 3.0        | N/A                                      |
+| nrestrict_footnote()"                    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.p  | 1.8        | 3.0        | N/A                                      |
+| ush_hyperlink_ids()"                     |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.p  | 1.8        | 3.0        | N/A                                      |
+| op_hyperlink_ids()"                      |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.b  | 1.8        | 3.0        | N/A                                      |
+| ibitems"                                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.h  | 1.8        | 3.0        | N/A                                      |
+| lsettingstack"                           |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.ExtBabel.get_shor  | 1.8        | 3.0        | N/A                                      |
+| thandoff()"                              |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |
+| hlightlang()"                            |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |
+| hlightlang_base()"                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |
+| hlightlangopts()"                        |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html.HTMLTranslator.hig  | 1.8        | 3.0        | N/A                                      |
+| hlightlinenothreshold()"                 |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |
+| ghlightlang()"                           |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |
+| ghlightlang_base()"                      |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |
+| ghlightlangopts()"                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.html5.HTMLTranslator.hi  | 1.8        | 3.0        | N/A                                      |
+| ghlightlinenothreshold()"                |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.writers.latex.LaTeXTranslator.c  | 1.8        | 3.0        | Nothing                                  |
+| heck_latex_elements()"                   |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.application.CONFIG_FILENAME"     | 1.8        | 3.0        | "sphinx.config.CONFIG_FILENAME"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Config.check_unicode()"                 | 1.8        | 3.0        | "sphinx.config.check_unicode()"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Config.check_types()"                   | 1.8        | 3.0        | "sphinx.config.check_confval_types()"    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "dirname", "filename" and "tags"         | 1.8        | 3.0        | "Config.read()"                          |
+| arguments of "Config.__init__()"         |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| The value of                             | 1.8        | 3.0        | see >>:confval:`html_search_options`<<   |
+| >>:confval:`html_search_options`<<       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.versioning.prepare()"            | 1.8        | 3.0        | "sphinx.versioning.UIDTransform"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx.override_domain()"               | 1.8        | 3.0        | "add_domain()"                           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx.import_object()"                 | 1.8        | 3.0        | "sphinx.util.import_object()"            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "suffix" argument of                     | 1.8        | 3.0        | "add_source_suffix()"                    |
+| "add_source_parser()"                    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.load()"                | 1.8        | 3.0        | "pickle.load()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.loads()"               | 1.8        | 3.0        | "pickle.loads()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.frompickle()"          | 1.8        | 3.0        | "pickle.load()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.dump()"                | 1.8        | 3.0        | "pickle.dump()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.dumps()"               | 1.8        | 3.0        | "pickle.dumps()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.topickle()"            | 1.8        | 3.0        | "pickle.dump()"                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment._nitpick_ignore"       | 1.8        | 3.0        | >>:confval:`nitpick_ignore`<<            |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.versionchanges"        | 1.8        | 3.0        | N/A                                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.update()"              | 1.8        | 3.0        | "Builder.read()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.read_doc()"            | 1.8        | 3.0        | "Builder.read_doc()"                     |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment._read_serial()"        | 1.8        | 3.0        | "Builder.read()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment._read_parallel()"      | 1.8        | 3.0        | "Builder.read()"                         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.write_doctree()"       | 1.8        | 3.0        | "Builder.write_doctree()"                |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.note_versionchange()"  | 1.8        | 3.0        | "ChangesDomain.note_changeset()"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "warn()" (template helper function)      | 1.8        | 3.0        | "warning()"                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| >>:confval:`source_parsers`<<            | 1.8        | 3.0        | "add_source_parser()"                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.docutils.directive_helper(  | 1.8        | 3.0        | "Directive" class of docutils            |
+| )"                                       |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.cmdline"                         | 1.8        | 3.0        | "sphinx.cmd.build"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.make_mode"                       | 1.8        | 3.0        | "sphinx.cmd.make_mode"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.locale.l_()"                     | 1.8        | 3.0        | "sphinx.locale._()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.locale.lazy_gettext()"           | 1.8        | 3.0        | "sphinx.locale._()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.locale.mygettext()"              | 1.8        | 3.0        | "sphinx.locale._()"                      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.copy_static_entry()"        | 1.5        | 3.0        | "sphinx.util.fileutil.copy_asset()"      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.build_main()"                    | 1.7        | 2.0        | "sphinx.cmd.build.build_main()"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.intersphinx.debug()"         | 1.7        | 2.0        | "sphinx.ext.intersphinx.inspect_main()"  |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.format_annotation()" | 1.7        | 2.0        | "sphinx.util.inspect.Signature"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.formatargspec()"     | 1.7        | 2.0        | "sphinx.util.inspect.Signature"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.AutodocReporter"     | 1.7        | 2.0        | "sphinx.util.docutils.switch_source_inp  |
+|                                          |            |            | ut()"                                    |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.add_documenter()"    | 1.7        | 2.0        | "add_autodocumenter()"                   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.ext.autodoc.AutoDirective._regi  | 1.7        | 2.0        | "add_autodocumenter()"                   |
+| ster"                                    |            |            |                                          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "AutoDirective._special_attrgetters"     | 1.7        | 2.0        | "add_autodoc_attrgetter()"               |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx.warn()", "Sphinx.info()"         | 1.6        | 2.0        | Logging API                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.set_warnfunc()"        | 1.6        | 2.0        | Logging API                              |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.note_toctree()"        | 1.6        | 2.0        | "Toctree.note()" (in                     |
+|                                          |            |            | "sphinx.environment.adapters.toctree")   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.get_toc_for()"         | 1.6        | 2.0        | "Toctree.get_toc_for()" (in              |
+|                                          |            |            | "sphinx.environment.adapters.toctree")   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.get_toctree_for()"     | 1.6        | 2.0        | "Toctree.get_toctree_for()" (in          |
+|                                          |            |            | "sphinx.environment.adapters.toctree")   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "BuildEnvironment.create_index()"        | 1.6        | 2.0        | "IndexEntries.create_index()" (in "sphi  |
+|                                          |            |            | nx.environment.adapters.indexentries")   |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.websupport"                      | 1.6        | 2.0        | sphinxcontrib-websupport                 |
++------------------------------------------+------------+------------+------------------------------------------+
+| "StandaloneHTMLBuilder.css_files"        | 1.6        | 2.0        | "add_stylesheet()"                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "document.settings.gettext_compact"      | 1.8        | 1.8        | >>:confval:`gettext_compact`<<           |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx.status_iterator()"               | 1.6        | 1.7        | "sphinx.util.status_iterator()"          |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx.old_status_iterator()"           | 1.6        | 1.7        | "sphinx.util.old_status_iterator()"      |
++------------------------------------------+------------+------------+------------------------------------------+
+| "Sphinx._directive_helper()"             | 1.6        | 1.7        | "sphinx.util.docutils.directive_helper(  |
+|                                          |            |            | )"                                       |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.compat.Directive"           | 1.6        | 1.7        | "docutils.parsers.rst.Directive"         |
++------------------------------------------+------------+------------+------------------------------------------+
+| "sphinx.util.compat.docutils_version"    | 1.6        | 1.7        | "sphinx.util.docutils.__version_info__"  |
++------------------------------------------+------------+------------+------------------------------------------+
+
+Note:
+
+  On deprecating on public APIs (internal functions and classes), we
+  also follow the policy as much as possible.
diff --git a/_build/doc/extdev/domainapi.txt b/_build/doc/extdev/domainapi.txt
new file mode 100644
index 000000000..63469b387
--- /dev/null
+++ b/_build/doc/extdev/domainapi.txt
@@ -0,0 +1,313 @@
+Domain API
+**********
+
+class sphinx.domains.Domain(env: BuildEnvironment)
+
+   A Domain is meant to be a group of "object" description directives
+   for objects of a similar nature, and corresponding roles to create
+   references to them.  Examples would be Python modules, classes,
+   functions etc., elements of a templating language, Sphinx roles and
+   directives, etc.
+
+   Each domain has a separate storage for information about existing
+   objects and how to reference them in *self.data*, which must be a
+   dictionary.  It also must implement several functions that expose
+   the object information in a uniform way to parts of Sphinx that
+   allow the user to reference or search for objects in a domain-
+   agnostic way.
+
+   About *self.data*: since all object and cross-referencing
+   information is stored on a BuildEnvironment instance, the
+   *domain.data* object is also stored in the *env.domaindata* dict
+   under the key *domain.name*.  Before the build process starts,
+   every active domain is instantiated and given the environment
+   object; the *domaindata* dict must then either be nonexistent or a
+   dictionary whose 'version' key is equal to the domain class'
+   "data_version" attribute.  Otherwise, *OSError* is raised and the
+   pickled environment is discarded.
+
+   add_object_type(name: str, objtype: sphinx.domains.ObjType) -> None
+
+      Add an object type.
+
+   check_consistency() -> None
+
+      Do consistency checks (**experimental**).
+
+   clear_doc(docname: str) -> None
+
+      Remove traces of a document in the domain-specific inventories.
+
+   dangling_warnings: Dict[str, str] = {}
+
+      role name -> a warning message if reference is missing
+
+   data: Dict = None
+
+      data value
+
+   data_version = 0
+
+      data version, bump this when the format of *self.data* changes
+
+   directive(name: str) -> Callable
+
+      Return a directive adapter class that always gives the
+      registered directive its full name ('domain:name') as
+      "self.name".
+
+   directives: Dict[str, Any] = {}
+
+      directive name -> directive class
+
+   enumerable_nodes: Dict[Type[Node], Tuple[str, Callable]] = {}
+
+      node_class -> (enum_node_type, title_getter)
+
+   get_enumerable_node_type(node: docutils.nodes.Node) -> str
+
+      Get type of enumerable nodes (experimental).
+
+   get_full_qualified_name(node: docutils.nodes.Element) -> str
+
+      Return full qualified name for given node.
+
+   get_objects() -> Iterable[Tuple[str, str, str, str, str, int]]
+
+      Return an iterable of "object descriptions".
+
+      Object descriptions are tuples with six items:
+
+      "name"
+         Fully qualified name.
+
+      "dispname"
+         Name to display when searching/linking.
+
+      "type"
+         Object type, a key in "self.object_types".
+
+      "docname"
+         The document where it is to be found.
+
+      "anchor"
+         The anchor name for the object.
+
+      "priority"
+         How "important" the object is (determines placement in search
+         results). One of:
+
+         "1"
+            Default priority (placed before full-text matches).
+
+         "0"
+            Object is important (placed before default-priority
+            objects).
+
+         "2"
+            Object is unimportant (placed after full-text matches).
+
+         "-1"
+            Object should not show up in search at all.
+
+   get_type_name(type: sphinx.domains.ObjType, primary: bool = False) -> str
+
+      Return full name for given ObjType.
+
+   indices: List[Type[Index]] = []
+
+      a list of Index subclasses
+
+   initial_data: Dict = {}
+
+      data value for a fresh environment
+
+   label = ''
+
+      domain label: longer, more descriptive (used in messages)
+
+   merge_domaindata(docnames: List[str], otherdata: Dict) -> None
+
+      Merge in data regarding *docnames* from a different domaindata
+      inventory (coming from a subprocess in parallel builds).
+
+   name = ''
+
+      domain name: should be short, but unique
+
+   object_types: Dict[str, ObjType] = {}
+
+      type (usually directive) name -> ObjType instance
+
+   process_doc(env: BuildEnvironment, docname: str, document: docutils.nodes.document) -> None
+
+      Process a document after it is read by the environment.
+
+   process_field_xref(pnode: sphinx.addnodes.pending_xref) -> None
+
+      Process a pending xref created in a doc field. For example,
+      attach information about the current scope.
+
+   resolve_any_xref(env: BuildEnvironment, fromdocname: str, builder: Builder, target: str, node: sphinx.addnodes.pending_xref, contnode: docutils.nodes.Element) -> List[Tuple[str, docutils.nodes.Element]]
+
+      Resolve the pending_xref *node* with the given *target*.
+
+      The reference comes from an "any" or similar role, which means
+      that we don't know the type.  Otherwise, the arguments are the
+      same as for "resolve_xref()".
+
+      The method must return a list (potentially empty) of tuples
+      "('domain:role', newnode)", where "'domain:role'" is the name of
+      a role that could have created the same reference, e.g.
+      "'py:func'". "newnode" is what "resolve_xref()" would return.
+
+      New in version 1.3.
+
+   resolve_xref(env: BuildEnvironment, fromdocname: str, builder: Builder, typ: str, target: str, node: sphinx.addnodes.pending_xref, contnode: docutils.nodes.Element) -> docutils.nodes.Element
+
+      Resolve the pending_xref *node* with the given *typ* and
+      *target*.
+
+      This method should return a new node, to replace the xref node,
+      containing the *contnode* which is the markup content of the
+      cross-reference.
+
+      If no resolution can be found, None can be returned; the xref
+      node will then given to the >>:event:`missing-reference`<<
+      event, and if that yields no resolution, replaced by *contnode*.
+
+      The method can also raise "sphinx.environment.NoUri" to suppress
+      the >>:event:`missing-reference`<< event being emitted.
+
+   role(name: str) -> Callable[[str, str, str, int, docutils.parsers.rst.states.Inliner, Dict[str, Any], List[str]], Tuple[List[docutils.nodes.Node], List[docutils.nodes.system_message]]]
+
+      Return a role adapter function that always gives the registered
+      role its full name ('domain:name') as the first argument.
+
+   roles: Dict[str, Union[RoleFunction, XRefRole]] = {}
+
+      role name -> role callable
+
+   setup() -> None
+
+      Set up domain object.
+
+class sphinx.domains.ObjType(lname: str, *roles: Any, **attrs: Any)
+
+   An ObjType is the description for a type of object that a domain
+   can document.  In the object_types attribute of Domain subclasses,
+   object type names are mapped to instances of this class.
+
+   Constructor arguments:
+
+   * *lname*: localized name of the type (do not include domain name)
+
+   * *roles*: all the roles that can refer to an object of this type
+
+   * *attrs*: object attributes -- currently only "searchprio" is
+     known, which defines the object's priority in the full-text
+     search index, see "Domain.get_objects()".
+
+class sphinx.domains.Index(domain: sphinx.domains.Domain)
+
+   An Index is the description for a domain-specific index.  To add an
+   index to a domain, subclass Index, overriding the three name
+   attributes:
+
+   * *name* is an identifier used for generating file names. It is
+     also used for a hyperlink target for the index. Therefore, users
+     can refer the index page using "ref" role and a string which is
+     combined domain name and "name" attribute (ex. ":ref:`py-
+     modindex`").
+
+   * *localname* is the section title for the index.
+
+   * *shortname* is a short name for the index, for use in the
+     relation bar in HTML output.  Can be empty to disable entries in
+     the relation bar.
+
+   and providing a "generate()" method.  Then, add the index class to
+   your domain's *indices* list.  Extensions can add indices to
+   existing domains using "add_index_to_domain()".
+
+   Changed in version 3.0: Index pages can be referred by domain name
+   and index name via "ref" role.
+
+   generate(docnames: Optional[Iterable[str]] = None) -> Tuple[List[Tuple[str, List[sphinx.domains.IndexEntry]]], bool]
+
+      Get entries for the index.
+
+      If "docnames" is given, restrict to entries referring to these
+      docnames.
+
+      The return value is a tuple of "(content, collapse)":
+
+      "collapse"
+         A boolean that determines if sub-entries should start
+         collapsed (for output formats that support collapsing sub-
+         entries).
+
+      "content":
+         A sequence of "(letter, entries)" tuples, where "letter" is
+         the "heading" for the given "entries", usually the starting
+         letter, and "entries" is a sequence of single entries. Each
+         entry is a sequence "[name, subtype, docname, anchor, extra,
+         qualifier, descr]". The items in this sequence have the
+         following meaning:
+
+         "name"
+            The name of the index entry to be displayed.
+
+         "subtype"
+            The sub-entry related type. One of:
+
+            "0"
+               A normal entry.
+
+            "1"
+               An entry with sub-entries.
+
+            "2"
+               A sub-entry.
+
+         "docname"
+            *docname* where the entry is located.
+
+         "anchor"
+            Anchor for the entry within "docname"
+
+         "extra"
+            Extra info for the entry.
+
+         "qualifier"
+            Qualifier for the description.
+
+         "descr"
+            Description for the entry.
+
+      Qualifier and description are not rendered for some output
+      formats such as LaTeX.
+
+
+Python Domain
+=============
+
+class sphinx.domains.python.PythonDomain(env: BuildEnvironment)
+
+   Python language domain.
+
+   objects
+
+   modules
+
+   note_object(name: str, objtype: str, node_id: str, location: Optional[Any] = None) -> None
+
+      Note a python object for cross reference.
+
+      New in version 2.1.
+
+   note_module(name: str, node_id: str, synopsis: str, platform: str, deprecated: bool) -> None
+
+      Note a python module for cross reference.
+
+      New in version 2.1.
diff --git a/_build/doc/extdev/envapi.txt b/_build/doc/extdev/envapi.txt
new file mode 100644
index 000000000..9de78f948
--- /dev/null
+++ b/_build/doc/extdev/envapi.txt
@@ -0,0 +1,89 @@
+Build environment API
+*********************
+
+class sphinx.environment.BuildEnvironment
+
+   **Attributes**
+
+   app
+
+      Reference to the "Sphinx" (application) object.
+
+   config
+
+      Reference to the "Config" object.
+
+   project
+
+      Target project.  See "Project".
+
+   srcdir
+
+      Source directory.
+
+   doctreedir
+
+      Directory for storing pickled doctrees.
+
+   events
+
+      An "EventManager" object.
+
+   found_docs
+
+      A set of all existing docnames.
+
+   metadata
+
+      Dictionary mapping docnames to "metadata" (see File-wide
+      metadata).
+
+   titles
+
+      Dictionary mapping docnames to the docutils node for their main
+      title.
+
+   docname
+
+      Returns the docname of the document currently being parsed.
+
+   **Utility methods**
+
+   doc2path(docname: str, base: Union[bool, str] = True, suffix: Optional[str] = None) -> str
+
+      Return the filename for the document name.
+
+      If *base* is True, return absolute path under self.srcdir. If
+      *base* is None, return relative path to self.srcdir. If *base*
+      is a path string, return absolute path under that. If *suffix*
+      is not None, add it instead of config.source_suffix.
+
+   relfn2path(filename: str, docname: Optional[str] = None) -> Tuple[str, str]
+
+      Return paths to a file referenced from a document, relative to
+      documentation root and absolute.
+
+      In the input "filename", absolute filenames are taken as
+      relative to the source dir, while relative filenames are
+      relative to the dir of the containing document.
+
+   note_dependency(filename: str) -> None
+
+      Add *filename* as a dependency of the current document.
+
+      This means that the document will be rebuilt if this file
+      changes.
+
+      *filename* should be absolute or relative to the source
+      directory.
+
+   new_serialno(category: str = '') -> int
+
+      Return a serial number, e.g. for index entry targets.
+
+      The number is guaranteed to be unique in the current document.
+
+   note_reread() -> None
+
+      Add the current document to the list of documents that will
+      automatically be re-read at the next build.
diff --git a/_build/doc/extdev/i18n.txt b/_build/doc/extdev/i18n.txt
new file mode 100644
index 000000000..6d8998a27
--- /dev/null
+++ b/_build/doc/extdev/i18n.txt
@@ -0,0 +1,120 @@
+i18n API
+********
+
+sphinx.locale.init(locale_dirs: List[Optional[str]], language: str, catalog: str = 'sphinx', namespace: str = 'general') -> Tuple[gettext.NullTranslations, bool]
+
+   Look for message catalogs in *locale_dirs* and *ensure* that there
+   is at least a NullTranslations catalog set in *translators*. If
+   called multiple times or if several ".mo" files are found, their
+   contents are merged together (thus making "init" reentrant).
+
+sphinx.locale.init_console(locale_dir: str, catalog: str) -> Tuple[gettext.NullTranslations, bool]
+
+   Initialize locale for console.
+
+   New in version 1.8.
+
+sphinx.locale.get_translation(catalog: str, namespace: str = 'general') -> Callable
+
+   Get a translation function based on the *catalog* and *namespace*.
+
+   The extension can use this API to translate the messages on the
+   extension:
+
+      import os
+      from sphinx.locale import get_translation
+
+      MESSAGE_CATALOG_NAME = 'myextension'  # name of *.pot, *.po and *.mo files
+      _ = get_translation(MESSAGE_CATALOG_NAME)
+      text = _('Hello Sphinx!')
+
+
+      def setup(app):
+          package_dir = path.abspath(path.dirname(__file__))
+          locale_dir = os.path.join(package_dir, 'locales')
+          app.add_message_catalog(MESSAGE_CATALOG_NAME, locale_dir)
+
+   With this code, sphinx searches a message catalog from
+   "${package_dir}/locales/${language}/LC_MESSAGES/myextension.mo".
+   The >>:confval:`language`<< is used for the searching.
+
+   New in version 1.8.
+
+sphinx.locale._(message: str, *args: Any) -> str
+
+   Translation function for messages on documentation (menu, labels,
+   themes and so on). This function follows >>:confval:`language`<<
+   setting.
+
+sphinx.locale.__(message: str, *args: Any) -> str
+
+   Translation function for console messages This function follows
+   locale setting (*LC_ALL*, *LC_MESSAGES* and so on).
+
+
+Extension internationalization (*i18n*) and localization (*l10n*) using i18n API
+================================================================================
+
+New in version 1.8.
+
+An extension may naturally come with message translations.  This is
+briefly summarized in "sphinx.locale.get_translation()" help.
+
+In practice, you have to:
+
+1. Choose a name for your message catalog, which must be unique.
+   Usually the name of your extension is used for the name of message
+   catalog.
+
+2. Mark in your extension sources all messages as translatable, via
+   "sphinx.locale.get_translation()" function, usually renamed "_()",
+   e.g.:
+
+   src/__init__.py
+
+      from sphinx.locale import get_translation
+
+      MESSAGE_CATALOG_NAME = 'myextension'
+      _ = get_translation(MESSAGE_CATALOG_NAME)
+
+      translated_text = _('Hello Sphinx!')
+
+3. Set up your extension to be aware of its dedicated translations:
+
+   src/__init__.py
+
+      def setup(app):
+          package_dir = path.abspath(path.dirname(__file__))
+          locale_dir = os.path.join(package_dir, 'locales')
+          app.add_message_catalog(MESSAGE_CATALOG_NAME, locale_dir)
+
+4. Generate message catalog template "*.pot" file, usually in
+   "locale/" source directory, for example via Babel:
+
+      $ pybabel extract --output=src/locale/myextension.pot src/
+
+5. Create message catalogs ("*.po") for each language which your
+   extension will provide localization, for example via Babel:
+
+      $ pybabel init --input-file=src/locale/myextension.pot --domain=myextension --output-dir=src/locale --locale=fr_FR
+
+6. Translate message catalogs for each language manually
+
+7. Compile message catalogs into "*.mo" files, for example via Babel:
+
+      $ pybabel compile --directory=src/locale --domain=myextension
+
+8. Ensure that message catalog files are distributed when your package
+   will be installed, by adding equivalent line in your extension
+   "MANIFEST.in":
+
+   MANIFEST.in
+
+      recursive-include src *.pot *.po *.mo
+
+When the messages on your extension has been changed, you need to also
+update message catalog template and message catalogs, for example via
+Babel:
+
+   $ pybabel extract --output=src/locale/myextension.pot src/
+   $ pybabel update --input-file=src/locale/myextension.pot --domain=myextension --output-dir=src/locale
diff --git a/_build/doc/extdev/index.txt b/_build/doc/extdev/index.txt
new file mode 100644
index 000000000..b204afcf6
--- /dev/null
+++ b/_build/doc/extdev/index.txt
@@ -0,0 +1,262 @@
+Developing extensions for Sphinx
+********************************
+
+Since many projects will need special features in their documentation,
+Sphinx is designed to be extensible on several levels.
+
+Here are a few things you can do in an extension:
+
+* Add new *builder*s to support new output formats or actions on the
+  parsed documents.
+
+* Register custom reStructuredText roles and directives, extending the
+  markup using the Docutils markup API.
+
+* Add custom code to so-called "hook points" at strategic places
+  throughout the build process, allowing you to register a hook and
+  run specialized code. For example, see the Sphinx core events.
+
+An extension is simply a Python module with a "setup()" function. A
+user activates the extension by placing the extension's module name
+(or a sub-module) in their >>:confval:`extensions`<< configuration
+value.
+
+When **sphinx-build** is executed, Sphinx will attempt to import each
+module that is listed, and execute "yourmodule.setup(app)". This
+function is used to prepare the extension (e.g., by executing Python
+code), linking resources that Sphinx uses in the build process (like
+CSS or HTML files), and notifying Sphinx of everything the extension
+offers (such as directive or role definitions). The "app" argument is
+an instance of "Sphinx" and gives you control over most aspects of the
+Sphinx build.
+
+Note:
+
+  The configuration file itself can be treated as an extension if it
+  contains a "setup()" function.  All other extensions to load must be
+  listed in the >>:confval:`extensions`<< configuration value.
+
+The rest of this page describes some high-level aspects of developing
+extensions and various parts of Sphinx's behavior that you can
+control. For some examples of how extensions can be built and used to
+control different parts of Sphinx, see the Extension tutorials.
+
+
+Important objects
+=================
+
+There are several key objects whose API you will use while writing an
+extension. These are:
+
+**Application**
+   The application object (usually called "app") is an instance of
+   "Sphinx".  It controls most high-level functionality, such as the
+   setup of extensions, event dispatching and producing output
+   (logging).
+
+   If you have the environment object, the application is available as
+   "env.app".
+
+**Environment**
+   The build environment object (usually called "env") is an instance
+   of "BuildEnvironment".  It is responsible for parsing the source
+   documents, stores all metadata about the document collection and is
+   serialized to disk after each build.
+
+   Its API provides methods to do with access to metadata, resolving
+   references, etc.  It can also be used by extensions to cache
+   information that should persist for incremental rebuilds.
+
+   If you have the application or builder object, the environment is
+   available as "app.env" or "builder.env".
+
+**Builder**
+   The builder object (usually called "builder") is an instance of a
+   specific subclass of "Builder".  Each builder class knows how to
+   convert the parsed documents into an output format, or otherwise
+   process them (e.g. check external links).
+
+   If you have the application object, the builder is available as
+   "app.builder".
+
+**Config**
+   The config object (usually called "config") provides the values of
+   configuration values set in "conf.py" as attributes.  It is an
+   instance of "Config".
+
+   The config is available as "app.config" or "env.config".
+
+To see an example of use of these objects, refer to Extension
+tutorials.
+
+
+Build Phases
+============
+
+One thing that is vital in order to understand extension mechanisms is
+the way in which a Sphinx project is built: this works in several
+phases.
+
+**Phase 0: Initialization**
+
+   In this phase, almost nothing of interest to us happens.  The
+   source directory is searched for source files, and extensions are
+   initialized. Should a stored build environment exist, it is loaded,
+   otherwise a new one is created.
+
+**Phase 1: Reading**
+
+   In Phase 1, all source files (and on subsequent builds, those that
+   are new or changed) are read and parsed.  This is the phase where
+   directives and roles are encountered by docutils, and the
+   corresponding code is executed.  The output of this phase is a
+   *doctree* for each source file; that is a tree of docutils nodes.
+   For document elements that aren't fully known until all existing
+   files are read, temporary nodes are created.
+
+   There are nodes provided by docutils, which are documented in the
+   docutils documentation. Additional nodes are provided by Sphinx and
+   documented here.
+
+   During reading, the build environment is updated with all meta- and
+   cross reference data of the read documents, such as labels, the
+   names of headings, described Python objects and index entries.
+   This will later be used to replace the temporary nodes.
+
+   The parsed doctrees are stored on the disk, because it is not
+   possible to hold all of them in memory.
+
+**Phase 2: Consistency checks**
+
+   Some checking is done to ensure no surprises in the built
+   documents.
+
+**Phase 3: Resolving**
+
+   Now that the metadata and cross-reference data of all existing
+   documents is known, all temporary nodes are replaced by nodes that
+   can be converted into output using components called transforms.
+   For example, links are created for object references that exist,
+   and simple literal nodes are created for those that don't.
+
+**Phase 4: Writing**
+
+   This phase converts the resolved doctrees to the desired output
+   format, such as HTML or LaTeX.  This happens via a so-called
+   docutils writer that visits the individual nodes of each doctree
+   and produces some output in the process.
+
+Note:
+
+  Some builders deviate from this general build plan, for example, the
+  builder that checks external links does not need anything more than
+  the parsed doctrees and therefore does not have phases 2--4.
+
+To see an example of application, refer to Developing a "TODO"
+extension.
+
+
+Extension metadata
+==================
+
+New in version 1.3.
+
+The "setup()" function can return a dictionary.  This is treated by
+Sphinx as metadata of the extension.  Metadata keys currently
+recognized are:
+
+* "'version'": a string that identifies the extension version.  It is
+  used for extension version requirement checking (see
+  >>:confval:`needs_extensions`<<) and informational purposes.  If not
+  given, ""unknown version"" is substituted.
+
+* "'env_version'": an integer that identifies the version of env data
+  structure if the extension stores any data to environment.  It is
+  used to detect the data structure has been changed from last build.
+  The extensions have to increment the version when data structure has
+  changed.  If not given, Sphinx considers the extension does not
+  stores any data to environment.
+
+* "'parallel_read_safe'": a boolean that specifies if parallel reading
+  of source files can be used when the extension is loaded.  It
+  defaults to "False", i.e. you have to explicitly specify your
+  extension to be parallel-read-safe after checking that it is.
+
+* "'parallel_write_safe'": a boolean that specifies if parallel
+  writing of output files can be used when the extension is loaded.
+  Since extensions usually don't negatively influence the process,
+  this defaults to "True".
+
+
+APIs used for writing extensions
+================================
+
+These sections provide a more complete description of the tools at
+your disposal when developing Sphinx extensions. Some are core to
+Sphinx (such as the Application API) while others trigger specific
+behavior (such as the i18n API)
+
+* Application API
+
+  * Extension setup
+
+  * Emitting events
+
+  * Sphinx runtime information
+
+  * Sphinx core events
+
+  * Checking the Sphinx version
+
+  * The Config object
+
+  * The template bridge
+
+  * Exceptions
+
+* Project API
+
+* Build environment API
+
+* Builder API
+
+* Environment Collector API
+
+* Docutils markup API
+
+  * Roles
+
+  * Directives
+
+* Domain API
+
+  * Python Domain
+
+* Parser API
+
+* Doctree node classes added by Sphinx
+
+  * Nodes for domain-specific object descriptions
+
+  * New admonition-like constructs
+
+  * Other paragraph-level nodes
+
+  * New inline nodes
+
+  * Special nodes
+
+* Logging API
+
+* i18n API
+
+  * Extension internationalization (*i18n*) and localization (*l10n*)
+    using i18n API
+
+* Utilities
+
+  * Base classes for components
+
+  * Utility components
+
+* Deprecated APIs
diff --git a/_build/doc/extdev/logging.txt b/_build/doc/extdev/logging.txt
new file mode 100644
index 000000000..1828536a4
--- /dev/null
+++ b/_build/doc/extdev/logging.txt
@@ -0,0 +1,107 @@
+Logging API
+***********
+
+sphinx.util.logging.getLogger(name)
+
+   Get logger wrapped by "sphinx.util.logging.SphinxLoggerAdapter".
+
+   Sphinx logger always uses "sphinx.*" namespace to be independent
+   from settings of root logger.  It ensures logging is consistent
+   even if a third-party extension or imported application resets
+   logger settings.
+
+   Example usage:
+
+      >>> from sphinx.util import logging
+      >>> logger = logging.getLogger(__name__)
+      >>> logger.info('Hello, this is an extension!')
+      Hello, this is an extension!
+
+class sphinx.util.logging.SphinxLoggerAdapter(logging.LoggerAdapter)
+
+   LoggerAdapter allowing "type" and "subtype" keywords.
+
+   error(msg, *args, **kwargs)
+
+   critical(msg, *args, **kwargs)
+
+   warning(msg, *args, **kwargs)
+
+      Logs a message on this logger with the specified level.
+      Basically, the arguments are as with python's logging module.
+
+      In addition, Sphinx logger supports following keyword arguments:
+
+      **type**, ***subtype***
+         Categories of warning logs.  It is used to suppress warnings
+         by >>:confval:`suppress_warnings`<< setting.
+
+      **location**
+         Where the warning happened.  It is used to include the path
+         and line number in each log.  It allows docname, tuple of
+         docname and line number and nodes:
+
+            logger = sphinx.util.logging.getLogger(__name__)
+            logger.warning('Warning happened!', location='index')
+            logger.warning('Warning happened!', location=('chapter1/index', 10))
+            logger.warning('Warning happened!', location=some_node)
+
+      **color**
+         The color of logs.  By default, error level logs are colored
+         as ""darkred"", critical level ones is not colored, and
+         warning level ones are colored as ""red"".
+
+   log(level, msg, *args, **kwargs)
+
+   info(msg, *args, **kwargs)
+
+   verbose(msg, *args, **kwargs)
+
+   debug(msg, *args, **kwargs)
+
+      Logs a message to this logger with the specified level.
+      Basically, the arguments are as with python's logging module.
+
+      In addition, Sphinx logger supports following keyword arguments:
+
+      **nonl**
+         If true, the logger does not fold lines at the end of the log
+         message. The default is "False".
+
+      **location**
+         Where the message emitted.  For more detail, see
+         "SphinxLoggerAdapter.warning()".
+
+      **color**
+         The color of logs.  By default, info and verbose level logs
+         are not colored, and debug level ones are colored as
+         ""darkgray"".
+
+sphinx.util.logging.pending_logging()
+
+   Contextmanager to pend logging all logs temporary.
+
+   For example:
+
+      >>> with pending_logging():
+      >>>     logger.warning('Warning message!')  # not flushed yet
+      >>>     some_long_process()
+      >>>
+      Warning message!  # the warning is flushed here
+
+sphinx.util.logging.pending_warnings()
+
+   Contextmanager to pend logging warnings temporary.
+
+   Similar to "pending_logging()".
+
+sphinx.util.logging.prefixed_warnings()
+
+   Prepend prefix to all records for a while.
+
+   For example:
+
+      >>> with prefixed_warnings("prefix:"):
+      >>>     logger.warning('Warning message!')  # => prefix: Warning message!
+
+   New in version 2.0.
diff --git a/_build/doc/extdev/markupapi.txt b/_build/doc/extdev/markupapi.txt
new file mode 100644
index 000000000..a4c852192
--- /dev/null
+++ b/_build/doc/extdev/markupapi.txt
@@ -0,0 +1,163 @@
+Docutils markup API
+*******************
+
+This section describes the API for adding ReST markup elements (roles
+and directives).
+
+
+Roles
+=====
+
+
+Directives
+==========
+
+Directives are handled by classes derived from
+"docutils.parsers.rst.Directive".  They have to be registered by an
+extension using "Sphinx.add_directive()" or
+"Sphinx.add_directive_to_domain()".
+
+class docutils.parsers.rst.Directive
+
+   The markup syntax of the new directive is determined by the follow
+   five class attributes:
+
+   required_arguments = 0
+
+      Number of required directive arguments.
+
+   optional_arguments = 0
+
+      Number of optional arguments after the required arguments.
+
+   final_argument_whitespace = False
+
+      May the final argument contain whitespace?
+
+   option_spec = None
+
+      Mapping of option names to validator functions.
+
+      Option validator functions take a single parameter, the option
+      argument (or "None" if not given), and should validate it or
+      convert it to the proper form.  They raise "ValueError" or
+      "TypeError" to indicate failure.
+
+      There are several predefined and possibly useful validators in
+      the "docutils.parsers.rst.directives" module.
+
+   has_content = False
+
+      May the directive have content?
+
+   New directives must implement the "run()" method:
+
+   run()
+
+      This method must process the directive arguments, options and
+      content, and return a list of Docutils/Sphinx nodes that will be
+      inserted into the document tree at the point where the directive
+      was encountered.
+
+   Instance attributes that are always set on the directive are:
+
+   name
+
+      The directive name (useful when registering the same directive
+      class under multiple names).
+
+   arguments
+
+      The arguments given to the directive, as a list.
+
+   options
+
+      The options given to the directive, as a dictionary mapping
+      option names to validated/converted values.
+
+   content
+
+      The directive content, if given, as a "ViewList".
+
+   lineno
+
+      The absolute line number on which the directive appeared.  This
+      is not always a useful value; use "srcline" instead.
+
+   content_offset
+
+      Internal offset of the directive content.  Used when calling
+      "nested_parse" (see below).
+
+   block_text
+
+      The string containing the entire directive.
+
+   state
+   state_machine
+
+      The state and state machine which controls the parsing.  Used
+      for "nested_parse".
+
+
+ViewLists
+---------
+
+Docutils represents document source lines in a class
+"docutils.statemachine.ViewList".  This is a list with extended
+functionality -- for one, slicing creates views of the original list,
+and also the list contains information about the source line numbers.
+
+The "Directive.content" attribute is a ViewList.  If you generate
+content to be parsed as ReST, you have to create a ViewList yourself.
+Important for content generation are the following points:
+
+* The constructor takes a list of strings (lines) and a source
+  (document) name.
+
+* The ".append()" method takes a line and a source name as well.
+
+
+Parsing directive content as ReST
+---------------------------------
+
+Many directives will contain more markup that must be parsed.  To do
+this, use one of the following APIs from the "Directive.run()" method:
+
+* "self.state.nested_parse"
+
+* "sphinx.util.nodes.nested_parse_with_titles()" -- this allows titles
+  in the parsed content.
+
+Both APIs parse the content into a given node. They are used like
+this:
+
+   node = docutils.nodes.paragraph()
+   # either
+   nested_parse_with_titles(self.state, self.result, node)
+   # or
+   self.state.nested_parse(self.result, 0, node)
+
+Note:
+
+  "sphinx.util.docutils.switch_source_input()" allows to change a
+  target file during nested_parse.  It is useful to mixed contents.
+  For example, "sphinx. ext.autodoc" uses it to parse docstrings:
+
+     from sphinx.util.docutils import switch_source_input
+
+     # Switch source_input between parsing content.
+     # Inside this context, all parsing errors and warnings are reported as
+     # happened in new source_input (in this case, ``self.result``).
+     with switch_source_input(self.state, self.result):
+         node = docutils.nodes.paragraph()
+         self.state.nested_parse(self.result, 0, node)
+
+  Deprecated since version 1.7: Until Sphinx-1.6,
+  "sphinx.ext.autodoc.AutodocReporter" is used for this purpose.  For
+  now, it is replaced by "switch_source_input()".
+
+If you don't need the wrapping node, you can use any concrete node
+type and return "node.children" from the Directive.
+
+See also: Creating directives HOWTO of the Docutils documentation
diff --git a/_build/doc/extdev/nodes.txt b/_build/doc/extdev/nodes.txt
new file mode 100644
index 000000000..b03608cb0
--- /dev/null
+++ b/_build/doc/extdev/nodes.txt
@@ -0,0 +1,175 @@
+Doctree node classes added by Sphinx
+************************************
+
+
+Nodes for domain-specific object descriptions
+=============================================
+
+class sphinx.addnodes.desc(rawsource='', *children, **attributes)
+
+   Node for object descriptions.
+
+   This node is similar to a "definition list" with one definition.
+   It contains one or more "desc_signature" and a "desc_content".
+
+class sphinx.addnodes.desc_signature(rawsource='', text='', *children, **attributes)
+
+   Node for object signatures.
+
+   The "term" part of the custom Sphinx definition list.
+
+   As default the signature is a single line signature, but set
+   "is_multiline = True" to describe a multi-line signature. In that
+   case all child nodes must be "desc_signature_line" nodes.
+
+class sphinx.addnodes.desc_signature_line(rawsource='', text='', *children, **attributes)
+
+   Node for a line in a multi-line object signatures.
+
+   It should only be used in a "desc_signature" with "is_multiline"
+   set. Set "add_permalink = True" for the line that should get the
+   permalink.
+
+class sphinx.addnodes.desc_addname(rawsource='', text='', *children, **attributes)
+
+   Node for additional name parts (module name, class name).
+
+class sphinx.addnodes.desc_type(rawsource='', text='', *children, **attributes)
+
+   Node for return types or object type names.
+
+class sphinx.addnodes.desc_returns(rawsource='', text='', *children, **attributes)
+
+   Node for a "returns" annotation (a la -> in Python).
+
+class sphinx.addnodes.desc_name(rawsource='', text='', *children, **attributes)
+
+   Node for the main object name.
+
+class sphinx.addnodes.desc_parameterlist(rawsource='', text='', *children, **attributes)
+
+   Node for a general parameter list.
+
+class sphinx.addnodes.desc_parameter(rawsource='', text='', *children, **attributes)
+
+   Node for a single parameter.
+
+class sphinx.addnodes.desc_optional(rawsource='', text='', *children, **attributes)
+
+   Node for marking optional parts of the parameter list.
+
+class sphinx.addnodes.desc_annotation(rawsource='', text='', *children, **attributes)
+
+   Node for signature annotations (not Python 3-style annotations).
+
+class sphinx.addnodes.desc_content(rawsource='', *children, **attributes)
+
+   Node for object description content.
+
+   This is the "definition" part of the custom Sphinx definition list.
+
+
+New admonition-like constructs
+==============================
+
+class sphinx.addnodes.versionmodified(rawsource='', text='', *children, **attributes)
+
+   Node for version change entries.
+
+   Currently used for "versionadded", "versionchanged" and
+   "deprecated" directives.
+
+class sphinx.addnodes.seealso(rawsource='', *children, **attributes)
+
+   Custom "see also" admonition.
+
+
+Other paragraph-level nodes
+===========================
+
+class sphinx.addnodes.compact_paragraph(rawsource='', text='', *children, **attributes)
+
+   Node for a compact paragraph (which never makes a <p> node).
+
+
+New inline nodes
+================
+
+class sphinx.addnodes.index(rawsource='', text='', *children, **attributes)
+
+   Node for index entries.
+
+   This node is created by the "index" directive and has one
+   attribute, "entries".  Its value is a list of 5-tuples of
+   "(entrytype, entryname, target, ignored, key)".
+
+   *entrytype* is one of "single", "pair", "double", "triple".
+
+   *key* is categorization characters (usually a single character) for
+   general index page. For the details of this, please see also:
+   "glossary" and issue #2320.
+
+class sphinx.addnodes.pending_xref(rawsource='', *children, **attributes)
+
+   Node for cross-references that cannot be resolved without complete
+   information about all documents.
+
+   These nodes are resolved before writing output, in
+   BuildEnvironment.resolve_references.
+
+class sphinx.addnodes.literal_emphasis(rawsource='', text='', *children, **attributes)
+
+   Node that behaves like *emphasis*, but further text processors are
+   not applied (e.g. smartypants for HTML output).
+
+class sphinx.addnodes.abbreviation(rawsource: str = '', text: str = '', *children: docutils.nodes.Node, **attributes: Any)
+
+   Node for abbreviations with explanations.
+
+   Deprecated since version 2.0.
+
+class sphinx.addnodes.download_reference(rawsource='', text='', *children, **attributes)
+
+   Node for download references, similar to pending_xref.
+
+
+Special nodes
+=============
+
+class sphinx.addnodes.only(rawsource='', *children, **attributes)
+
+   Node for "only" directives (conditional inclusion based on tags).
+
+class sphinx.addnodes.meta(rawsource='', *children, **attributes)
+
+   Node for meta directive -- same as docutils' standard meta node,
+   but pickleable.
+
+class sphinx.addnodes.highlightlang(rawsource='', *children, **attributes)
+
+   Inserted to set the highlight language and line number options for
+   subsequent code blocks.
+
+You should not need to generate the nodes below in extensions.
+
+class sphinx.addnodes.glossary(rawsource='', *children, **attributes)
+
+   Node to insert a glossary.
+
+class sphinx.addnodes.toctree(rawsource='', *children, **attributes)
+
+   Node for inserting a "TOC tree".
+
+class sphinx.addnodes.start_of_file(rawsource='', *children, **attributes)
+
+   Node to mark start of a new file, used in the LaTeX builder only.
+
+class sphinx.addnodes.productionlist(rawsource='', *children, **attributes)
+
+   Node for grammar production lists.
+
+   Contains "production" nodes.
+
+class sphinx.addnodes.production(rawsource='', text='', *children, **attributes)
+
+   Node for a single grammar production rule.
diff --git a/_build/doc/extdev/parserapi.txt b/_build/doc/extdev/parserapi.txt
new file mode 100644
index 000000000..99c5ad778
--- /dev/null
+++ b/_build/doc/extdev/parserapi.txt
@@ -0,0 +1,59 @@
+Parser API
+**********
+
+The docutils documentation describes parsers as follows:
+
+   The Parser analyzes the input document and creates a node tree
+   representation.
+
+In Sphinx, the parser modules works as same as docutils.  The parsers
+are registered to Sphinx by extensions using Application APIs;
+"Sphinx.add_source_suffix()" and "Sphinx.add_source_parser()".
+
+The *source suffix* is a mapping from file suffix to file type.  For
+example, ".rst" file is mapped to "'restructuredtext'" type.  Sphinx
+uses the file type to looking for parsers from registered list.  On
+searching, Sphinx refers to the "Parser.supported" attribute and picks
+up a parser which contains the file type in the attribute.
+
+The users can override the source suffix mappings using
+>>:confval:`source_suffix`<< like following:
+
+   # a mapping from file suffix to file types
+   source_suffix = {
+       '.rst': 'restructuredtext',
+       '.md': 'markdown',
+   }
+
+You should indicate file types your parser supports. This will allow
+users to configure their settings appropriately.
+
+class sphinx.parsers.Parser
+
+   A base class of source parsers.  The additional parsers should
+   inherit this class instead of "docutils.parsers.Parser".  Compared
+   with "docutils.parsers.Parser", this class improves accessibility
+   to Sphinx APIs.
+
+   The subclasses can access following objects and functions:
+
+   self.app
+      The application object ("sphinx.application.Sphinx")
+
+   self.config
+      The config object ("sphinx.config.Config")
+
+   self.env
+      The environment object ("sphinx.environment.BuildEnvironment")
+
+   self.warn()
+      Emit a warning. (Same as "sphinx.application.Sphinx.warn()")
+
+   self.info()
+      Emit a informational message. (Same as
+      "sphinx.application.Sphinx.info()")
+
+   Deprecated since version 1.6: "warn()" and "info()" is deprecated.
+   Use "sphinx.util.logging" instead.
+
+   Deprecated since version 3.0: parser.app is deprecated.
diff --git a/_build/doc/extdev/projectapi.txt b/_build/doc/extdev/projectapi.txt
new file mode 100644
index 000000000..bb1afbc07
--- /dev/null
+++ b/_build/doc/extdev/projectapi.txt
@@ -0,0 +1,41 @@
+Project API
+***********
+
+class sphinx.project.Project(srcdir: str, source_suffix: Dict[str, str])
+
+   A project is source code set of Sphinx document.
+
+   discover(exclude_paths: List[str] = []) -> Set[str]
+
+      Find all document files in the source directory and put them in
+      "docnames".
+
+   doc2path(docname: str, basedir: bool = True) -> str
+
+      Return the filename for the document name.
+
+      If *basedir* is True, return as an absolute path. Else, return
+      as a relative path to the source directory.
+
+   docnames: Set[str]
+
+      The name of documents belongs to this project.
+
+   path2doc(filename: str) -> str
+
+      Return the docname for the filename if the file is document.
+
+      *filename* should be absolute or relative to the source
+      directory.
+
+   restore(other: sphinx.project.Project) -> None
+
+      Take over a result of last build.
+
+   source_suffix
+
+      source_suffix. Same as >>:confval:`source_suffix`<<.
+
+   srcdir
+
+      Source directory.
diff --git a/_build/doc/extdev/utils.txt b/_build/doc/extdev/utils.txt
new file mode 100644
index 000000000..8bc2c6810
--- /dev/null
+++ b/_build/doc/extdev/utils.txt
@@ -0,0 +1,239 @@
+Utilities
+*********
+
+Sphinx provides utility classes and functions to develop extensions.
+
+
+Base classes for components
+===========================
+
+These base classes are useful to allow your extensions to obtain
+Sphinx components (e.g. "Config", "BuildEnvironment" and so on)
+easily.
+
+Note:
+
+  The subclasses of them might not work with bare docutils because
+  they are strongly coupled with Sphinx.
+
+class sphinx.transforms.SphinxTransform(document, startnode=None)
+
+   A base class of Transforms.
+
+   Compared with "docutils.transforms.Transform", this class improves
+   accessibility to Sphinx APIs.
+
+   property app
+
+      Reference to the "Sphinx" object.
+
+   property config
+
+      Reference to the "Config" object.
+
+   property env
+
+      Reference to the "BuildEnvironment" object.
+
+class sphinx.transforms.post_transforms.SphinxPostTransform(document, startnode=None)
+
+   A base class of post-transforms.
+
+   Post transforms are invoked to modify the document to restructure
+   it for outputting. They do resolving references, convert images,
+   special transformation for each output formats and so on.  This
+   class helps to implement these post transforms.
+
+   apply(**kwargs: Any) -> None
+
+      Override to apply the transform to the document tree.
+
+   is_supported() -> bool
+
+      Check this transform working for current builder.
+
+   run(**kwargs: Any) -> None
+
+      main method of post transforms.
+
+      Subclasses should override this method instead of "apply()".
+
+class sphinx.util.docutils.SphinxDirective(name, arguments, options, content, lineno, content_offset, block_text, state, state_machine)
+
+   A base class for Sphinx directives.
+
+   This class provides helper methods for Sphinx directives.
+
+   Note:
+
+     The subclasses of this class might not work with docutils. This
+     class is strongly coupled with Sphinx.
+
+   property config
+
+      Reference to the "Config" object.
+
+   property env
+
+      Reference to the "BuildEnvironment" object.
+
+   get_source_info() -> Tuple[str, int]
+
+      Get source and line number.
+
+   set_source_info(node: docutils.nodes.Node) -> None
+
+      Set source and line number to the node.
+
+class sphinx.util.docutils.SphinxRole
+
+   A base class for Sphinx roles.
+
+   This class provides helper methods for Sphinx roles.
+
+   Note:
+
+     The subclasses of this class might not work with docutils. This
+     class is strongly coupled with Sphinx.
+
+   property config
+
+      Reference to the "Config" object.
+
+   content = None
+
+      A list of strings, the directive content for customization
+
+   property env
+
+      Reference to the "BuildEnvironment" object.
+
+   inliner = None
+
+      The "docutils.parsers.rst.states.Inliner" object.
+
+   lineno = None
+
+      The line number where the interpreted text begins.
+
+   name = None
+
+      The role name actually used in the document.
+
+   options = None
+
+      A dictionary of directive options for customization
+
+   rawtext = None
+
+      A string containing the entire interpreted text input.
+
+   text = None
+
+      The interpreted text content.
+
+class sphinx.util.docutils.ReferenceRole
+
+   A base class for reference roles.
+
+   The reference roles can accpet "link title <target>" style as a
+   text for the role.  The parsed result; link title and target will
+   be stored to "self.title" and "self.target".
+
+   disabled = False
+
+      A boolean indicates the reference is disabled.
+
+   has_explicit_title = None
+
+      A boolean indicates the role has explicit title or not.
+
+   target = None
+
+      The link target for the interpreted text.
+
+   title = None
+
+      The link title for the interpreted text.
+
+class sphinx.transforms.post_transforms.images.ImageConverter(*args: Any, **kwargs: Any)
+
+   A base class for image converters.
+
+   An image converter is kind of Docutils transform module.  It is
+   used to convert image files which does not supported by builder to
+   appropriate format for that builder.
+
+   For example, "LaTeX builder" supports PDF, PNG and JPEG as image
+   formats.  However it does not support SVG images. For such case, to
+   use image converters allows to embed these unsupported images into
+   the document.  One of image converters; sphinx.ext.imgconverter can
+   convert a SVG image to PNG format using Imagemagick internally.
+
+   There are three steps to make your custom image converter:
+
+   1. Make a subclass of "ImageConverter" class
+
+   2. Override "conversion_rules", "is_available()" and "convert()"
+
+   3. Register your image converter to Sphinx using
+      "Sphinx.add_post_transform()"
+
+   available: Optional[bool] = None
+
+      The converter is available or not.  Will be filled at the first
+      call of the build.  The result is shared in the same process.
+
+   conversion_rules: List[Tuple[str, str]] = []
+
+      A conversion rules the image converter supports. It is
+      represented as a list of pair of source image format (mimetype)
+      and destination one:
+
+         conversion_rules = [
+             ('image/svg+xml', 'image/png'),
+             ('image/gif', 'image/png'),
+             ('application/pdf', 'image/png'),
+         ]
+
+   convert(_from: str, _to: str) -> bool
+
+      Convert a image file to expected format.
+
+      *_from* is a path for source image file, and *_to* is a path for
+      destination file.
+
+   is_available() -> bool
+
+      Return the image converter is available or not.
+
+
+Utility components
+==================
+
+class sphinx.events.EventManager(app: Sphinx = None)
+
+   Event manager for Sphinx.
+
+   add(name: str) -> None
+
+      Register a custom Sphinx event.
+
+   connect(name: str, callback: Callable, priority: int) -> int
+
+      Connect a handler to specific event.
+
+   disconnect(listener_id: int) -> None
+
+      Disconnect a handler.
+
+   emit(name: str, *args: Any, allowed_exceptions: Tuple[Type[Exception], ...] = ()) -> List
+
+      Emit a Sphinx event.
+
+   emit_firstresult(name: str, *args: Any, allowed_exceptions: Tuple[Type[Exception], ...] = ()) -> Any
+
+      Emit a Sphinx event and returns first result.
+
+      This returns the result of the first handler that doesn't return
+      "None".
diff --git a/_build/doc/faq.txt b/_build/doc/faq.txt
new file mode 100644
index 000000000..3b8366143
--- /dev/null
+++ b/_build/doc/faq.txt
@@ -0,0 +1,336 @@
+Sphinx FAQ
+**********
+
+This is a list of Frequently Asked Questions about Sphinx.  Feel free
+to suggest new entries!
+
+
+How do I...
+===========
+
+... create PDF files without LaTeX?
+   rinohtype provides a PDF builder that can be used as a drop-in
+   replacement for the LaTeX builder.
+
+... get section numbers?
+   They are automatic in LaTeX output; for HTML, give a ":numbered:"
+   option to the "toctree" directive where you want to start
+   numbering.
+
+... customize the look of the built HTML files?
+   Use themes, see */usage/theming*.
+
+... add global substitutions or includes?
+   Add them in the >>:confval:`rst_prolog`<< or
+   >>:confval:`rst_epilog`<< config value.
+
+... display the whole TOC tree in the sidebar?
+   Use the "toctree" callable in a custom layout template, probably in
+   the "sidebartoc" block.
+
+... write my own extension?
+   See the */development/tutorials/index*.
+
+... convert from my existing docs using MoinMoin markup?
+   The easiest way is to convert to xhtml, then convert xhtml to reST.
+   You'll still need to mark up classes and such, but the headings and
+   code examples come through cleanly.
+
+For many more extensions and other contributed stuff, see the sphinx-
+contrib repository.
+
+
+Using Sphinx with...
+====================
+
+Read the Docs
+   Read the Docs is a documentation hosting service based around
+   Sphinx.  They will host sphinx documentation, along with supporting
+   a number of other features including version support, PDF
+   generation, and more. The Getting Started guide is a good place to
+   start.
+
+Epydoc
+   There's a third-party extension providing an api role which refers
+   to Epydoc's API docs for a given identifier.
+
+Doxygen
+   Michael Jones is developing a reST/Sphinx bridge to doxygen called
+   breathe.
+
+SCons
+   Glenn Hutchings has written a SCons build script to build Sphinx
+   documentation; it is hosted here: https://bitbucket.org/zondo
+   /sphinx-scons
+
+PyPI
+   Jannis Leidel wrote a setuptools command that automatically uploads
+   Sphinx documentation to the PyPI package documentation area at
+   https://pythonhosted.org/.
+
+GitHub Pages
+   Please add "sphinx.ext.githubpages" to your project.  It allows you
+   to publish your document in GitHub Pages.  It generates helper
+   files for GitHub Pages on building HTML document automatically.
+
+MediaWiki
+   See https://bitbucket.org/kevindunn/sphinx-wiki/wiki/Home, a
+   project by Kevin Dunn.
+
+Google Analytics
+   You can use a custom "layout.html" template, like this:
+
+      {% extends "!layout.html" %}
+
+      {%- block extrahead %}
+      {{ super() }}
+      <script>
+        var _gaq = _gaq || [];
+        _gaq.push(['_setAccount', 'XXX account number XXX']);
+        _gaq.push(['_trackPageview']);
+      </script>
+      {% endblock %}
+
+      {% block footer %}
+      {{ super() }}
+      <div class="footer">This page uses <a href="https://analytics.google.com/">
+      Google Analytics</a> to collect statistics. You can disable it by blocking
+      the JavaScript coming from www.google-analytics.com.
+      <script>
+        (function() {
+          var ga = document.createElement('script');
+          ga.src = ('https:' == document.location.protocol ?
+                    'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
+          ga.setAttribute('async', 'true');
+          document.documentElement.firstChild.appendChild(ga);
+        })();
+      </script>
+      </div>
+      {% endblock %}
+
+Google Search
+   To replace Sphinx's built-in search function with Google Search,
+   proceed as follows:
+
+   1. Go to https://cse.google.com/cse/all to create the Google Search
+      code snippet.
+
+   2. Copy the code snippet and paste it into
+      "_templates/searchbox.html" in your Sphinx project:
+
+         <div>
+            <h3>{{ _('Quick search') }}</h3>
+            <script>
+               (function() {
+                  var cx = '......';
+                  var gcse = document.createElement('script');
+                  gcse.async = true;
+                  gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;
+                  var s = document.getElementsByTagName('script')[0];
+                  s.parentNode.insertBefore(gcse, s);
+               })();
+            </script>
+           <gcse:search></gcse:search>
+         </div>
+
+   3. Add "searchbox.html" to the >>:confval:`html_sidebars`<<
+      configuration value.
+
+
+Sphinx vs. Docutils
+===================
+
+tl;dr: *docutils* converts reStructuredText to multiple output
+formats. Sphinx builds upon docutils to allow construction of cross-
+referenced and indexed bodies of documentation.
+
+docutils is a text processing system for converting plain text
+documentation into other, richer formats. As noted in the docutils
+documentation, docutils uses *readers* to read a document, *parsers*
+for parsing plain text formats into an internal tree representation
+made up of different types of *nodes*, and *writers* to output this
+tree in various document formats.  docutils provides parsers for one
+plain text format - reStructuredText - though other, *out-of-tree*
+parsers have been implemented including Sphinx's *Markdown parser*. On
+the other hand, it provides writers for many different formats
+including HTML, LaTeX, man pages, Open Document Format and XML.
+
+docutils exposes all of its functionality through a variety of front-
+end tools, such as "rst2html", "rst2odt" and "rst2xml". Crucially
+though, all of these tools, and docutils itself, are concerned with
+individual documents.  They don't support concepts such as cross-
+referencing, indexing of documents, or the construction of a document
+hierarchy (typically manifesting in a table of contents).
+
+Sphinx builds upon docutils by harnessing docutils' readers and
+parsers and providing its own */usage/builders/index*. As a result,
+Sphinx wraps some of the *writers* provided by docutils. This allows
+Sphinx to provide many features that would simply not be possible with
+docutils, such as those outlined above.
+
+
+Epub info
+=========
+
+The following list gives some hints for the creation of epub files:
+
+* Split the text into several files. The longer the individual HTML
+  files are, the longer it takes the ebook reader to render them.  In
+  extreme cases, the rendering can take up to one minute.
+
+* Try to minimize the markup.  This also pays in rendering time.
+
+* For some readers you can use embedded or external fonts using the
+  CSS "@font-face" directive.  This is *extremely* useful for code
+  listings which are often cut at the right margin.  The default
+  Courier font (or variant) is quite wide and you can only display up
+  to 60 characters on a line.  If you replace it with a narrower font,
+  you can get more characters on a line.  You may even use FontForge
+  and create narrow variants of some free font.  In my case I get up
+  to 70 characters on a line.
+
+  You may have to experiment a little until you get reasonable
+  results.
+
+* Test the created epubs. You can use several alternatives.  The ones
+  I am aware of are Epubcheck, Calibre, FBreader (although it does not
+  render the CSS), and Bookworm.  For Bookworm, you can download the
+  source from https://code.google.com/archive/p/threepress and run
+  your own local server.
+
+* Large floating divs are not displayed properly. If they cover more
+  than one page, the div is only shown on the first page. In that case
+  you can copy the "epub.css" from the "sphinx/themes/epub/static/"
+  directory to your local "_static/" directory and remove the float
+  settings.
+
+* Files that are inserted outside of the "toctree" directive must be
+  manually included. This sometimes applies to appendixes, e.g. the
+  glossary or the indices.  You can add them with the
+  >>:confval:`epub_post_files`<< option.
+
+* The handling of the epub cover page differs from the
+  reStructuredText procedure which automatically resolves image paths
+  and puts the images into the "_images" directory.  For the epub
+  cover page put the image in the >>:confval:`html_static_path`<<
+  directory and reference it with its full path in the
+  >>:confval:`epub_cover`<< config option.
+
+* kindlegen command can convert from epub3 resulting file to ".mobi"
+  file for Kindle. You can get "yourdoc.mobi" under "_build/epub"
+  after the following command:
+
+     $ make epub
+     $ kindlegen _build/epub/yourdoc.epub
+
+  The kindlegen command doesn't accept documents that have section
+  titles surrounding "toctree" directive:
+
+     Section Title
+     =============
+
+     .. toctree::
+
+        subdocument
+
+     Section After Toc Tree
+     ======================
+
+  kindlegen assumes all documents order in line, but the resulting
+  document has complicated order for kindlegen:
+
+     ``parent.xhtml`` -> ``child.xhtml`` -> ``parent.xhtml``
+
+  If you get the following error, fix your document structure:
+
+     Error(prcgen):E24011: TOC section scope is not included in the parent chapter:(title)
+     Error(prcgen):E24001: The table of content could not be built.
+
+
+Texinfo info
+============
+
+There are two main programs for reading Info files, "info" and GNU
+Emacs.  The "info" program has less features but is available in most
+Unix environments and can be quickly accessed from the terminal.
+Emacs provides better font and color display and supports extensive
+customization (of course).
+
+
+Displaying Links
+----------------
+
+One noticeable problem you may encounter with the generated Info files
+is how references are displayed.  If you read the source of an Info
+file, a reference to this section would look like:
+
+   * note Displaying Links: target-id
+
+In the stand-alone reader, "info", references are displayed just as
+they appear in the source.  Emacs, on the other-hand, will by default
+replace "*note:" with "see" and hide the "target-id".  For example:
+
+   Displaying Links
+
+The exact behavior of how Emacs displays references is dependent on
+the variable "Info-hide-note-references".  If set to the value of
+"hide", Emacs will hide both the "*note:" part and the "target-id".
+This is generally the best way to view Sphinx-based documents since
+they often make frequent use of links and do not take this limitation
+into account.  However, changing this variable affects how all Info
+documents are displayed and most do take this behavior into account.
+
+If you want Emacs to display Info files produced by Sphinx using the
+value "hide" for "Info-hide-note-references" and the default value for
+all other Info files, try adding the following Emacs Lisp code to your
+start-up file, "~/.emacs.d/init.el".
+
+   (defadvice info-insert-file-contents (after
+                                         sphinx-info-insert-file-contents
+                                         activate)
+     "Hack to make `Info-hide-note-references' buffer-local and
+   automatically set to `hide' iff it can be determined that this file
+   was created from a Texinfo file generated by Docutils or Sphinx."
+     (set (make-local-variable 'Info-hide-note-references)
+          (default-value 'Info-hide-note-references))
+     (save-excursion
+       (save-restriction
+         (widen) (goto-char (point-min))
+         (when (re-search-forward
+                "^Generated by \\(Sphinx\\|Docutils\\)"
+                (save-excursion (search-forward "\x1f" nil t)) t)
+           (set (make-local-variable 'Info-hide-note-references)
+                'hide)))))
+
+
+Notes
+-----
+
+The following notes may be helpful if you want to create Texinfo
+files:
+
+* Each section corresponds to a different "node" in the Info file.
+
+* Colons (":") cannot be properly escaped in menu entries and xrefs.
+  They will be replaced with semicolons (";").
+
+* Links to external Info files can be created using the somewhat
+  official URI scheme "info".  For example:
+
+     info:Texinfo#makeinfo_options
+
+* Inline markup
+
+  The standard formatting for "*strong*" and "_emphasis_" can result
+  in ambiguous output when used to markup parameter names and other
+  values.  Since this is a fairly common practice, the default
+  formatting has been changed so that "emphasis" and "strong" are now
+  displayed like "`literal'"s.
+
+  The standard formatting can be re-enabled by adding the following to
+  your "conf.py":
+
+     texinfo_elements = {'preamble': """
+     @definfoenclose strong,*,*
+     @definfoenclose emph,_,_
+     """}
diff --git a/_build/doc/glossary.txt b/_build/doc/glossary.txt
new file mode 100644
index 000000000..b7fef8193
--- /dev/null
+++ b/_build/doc/glossary.txt
@@ -0,0 +1,96 @@
+Glossary
+********
+
+builder
+   A class (inheriting from "Builder") that takes parsed documents and
+   performs an action on them.  Normally, builders translate the
+   documents to an output format, but it is also possible to use
+   builders that e.g. check for broken links in the documentation, or
+   build coverage information.
+
+   See */usage/builders/index* for an overview over Sphinx's built-in
+   builders.
+
+configuration directory
+   The directory containing "conf.py".  By default, this is the same
+   as the *source directory*, but can be set differently with the
+   **-c** command-line option.
+
+directive
+   A reStructuredText markup element that allows marking a block of
+   content with special meaning.  Directives are supplied not only by
+   docutils, but Sphinx and custom extensions can add their own.  The
+   basic directive syntax looks like this:
+
+      .. directivename:: argument ...
+         :option: value
+
+         Content of the directive.
+
+   See Directives for more information.
+
+document name
+   Since reST source files can have different extensions (some people
+   like ".txt", some like ".rst" -- the extension can be configured
+   with >>:confval:`source_suffix`<<) and different OSes have
+   different path separators, Sphinx abstracts them: *document names*
+   are always relative to the *source directory*, the extension is
+   stripped, and path separators are converted to slashes.  All
+   values, parameters and such referring to "documents" expect such
+   document names.
+
+   Examples for document names are "index", "library/zipfile", or
+   "reference/datamodel/types".  Note that there is no leading or
+   trailing slash.
+
+domain
+   A domain is a collection of markup (reStructuredText *directive*s
+   and *role*s) to describe and link to *object*s belonging together,
+   e.g. elements of a programming language.  Directive and role names
+   in a domain have names like "domain:name", e.g. "py:function".
+
+   Having domains means that there are no naming problems when one set
+   of documentation wants to refer to e.g. C++ and Python classes.  It
+   also means that extensions that support the documentation of whole
+   new languages are much easier to write.
+
+   For more information, refer to */usage/restructuredtext/domains*.
+
+environment
+   A structure where information about all documents under the root is
+   saved, and used for cross-referencing.  The environment is pickled
+   after the parsing stage, so that successive runs only need to read
+   and parse new and changed documents.
+
+extension
+   A custom *role*, *directive* or other aspect of Sphinx that allows
+   users to modify any aspect of the build process within Sphinx.
+
+   For more information, refer to */usage/extensions/index*.
+
+master document
+   The document that contains the root "toctree" directive.
+
+object
+   The basic building block of Sphinx documentation.  Every "object
+   directive" (e.g. "function" or "object") creates such a block; and
+   most objects can be cross-referenced to.
+
+RemoveInSphinxXXXWarning
+   The feature which is warned will be removed in Sphinx-XXX version.
+   It usually caused from Sphinx extensions which is using deprecated.
+   See also Deprecation Warnings.
+
+role
+   A reStructuredText markup element that allows marking a piece of
+   text. Like directives, roles are extensible.  The basic syntax
+   looks like this: ":rolename:`content`".  See Inline markup for
+   details.
+
+source directory
+   The directory which, including its subdirectories, contains all
+   source files for one Sphinx project.
+
+reStructuredText
+   An easy-to-read, what-you-see-is-what-you-get plaintext markup
+   syntax and parser system.
diff --git a/_build/doc/internals/authors.txt b/_build/doc/internals/authors.txt
new file mode 100644
index 000000000..33208ac45
--- /dev/null
+++ b/_build/doc/internals/authors.txt
@@ -0,0 +1,180 @@
+Sphinx authors
+**************
+
+Sphinx is written and maintained by Georg Brandl <georg@python.org>.
+
+Substantial parts of the templates were written by Armin Ronacher
+<armin.ronacher@active-4.com>.
+
+Other co-maintainers:
+
+* Takayuki Shimizukawa <shimizukawa@gmail.com>
+
+* Daniel Neuhäuser <@DasIch>
+
+* Jon Waltman <@jonwaltman>
+
+* Rob Ruana <@RobRuana>
+
+* Robert Lehmann <@lehmannro>
+
+* Roland Meister <@rolmei>
+
+* Takeshi Komiya <@tk0miya>
+
+* Jean-François Burnol <@jfbu>
+
+* Yoshiki Shibukawa <@shibu_jp>
+
+* Timotheus Kampik - <@TimKam>
+
+Other contributors, listed alphabetically, are:
+
+* Alastair Houghton -- Apple Help builder
+
+* Alexander Todorov -- inheritance_diagram tests and improvements
+
+* Andi Albrecht -- agogo theme
+
+* Jakob Lykke Andersen -- Rewritten C++ domain
+
+* Henrique Bastos -- SVG support for graphviz extension
+
+* Daniel Bültmann -- todo extension
+
+* Marco Buttu -- doctest extension (pyversion option)
+
+* Nathan Damon -- bugfix in validation of static paths in html
+  builders
+
+* Etienne Desautels -- apidoc module
+
+* Michael Droettboom -- inheritance_diagram extension
+
+* Charles Duffy -- original graphviz extension
+
+* Kevin Dunn -- MathJax extension
+
+* Josip Dzolonga -- coverage builder
+
+* Buck Evan -- dummy builder
+
+* Matthew Fernandez -- todo extension fix
+
+* Hernan Grecco -- search improvements
+
+* Horst Gutmann -- internationalization support
+
+* Martin Hans -- autodoc improvements
+
+* Zac Hatfield-Dodds -- doctest reporting improvements, intersphinx
+  performance
+
+* Doug Hellmann -- graphviz improvements
+
+* Tim Hoffmann -- theme improvements
+
+* Antti Kaihola -- doctest extension (skipif option)
+
+* Dave Kuhlman -- original LaTeX writer
+
+* Blaise Laflamme -- pyramid theme
+
+* Chris Lamb -- reproducibility fixes
+
+* Thomas Lamb -- linkcheck builder
+
+* Łukasz Langa -- partial support for autodoc
+
+* Martin Larralde -- additional napoleon admonitions
+
+* Ian Lee -- quickstart improvements
+
+* Robert Lehmann -- gettext builder (GSOC project)
+
+* Dan MacKinlay -- metadata fixes
+
+* Martin Mahner -- nature theme
+
+* Will Maier -- directory HTML builder
+
+* Jacob Mason -- websupport library (GSOC project)
+
+* Glenn Matthews -- python domain signature improvements
+
+* Kurt McKee -- documentation updates
+
+* Roland Meister -- epub builder
+
+* Ezio Melotti -- collapsible sidebar JavaScript
+
+* Bruce Mitchener -- Minor epub improvement
+
+* Daniel Neuhäuser -- JavaScript domain, Python 3 support (GSOC)
+
+* Julien Palard -- Colspan and rowspan in text builder
+
+* Christopher Perkins -- autosummary integration
+
+* Benjamin Peterson -- unittests
+
+* T. Powers -- HTML output improvements
+
+* Jeppe Pihl -- literalinclude improvements
+
+* Rob Ruana -- napoleon extension
+
+* Vince Salvino -- JavaScript search improvements
+
+* Stefan Seefeld -- toctree improvements
+
+* Gregory Szorc -- performance improvements
+
+* Taku Shimizu -- epub3 builder
+
+* Antonio Valentino -- qthelp builder, docstring inheritance
+
+* Filip Vavera -- napoleon todo directive
+
+* Pauli Virtanen -- autodoc improvements, autosummary extension
+
+* Eric N. Vander Weele -- autodoc improvements
+
+* Stefan van der Walt -- autosummary extension
+
+* Thomas Waldmann -- apidoc module fixes
+
+* John Waltman -- Texinfo builder
+
+* Barry Warsaw -- setup command improvements
+
+* Sebastian Wiesner -- image handling, distutils support
+
+* Michael Wilson -- Intersphinx HTTP basic auth support
+
+* Matthew Woodcraft -- text output improvements
+
+* Joel Wurtz -- cellspanning support in LaTeX
+
+* Hong Xu -- svg support in imgmath extension and various bug fixes
+
+* Stephen Finucane -- setup command improvements and documentation
+
+* Daniel Pizetta -- inheritance diagram improvements
+
+* KINEBUCHI Tomohiko -- typing Sphinx as well as docutils
+
+* Adrián Chaves (Gallaecio) -- coverage builder improvements
+
+* Lars Hupfeldt Nielsen - OpenSSL FIPS mode md5 bug fix
+
+Many thanks for all contributions!
+
+There are also a few modules or functions incorporated from other
+authors and projects:
+
+* sphinx.util.jsdump uses the basestring encoding from simplejson,
+  written by Bob Ippolito, released under the MIT license
+
+* sphinx.util.stemmer was written by Vivake Gupta, placed in the
+  Public Domain
diff --git a/_build/doc/internals/code-of-conduct.txt b/_build/doc/internals/code-of-conduct.txt
new file mode 100644
index 000000000..6d5c08a29
--- /dev/null
+++ b/_build/doc/internals/code-of-conduct.txt
@@ -0,0 +1,79 @@
+Sphinx Code of Conduct
+**********************
+
+Like the technical community as a whole, the Sphinx team and community
+is made up of volunteers from all over the world. Diversity is a
+strength, but it can also lead to communication issues and
+unhappiness. To that end, we have a few ground rules that we ask
+people to adhere to.
+
+* **Be friendly and patient.**
+
+* **Be welcoming.** We strive to be a community that welcomes and
+  supports people of all backgrounds and identities. This includes,
+  but is not limited to members of any race, ethnicity, culture,
+  national origin, colour, immigration status, social and economic
+  class, educational level, sex, sexual orientation, gender identity
+  and expression, age, size, family status, political belief,
+  religion, and mental and physical ability.
+
+* **Be considerate.** Your work will be used by other people, and you
+  in turn will depend on the work of others. Any decision you take
+  will affect users and colleagues, and you should take those
+  consequences into account when making decisions. Remember that we're
+  a world-wide community, so you might not be communicating in someone
+  else's primary language.
+
+* **Be respectful.** Not all of us will agree all the time, but
+  disagreement is no excuse for poor behavior and poor manners. We
+  might all experience some frustration now and then, but we cannot
+  allow that frustration to turn into a personal attack. It's
+  important to remember that a community where people feel
+  uncomfortable or threatened is not a productive one. Members of the
+  Sphinx community should be respectful when dealing with other
+  members as well as with people outside the Sphinx community.
+
+* **Be careful in the words that you choose.** We are a community of
+  professionals, and we conduct ourselves professionally. Be kind to
+  others. Do not insult or put down other participants. Harassment and
+  other exclusionary behavior aren't acceptable. This includes, but is
+  not limited to:
+
+  * Violent threats or language directed against another person.
+
+  * Discriminatory jokes and language.
+
+  * Posting sexually explicit or violent material.
+
+  * Posting (or threatening to post) other people's personally
+    identifying information ("doxing").
+
+  * Personal insults, especially those using racist or sexist terms.
+
+  * Unwelcome sexual attention.
+
+  * Advocating for, or encouraging, any of the above behavior.
+
+  * Repeated harassment of others. In general, if someone asks you to
+    stop, then stop.
+
+* **When we disagree, try to understand why.** Disagreements, both
+  social and technical, happen all the time and Sphinx is no
+  exception. It is important that we resolve disagreements and
+  differing views constructively. Remember that we're different.
+  Different people have different perspectives on issues. Being unable
+  to understand why someone holds a viewpoint doesn't mean that
+  they're wrong. Don't forget that it is human to err and blaming each
+  other doesn't get us anywhere. Instead, focus on helping to resolve
+  issues and learning from mistakes.
+
+This isn't an exhaustive list of things that you can't do. Rather,
+take it in the spirit in which it's intended - a guide to make it
+easier to enrich all of us and the technical communities in which we
+participate. This code of conduct applies to all spaces of the Sphinx
+community.
+
+-[ Attribution ]-
+
+Original text courtesy of the Speak Up! project:
+http://web.archive.org/web/20141109123859/http://speakup.io/coc.html.
diff --git a/_build/doc/internals/contributing.txt b/_build/doc/internals/contributing.txt
new file mode 100644
index 000000000..ce102f754
--- /dev/null
+++ b/_build/doc/internals/contributing.txt
@@ -0,0 +1,303 @@
+Contributing to Sphinx
+**********************
+
+There are many ways you can contribute to Sphinx, be it filing bug
+reports or feature requests, writing new documentation or submitting
+patches for new or fixed behavior. This guide serves to illustrate how
+you can get started with this.
+
+
+Getting help
+============
+
+The Sphinx community maintains a number of mailing lists and IRC
+channels.
+
+Stack Overflow with tag python-sphinx
+   Questions and answers about use and development.
+
+sphinx-users <sphinx-users@googlegroups.com>
+   Mailing list for user support.
+
+sphinx-dev <sphinx-dev@googlegroups.com>
+   Mailing list for development related discussions.
+
+#sphinx-doc on irc.freenode.net
+   IRC channel for development questions and user support.
+
+
+Bug Reports and Feature Requests
+================================
+
+If you have encountered a problem with Sphinx or have an idea for a
+new feature, please submit it to the issue tracker on GitHub or
+discuss it on the sphinx-dev mailing list.
+
+For bug reports, please include the output produced during the build
+process and also the log file Sphinx creates after it encounters an
+unhandled exception.  The location of this file should be shown
+towards the end of the error message.
+
+Including or providing a link to the source files involved may help us
+fix the issue.  If possible, try to create a minimal project that
+produces the error and post that instead.
+
+
+Writing code
+============
+
+The Sphinx source code is managed using Git and is hosted on GitHub.
+The recommended way for new contributors to submit code to Sphinx is
+to fork this repository and submit a pull request after committing
+changes to their fork. The pull request will then need to be approved
+by one of the core developers before it is merged into the main
+repository.
+
+
+Getting started
+---------------
+
+Before starting on a patch, we recommend checking for open issues or
+open a fresh issue to start a discussion around a feature idea or a
+bug. If you feel uncomfortable or uncertain about an issue or your
+changes, feel free to email the *sphinx-dev* mailing list.
+
+These are the basic steps needed to start developing on Sphinx.
+
+1. Create an account on GitHub.
+
+2. Fork the main Sphinx repository (sphinx-doc/sphinx) using the
+   GitHub interface.
+
+3. Clone the forked repository to your machine.
+
+      git clone https://github.com/USERNAME/sphinx
+      cd sphinx
+
+4. Checkout the appropriate branch.
+
+   Sphinx adopts Semantic Versioning 2.0.0 (refs: https://semver.org/
+   ).
+
+   For changes that preserves backwards-compatibility of API and
+   features, they should be included in the next MINOR release, use
+   the "A.x" branch.
+
+      git checkout A.x
+
+   For incompatible or other substantial changes that should wait
+   until the next MAJOR release, use the "master" branch.
+
+   For urgent release, a new PATCH branch must be branched from the
+   newest release tag (see Sphinx's release process for detail).
+
+5. Setup a virtual environment.
+
+   This is not necessary for unit testing, thanks to "tox", but it is
+   necessary if you wish to run "sphinx-build" locally or run unit
+   tests without the help of "tox":
+
+      virtualenv ~/.venv
+      . ~/.venv/bin/activate
+      pip install -e .
+
+6. Create a new working branch. Choose any name you like.
+
+      git checkout -b feature-xyz
+
+7. Hack, hack, hack.
+
+   Write your code along with tests that shows that the bug was fixed
+   or that the feature works as expected.
+
+8. Add a bullet point to "CHANGES" if the fix or feature is not
+   trivial (small doc updates, typo fixes), then commit:
+
+      git commit -m '#42: Add useful new feature that does this.'
+
+   GitHub recognizes certain phrases that can be used to automatically
+   update the issue tracker. For example:
+
+      git commit -m 'Closes #42: Fix invalid markup in docstring of Foo.bar.'
+
+   would close issue #42.
+
+9. Push changes in the branch to your forked repository on GitHub:
+
+      git push origin feature-xyz
+
+10. Submit a pull request from your branch to the respective branch
+    ("master" or "A.x").
+
+11. Wait for a core developer to review your changes.
+
+
+Coding style
+------------
+
+Please follow these guidelines when writing code for Sphinx:
+
+* Try to use the same code style as used in the rest of the project.
+  See the Pocoo Styleguide for more information.
+
+* For non-trivial changes, please update the "CHANGES" file.  If your
+  changes alter existing behavior, please document this.
+
+* New features should be documented.  Include examples and use cases
+  where appropriate.  If possible, include a sample that is displayed
+  in the generated output.
+
+* When adding a new configuration variable, be sure to document it and
+  update "sphinx/cmd/quickstart.py" if it's important enough.
+
+* Add appropriate unit tests.
+
+Style and type checks can be run using "tox":
+
+   tox -e mypy
+   tox -e flake8
+
+
+Unit tests
+----------
+
+Sphinx is tested using pytest for Python code and Karma for
+JavaScript.
+
+To run Python unit tests, we recommend using "tox", which provides a
+number of targets and allows testing against multiple different Python
+environments:
+
+* To list all possible targets:
+
+     tox -av
+
+* To run unit tests for a specific Python version, such as Python 3.6:
+
+     tox -e py36
+
+* To run unit tests for a specific Python version and turn on
+  deprecation warnings on so they're shown in the test output:
+
+     PYTHONWARNINGS=all tox -e py36
+
+* Arguments to "pytest" can be passed via "tox", e.g. in order to run
+  a particular test:
+
+     tox -e py36 tests/test_module.py::test_new_feature
+
+You can also test by installing dependencies in your local
+environment:
+
+   pip install .[test]
+
+To run JavaScript tests, use "npm":
+
+   npm install
+   npm run test
+
+New unit tests should be included in the "tests" directory where
+necessary:
+
+* For bug fixes, first add a test that fails without your changes and
+  passes after they are applied.
+
+* Tests that need a "sphinx-build" run should be integrated in one of
+  the existing test modules if possible.  New tests that to
+  "@with_app" and then "build_all" for a few assertions are not good
+  since *the test suite should not take more than a minute to run*.
+
+New in version 1.8: Sphinx also runs JavaScript tests.
+
+New in version 1.6: "sphinx.testing" is added as a experimental.
+
+Changed in version 1.5.2: Sphinx was switched from nose to pytest.
+
+Utility functions and pytest fixtures for testing are provided in
+"sphinx.testing". If you are a developer of Sphinx extensions, you can
+write unit tests with using pytest. At this time, "sphinx.testing"
+will help your test implementation.
+
+How to use pytest fixtures that are provided by "sphinx.testing"?  You
+can require "'sphinx.testing.fixtures'" in your test modules or
+"conftest.py" files like this:
+
+   pytest_plugins = 'sphinx.testing.fixtures'
+
+If you want to know more detailed usage, please refer to
+"tests/conftest.py" and other "test_*.py" files under "tests"
+directory.
+
+
+Writing documentation
+=====================
+
+You can build documentation using "tox":
+
+   tox -e docs
+
+
+Translations
+------------
+
+The parts of messages in Sphinx that go into builds are translated
+into several locales.  The translations are kept as gettext ".po"
+files translated from the master template "sphinx/locale/sphinx.pot".
+
+Sphinx uses Babel to extract messages and maintain the catalog files.
+It is integrated in "setup.py":
+
+* Use "python setup.py extract_messages" to update the ".pot"
+  template.
+
+* Use "python setup.py update_catalog" to update all existing language
+  catalogs in "sphinx/locale/*/LC_MESSAGES" with the current messages
+  in the template file.
+
+* Use "python setup.py compile_catalog" to compile the ".po" files to
+  binary ".mo" files and ".js" files.
+
+When an updated ".po" file is submitted, run compile_catalog to commit
+both the source and the compiled catalogs.
+
+When a new locale is submitted, add a new directory with the ISO 639-1
+language identifier and put "sphinx.po" in there.  Don't forget to
+update the possible values for >>:confval:`language`<< in
+"doc/usage/configuration.rst".
+
+The Sphinx core messages can also be translated on Transifex.  There
+"tx" client tool, which is provided by the "transifex_client" Python
+package, can be used to pull translations in ".po" format from
+Transifex.  To do this, go to "sphinx/locale" and then run "tx pull -f
+-l LANG" where "LANG" is an existing language identifier.  It is good
+practice to run "python setup.py update_catalog" afterwards to make
+sure the ".po" file has the canonical Babel formatting.
+
+
+Debugging tips
+==============
+
+* Delete the build cache before building documents if you make changes
+  in the code by running the command "make clean" or using the
+  "sphinx-build -E" option.
+
+* Use the "sphinx-build -P" option to run "pdb" on exceptions.
+
+* Use "node.pformat()" and "node.asdom().toxml()" to generate a
+  printable representation of the document structure.
+
+* Set the configuration variable >>:confval:`keep_warnings`<< to
+  "True" so warnings will be displayed in the generated output.
+
+* Set the configuration variable >>:confval:`nitpicky`<< to "True" so
+  that Sphinx will complain about references without a known target.
+
+* Set the debugging options in the Docutils configuration file.
+
+* JavaScript stemming algorithms in "sphinx/search/*.py" (except
+  "en.py") are generated by this modified snowballcode generator.
+  Generated JSX files are in this repository.  You can get the
+  resulting JavaScript files using the following command:
+
+     npm install
+     node_modules/.bin/grunt build # -> dest/*.global.js
diff --git a/_build/doc/internals/index.txt b/_build/doc/internals/index.txt
new file mode 100644
index 000000000..61c96d359
--- /dev/null
+++ b/_build/doc/internals/index.txt
@@ -0,0 +1,38 @@
+Sphinx internals
+****************
+
+This guide contains information about the Sphinx open source project
+itself. This is where you can find information about how Sphinx is
+managed and learn how to contribute to the project.
+
+* Contributing to Sphinx
+
+  * Getting help
+
+  * Bug Reports and Feature Requests
+
+  * Writing code
+
+  * Writing documentation
+
+  * Debugging tips
+
+* Sphinx's release process
+
+  * Branch Model
+
+  * Deprecating a feature
+
+  * Deprecation policy
+
+  * Release procedures
+
+* Organization of the Sphinx project
+
+  * Core developers
+
+  * Other contributors
+
+* Sphinx Code of Conduct
+
+* Sphinx authors
diff --git a/_build/doc/internals/organization.txt b/_build/doc/internals/organization.txt
new file mode 100644
index 000000000..ad616c71e
--- /dev/null
+++ b/_build/doc/internals/organization.txt
@@ -0,0 +1,64 @@
+Organization of the Sphinx project
+**********************************
+
+The guide explains how the Sphinx project is organized.
+
+
+Core developers
+===============
+
+The core developers of Sphinx have write access to the main
+repository.  They can commit changes, accept/reject pull requests, and
+manage items on the issue tracker.
+
+
+Guidelines
+----------
+
+The following are some general guidelines for core developers:
+
+* Questionable or extensive changes should be submitted as a pull
+  request instead of being committed directly to the main repository.
+  The pull request should be reviewed by another core developer before
+  it is merged.
+
+* Trivial changes can be committed directly but be sure to keep the
+  repository in a good working state and that all tests pass before
+  pushing your changes.
+
+* When committing code written by someone else, please attribute the
+  original author in the commit message and any relevant "CHANGES"
+  entry.
+
+
+Membership
+----------
+
+Core membership is predicated on continued active contribution to the
+project. In general, prospective cores should demonstrate:
+
+* a good understanding of one of more components of Sphinx
+
+* a history of helpful, constructive contributions
+
+* a willingness to invest time improving Sphinx
+
+Refer to Contributing to Sphinx for more information on how you can
+get started.
+
+
+Other contributors
+==================
+
+You do not need to be a core developer or have write access to be
+involved in the development of Sphinx.  You can submit patches or
+create pull requests from forked repositories and have a core
+developer add the changes for you.
+
+Similarly, contributions are not limited to code patches. We also
+welcome help triaging bugs, input on design decisions, reviews of
+existing patches and documentation improvements. More information can
+be found in Contributing to Sphinx.
+
+A list of people that have contributed to Sphinx can be found in
+Sphinx authors.
diff --git a/_build/doc/internals/release-process.txt b/_build/doc/internals/release-process.txt
new file mode 100644
index 000000000..08c0eca9c
--- /dev/null
+++ b/_build/doc/internals/release-process.txt
@@ -0,0 +1,109 @@
+Sphinx's release process
+************************
+
+
+Branch Model
+============
+
+Sphinx project uses following branches for developing that conforms to
+Semantic Versioning 2.0.0 (refs: https://semver.org/ ).
+
+"master"
+   Development for MAJOR version. All changes including incompatible
+   behaviors and public API updates are allowed.
+
+"A.x" (ex. "2.x")
+   Where "A.x" is the "MAJOR.MINOR" release.  Used to maintain current
+   MINOR release. All changes are allowed if the change preserves
+   backwards-compatibility of API and features.
+
+   Only the most recent "MAJOR.MINOR" branch is currently retained.
+   When a new MAJOR version is released, the old "MAJOR.MINOR" branch
+   will be deleted and replaced by an equivalent tag.
+
+"A.B.x" (ex. "2.4.x")
+   Where "A.B.x" is the "MAJOR.MINOR.PATCH" release.  Only backwards-
+   compatible bug fixes are allowed. In Sphinx project, PATCH version
+   is used for urgent bug fix.
+
+   "MAJOR.MINOR.PATCH" branch will be branched from the "v" prefixed
+   release tag (ex. make 2.3.1 that branched from v2.3.0) when a
+   urgent release is needed. When new PATCH version is released, the
+   branch will be deleted and replaced by an equivalent tag (ex.
+   v2.3.1).
+
+
+Deprecating a feature
+=====================
+
+There are a couple reasons that code in Sphinx might be deprecated:
+
+* If a feature has been improved or modified in a backwards-
+  incompatible way, the old feature or behavior will be deprecated.
+
+* Sometimes Sphinx will include a backport of a Python library that's
+  not included in a version of Python that Sphinx currently supports.
+  When Sphinx no longer needs to support the older version of Python
+  that doesn't include the library, the library will be deprecated in
+  Sphinx.
+
+As the Deprecation policy describes, the first release of Sphinx that
+deprecates a feature ("A.B") should raise a "RemovedInSphinxXXWarning"
+(where "XX" is the Sphinx version where the feature will be removed)
+when the deprecated feature is invoked. Assuming we have good test
+coverage, these warnings are converted to errors when running the test
+suite with warnings enabled:
+
+   pytest -Wall
+
+Thus, when adding a "RemovedInSphinxXXWarning" you need to eliminate
+or silence any warnings generated when running the tests.
+
+
+Deprecation policy
+==================
+
+MAJOR and MINOR releases may deprecate certain features from previous
+releases. If a feature is deprecated in a release A.x, it will
+continue to work in all A.x.x versions (for all versions of x). It
+will continue to work in all B.x.x versions but raise deprecation
+warnings. Deprecated features will be removed at the C.0.0. It means
+the deprecated feature will work during 2 MAJOR releases at least.
+
+So, for example, if we decided to start the deprecation of a function
+in Sphinx 2.x:
+
+* Sphinx 2.x will contain a backwards-compatible replica of the
+  function which will raise a "RemovedInSphinx40Warning". This is a
+  subclass of "python:PendingDeprecationWarning", i.e. it will not get
+  displayed by default.
+
+* Sphinx 3.x will still contain the backwards-compatible replica, but
+  "RemovedInSphinx40Warning" will be a subclass of
+  "python:DeprecationWarning" then, and gets displayed by default.
+
+* Sphinx 4.0 will remove the feature outright.
+
+
+Deprecation warnings
+--------------------
+
+Sphinx will enable its "RemovedInNextVersionWarning" warnings by
+default, if "python:PYTHONWARNINGS" is not set.  Therefore you can
+disable them using:
+
+* "PYTHONWARNINGS= make html" (Linux/Mac)
+
+* "export PYTHONWARNINGS=" and do "make html" (Linux/Mac)
+
+* "set PYTHONWARNINGS=" and do "make html" (Windows)
+
+But you can also explicitly enable the pending ones using e.g.
+"PYTHONWARNINGS=default" (see the *Python docs on configuring
+warnings*) for more details.
+
+
+Release procedures
+==================
+
+The release procedures are listed in "utils/release-checklist".
diff --git a/_build/doc/latex.txt b/_build/doc/latex.txt
new file mode 100644
index 000000000..5e18696d5
--- /dev/null
+++ b/_build/doc/latex.txt
@@ -0,0 +1,1001 @@
+LaTeX customization
+*******************
+
+Unlike the HTML builders, the "latex" builder does not benefit from
+prepared themes. The Options for LaTeX output, and particularly the
+latex_elements variable, provides much of the interface for
+customization. For example:
+
+   # inside conf.py
+   latex_engine = 'xelatex'
+   latex_elements = {
+       'fontpkg': r'''
+   \setmainfont{DejaVu Serif}
+   \setsansfont{DejaVu Sans}
+   \setmonofont{DejaVu Sans Mono}
+   ''',
+       'preamble': r'''
+   \usepackage[titles]{tocloft}
+   \cftsetpnumwidth {1.25cm}\cftsetrmarg{1.5cm}
+   \setlength{\cftchapnumwidth}{0.75cm}
+   \setlength{\cftsecindent}{\cftchapnumwidth}
+   \setlength{\cftsecnumwidth}{1.25cm}
+   ''',
+       'fncychap': r'\usepackage[Bjornstrup]{fncychap}',
+       'printindex': r'\footnotesize\raggedright\printindex',
+   }
+   latex_show_urls = 'footnote'
+
+Note:
+
+  Keep in mind that backslashes must be doubled in Python string
+  literals to avoid interpretation as escape sequences. Alternatively,
+  you may use raw strings as is done above.
+
+
+The "latex_elements" configuration setting
+==========================================
+
+A dictionary that contains LaTeX snippets overriding those Sphinx
+usually puts into the generated ".tex" files.  Its "'sphinxsetup'" key
+is described separately.
+
+Keys that you may want to override include:
+
+"'papersize'"
+   Paper size option of the document class ("'a4paper'" or
+   "'letterpaper'")
+
+   Default: "'letterpaper'"
+
+"'pointsize'"
+   Point size option of the document class ("'10pt'", "'11pt'" or
+   "'12pt'")
+
+   Default: "'10pt'"
+
+"'pxunit'"
+   The value of the "px" when used in image attributes "width" and
+   "height". The default value is "'0.75bp'" which achieves "96px=1in"
+   (in TeX "1in = 72bp = 72.27pt".) To obtain for example "100px=1in"
+   use "'0.01in'" or "'0.7227pt'" (the latter leads to TeX computing a
+   more precise value, due to the smaller unit used in the
+   specification); for "72px=1in", simply use "'1bp'"; for "90px=1in",
+   use "'0.8bp'" or "'0.803pt'".
+
+   Default: "'0.75bp'"
+
+   New in version 1.5.
+
+"'passoptionstopackages'"
+   A string which will be positioned early in the preamble, designed
+   to contain "\\PassOptionsToPackage{options}{foo}" commands.
+
+   Default: "''"
+
+   New in version 1.4.
+
+"'babel'"
+   "babel" package inclusion, default "'\\usepackage{babel}'" (the
+   suitable document language string is passed as class option, and
+   "english" is used if no language.) For Japanese documents, the
+   default is the empty string.
+
+   With XeLaTeX and LuaLaTeX, Sphinx configures the LaTeX document to
+   use polyglossia, but one should be aware that current babel has
+   improved its support for Unicode engines in recent years and for
+   some languages it may make sense to prefer "babel" over
+   "polyglossia".
+
+   Hint:
+
+     After modifiying a core LaTeX key like this one, clean up the
+     LaTeX build repertory before next PDF build, else left-over
+     auxiliary files are likely to break the build.
+
+   Default:  "'\\usepackage{babel}'" ("''" for Japanese documents)
+
+   Changed in version 1.5: For >>:confval:`latex_engine`<< set to
+   "'xelatex'", the default is
+   "'\\usepackage{polyglossia}\n\\setmainlanguage{<language>}'".
+
+   Changed in version 1.6: "'lualatex'" uses same default setting as
+   "'xelatex'"
+
+   Changed in version 1.7.6: For French, "xelatex" and "lualatex"
+   default to using "babel", not "polyglossia".
+
+"'fontpkg'"
+   Font package inclusion. The default of "'\\usepackage{times}'" uses
+   Times for text, Helvetica for sans serif and Courier for monospace.
+
+   In order to support occasional Cyrillic (физика частиц) or Greek
+   letters (Σωματιδιακή φυσική) in a document whose language is
+   English or a Latin European one, the default set-up is enhanced
+   (only for "'pdflatex'" engine) to do:
+
+      \substitutefont{LGR}{\rmdefault}{cmr}
+      \substitutefont{LGR}{\sfdefault}{cmss}
+      \substitutefont{LGR}{\ttdefault}{cmtt}
+      \substitutefont{X2}{\rmdefault}{cmr}
+      \substitutefont{X2}{\sfdefault}{cmss}
+      \substitutefont{X2}{\ttdefault}{cmtt}
+
+   This is activated only under the condition that the "'fontenc'" key
+   is configured to load the "LGR" (Greek) and/or "X2" (Cyrillic)
+   pdflatex-font encodings (if the >>:confval:`language`<< is set to a
+   Cyrillic language, this "'fontpkg'" key must be used as "times"
+   package has no direct support for it; then keep only "LGR" lines
+   from the above, if support is needed for Greek in the text).
+
+   The "\substitutefont" command is from the eponymous LaTeX package,
+   which is loaded by Sphinx if needed (on Ubuntu Xenial it is part of
+   "texlive-latex-extra" which is a Sphinx requirement).
+
+   Only if the document actually does contain Unicode Greek letters
+   (in text) or Cyrillic letters, will the above default set-up cause
+   additional requirements for the PDF build. On Ubuntu Xenial, these
+   are the "texlive-lang-greek", "texlive-lang-cyrillic", and (with
+   the above choice of fonts) the "cm-super" (or "cm-super-minimal")
+   packages.
+
+   For "'xelatex'" and "'lualatex'", the default is to use the
+   FreeFont family: this OpenType font family supports both Cyrillic
+   and Greek scripts and is available as separate Ubuntu Xenial
+   package "fonts-freefont-otf". It is not necessary to install the
+   much larger "texlive-fonts-extra" package.
+
+   "'platex'" (Japanese documents) engine supports individual Cyrillic
+   and Greek letters with no need of extra user set-up.
+
+   Default: "'\\usepackage{times}'" (or "''" when using a Cyrillic
+   script)
+
+   Changed in version 1.2: Defaults to "''" when the
+   >>:confval:`language`<< uses the Cyrillic script.
+
+   Changed in version 2.0: Added support for individual Greek and
+   Cyrillic letters:
+
+"'fncychap'"
+   Inclusion of the "fncychap" package (which makes fancy chapter
+   titles), default "'\\usepackage[Bjarne]{fncychap}'" for English
+   documentation (this option is slightly customized by Sphinx),
+   "'\\usepackage[Sonny]{fncychap}'" for internationalized docs
+   (because the "Bjarne" style uses numbers spelled out in English).
+   Other "fncychap" styles you can try are "Lenny", "Glenn", "Conny",
+   "Rejne" and "Bjornstrup".  You can also set this to "''" to disable
+   fncychap.
+
+   Default: "'\\usepackage[Bjarne]{fncychap}'" for English documents,
+      "'\\usepackage[Sonny]{fncychap}'" for internationalized
+      documents, and "''" for Japanese documents.
+
+"'preamble'"
+   Additional preamble content.  One may move all needed macros into
+   some file "mystyle.tex.txt" of the project source repertory, and
+   get LaTeX to import it at run time:
+
+      'preamble': r'\input{mystyle.tex.txt}',
+      # or, if the \ProvidesPackage LaTeX macro is used in a file mystyle.sty
+      'preamble': r'\usepackage{mystyle}',
+
+   It is then needed to set appropriately
+   >>:confval:`latex_additional_files`<<, for example:
+
+      latex_additional_files = ["mystyle.sty"]
+
+   Default: "''"
+
+"'figure_align'"
+   Latex figure float alignment. Whenever an image doesn't fit into
+   the current page, it will be 'floated' into the next page but may
+   be preceded by any other text.  If you don't like this behavior,
+   use 'H' which will disable floating and position figures strictly
+   in the order they appear in the source.
+
+   Default: "'htbp'" (here, top, bottom, page)
+
+   New in version 1.3.
+
+"'atendofbody'"
+   Additional document content (right before the indices).
+
+   Default: "''"
+
+   New in version 1.5.
+
+"'extrapackages'"
+   Additional LaTeX packages.  For example:
+
+      latex_elements = {
+          'packages': r'\usepackage{isodate}'
+      }
+
+   The specified LaTeX packages will be loaded before hyperref package
+   and packages loaded from Sphinx extensions.
+
+   Hint:
+
+     If you'd like to load additional LaTeX packages after hyperref,
+     use "'preamble'" key instead.
+
+   Default: "''"
+
+   New in version 2.3.
+
+"'footer'"
+   Additional footer content (before the indices).
+
+   Default: "''"
+
+   Deprecated since version 1.5: Use "'atendofbody'" key instead.
+
+Keys that don't need to be overridden unless in special cases are:
+
+"'extraclassoptions'"
+   The default is the empty string. Example: "'extraclassoptions':
+   'openany'" will allow chapters (for documents of the "'manual'"
+   type) to start on any page.
+
+   Default: "''"
+
+   New in version 1.2.
+
+   Changed in version 1.6: Added this documentation.
+
+"'maxlistdepth'"
+   LaTeX allows by default at most 6 levels for nesting list and
+   quote-like environments, with at most 4 enumerated lists, and 4
+   bullet lists. Setting this key for example to "'10'" (as a string)
+   will allow up to 10 nested levels (of all sorts). Leaving it to the
+   empty string means to obey the LaTeX default.
+
+   Warning:
+
+     * Using this key may prove incompatible with some LaTeX packages
+       or special document classes which do their own list
+       customization.
+
+     * The key setting is silently *ignored* if
+       "\usepackage{enumitem}" is executed inside the document
+       preamble. Use then rather the dedicated commands of this LaTeX
+       package.
+
+   Default: "6"
+
+   New in version 1.5.
+
+"'inputenc'"
+   "inputenc" package inclusion.
+
+   Default: "'\\usepackage[utf8]{inputenc}'" when using pdflatex, else
+      "''"
+
+   Changed in version 1.4.3: Previously
+   "'\\usepackage[utf8]{inputenc}'" was used for all compilers.
+
+"'cmappkg'"
+   "cmap" package inclusion.
+
+   Default: "'\\usepackage{cmap}'"
+
+   New in version 1.2.
+
+"'fontenc'"
+   "fontenc" package inclusion.
+
+   If "'pdflatex'" is the >>:confval:`latex_engine`<<, one can add
+   "LGR" for support of Greek letters in the document, and also "X2"
+   (or "T2A") for Cyrillic letters, like this:
+
+      r'\usepackage[LGR,X2,T1]{fontenc}'
+
+   Attention:
+
+     If Greek is main language, do not use this key.  Since Sphinx
+     2.2.1, "xelatex" will be used automatically as
+     >>:confval:`latex_engine`<<. Formerly, Sphinx did not support
+     producing PDF via LaTeX with Greek as main language.Prior to 2.0,
+     Unicode Greek letters were escaped to use LaTeX math mark-up.
+     This is not the case anymore, and the above must be used (only in
+     case of "'pdflatex'" engine) if the source contains such Unicode
+     Greek.On Ubuntu xenial, packages "texlive-lang-greek" and "cm-
+     super" (for the latter, only if the "'fontpkg'" setting is left
+     to its default) are needed for "LGR" to work.  In place of "cm-
+     super" one can install smaller "cm-super-minimal", but it
+     requires the LaTeX document to execute
+     "\usepackage[10pt]{type1ec}" before loading "fontenc".  Thus, use
+     this key with this extra at its start if needed.
+
+   Default: "'\\usepackage[T1]{fontenc}'"
+
+   Changed in version 1.5: Defaults to "'\\usepackage{fontspec}'" when
+   >>:confval:`latex_engine`<< is "'xelatex'".
+
+   Changed in version 1.6: "'lualatex'" uses "fontspec" per default
+   like "'xelatex'".
+
+   Changed in version 2.0: "'lualatex'" executes
+   "\defaultfontfeatures[\rmfamily,\sffamily]{}" to disable TeX
+   ligatures transforming *<<* and *>>* as escaping working with
+   "pdflatex/xelatex" failed with "lualatex".
+
+   Changed in version 2.0: Detection of "LGR", "T2A", "X2" to trigger
+   support of occasional Greek or Cyrillic ("'pdflatex'" only, as this
+   support is provided natively by "'platex'" and only requires
+   suitable font with "'xelatex'/'lualatex'").
+
+   Changed in version 2.3.0: "'xelatex'" also executes
+   "\defaultfontfeatures[\rmfamily,\sffamily]{}" in order to avoid
+   contractions of "--" into en-dash or transforms of straight quotes
+   into curly ones in PDF (in non-literal text paragraphs) despite
+   >>:confval:`smartquotes`<< being set to "False".
+
+"'textgreek'"
+   This is needed for "pdflatex" to support Unicode input of Greek
+   letters such as φύσις.  Expert users may want to load the
+   "textalpha" package with its option "normalize-symbols".
+
+   Hint:
+
+     Unicode Greek (but no further Unicode symbols) in "math" can be
+     supported by "'pdflatex'" from setting this key to
+     "r'\usepackage{textalpha,alphabeta}'".  Then ":math:`α`" (U+03B1)
+     will render as \alpha.  For wider Unicode support in math input,
+     see the discussion of >>:confval:`latex_engine`<<.
+
+   With "'platex'" (Japanese),  "'xelatex'" or "'lualatex'", this key
+   is ignored.
+
+   Default: "'\\usepackage{textalpha}'" or "''" if "fontenc" does not
+      include the "LGR" option.
+
+   New in version 2.0.
+
+"'geometry'"
+   "geometry" package inclusion, the default definition is:
+
+      "'\\usepackage{geometry}'"
+
+   with an additional "[dvipdfm]" for Japanese documents. The Sphinx
+   LaTeX style file executes:
+
+      "\PassOptionsToPackage{hmargin=1in,vmargin=1in,marginpar=0.5in}
+      {geometry}"
+
+   which can be customized via corresponding 'sphinxsetup' options.
+
+   Default: "'\\usepackage{geometry}'" (or
+      "'\\usepackage[dvipdfm]{geometry}'" for Japanese documents)
+
+   New in version 1.5.
+
+   Changed in version 1.5.2: "dvipdfm" option if
+   >>:confval:`latex_engine`<< is "'platex'".
+
+   New in version 1.5.3: The 'sphinxsetup' keys for the margins.
+
+   Changed in version 1.5.3: The location in the LaTeX file has been
+   moved to after "\usepackage{sphinx}" and "\sphinxsetup{..}", hence
+   also after insertion of "'fontpkg'" key. This is in order to handle
+   the paper layout options in a special way for Japanese documents:
+   the text width will be set to an integer multiple of the *zenkaku*
+   width, and the text height to an integer multiple of the baseline.
+   See the hmargin documentation for more.
+
+"'hyperref'"
+   "hyperref" package inclusion; also loads package "hypcap" and
+   issues "\urlstyle{same}". This is done after "sphinx.sty" file is
+   loaded and before executing the contents of "'preamble'" key.
+
+   Attention:
+
+     Loading of packages "hyperref" and "hypcap" is mandatory.
+
+   New in version 1.5: Previously this was done from inside
+   "sphinx.sty".
+
+"'maketitle'"
+   "maketitle" call. Override if you want to generate a differently
+   styled title page.
+
+   Hint:
+
+     If the key value is set to
+     "r'\newcommand\sphinxbackoftitlepage{<Extra
+     material>}\sphinxmaketitle'", then "<Extra material>" will be
+     typeset on back of title page ("'manual'" docclass only).
+
+   Default: "'\\sphinxmaketitle'"
+
+   Changed in version 1.8.3: Original "\maketitle" from document class
+   is not overwritten, hence is re-usable as part of some custom
+   setting for this key.
+
+   New in version 1.8.3: "\sphinxbackoftitlepage" optional macro.  It
+   can also be defined inside "'preamble'" key rather than this one.
+
+"'releasename'"
+   Value that prefixes "'release'" element on title page.  As for
+   *title* and *author* used in the tuples of
+   >>:confval:`latex_documents`<<, it is inserted as LaTeX markup.
+
+   Default: "'Release'"
+
+"'tableofcontents'"
+   "tableofcontents" call. The default of "'\\sphinxtableofcontents'"
+   is a wrapper of unmodified "\tableofcontents", which may itself be
+   customized by user loaded packages. Override if you want to
+   generate a different table of contents or put content between the
+   title page and the TOC.
+
+   Default: "'\\sphinxtableofcontents'"
+
+   Changed in version 1.5: Previously the meaning of
+   "\tableofcontents" itself was modified by Sphinx. This created an
+   incompatibility with dedicated packages modifying it also such as
+   "tocloft" or "etoc".
+
+"'transition'"
+   Commands used to display transitions. Override if you want to
+   display transitions differently.
+
+   Default: "'\n\n\\bigskip\\hrule\\bigskip\n\n'"
+
+   New in version 1.2.
+
+   Changed in version 1.6: Remove unneeded "{}" after "\\hrule".
+
+"'printindex'"
+   "printindex" call, the last thing in the file. Override if you want
+   to generate the index differently or append some content after the
+   index. For example "'\\footnotesize\\raggedright\\printindex'" is
+   advisable when the index is full of long entries.
+
+   Default: "'\\printindex'"
+
+"'fvset'"
+   Customization of "fancyvrb" LaTeX package. The default value of
+   "'\\fvset{fontsize=\\small}'" is used to adjust for the large
+   character width of the monospace font, used in code-blocks.  You
+   may need to modify this if you use custom fonts.
+
+   Default: "'\\fvset{fontsize=\\small}'"
+
+   New in version 1.8.
+
+   Changed in version 2.0: Due to new default font choice for
+   "'xelatex'" and "'lualatex'" (FreeFont), Sphinx does
+   "\\fvset{fontsize=\\small}" also with these engines (and not
+   "\\fvset{fontsize=auto}").
+
+Keys that are set by other options and therefore should not be
+overridden are:
+
+"'docclass'" "'classoptions'" "'title'" "'release'" "'author'"
+"'makeindex'"
+
+
+The "sphinxsetup" configuration setting
+=======================================
+
+New in version 1.5.
+
+The "'sphinxsetup'" key of latex_elements provides a LaTeX-type
+customization interface:
+
+   latex_elements = {
+       'sphinxsetup': 'key1=value1, key2=value2, ...',
+   }
+
+It defaults to empty.  If non-empty, it will be passed as argument to
+the "\sphinxsetup" macro inside the document preamble, like this:
+
+   \usepackage{sphinx}
+   \sphinxsetup{key1=value1, key2=value2,...}
+
+The colors used in the above are provided by the "svgnames" option of
+the "xcolor" package:
+
+   latex_elements = {
+       'passoptionstopackages': r'\PassOptionsToPackage{svgnames}{xcolor}',
+   }
+
+It is possible to insert further uses of the "\sphinxsetup" LaTeX
+macro directly into the body of the document, via the help of the
+"raw" directive. This chapter is styled in the PDF output using the
+following at the start of the chaper:
+
+   .. raw:: latex
+
+      \begingroup
+      \sphinxsetup{%
+            verbatimwithframe=false,
+            VerbatimColor={named}{OldLace},
+            TitleColor={named}{DarkGoldenrod},
+            hintBorderColor={named}{LightCoral},
+            attentionborder=3pt,
+            attentionBorderColor={named}{Crimson},
+            attentionBgColor={named}{FloralWhite},
+            noteborder=2pt,
+            noteBorderColor={named}{Olive},
+            cautionborder=3pt,
+            cautionBorderColor={named}{Cyan},
+            cautionBgColor={named}{LightCyan}}
+
+The below is included at the end of the chapter:
+
+   .. raw:: latex
+
+      \endgroup
+
+LaTeX boolean keys require *lowercase* "true" or "false" values.
+Spaces around the commas and equal signs are ignored, spaces inside
+LaTeX macros may be significant.
+
+"hmargin, vmargin"
+   The dimensions of the horizontal (resp. vertical) margins, passed
+   as "hmargin" (resp. "vmargin") option to the "geometry" package.
+   Example:
+
+      'sphinxsetup': 'hmargin={2in,1.5in}, vmargin={1.5in,2in}, marginpar=1in',
+
+   Japanese documents currently accept only the one-dimension format
+   for these parameters. The "geometry" package is then passed
+   suitable options to get the text width set to an exact multiple of
+   the *zenkaku* width, and the text height set to an integer multiple
+   of the baselineskip, with the closest fit for the margins.
+
+   Default: "1in" (equivalent to "{1in,1in}")
+
+   Hint:
+
+     For Japanese "'manual'" docclass with pointsize "11pt" or "12pt",
+     use the "nomag" extra document class option (cf.
+     "'extraclassoptions'" key of >>:confval:`latex_elements`<<) or
+     so-called TeX "true" units:
+
+        'sphinxsetup': 'hmargin=1.5truein, vmargin=1.5truein, marginpar=5zw',
+
+   New in version 1.5.3.
+
+"marginpar"
+   The "\marginparwidth" LaTeX dimension. For Japanese documents, the
+   value is modified to be the closest integer multiple of the
+   *zenkaku* width.
+
+   Default: "0.5in"
+
+   New in version 1.5.3.
+
+"verbatimwithframe"
+   Boolean to specify if "code-block"s and literal includes are
+   framed. Setting it to "false" does not deactivate use of package
+   "framed", because it is still in use for the optional background
+   colour.
+
+   Default: "true".
+
+"verbatimwrapslines"
+   Boolean to specify if long lines in "code-block"'s contents are
+   wrapped.
+
+   Default: "true"
+
+"literalblockcappos"
+   Decides the caption position: either "b" ("bottom") or "t" ("top").
+
+   Default: "t"
+
+   New in version 1.7.
+
+"verbatimhintsturnover"
+   Boolean to specify if code-blocks display "continued on next page"
+   and "continued from previous page" hints in case of pagebreaks.
+
+   Default: "true"
+
+   New in version 1.6.3.
+
+   Changed in version 1.7: the default changed from "false" to "true".
+
+"verbatimcontinuedalign", "verbatimcontinuesalign"
+   Horizontal position relative to the framed contents: either "l"
+   (left aligned), "r" (right aligned) or "c" (centered).
+
+   Default: "r"
+
+   New in version 1.7.
+
+"parsedliteralwraps"
+   Boolean to specify if long lines in >>:dudir:`parsed-literal`<<'s
+   contents should wrap.
+
+   Default: "true"
+
+   New in version 1.5.2: set this option value to "false" to recover
+   former behaviour.
+
+"inlineliteralwraps"
+   Boolean to specify if line breaks are allowed inside inline
+   literals: but extra potential break-points (additionally to those
+   allowed by LaTeX at spaces or for hyphenation) are currently
+   inserted only after the characters ". , ; ? ! /" and "\". Due to
+   TeX internals, white space in the line will be stretched (or
+   shrunk) in order to accommodate the linebreak.
+
+   Default: "true"
+
+   New in version 1.5: set this option value to "false" to recover
+   former behaviour.
+
+   Changed in version 2.3.0: added potential breakpoint at "\"
+   characters.
+
+"verbatimvisiblespace"
+   When a long code line is split, the last space character from the
+   source code line right before the linebreak location is typeset
+   using this.
+
+   Default: "\textcolor{red}{\textvisiblespace}"
+
+"verbatimcontinued"
+   A LaTeX macro inserted at start of continuation code lines. Its
+   (complicated...) default typesets a small red hook pointing to the
+   right:
+
+      \makebox[2\fontcharwd\font`\x][r]{\textcolor{red}{\tiny$\hookrightarrow$}}
+
+   Changed in version 1.5: The breaking of long code lines was added
+   at 1.4.2. The default definition of the continuation symbol was
+   changed at 1.5 to accomodate various font sizes (e.g. code-blocks
+   can be in footnotes).
+
+"TitleColor"
+   The colour for titles (as configured via use of package
+   "titlesec".)
+
+   Default: "{rgb}{0.126,0.263,0.361}"
+
+Warning:
+
+  Colours set via "'sphinxsetup'"  must obey the syntax of the
+  argument of the "color/xcolor" packages "\definecolor" command.
+
+"InnerLinkColor"
+   A colour passed to "hyperref" as value of "linkcolor"  and
+   "citecolor".
+
+   Default: "{rgb}{0.208,0.374,0.486}".
+
+"OuterLinkColor"
+   A colour passed to "hyperref" as value of "filecolor", "menucolor",
+   and "urlcolor".
+
+   Default: "{rgb}{0.216,0.439,0.388}"
+
+"VerbatimColor"
+   The background colour for "code-block"s.
+
+   Default: "{rgb}{1,1,1}" (white)
+
+"VerbatimBorderColor"
+   The frame color.
+
+   Default: "{rgb}{0,0,0}" (black)
+
+"VerbatimHighlightColor"
+   The color for highlighted lines.
+
+   Default: "{rgb}{0.878,1,1}"
+
+   New in version 1.6.6.
+
+Note:
+
+  Starting with this colour key, and for all others coming next, the
+  actual names declared to "color" or "xcolor" are prefixed with
+  "sphinx".
+
+"verbatimsep"
+   The separation between code lines and the frame.
+
+   Default: "\fboxsep"
+
+"verbatimborder"
+   The width of the frame around "code-block"s.
+
+   Default: "\fboxrule"
+
+"shadowsep"
+   The separation between contents and frame for >>:dudir:`contents`<<
+   and >>:dudir:`topic`<< boxes.
+
+   Default: "5pt"
+
+"shadowsize"
+   The width of the lateral "shadow" to the right.
+
+   Default: "4pt"
+
+"shadowrule"
+   The width of the frame around >>:dudir:`topic`<< boxes.
+
+   Default: "\fboxrule"
+
+"noteBorderColor", "hintBorderColor", "importantBorderColor",
+"tipBorderColor"
+   The colour for the two horizontal rules used by Sphinx in LaTeX for
+   styling a >>:dudir:`note`<< type admonition.
+
+   Default: "{rgb}{0,0,0}" (black)
+
+"noteborder", "hintborder", "importantborder", "tipborder"
+   The width of the two horizontal rules.
+
+   Default: "0.5pt"
+
+"warningBorderColor", "cautionBorderColor", "attentionBorderColor",
+"dangerBorderColor", "errorBorderColor"
+   The colour for the admonition frame.
+
+   Default: "{rgb}{0,0,0}" (black)
+
+"warningBgColor", "cautionBgColor", "attentionBgColor",
+"dangerBgColor", "errorBgColor"
+   The background colours for the respective admonitions.
+
+   Default: "{rgb}{1,1,1}" (white)
+
+"warningborder", "cautionborder", "attentionborder", "dangerborder",
+"errorborder"
+   The width of the frame.
+
+   Default: "1pt"
+
+"AtStartFootnote"
+   LaTeX macros inserted at the start of the footnote text at bottom
+   of page, after the footnote number.
+
+   Default: "\mbox{ }"
+
+"BeforeFootnote"
+   LaTeX macros inserted before the footnote mark. The default removes
+   possible space before it (else, TeX could insert a line break
+   there).
+
+   Default: "\leavevmode\unskip"
+
+   New in version 1.5.
+
+"HeaderFamily"
+   default "\sffamily\bfseries". Sets the font used by headings.
+
+
+LaTeX macros and environments
+=============================
+
+Here are some macros from the package file "sphinx.sty" and class
+files "sphinxhowto.cls", "sphinxmanual.cls", which have public names
+thus allowing redefinitions. Check the respective files for the
+defaults.
+
+
+Macros
+------
+
+* Text styling commands:
+
+  * "\sphinxstrong",
+
+  * "\sphinxbfcode",
+
+  * "\sphinxemail",
+
+  * "\sphinxtablecontinued",
+
+  * "\sphinxtitleref",
+
+  * "\sphinxmenuselection",
+
+  * "\sphinxaccelerator",
+
+  * "\sphinxcrossref",
+
+  * "\sphinxtermref",
+
+  * "\sphinxoptional".
+
+  New in version 1.4.5: Use of "\sphinx" prefixed macro names to limit
+  possibilities of conflict with LaTeX packages.
+
+* More text styling:
+
+  * "\sphinxstyleindexentry",
+
+  * "\sphinxstyleindexextra",
+
+  * "\sphinxstyleindexpageref",
+
+  * "\sphinxstyletopictitle",
+
+  * "\sphinxstylesidebartitle",
+
+  * "\sphinxstyleothertitle",
+
+  * "\sphinxstylesidebarsubtitle",
+
+  * "\sphinxstyletheadfamily",
+
+  * "\sphinxstyleemphasis",
+
+  * "\sphinxstyleliteralemphasis",
+
+  * "\sphinxstylestrong",
+
+  * "\sphinxstyleliteralstrong",
+
+  * "\sphinxstyleabbreviation",
+
+  * "\sphinxstyleliteralintitle",
+
+  * "\sphinxstylecodecontinued",
+
+  * "\sphinxstylecodecontinues".
+
+  New in version 1.5: These macros were formerly hard-coded as non
+  customizable "\texttt", "\emph", etc...
+
+  New in version 1.6: "\sphinxstyletheadfamily" which defaults to
+  "\sffamily" and allows multiple paragraphs in header cells of
+  tables.
+
+  New in version 1.6.3: "\sphinxstylecodecontinued" and
+  "\sphinxstylecodecontinues".
+
+  New in version 3.0: "\sphinxkeyboard"
+
+* "\sphinxtableofcontents": A wrapper (defined differently in
+  "sphinxhowto.cls" and in "sphinxmanual.cls") of standard
+  "\tableofcontents".  The macro "\sphinxtableofcontentshook" is
+  executed during its expansion right before "\tableofcontents"
+  itself.
+
+  Changed in version 1.5: Formerly, the meaning of "\tableofcontents"
+  was modified by Sphinx.
+
+  Changed in version 2.0: Hard-coded redefinitions of "\l@section" and
+  "\l@subsection" formerly done during loading of "'manual'" docclass
+  are now executed later via "\sphinxtableofcontentshook".  This macro
+  is also executed by the "'howto'" docclass, but defaults to empty
+  with it.
+
+* "\sphinxmaketitle": Used as the default setting of the "'maketitle'"
+  >>:confval:`latex_elements`<< key. Defined in the class files
+  "sphinxmanual.cls" and "sphinxhowto.cls".
+
+  Changed in version 1.8.3: Formerly, "\maketitle" from LaTeX document
+  class was modified by Sphinx.
+
+* "\sphinxbackoftitlepage": For "'manual'" docclass, and if it is
+  defined, it gets executed at end of "\sphinxmaketitle", before the
+  final "\clearpage".  Use either the "'maketitle'" key or the
+  "'preamble'" key of >>:confval:`latex_elements`<< to add a custom
+  definition of "\sphinxbackoftitlepage".
+
+  New in version 1.8.3.
+
+* "\sphinxcite": A wrapper of standard "\cite" for citation
+  references.
+
+
+Environments
+------------
+
+* A >>:dudir:`figure`<< may have an optional legend with arbitrary
+  body elements: they are rendered in a "sphinxlegend" environment.
+  The default definition issues "\small", and ends with "\par".
+
+  New in version 1.5.6: Formerly, the "\small" was hardcoded in LaTeX
+  writer and the ending "\par" was lacking.
+
+* Environments associated with admonitions:
+
+  * "sphinxnote",
+
+  * "sphinxhint",
+
+  * "sphinximportant",
+
+  * "sphinxtip",
+
+  * "sphinxwarning",
+
+  * "sphinxcaution",
+
+  * "sphinxattention",
+
+  * "sphinxdanger",
+
+  * "sphinxerror".
+
+  They may be "\renewenvironment" 'd individually, and must then be
+  defined with one argument (it is the heading of the notice, for
+  example "Warning:" for >>:dudir:`warning`<< directive, if English is
+  the document language). Their default definitions use either the
+  *sphinxheavybox* (for the last 5 ones) or the *sphinxlightbox*
+  environments, configured to use the parameters (colours, border
+  thickness) specific to each type, which can be set via
+  "'sphinxsetup'" string.
+
+  Changed in version 1.5: Use of public environment names, separate
+  customizability of the parameters, such as "noteBorderColor",
+  "noteborder", "warningBgColor", "warningBorderColor",
+  "warningborder", ...
+
+* The >>:dudir:`contents`<< directive (with ":local:" option) and the
+  >>:dudir:`topic`<< directive are implemented by environment
+  "sphinxShadowBox".
+
+  New in version 1.4.2: Former code refactored into an environment
+  allowing page breaks.
+
+  Changed in version 1.5: Options "shadowsep", "shadowsize",
+  "shadowrule".
+
+* The literal blocks (via "::" or "code-block"), are implemented using
+  "sphinxVerbatim" environment which is a wrapper of "Verbatim"
+  environment from package "fancyvrb.sty". It adds the handling of the
+  top caption and the wrapping of long lines, and a frame which allows
+  pagebreaks. Inside tables the used environment is
+  "sphinxVerbatimintable" (it does not draw a frame, but allows a
+  caption).
+
+  Changed in version 1.5: "Verbatim" keeps exact same meaning as in
+  "fancyvrb.sty" (also under the name "OriginalVerbatim");
+  "sphinxVerbatimintable" is used inside tables.
+
+  New in version 1.5: Options "verbatimwithframe",
+  "verbatimwrapslines", "verbatimsep", "verbatimborder".
+
+  New in version 1.6.6: Support for ":emphasize-lines:" option
+
+  New in version 1.6.6: Easier customizability of the formatting via
+  exposed to user LaTeX macros such as "\sphinxVerbatimHighlightLine".
+
+* The bibliography uses "sphinxthebibliography" and the Python Module
+  index as well as the general index both use "sphinxtheindex"; these
+  environments are wrappers of the "thebibliography" and respectively
+  "theindex" environments as provided by the document class (or
+  packages).
+
+  Changed in version 1.5: Formerly, the original environments were
+  modified by Sphinx.
+
+
+Miscellany
+----------
+
+* The section, subsection, ... headings are set using  *titlesec*'s
+  "\titleformat" command.
+
+* For the "'manual'" docclass, the chapter headings can be customized
+  using *fncychap*'s commands "\ChNameVar", "\ChNumVar",
+  "\ChTitleVar". File "sphinx.sty" has custom re-definitions in case
+  of *fncychap* option "Bjarne".
+
+  Changed in version 1.5: Formerly, use of *fncychap* with other
+  styles than "Bjarne" was dysfunctional.
+
+Hint:
+
+  As an experimental feature, Sphinx can use user-defined template
+  file for LaTeX source if you have a file named
+  "_templates/latex.tex_t" in your project.Additional files
+  "longtable.tex_t", "tabulary.tex_t" and "tabular.tex_t" can be added
+  to "_templates/" to configure some aspects of table rendering (such
+  as the caption position).
+
+  New in version 1.6: currently all template variables are unstable
+  and undocumented.
diff --git a/_build/doc/man/index.txt b/_build/doc/man/index.txt
new file mode 100644
index 000000000..5e774e0b4
--- /dev/null
+++ b/_build/doc/man/index.txt
@@ -0,0 +1,60 @@
+Man Pages
+*********
+
+These are the applications provided as part of Sphinx.
+
+
+Core Applications
+=================
+
+* sphinx-quickstart
+
+  * Synopsis
+
+  * Description
+
+  * Options
+
+  * See also
+
+* sphinx-build
+
+  * Synopsis
+
+  * Description
+
+  * Options
+
+  * Environment Variables
+
+  * Deprecation Warnings
+
+  * See also
+
+
+Additional Applications
+=======================
+
+* sphinx-apidoc
+
+  * Synopsis
+
+  * Description
+
+  * Options
+
+  * Environment
+
+  * See also
+
+* sphinx-autogen
+
+  * Synopsis
+
+  * Description
+
+  * Options
+
+  * Example
+
+  * See also
diff --git a/_build/doc/man/sphinx-apidoc.txt b/_build/doc/man/sphinx-apidoc.txt
new file mode 100644
index 000000000..01457c4c4
--- /dev/null
+++ b/_build/doc/man/sphinx-apidoc.txt
@@ -0,0 +1,183 @@
+sphinx-apidoc
+*************
+
+
+Synopsis
+========
+
+**sphinx-apidoc** [*OPTIONS*] -o <*OUTPUT_PATH*> <*MODULE_PATH*>
+[*EXCLUDE_PATTERN* ...]
+
+
+Description
+===========
+
+**sphinx-apidoc** is a tool for automatic generation of Sphinx sources
+that, using the "autodoc" extension, document a whole package in the
+style of other automatic API documentation tools.
+
+*MODULE_PATH* is the path to a Python package to document, and
+*OUTPUT_PATH* is the directory where the generated sources are placed.
+Any *EXCLUDE_PATTERN*s given are fnmatch-style file and/or directory
+patterns that will be excluded from generation.
+
+Warning:
+
+  "sphinx-apidoc" generates source files that use "sphinx.ext.autodoc"
+  to document all found modules.  If any modules have side effects on
+  import, these will be executed by "autodoc" when "sphinx-build" is
+  run.If you document scripts (as opposed to library modules), make
+  sure their main routine is protected by a "if __name__ ==
+  '__main__'" condition.
+
+
+Options
+=======
+
+-o <OUTPUT_PATH>
+
+   Directory to place the output files. If it does not exist, it is
+   created.
+
+-q
+
+   Do not output anything on standard output, only write warnings and
+   errors to standard error.
+
+-f, --force
+
+   Force overwriting of any existing generated files.
+
+-l, --follow-links
+
+   Follow symbolic links.
+
+-n, --dry-run
+
+   Do not create any files.
+
+-s <suffix>
+
+   Suffix for the source files generated. Defaults to "rst".
+
+-d <MAXDEPTH>
+
+   Maximum depth for the generated table of contents file.
+
+--tocfile
+
+   Filename for a table of contents file. Defaults to "modules".
+
+-T, --no-toc
+
+   Do not create a table of contents file. Ignored when "--full" is
+   provided.
+
+-F, --full
+
+   Generate a full Sphinx project ("conf.py", "Makefile" etc.) using
+   the same mechanism as **sphinx-quickstart**.
+
+-e, --separate
+
+   Put documentation for each module on its own page.
+
+   New in version 1.2.
+
+-E, --no-headings
+
+   Do not create headings for the modules/packages. This is useful,
+   for example, when docstrings already contain headings.
+
+-P, --private
+
+   Include "_private" modules.
+
+   New in version 1.2.
+
+--implicit-namespaces
+
+   By default sphinx-apidoc processes sys.path searching for modules
+   only. Python 3.3 introduced **PEP 420** implicit namespaces that
+   allow module path structures such as "foo/bar/module.py" or
+   "foo/bar/baz/__init__.py" (notice that "bar" and "foo" are
+   namespaces, not modules).
+
+   Interpret paths recursively according to PEP-0420.
+
+-M, --module-first
+
+   Put module documentation before submodule documentation.
+
+These options are used when "--full" is specified:
+
+-a
+
+   Append module_path to sys.path.
+
+-H <project>
+
+   Sets the project name to put in generated files (see
+   >>:confval:`project`<<).
+
+-A <author>
+
+   Sets the author name(s) to put in generated files (see
+   >>:confval:`copyright`<<).
+
+-V <version>
+
+   Sets the project version to put in generated files (see
+   >>:confval:`version`<<).
+
+-R <release>
+
+   Sets the project release to put in generated files (see
+   >>:confval:`release`<<).
+
+-[ Project templating ]-
+
+New in version 2.2: Project templating options for sphinx-apidoc
+
+-t, --templatedir=TEMPLATEDIR
+
+   Template directory for template files.  You can modify the
+   templates of sphinx project files generated by apidoc.  Following
+   Jinja2 template files are allowed:
+
+   * "module.rst_t"
+
+   * "package.rst_t"
+
+   * "toc.rst_t"
+
+   * "master_doc.rst_t"
+
+   * "conf.py_t"
+
+   * "Makefile_t"
+
+   * "Makefile.new_t"
+
+   * "make.bat_t"
+
+   * "make.bat.new_t"
+
+   In detail, please refer the system template files Sphinx provides.
+   ("sphinx/templates/apidoc" and "sphinx/templates/quickstart")
+
+
+Environment
+===========
+
+SPHINX_APIDOC_OPTIONS
+
+   A comma-separated list of option to append to generated
+   "automodule" directives. Defaults to "members,undoc-members,show-
+   inheritance".
+
+
+See also
+========
+
+*sphinx-build(1)*, *sphinx-autogen(1)*
diff --git a/_build/doc/man/sphinx-autogen.txt b/_build/doc/man/sphinx-autogen.txt
new file mode 100644
index 000000000..493e6f415
--- /dev/null
+++ b/_build/doc/man/sphinx-autogen.txt
@@ -0,0 +1,92 @@
+sphinx-autogen
+**************
+
+
+Synopsis
+========
+
+**sphinx-autogen** [*options*] <sourcefile> ...
+
+
+Description
+===========
+
+**sphinx-autogen** is a tool for automatic generation of Sphinx
+sources that, using the "autodoc" extension, document items included
+in "autosummary" listing(s).
+
+*sourcefile* is the path to one or more reStructuredText documents
+containing "autosummary" entries with the ":toctree::" option set.
+*sourcefile* can be an "fnmatch"-style pattern.
+
+
+Options
+=======
+
+-o <outputdir>
+
+   Directory to place the output file. If it does not exist, it is
+   created. Defaults to the value passed to the ":toctree:" option.
+
+-s <suffix>, --suffix <suffix>
+
+   Default suffix to use for generated files. Defaults to "rst".
+
+-t <templates>, --templates <templates>
+
+   Custom template directory. Defaults to "None".
+
+-i, --imported-members
+
+   Document imported members.
+
+
+Example
+=======
+
+Given the following directory structure:
+
+   docs
+   ├── index.rst
+   └── ...
+   foobar
+   ├── foo
+   │   └── __init__.py
+   └── bar
+       ├── __init__.py
+       └── baz
+           └── __init__.py
+
+and assuming "docs/index.rst" contained the following:
+
+   Modules
+   =======
+
+   .. autosummary::
+      :toctree: modules
+
+      foobar.foo
+      foobar.bar
+      foobar.bar.baz
+
+If you run the following:
+
+   $ PYTHONPATH=. sphinx-autogen docs/index.rst
+
+then the following stub files will be created in "docs":
+
+   docs
+   ├── index.rst
+   └── modules
+       ├── foobar.bar.rst
+       ├── foobar.bar.baz.rst
+       └── foobar.foo.rst
+
+and each of those files will contain a "autodoc" directive and some
+other information.
+
+
+See also
+========
+
+*sphinx-build(1)*, *sphinx-apidoc(1)*
diff --git a/_build/doc/man/sphinx-build.txt b/_build/doc/man/sphinx-build.txt
new file mode 100644
index 000000000..32996197a
--- /dev/null
+++ b/_build/doc/man/sphinx-build.txt
@@ -0,0 +1,332 @@
+sphinx-build
+************
+
+
+Synopsis
+========
+
+**sphinx-build** [*options*] <*sourcedir*> <*outputdir*> [*filenames*
+...]
+
+
+Description
+===========
+
+**sphinx-build** generates documentation from the files in
+"<sourcedir>" and places it in the "<outputdir>".
+
+**sphinx-build** looks for "<sourcedir>/conf.py" for the configuration
+settings.  *sphinx-quickstart(1)* may be used to generate template
+files, including "conf.py".
+
+**sphinx-build** can create documentation in different formats.  A
+format is selected by specifying the builder name on the command line;
+it defaults to HTML.  Builders can also perform other tasks related to
+documentation processing.
+
+By default, everything that is outdated is built.  Output only for
+selected files can be built by specifying individual filenames.
+
+For a list of available options, refer to "sphinx-build -b".
+
+
+Options
+=======
+
+-b buildername
+
+   The most important option: it selects a builder.  The most common
+   builders are:
+
+   **html**
+      Build HTML pages.  This is the default builder.
+
+   **dirhtml**
+      Build HTML pages, but with a single directory per document.
+      Makes for prettier URLs (no ".html") if served from a webserver.
+
+   **singlehtml**
+      Build a single HTML with the whole content.
+
+   **htmlhelp**, **qthelp**, **devhelp**, **epub**
+      Build HTML files with additional information for building a
+      documentation collection in one of these formats.
+
+   **applehelp**
+      Build an Apple Help Book.  Requires **hiutil** and **codesign**,
+      which are not Open Source and presently only available on Mac OS
+      X 10.6 and higher.
+
+   **latex**
+      Build LaTeX sources that can be compiled to a PDF document using
+      **pdflatex**.
+
+   **man**
+      Build manual pages in groff format for UNIX systems.
+
+   **texinfo**
+      Build Texinfo files that can be processed into Info files using
+      **makeinfo**.
+
+   **text**
+      Build plain text files.
+
+   **gettext**
+      Build gettext-style message catalogs (".pot" files).
+
+   **doctest**
+      Run all doctests in the documentation, if the "doctest"
+      extension is enabled.
+
+   **linkcheck**
+      Check the integrity of all external links.
+
+   **xml**
+      Build Docutils-native XML files.
+
+   **pseudoxml**
+      Build compact pretty-printed "pseudo-XML" files displaying the
+      internal structure of the intermediate document trees.
+
+   See */usage/builders/index* for a list of all builders shipped with
+   Sphinx.  Extensions can add their own builders.
+
+-M buildername
+
+   Alternative to "-b". Uses the Sphinx **make_mode** module, which
+   provides the same build functionality as a default Makefile or
+   Make.bat. In addition to all Sphinx */usage/builders/index*, the
+   following build pipelines are available:
+
+   **latexpdf**
+      Build LaTeX files and run them through **pdflatex**, or as per
+      >>:confval:`latex_engine`<< setting. If >>:confval:`language`<<
+      is set to "'ja'", will use automatically the **platex/dvipdfmx**
+      latex to PDF pipeline.
+
+   **info**
+      Build Texinfo files and run them through **makeinfo**.
+
+   Important:
+
+     Sphinx only recognizes the "-M" option if it is placed first.
+
+   New in version 1.2.1.
+
+-a
+
+   If given, always write all output files. The default is to only
+   write output files for new and changed source files. (This may not
+   apply to all builders.)
+
+-E
+
+   Don't use a saved *environment* (the structure caching all cross-
+   references), but rebuild it completely.  The default is to only
+   read and parse source files that are new or have changed since the
+   last run.
+
+-t tag
+
+   Define the tag *tag*.  This is relevant for "only" directives that
+   only include their content if this tag is set.
+
+   New in version 0.6.
+
+-d path
+
+   Since Sphinx has to read and parse all source files before it can
+   write an output file, the parsed source files are cached as
+   "doctree pickles". Normally, these files are put in a directory
+   called ".doctrees" under the build directory; with this option you
+   can select a different cache directory (the doctrees can be shared
+   between all builders).
+
+-j N
+
+   Distribute the build over *N* processes in parallel, to make
+   building on multiprocessor machines more effective.  Note that not
+   all parts and not all builders of Sphinx can be parallelized.  If
+   "auto" argument is given, Sphinx uses the number of CPUs as *N*.
+
+   New in version 1.2: This option should be considered
+   *experimental*.
+
+   Changed in version 1.7: Support "auto" argument.
+
+-c path
+
+   Don't look for the "conf.py" in the source directory, but use the
+   given configuration directory instead.  Note that various other
+   files and paths given by configuration values are expected to be
+   relative to the configuration directory, so they will have to be
+   present at this location too.
+
+   New in version 0.3.
+
+-C
+
+   Don't look for a configuration file; only take options via the "-D"
+   option.
+
+   New in version 0.5.
+
+-D setting=value
+
+   Override a configuration value set in the "conf.py" file.  The
+   value must be a number, string, list or dictionary value.
+
+   For lists, you can separate elements with a comma like this: "-D
+   html_theme_path=path1,path2".
+
+   For dictionary values, supply the setting name and key like this:
+   "-D latex_elements.docclass=scrartcl".
+
+   For boolean values, use "0" or "1" as the value.
+
+   Changed in version 0.6: The value can now be a dictionary value.
+
+   Changed in version 1.3: The value can now also be a list value.
+
+-A name=value
+
+   Make the *name* assigned to *value* in the HTML templates.
+
+   New in version 0.5.
+
+-n
+
+   Run in nit-picky mode.  Currently, this generates warnings for all
+   missing references.  See the config value
+   >>:confval:`nitpick_ignore`<< for a way to exclude some references
+   as "known missing".
+
+-N
+
+   Do not emit colored output.
+
+-v
+
+   Increase verbosity (loglevel).  This option can be given up to
+   three times to get more debug logging output.  It implies "-T".
+
+   New in version 1.2.
+
+-q
+
+   Do not output anything on standard output, only write warnings and
+   errors to standard error.
+
+-Q
+
+   Do not output anything on standard output, also suppress warnings.
+   Only errors are written to standard error.
+
+-w file
+
+   Write warnings (and errors) to the given file, in addition to
+   standard error.
+
+-W
+
+   Turn warnings into errors.  This means that the build stops at the
+   first warning and "sphinx-build" exits with exit status 1.
+
+--keep-going
+
+   With -W option, keep going processing when getting warnings to the
+   end of build, and "sphinx-build" exits with exit status 1.
+
+   New in version 1.8.
+
+-T
+
+   Display the full traceback when an unhandled exception occurs.
+   Otherwise, only a summary is displayed and the traceback
+   information is saved to a file for further analysis.
+
+   New in version 1.2.
+
+-P
+
+   (Useful for debugging only.)  Run the Python debugger, "pdb", if an
+   unhandled exception occurs while building.
+
+-h, --help, --version
+
+   Display usage summary or Sphinx version.
+
+   New in version 1.2.
+
+You can also give one or more filenames on the command line after the
+source and build directories. Sphinx will then try to build only these
+output files (and their dependencies).
+
+
+Environment Variables
+=====================
+
+The **sphinx-build** refers following environment variables:
+
+MAKE
+
+   A path to make command.  A command name is also allowed. **sphinx-
+   build** uses it to invoke sub-build process on make-mode.
+
+-[ Makefile Options ]-
+
+The "Makefile" and "make.bat" files created by **sphinx-quickstart**
+usually run **sphinx-build** only with the "-b" and "-d" options.
+However, they support the following variables to customize behavior:
+
+PAPER
+
+   This sets the "'papersize'" key of >>:confval:`latex_elements`<<:
+   i.e. "PAPER=a4" sets it to "'a4paper'" and "PAPER=letter" to
+   "'letterpaper'".
+
+   Note:
+
+     Usage of this environment variable got broken at Sphinx 1.5 as
+     "a4" or "letter" ended up as option to LaTeX document in place of
+     the needed "a4paper", resp. "letterpaper".  Fixed at 1.7.7.
+
+SPHINXBUILD
+
+   The command to use instead of "sphinx-build".
+
+BUILDDIR
+
+   The build directory to use instead of the one chosen in **sphinx-
+   quickstart**.
+
+SPHINXOPTS
+
+   Additional options for **sphinx-build**. These options can also be
+   set via the shortcut variable **O** (capital 'o').
+
+
+Deprecation Warnings
+====================
+
+If any deprecation warning like "RemovedInSphinxXXXWarning" are
+displayed when building a user's document, some Sphinx extension is
+using deprecated features. In that case, please report it to author of
+the extension.
+
+To disable the deprecation warnings, please set "PYTHONWARNINGS="
+environment variable to your environment. For example:
+
+* "PYTHONWARNINGS= make html" (Linux/Mac)
+
+* "export PYTHONWARNINGS=" and do "make html" (Linux/Mac)
+
+* "set PYTHONWARNINGS=" and do "make html" (Windows)
+
+* modify your Makefile/make.bat and set the environment variable
+
+
+See also
+========
+
+*sphinx-quickstart(1)*
diff --git a/_build/doc/man/sphinx-quickstart.txt b/_build/doc/man/sphinx-quickstart.txt
new file mode 100644
index 000000000..32b51d489
--- /dev/null
+++ b/_build/doc/man/sphinx-quickstart.txt
@@ -0,0 +1,174 @@
+sphinx-quickstart
+*****************
+
+
+Synopsis
+========
+
+**sphinx-quickstart**
+
+
+Description
+===========
+
+**sphinx-quickstart** is an interactive tool that asks some questions
+about your project and then generates a complete documentation
+directory and sample Makefile to be used with *sphinx-build(1)*.
+
+
+Options
+=======
+
+-q, --quiet
+
+   Quiet mode that skips the interactive wizard for specifying
+   options. This option requires *-p*, *-a* and *-v* options.
+
+-h, --help, --version
+
+   Display usage summary or Sphinx version.
+
+-[ Structure Options ]-
+
+--sep
+
+   If specified, separate source and build directories.
+
+--no-sep
+
+   If specified, create build directroy under source directroy.
+
+--dot=DOT
+
+   Inside the root directory, two more directories will be created;
+   "_templates" for custom HTML templates and "_static" for custom
+   stylesheets and other static files. You can enter another prefix
+   (such as ".") to replace the underscore.
+
+-[ Project Basic Options ]-
+
+-p PROJECT, --project=PROJECT
+
+   Project name will be set. (see >>:confval:`project`<<).
+
+-a AUTHOR, --author=AUTHOR
+
+   Author names. (see >>:confval:`copyright`<<).
+
+-v VERSION
+
+   Version of project. (see >>:confval:`version`<<).
+
+-r RELEASE, --release=RELEASE
+
+   Release of project. (see >>:confval:`release`<<).
+
+-l LANGUAGE, --language=LANGUAGE
+
+   Document language. (see >>:confval:`language`<<).
+
+--suffix=SUFFIX
+
+   Source file suffix. (see >>:confval:`source_suffix`<<).
+
+--master=MASTER
+
+   Master document name. (see >>:confval:`master_doc`<<).
+
+-[ Extension Options ]-
+
+--ext-autodoc
+
+   Enable *sphinx.ext.autodoc* extension.
+
+--ext-doctest
+
+   Enable *sphinx.ext.doctest* extension.
+
+--ext-intersphinx
+
+   Enable *sphinx.ext.intersphinx* extension.
+
+--ext-todo
+
+   Enable *sphinx.ext.todo* extension.
+
+--ext-coverage
+
+   Enable *sphinx.ext.coverage* extension.
+
+--ext-imgmath
+
+   Enable *sphinx.ext.imgmath* extension.
+
+--ext-mathjax
+
+   Enable *sphinx.ext.mathjax* extension.
+
+--ext-ifconfig
+
+   Enable *sphinx.ext.ifconfig* extension.
+
+--ext-viewcode
+
+   Enable *sphinx.ext.viewcode* extension.
+
+--ext-githubpages
+
+   Enable *sphinx.ext.githubpages* extension.
+
+--extensions=EXTENSIONS
+
+   Enable arbitrary extensions.
+
+-[ Makefile and Batchfile Creation Options ]-
+
+--use-make-mode (-m), --no-use-make-mode (-M)
+
+   "Makefile/make.bat" uses (or doesn't use) make-mode. Default is
+   "use", which generates a more concise "Makefile/make.bat".
+
+   Changed in version 1.5: make-mode is default.
+
+--makefile, --no-makefile
+
+   Create (or not create) makefile.
+
+--batchfile, --no-batchfile
+
+   Create (or not create) batchfile
+
+-[ Project templating ]-
+
+New in version 1.5: Project templating options for sphinx-quickstart
+
+-t, --templatedir=TEMPLATEDIR
+
+   Template directory for template files.  You can modify the
+   templates of sphinx project files generated by quickstart.
+   Following Jinja2 template files are allowed:
+
+   * "master_doc.rst_t"
+
+   * "conf.py_t"
+
+   * "Makefile_t"
+
+   * "Makefile.new_t"
+
+   * "make.bat_t"
+
+   * "make.bat.new_t"
+
+   In detail, please refer the system template files Sphinx provides.
+   ("sphinx/templates/quickstart")
+
+-d NAME=VALUE
+
+   Define a template variable
+
+
+See also
+========
+
+*sphinx-build(1)*
diff --git a/_build/doc/templating.txt b/_build/doc/templating.txt
new file mode 100644
index 000000000..2846e0f27
--- /dev/null
+++ b/_build/doc/templating.txt
@@ -0,0 +1,449 @@
+Templating
+**********
+
+Sphinx uses the Jinja templating engine for its HTML templates.  Jinja
+is a text-based engine, inspired by Django templates, so anyone having
+used Django will already be familiar with it.  It also has excellent
+documentation for those who need to make themselves familiar with it.
+
+
+Do I need to use Sphinx's templates to produce HTML?
+====================================================
+
+No.  You have several other options:
+
+* You can write a "TemplateBridge" subclass that calls your template
+  engine of choice, and set the >>:confval:`template_bridge`<<
+  configuration value accordingly.
+
+* You can write a custom builder that derives from
+  "StandaloneHTMLBuilder" and calls your template engine of choice.
+
+* You can use the "PickleHTMLBuilder" that produces pickle files with
+  the page contents, and postprocess them using a custom tool, or use
+  them in your Web application.
+
+
+Jinja/Sphinx Templating Primer
+==============================
+
+The default templating language in Sphinx is Jinja.  It's
+Django/Smarty inspired and easy to understand.  The most important
+concept in Jinja is *template inheritance*, which means that you can
+overwrite only specific blocks within a template, customizing it while
+also keeping the changes at a minimum.
+
+To customize the output of your documentation you can override all the
+templates (both the layout templates and the child templates) by
+adding files with the same name as the original filename into the
+template directory of the structure the Sphinx quickstart generated
+for you.
+
+Sphinx will look for templates in the folders of
+>>:confval:`templates_path`<< first, and if it can't find the template
+it's looking for there, it falls back to the selected theme's
+templates.
+
+A template contains **variables**, which are replaced with values when
+the template is evaluated, **tags**, which control the logic of the
+template and **blocks** which are used for template inheritance.
+
+Sphinx's *basic* theme provides base templates with a couple of blocks
+it will fill with data.  These are located in the "themes/basic"
+subdirectory of the Sphinx installation directory, and used by all
+builtin Sphinx themes. Templates with the same name in the
+>>:confval:`templates_path`<< override templates supplied by the
+selected theme.
+
+For example, to add a new link to the template area containing related
+links all you have to do is to add a new template called "layout.html"
+with the following contents:
+
+   {% extends "!layout.html" %}
+   {% block rootrellink %}
+       <li><a href="https://project.invalid/">Project Homepage</a> &raquo;</li>
+       {{ super() }}
+   {% endblock %}
+
+By prefixing the name of the overridden template with an exclamation
+mark, Sphinx will load the layout template from the underlying HTML
+theme.
+
+Important:
+
+  If you override a block, call "{{ super() }}" somewhere to render
+  the block's original content in the extended template -- unless you
+  don't want that content to show up.
+
+
+Working with the builtin templates
+==================================
+
+The builtin **basic** theme supplies the templates that all builtin
+Sphinx themes are based on.  It has the following elements you can
+override or use:
+
+
+Blocks
+------
+
+The following blocks exist in the "layout.html" template:
+
+"doctype"
+   The doctype of the output format.  By default this is XHTML 1.0
+   Transitional as this is the closest to what Sphinx and Docutils
+   generate and it's a good idea not to change it unless you want to
+   switch to HTML 5 or a different but compatible XHTML doctype.
+
+"linktags"
+   This block adds a couple of "<link>" tags to the head section of
+   the template.
+
+"extrahead"
+   This block is empty by default and can be used to add extra
+   contents into the "<head>" tag of the generated HTML file.  This is
+   the right place to add references to JavaScript or extra CSS files.
+
+"relbar1", "relbar2"
+   This block contains the *relation bar*, the list of related links
+   (the parent documents on the left, and the links to index, modules
+   etc. on the right).  "relbar1" appears before the document,
+   "relbar2" after the document.  By default, both blocks are filled;
+   to show the relbar only before the document, you would override
+   *relbar2* like this:
+
+      {% block relbar2 %}{% endblock %}
+
+"rootrellink", "relbaritems"
+   Inside the relbar there are three sections: The "rootrellink", the
+   links from the documentation and the custom "relbaritems".  The
+   "rootrellink" is a block that by default contains a list item
+   pointing to the master document by default, the "relbaritems" is an
+   empty block.  If you override them to add extra links into the bar
+   make sure that they are list items and end with the "reldelim1".
+
+"document"
+   The contents of the document itself.  It contains the block "body"
+   where the individual content is put by subtemplates like
+   "page.html".
+
+   Note:
+
+     In order for the built-in JavaScript search to show a page
+     preview on the results page, the document or body content should
+     be wrapped in an HTML element containing the "role="main""
+     attribute. For example:
+
+        <div role="main">
+          {% block document %}{% endblock %}
+        </div>
+
+"sidebar1", "sidebar2"
+   A possible location for a sidebar.  "sidebar1" appears before the
+   document and is empty by default, "sidebar2" after the document and
+   contains the default sidebar.  If you want to swap the sidebar
+   location override this and call the "sidebar" helper:
+
+      {% block sidebar1 %}{{ sidebar() }}{% endblock %}
+      {% block sidebar2 %}{% endblock %}
+
+   (The "sidebar2" location for the sidebar is needed by the
+   "sphinxdoc.css" stylesheet, for example.)
+
+"sidebarlogo"
+   The logo location within the sidebar.  Override this if you want to
+   place some content at the top of the sidebar.
+
+"footer"
+   The block for the footer div.  If you want a custom footer or
+   markup before or after it, override this one.
+
+The following four blocks are *only* used for pages that do not have
+assigned a list of custom sidebars in the >>:confval:`html_sidebars`<<
+config value.  Their use is deprecated in favor of separate sidebar
+templates, which can be included via >>:confval:`html_sidebars`<<.
+
+"sidebartoc"
+   The table of contents within the sidebar.
+
+   Deprecated since version 1.0.
+
+"sidebarrel"
+   The relation links (previous, next document) within the sidebar.
+
+   Deprecated since version 1.0.
+
+"sidebarsourcelink"
+   The "Show source" link within the sidebar (normally only shown if
+   this is enabled by >>:confval:`html_show_sourcelink`<<).
+
+   Deprecated since version 1.0.
+
+"sidebarsearch"
+   The search box within the sidebar.  Override this if you want to
+   place some content at the bottom of the sidebar.
+
+   Deprecated since version 1.0.
+
+
+Configuration Variables
+-----------------------
+
+Inside templates you can set a couple of variables used by the layout
+template using the "{% set %}" tag:
+
+reldelim1
+
+   The delimiter for the items on the left side of the related bar.
+   This defaults to "' &raquo;'" Each item in the related bar ends
+   with the value of this variable.
+
+reldelim2
+
+   The delimiter for the items on the right side of the related bar.
+   This defaults to "' |'".  Each item except of the last one in the
+   related bar ends with the value of this variable.
+
+Overriding works like this:
+
+   {% extends "!layout.html" %}
+   {% set reldelim1 = ' &gt;' %}
+
+script_files
+
+   Add additional script files here, like this:
+
+      {% set script_files = script_files + ["_static/myscript.js"] %}
+
+   Deprecated since version 1.8.0: Please use ".Sphinx.add_js_file()"
+   instead.
+
+
+Helper Functions
+----------------
+
+Sphinx provides various Jinja functions as helpers in the template.
+You can use them to generate links or output multiply used elements.
+
+pathto(document)
+
+   Return the path to a Sphinx document as a URL.  Use this to refer
+   to built documents.
+
+pathto(file, 1)
+
+   Return the path to a *file* which is a filename relative to the
+   root of the generated output.  Use this to refer to static files.
+
+hasdoc(document)
+
+   Check if a document with the name *document* exists.
+
+sidebar()
+
+   Return the rendered sidebar.
+
+relbar()
+
+   Return the rendered relation bar.
+
+warning(message)
+
+   Emit a warning message.
+
+
+Global Variables
+----------------
+
+These global variables are available in every template and are safe to
+use. There are more, but most of them are an implementation detail and
+might change in the future.
+
+builder
+
+   The name of the builder (e.g. "html" or "htmlhelp").
+
+copyright
+
+   The value of >>:confval:`copyright`<<.
+
+docstitle
+
+   The title of the documentation (the value of
+   >>:confval:`html_title`<<), except when the "single-file" builder
+   is used, when it is set to "None".
+
+embedded
+
+   True if the built HTML is meant to be embedded in some viewing
+   application that handles navigation, not the web browser, such as
+   for HTML help or Qt help formats.  In this case, the sidebar is not
+   included.
+
+favicon
+
+   The path to the HTML favicon in the static path, or "''".
+
+file_suffix
+
+   The value of the builder's "out_suffix" attribute, i.e. the file
+   name extension that the output files will get.  For a standard HTML
+   builder, this is usually ".html".
+
+has_source
+
+   True if the reST document sources are copied (if
+   >>:confval:`html_copy_source`<< is "True").
+
+language
+
+   The value of >>:confval:`language`<<.
+
+last_updated
+
+   The build date.
+
+logo
+
+   The path to the HTML logo image in the static path, or "''".
+
+master_doc
+
+   The value of >>:confval:`master_doc`<<, for usage with "pathto()".
+
+pagename
+
+   The "page name" of the current file, i.e. either the document name
+   if the file is generated from a reST source, or the equivalent
+   hierarchical name relative to the output directory
+   ("[directory/]filename_without_extension").
+
+project
+
+   The value of >>:confval:`project`<<.
+
+release
+
+   The value of >>:confval:`release`<<.
+
+rellinks
+
+   A list of links to put at the left side of the relbar, next to
+   "next" and "prev".  This usually contains links to the general
+   index and other indices, such as the Python module index.  If you
+   add something yourself, it must be a tuple "(pagename, link title,
+   accesskey, link text)".
+
+shorttitle
+
+   The value of >>:confval:`html_short_title`<<.
+
+show_source
+
+   True if >>:confval:`html_show_sourcelink`<< is "True".
+
+sphinx_version
+
+   The version of Sphinx used to build.
+
+style
+
+   The name of the main stylesheet, as given by the theme or
+   >>:confval:`html_style`<<.
+
+title
+
+   The title of the current document, as used in the "<title>" tag.
+
+use_opensearch
+
+   The value of >>:confval:`html_use_opensearch`<<.
+
+version
+
+   The value of >>:confval:`version`<<.
+
+In addition to these values, there are also all **theme options**
+available (prefixed by "theme_"), as well as the values given by the
+user in >>:confval:`html_context`<<.
+
+In documents that are created from source files (as opposed to
+automatically-generated files like the module index, or documents that
+already are in HTML form), these variables are also available:
+
+body
+
+   A string containing the content of the page in HTML form as
+   produced by the HTML builder, before the theme is applied.
+
+display_toc
+
+   A boolean that is True if the toc contains more than one entry.
+
+meta
+
+   Document metadata (a dictionary), see File-wide metadata.
+
+metatags
+
+   A string containing the page's HTML >>:dudir:`meta`<< tags.
+
+next
+
+   The next document for the navigation.  This variable is either
+   false or has two attributes *link* and *title*.  The title contains
+   HTML markup.  For example, to generate a link to the next page, you
+   can use this snippet:
+
+      {% if next %}
+      <a href="{{ next.link|e }}">{{ next.title }}</a>
+      {% endif %}
+
+page_source_suffix
+
+   The suffix of the file that was rendered. Since we support a list
+   of >>:confval:`source_suffix`<<, this will allow you to properly
+   link to the original source file.
+
+parents
+
+   A list of parent documents for navigation, structured like the
+   "next" item.
+
+prev
+
+   Like "next", but for the previous page.
+
+sourcename
+
+   The name of the copied source file for the current document.  This
+   is only nonempty if the >>:confval:`html_copy_source`<< value is
+   "True". This has empty value on creating automatically-generated
+   files.
+
+toc
+
+   The local table of contents for the current page, rendered as HTML
+   bullet lists.
+
+toctree
+
+   A callable yielding the global TOC tree containing the current
+   page, rendered as HTML bullet lists.  Optional keyword arguments:
+
+   "collapse"
+      If true, all TOC entries that are not ancestors of the current
+      page are collapsed. "True" by default.
+
+   "maxdepth"
+      The maximum depth of the tree. Set it to "-1" to allow unlimited
+      depth. Defaults to the max depth selected in the toctree
+      directive.
+
+   "titles_only"
+      If true, put only top-level document titles in the tree. "False"
+      by default.
+
+   "includehidden"
+      If true, the ToC tree will also contain hidden entries. "False"
+      by default.
diff --git a/_build/doc/usage/advanced/intl.txt b/_build/doc/usage/advanced/intl.txt
new file mode 100644
index 000000000..11f4e83f2
--- /dev/null
+++ b/_build/doc/usage/advanced/intl.txt
@@ -0,0 +1,306 @@
+Internationalization
+********************
+
+New in version 1.1.
+
+Complementary to translations provided for Sphinx-generated messages
+such as navigation bars, Sphinx provides mechanisms facilitating the
+translation of *documents*.  See the Options for internationalization
+for details on configuration.
+
+   [image]Workflow visualization of translations in Sphinx.  (The
+   figure is created by plantuml.)
+
+* Sphinx internationalization details
+
+* Translating with sphinx-intl
+
+  * Quick guide
+
+  * Translating
+
+  * Update your po files by new pot files
+
+* Using Transifex service for team translation
+
+* Contributing to Sphinx reference translation
+
+
+Sphinx internationalization details
+===================================
+
+**gettext** [1] is an established standard for internationalization
+and localization.  It naively maps messages in a program to a
+translated string. Sphinx uses these facilities to translate whole
+documents.
+
+Initially project maintainers have to collect all translatable strings
+(also referred to as *messages*) to make them known to translators.
+Sphinx extracts these through invocation of "sphinx-build -b gettext".
+
+Every single element in the doctree will end up in a single message
+which results in lists being equally split into different chunks while
+large paragraphs will remain as coarsely-grained as they were in the
+original document.  This grants seamless document updates while still
+providing a little bit of context for translators in free-text
+passages.  It is the maintainer's task to split up paragraphs which
+are too large as there is no sane automated way to do that.
+
+After Sphinx successfully ran the "MessageCatalogBuilder" you will
+find a collection of ".pot" files in your output directory.  These are
+**catalog templates** and contain messages in your original language
+*only*.
+
+They can be delivered to translators which will transform them to
+".po" files --- so called **message catalogs** --- containing a
+mapping from the original messages to foreign-language strings.
+
+*gettext* compiles them into a binary format known as **binary
+catalogs** through **msgfmt** for efficiency reasons.  If you make
+these files discoverable with >>:confval:`locale_dirs`<< for your
+>>:confval:`language`<<, Sphinx will pick them up automatically.
+
+An example: you have a document "usage.rst" in your Sphinx project.
+The *gettext* builder will put its messages into "usage.pot".  Imagine
+you have Spanish translations [2] stored in "usage.po" --- for your
+builds to be translated you need to follow these instructions:
+
+* Compile your message catalog to a locale directory, say "locale", so
+  it ends up in "./locale/es/LC_MESSAGES/usage.mo" in your source
+  directory (where "es" is the language code for Spanish.)
+
+     msgfmt "usage.po" -o "locale/es/LC_MESSAGES/usage.mo"
+
+* Set >>:confval:`locale_dirs`<< to "["locale/"]".
+
+* Set >>:confval:`language`<< to "es" (also possible via "-D").
+
+* Run your desired build.
+
+
+Translating with sphinx-intl
+============================
+
+
+Quick guide
+-----------
+
+sphinx-intl is a useful tool to work with Sphinx translation flow.
+This section describe an easy way to translate with *sphinx-intl*.
+
+1. Install sphinx-intl.
+
+      $ pip install sphinx-intl
+
+2. Add configurations to "conf.py".
+
+      locale_dirs = ['locale/']   # path is example but recommended.
+      gettext_compact = False     # optional.
+
+   This case-study assumes that BUILDDIR is set to "_build",
+   >>:confval:`locale_dirs`<< is set to "locale/" and
+   >>:confval:`gettext_compact`<< is set to "False" (the Sphinx
+   document is already configured as such).
+
+3. Extract translatable messages into pot files.
+
+      $ make gettext
+
+   The generated pot files will be placed in the "_build/gettext"
+   directory.
+
+4. Generate po files.
+
+   We'll use the pot files generated in the above step.
+
+      $ sphinx-intl update -p _build/gettext -l de -l ja
+
+   Once completed, the generated po files will be placed in the below
+   directories:
+
+   * "./locale/de/LC_MESSAGES/"
+
+   * "./locale/ja/LC_MESSAGES/"
+
+5. Translate po files.
+
+   AS noted above, these are located in the
+   "./locale/<lang>/LC_MESSAGES" directory.  An example of one such
+   file, from Sphinx, "builders.po", is given below.
+
+      # a5600c3d2e3d48fc8c261ea0284db79b
+      #: ../../builders.rst:4
+      msgid "Available builders"
+      msgstr "<FILL HERE BY TARGET LANGUAGE>"
+
+   Another case, msgid is multi-line text and contains
+   reStructuredText syntax:
+
+      # 302558364e1d41c69b3277277e34b184
+      #: ../../builders.rst:9
+      msgid ""
+      "These are the built-in Sphinx builders. More builders can be added by "
+      ":ref:`extensions <extensions>`."
+      msgstr ""
+      "FILL HERE BY TARGET LANGUAGE FILL HERE BY TARGET LANGUAGE FILL HERE "
+      "BY TARGET LANGUAGE :ref:`EXTENSIONS <extensions>` FILL HERE."
+
+   Please be careful not to break reST notation.  Most po-editors will
+   help you with that.
+
+6. Build translated document.
+
+   You need a >>:confval:`language`<< parameter in "conf.py" or you
+   may also specify the parameter on the command line.
+
+   For for BSD/GNU make, run:
+
+      $ make -e SPHINXOPTS="-D language='de'" html
+
+   For Windows **cmd.exe**, run:
+
+      > set SPHINXOPTS=-D language=de
+      > .\make.bat html
+
+   For PowerShell, run:
+
+      > Set-Item env:SPHINXOPTS "-D language=de"
+      > .\make.bat html
+
+Congratulations! You got the translated documentation in the
+"_build/html" directory.
+
+New in version 1.3: **sphinx-build** that is invoked by make command
+will build po files into mo files.If you are using 1.2.x or earlier,
+please invoke **sphinx-intl build** command before **make** command.
+
+
+Translating
+-----------
+
+
+Update your po files by new pot files
+-------------------------------------
+
+If a document is updated, it is necessary to generate updated pot
+files and to apply differences to translated po files.  In order to
+apply the updates from a pot file to the po file, use the **sphinx-
+intl update** command.
+
+   $ sphinx-intl update -p _build/locale
+
+
+Using Transifex service for team translation
+============================================
+
+Transifex is one of several services that allow collaborative
+translation via a web interface.  It has a nifty Python-based command
+line client that makes it easy to fetch and push translations.
+
+1. Install transifex-client.
+
+   You need **tx** command to upload resources (pot files).
+
+      $ pip install transifex-client
+
+   See also: Transifex Client documentation
+
+2. Create your transifex account and create new project for your
+   document.
+
+   Currently, transifex does not allow for a translation project to
+   have more than one version of the document, so you'd better include
+   a version number in your project name.
+
+   For example:
+
+   Project ID:
+      "sphinx-document-test_1_0"
+
+   Project URL:
+      "https://www.transifex.com/projects/p/sphinx-document-test_1_0/"
+
+3. Create config files for **tx** command.
+
+   This process will create ".tx/config" in the current directory, as
+   well as a "~/.transifexrc" file that includes auth information.
+
+      $ tx init
+      Creating .tx folder...
+      Transifex instance [https://www.transifex.com]:
+      ...
+      Please enter your transifex username: <transifex-username>
+      Password: <transifex-password>
+      ...
+      Done.
+
+4. Upload pot files to transifex service.
+
+   Register pot files to ".tx/config" file:
+
+      $ cd /your/document/root
+      $ sphinx-intl update-txconfig-resources --pot-dir _build/locale \
+        --transifex-project-name sphinx-document-test_1_0
+
+   and upload pot files:
+
+      $ tx push -s
+      Pushing translations for resource sphinx-document-test_1_0.builders:
+      Pushing source file (locale/pot/builders.pot)
+      Resource does not exist.  Creating...
+      ...
+      Done.
+
+5. Forward the translation on transifex.
+
+6. Pull translated po files and make translated HTML.
+
+   Get translated catalogs and build mo files. For example, to build
+   mo files for German (de):
+
+      $ cd /your/document/root
+      $ tx pull -l de
+      Pulling translations for resource sphinx-document-test_1_0.builders (...)
+       -> de: locale/de/LC_MESSAGES/builders.po
+      ...
+      Done.
+
+   Invoke **make html** (for BSD/GNU make):
+
+      $ make -e SPHINXOPTS="-D language='de'" html
+
+That's all!
+
+Tip:
+
+  Translating locally and on TransifexIf you want to push all
+  language's po files, you can be done by using **tx push -t**
+  command.  Watch out! This operation overwrites translations in
+  transifex.In other words, if you have updated each in the service
+  and local po files, it would take much time and effort to integrate
+  them.
+
+
+Contributing to Sphinx reference translation
+============================================
+
+The recommended way for new contributors to translate Sphinx reference
+is to join the translation team on Transifex.
+
+There is sphinx translation page for Sphinx (master) documentation.
+
+1. Login to transifex service.
+
+2. Go to sphinx translation page.
+
+3. Click "Request language" and fill form.
+
+4. Wait acceptance by transifex sphinx translation maintainers.
+
+5. (After acceptance) Translate on transifex.
+
+-[ Footnotes ]-
+
+[1] See the GNU gettext utilities for details on that software suite.
+
+[2] Because nobody expects the Spanish Inquisition!
diff --git a/_build/doc/usage/advanced/setuptools.txt b/_build/doc/usage/advanced/setuptools.txt
new file mode 100644
index 000000000..c56c8c6a8
--- /dev/null
+++ b/_build/doc/usage/advanced/setuptools.txt
@@ -0,0 +1,59 @@
+Setuptools integration
+**********************
+
+Sphinx supports integration with setuptools and distutils through a
+custom command - "BuildDoc".
+
+
+Using setuptools integration
+============================
+
+The Sphinx build can then be triggered from distutils, and some Sphinx
+options can be set in "setup.py" or "setup.cfg" instead of Sphinx's
+own configuration file.
+
+For instance, from "setup.py":
+
+   # this is only necessary when not using setuptools/distribute
+   from sphinx.setup_command import BuildDoc
+   cmdclass = {'build_sphinx': BuildDoc}
+
+   name = 'My project'
+   version = '1.2'
+   release = '1.2.0'
+   setup(
+       name=name,
+       author='Bernard Montgomery',
+       version=release,
+       cmdclass=cmdclass,
+       # these are optional and override conf.py settings
+       command_options={
+           'build_sphinx': {
+               'project': ('setup.py', name),
+               'version': ('setup.py', version),
+               'release': ('setup.py', release),
+               'source_dir': ('setup.py', 'doc')}},
+   )
+
+Note:
+
+  If you set Sphinx options directly in the "setup()" command, replace
+  hyphens in variable names with underscores. In the example above,
+  "source-dir" becomes "source_dir".
+
+Or add this section in "setup.cfg":
+
+   [build_sphinx]
+   project = 'My project'
+   version = 1.2
+   release = 1.2.0
+   source-dir = 'doc'
+
+Once configured, call this by calling the relevant command on
+"setup.py":
+
+   $ python setup.py build_sphinx
+
+
+Options for setuptools integration
+==================================
diff --git a/_build/doc/usage/advanced/websupport/api.txt b/_build/doc/usage/advanced/websupport/api.txt
new file mode 100644
index 000000000..d06e339da
--- /dev/null
+++ b/_build/doc/usage/advanced/websupport/api.txt
@@ -0,0 +1,65 @@
+The WebSupport Class
+********************
+
+class sphinxcontrib.websupport.WebSupport
+
+   The main API class for the web support package.  All interactions
+   with the web support package should occur through this class.
+
+   The class takes the following keyword arguments:
+
+   srcdir
+      The directory containing reStructuredText source files.
+
+   builddir
+      The directory that build data and static files should be placed
+      in.  This should be used when creating a "WebSupport" object
+      that will be used to build data.
+
+   datadir
+      The directory that the web support data is in.  This should be
+      used when creating a "WebSupport" object that will be used to
+      retrieve data.
+
+   search
+      This may contain either a string (e.g. 'xapian') referencing a
+      built-in search adapter to use, or an instance of a subclass of
+      "BaseSearch".
+
+   storage
+      This may contain either a string representing a database uri, or
+      an instance of a subclass of "StorageBackend".  If this is not
+      provided, a new sqlite database will be created.
+
+   moderation_callback
+      A callable to be called when a new comment is added that is not
+      displayed.  It must accept one argument: a dictionary
+      representing the comment that was added.
+
+   staticdir
+      If the static files should be created in a different location
+      **and not in** "'/static'", this should be a string with the
+      name of that location (e.g. "builddir + '/static_files'").
+
+      Note:
+
+        If you specify "staticdir", you will typically want to adjust
+        "staticroot" accordingly.
+
+   staticroot
+      If the static files are not served from "'/static'", this should
+      be a string with the name of that location (e.g.
+      "'/static_files'").
+
+   docroot
+      If the documentation is not served from the base path of a URL,
+      this should be a string specifying that path (e.g. "'docs'").
+
+Changed in version 1.6: WebSupport class is moved to
+sphinxcontrib.websupport from sphinx.websupport. Please add
+"sphinxcontrib-websupport" package in your dependency and use moved
+class instead.
+
+
+Methods
+=======
diff --git a/_build/doc/usage/advanced/websupport/index.txt b/_build/doc/usage/advanced/websupport/index.txt
new file mode 100644
index 000000000..713de5b99
--- /dev/null
+++ b/_build/doc/usage/advanced/websupport/index.txt
@@ -0,0 +1,34 @@
+Sphinx Web Support
+******************
+
+New in version 1.1.
+
+Sphinx provides a Python API to easily integrate Sphinx documentation
+into your web application.  To learn more read the Web Support Quick
+Start.
+
+* Web Support Quick Start
+
+  * Building Documentation Data
+
+  * Integrating Sphinx Documents Into Your Webapp
+
+    * Authentication
+
+  * Performing Searches
+
+  * Comments & Proposals
+
+  * Comment Moderation
+
+* The WebSupport Class
+
+  * Methods
+
+* Search Adapters
+
+  * Methods
+
+* Storage Backends
+
+  * Methods
diff --git a/_build/doc/usage/advanced/websupport/quickstart.txt b/_build/doc/usage/advanced/websupport/quickstart.txt
new file mode 100644
index 000000000..7c0436a8b
--- /dev/null
+++ b/_build/doc/usage/advanced/websupport/quickstart.txt
@@ -0,0 +1,259 @@
+Web Support Quick Start
+***********************
+
+
+Building Documentation Data
+===========================
+
+To make use of the web support package in your application you'll need
+to build the data it uses.  This data includes pickle files
+representing documents, search indices, and node data that is used to
+track where comments and other things are in a document.  To do this
+you will need to create an instance of the "WebSupport" class and call
+its "build()" method:
+
+   from sphinxcontrib.websupport import WebSupport
+
+   support = WebSupport(srcdir='/path/to/rst/sources/',
+                        builddir='/path/to/build/outdir',
+                        search='xapian')
+
+   support.build()
+
+This will read reStructuredText sources from "srcdir" and place the
+necessary data in "builddir".  The "builddir" will contain two sub-
+directories: one named "data" that contains all the data needed to
+display documents, search through documents, and add comments to
+documents.  The other directory will be called "static" and contains
+static files that should be served from "/static".
+
+Note:
+
+  If you wish to serve static files from a path other than "/static",
+  you can do so by providing the *staticdir* keyword argument when
+  creating the "WebSupport" object.
+
+
+Integrating Sphinx Documents Into Your Webapp
+=============================================
+
+Now that the data is built, it's time to do something useful with it.
+Start off by creating a "WebSupport" object for your application:
+
+   from sphinxcontrib.websupport import WebSupport
+
+   support = WebSupport(datadir='/path/to/the/data',
+                        search='xapian')
+
+You'll only need one of these for each set of documentation you will
+be working with.  You can then call its "get_document()" method to
+access individual documents:
+
+   contents = support.get_document('contents')
+
+This will return a dictionary containing the following items:
+
+* **body**: The main body of the document as HTML
+
+* **sidebar**: The sidebar of the document as HTML
+
+* **relbar**: A div containing links to related documents
+
+* **title**: The title of the document
+
+* **css**: Links to CSS files used by Sphinx
+
+* **script**: JavaScript containing comment options
+
+This dict can then be used as context for templates.  The goal is to
+be easy to integrate with your existing templating system.  An example
+using Jinja2 is:
+
+   {%- extends "layout.html" %}
+
+   {%- block title %}
+       {{ document.title }}
+   {%- endblock %}
+
+   {% block css %}
+       {{ super() }}
+       {{ document.css|safe }}
+       <link rel="stylesheet" href="/static/websupport-custom.css" type="text/css">
+   {% endblock %}
+
+   {%- block script %}
+       {{ super() }}
+       {{ document.script|safe }}
+   {%- endblock %}
+
+   {%- block relbar %}
+       {{ document.relbar|safe }}
+   {%- endblock %}
+
+   {%- block body %}
+       {{ document.body|safe }}
+   {%- endblock %}
+
+   {%- block sidebar %}
+       {{ document.sidebar|safe }}
+   {%- endblock %}
+
+
+Authentication
+--------------
+
+To use certain features such as voting, it must be possible to
+authenticate users.  The details of the authentication are left to
+your application.  Once a user has been authenticated you can pass the
+user's details to certain "WebSupport" methods using the *username*
+and *moderator* keyword arguments.  The web support package will store
+the username with comments and votes.  The only caveat is that if you
+allow users to change their username you must update the websupport
+package's data:
+
+   support.update_username(old_username, new_username)
+
+*username* should be a unique string which identifies a user, and
+*moderator* should be a boolean representing whether the user has
+moderation privileges. The default value for *moderator* is "False".
+
+An example Flask function that checks whether a user is logged in and
+then retrieves a document is:
+
+   from sphinxcontrib.websupport.errors import *
+
+   @app.route('/<path:docname>')
+   def doc(docname):
+       username = g.user.name if g.user else ''
+       moderator = g.user.moderator if g.user else False
+       try:
+           document = support.get_document(docname, username, moderator)
+       except DocumentNotFoundError:
+           abort(404)
+       return render_template('doc.html', document=document)
+
+The first thing to notice is that the *docname* is just the request
+path.  This makes accessing the correct document easy from a single
+view.  If the user is authenticated, then the username and moderation
+status are passed along with the docname to "get_document()".  The web
+support package will then add this data to the "COMMENT_OPTIONS" that
+are used in the template.
+
+Note:
+
+  This only works if your documentation is served from your document
+  root. If it is served from another directory, you will need to
+  prefix the url route with that directory, and give the *docroot*
+  keyword argument when creating the web support object:
+
+     support = WebSupport(..., docroot='docs')
+
+     @app.route('/docs/<path:docname>')
+
+
+Performing Searches
+===================
+
+To use the search form built-in to the Sphinx sidebar, create a
+function to handle requests to the URL 'search' relative to the
+documentation root.  The user's search query will be in the GET
+parameters, with the key *q*.  Then use the "get_search_results()"
+method to retrieve search results. In Flask that would be like this:
+
+   @app.route('/search')
+   def search():
+       q = request.args.get('q')
+       document = support.get_search_results(q)
+       return render_template('doc.html', document=document)
+
+Note that we used the same template to render our search results as we
+did to render our documents.  That's because "get_search_results()"
+returns a context dict in the same format that "get_document()" does.
+
+
+Comments & Proposals
+====================
+
+Now that this is done it's time to define the functions that handle
+the AJAX calls from the script.  You will need three functions.  The
+first function is used to add a new comment, and will call the web
+support method "add_comment()":
+
+   @app.route('/docs/add_comment', methods=['POST'])
+   def add_comment():
+       parent_id = request.form.get('parent', '')
+       node_id = request.form.get('node', '')
+       text = request.form.get('text', '')
+       proposal = request.form.get('proposal', '')
+       username = g.user.name if g.user is not None else 'Anonymous'
+       comment = support.add_comment(text, node_id='node_id',
+                                     parent_id='parent_id',
+                                     username=username, proposal=proposal)
+       return jsonify(comment=comment)
+
+You'll notice that both a "parent_id" and "node_id" are sent with the
+request. If the comment is being attached directly to a node,
+"parent_id" will be empty. If the comment is a child of another
+comment, then "node_id" will be empty. Then next function handles the
+retrieval of comments for a specific node, and is aptly named
+"get_data()":
+
+   @app.route('/docs/get_comments')
+   def get_comments():
+       username = g.user.name if g.user else None
+       moderator = g.user.moderator if g.user else False
+       node_id = request.args.get('node', '')
+       data = support.get_data(node_id, username, moderator)
+       return jsonify(**data)
+
+The final function that is needed will call "process_vote()", and will
+handle user votes on comments:
+
+   @app.route('/docs/process_vote', methods=['POST'])
+   def process_vote():
+       if g.user is None:
+           abort(401)
+       comment_id = request.form.get('comment_id')
+       value = request.form.get('value')
+       if value is None or comment_id is None:
+           abort(400)
+       support.process_vote(comment_id, g.user.id, value)
+       return "success"
+
+
+Comment Moderation
+==================
+
+By default, all comments added through "add_comment()" are
+automatically displayed.  If you wish to have some form of moderation,
+you can pass the "displayed" keyword argument:
+
+   comment = support.add_comment(text, node_id='node_id',
+                                 parent_id='parent_id',
+                                 username=username, proposal=proposal,
+                                 displayed=False)
+
+You can then create a new view to handle the moderation of comments.
+It will be called when a moderator decides a comment should be
+accepted and displayed:
+
+   @app.route('/docs/accept_comment', methods=['POST'])
+   def accept_comment():
+       moderator = g.user.moderator if g.user else False
+       comment_id = request.form.get('id')
+       support.accept_comment(comment_id, moderator=moderator)
+       return 'OK'
+
+Rejecting comments happens via comment deletion.
+
+To perform a custom action (such as emailing a moderator) when a new
+comment is added but not displayed, you can pass callable to the
+"WebSupport" class when instantiating your support object:
+
+   def moderation_callback(comment):
+       """Do something..."""
+
+   support = WebSupport(..., moderation_callback=moderation_callback)
+
+The moderation callback must take one argument, which will be the same
+comment dict that is returned by "add_comment()".
diff --git a/_build/doc/usage/advanced/websupport/searchadapters.txt b/_build/doc/usage/advanced/websupport/searchadapters.txt
new file mode 100644
index 000000000..e64a1e595
--- /dev/null
+++ b/_build/doc/usage/advanced/websupport/searchadapters.txt
@@ -0,0 +1,30 @@
+Search Adapters
+***************
+
+To create a custom search adapter you will need to subclass the
+"BaseSearch" class.  Then create an instance of the new class and pass
+that as the *search* keyword argument when you create the "WebSupport"
+object:
+
+   support = WebSupport(srcdir=srcdir,
+                        builddir=builddir,
+                        search=MySearch())
+
+For more information about creating a custom search adapter, please
+see the documentation of the "BaseSearch" class below.
+
+class sphinxcontrib.websupport.search.BaseSearch
+
+   Defines an interface for search adapters.
+
+Changed in version 1.6: BaseSearch class is moved to
+sphinxcontrib.websupport.search from sphinx.websupport.search.
+
+
+Methods
+=======
+
+The following methods are defined in the BaseSearch class. Some
+methods do not need to be overridden, but some ("add_document()" and
+"handle_query()") must be overridden in your subclass. For a working
+example, look at the built-in adapter for whoosh.
diff --git a/_build/doc/usage/advanced/websupport/storagebackends.txt b/_build/doc/usage/advanced/websupport/storagebackends.txt
new file mode 100644
index 000000000..7d12ab8f3
--- /dev/null
+++ b/_build/doc/usage/advanced/websupport/storagebackends.txt
@@ -0,0 +1,25 @@
+Storage Backends
+****************
+
+To create a custom storage backend you will need to subclass the
+"StorageBackend" class.  Then create an instance of the new class and
+pass that as the *storage* keyword argument when you create the
+"WebSupport" object:
+
+   support = WebSupport(srcdir=srcdir,
+                        builddir=builddir,
+                        storage=MyStorage())
+
+For more information about creating a custom storage backend, please
+see the documentation of the "StorageBackend" class below.
+
+class sphinxcontrib.websupport.storage.StorageBackend
+
+   Defines an interface for storage backends.
+
+Changed in version 1.6: StorageBackend class is moved to
+sphinxcontrib.websupport.storage from sphinx.websupport.storage.
+
+
+Methods
+=======
diff --git a/_build/doc/usage/builders/index.txt b/_build/doc/usage/builders/index.txt
new file mode 100644
index 000000000..a16df0f29
--- /dev/null
+++ b/_build/doc/usage/builders/index.txt
@@ -0,0 +1,717 @@
+Builders
+********
+
+These are the built-in Sphinx builders.  More builders can be added by
+*extensions*.
+
+The builder's "name" must be given to the **-b** command-line option
+of **sphinx-build** to select a builder.
+
+class sphinx.builders.html.StandaloneHTMLBuilder
+
+   This is the standard HTML builder.  Its output is a directory with
+   HTML files, complete with style sheets and optionally the reST
+   sources.  There are quite a few configuration values that customize
+   the output of this builder, see the chapter Options for HTML output
+   for details.
+
+   name = 'html'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+class sphinx.builders.dirhtml.DirectoryHTMLBuilder
+
+   This is a subclass of the standard HTML builder.  Its output is a
+   directory with HTML files, where each file is called "index.html"
+   and placed in a subdirectory named like its page name.  For
+   example, the document "markup/rest.rst" will not result in an
+   output file "markup/rest.html", but "markup/rest/index.html".  When
+   generating links between pages, the "index.html" is omitted, so
+   that the URL would look like "markup/rest/".
+
+   name = 'dirhtml'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 0.6.
+
+class sphinx.builders.singlehtml.SingleFileHTMLBuilder
+
+   This is an HTML builder that combines the whole project in one
+   output file. (Obviously this only works with smaller projects.)
+   The file is named like the master document.  No indices will be
+   generated.
+
+   name = 'singlehtml'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.0.
+
+class sphinxcontrib.htmlhelp.HTMLHelpBuilder
+
+   This builder produces the same output as the standalone HTML
+   builder, but also generates HTML Help support files that allow the
+   Microsoft HTML Help Workshop to compile them into a CHM file.
+
+   name = 'htmlhelp'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+class sphinxcontrib.qthelp.QtHelpBuilder
+
+   This builder produces the same output as the standalone HTML
+   builder, but also generates Qt help collection support files that
+   allow the Qt collection generator to compile them.
+
+   Changed in version 2.0: Moved to sphinxcontrib.qthelp from
+   sphinx.builders package.
+
+   name = 'qthelp'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+class sphinxcontrib.applehelp.AppleHelpBuilder
+
+   This builder produces an Apple Help Book based on the same output
+   as the standalone HTML builder.
+
+   If the source directory contains any ".lproj" folders, the one
+   corresponding to the selected language will have its contents
+   merged with the generated output.  These folders will be ignored by
+   all other documentation types.
+
+   In order to generate a valid help book, this builder requires the
+   command line tool **hiutil**, which is only available on Mac OS X
+   10.6 and above.  You can disable the indexing step by setting
+   >>:confval:`applehelp_disable_external_tools`<< to "True", in which
+   case the output will not be valid until **hiutil** has been run on
+   all of the ".lproj" folders within the bundle.
+
+   name = 'applehelp'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg', 'image/tiff', 'image/jp2', 'image/svg+xml']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.3.
+
+   Changed in version 2.0: Moved to sphinxcontrib.applehelp from
+   sphinx.builders package.
+
+class sphinxcontrib.devhelp.DevhelpBuilder
+
+   This builder produces the same output as the standalone HTML
+   builder, but also generates GNOME Devhelp support file that allows
+   the GNOME Devhelp reader to view them.
+
+   name = 'devhelp'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   Changed in version 2.0: Moved to sphinxcontrib.devhelp from
+   sphinx.builders package.
+
+class sphinx.builders.epub3.Epub3Builder
+
+   This builder produces the same output as the standalone HTML
+   builder, but also generates an *epub* file for ebook readers.  See
+   Epub info for details about it.  For definition of the epub format,
+   have a look at http://idpf.org/epub or
+   https://en.wikipedia.org/wiki/EPUB. The builder creates *EPUB 3*
+   files.
+
+   name = 'epub'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.4.
+
+   Changed in version 1.5: Since Sphinx-1.5, the epub3 builder is used
+   for the default builder of epub.
+
+class sphinx.builders.latex.LaTeXBuilder
+
+   This builder produces a bunch of LaTeX files in the output
+   directory.  You have to specify which documents are to be included
+   in which LaTeX files via the >>:confval:`latex_documents`<<
+   configuration value.  There are a few configuration values that
+   customize the output of this builder, see the chapter Options for
+   LaTeX output for details.
+
+   The produced LaTeX file uses several LaTeX packages that may not be
+   present in a "minimal" TeX distribution installation.
+
+   On Ubuntu xenial, the following packages need to be installed for
+   successful PDF builds:
+
+   * "texlive-latex-recommended"
+
+   * "texlive-fonts-recommended"
+
+   * "texlive-latex-extra"
+
+   * "latexmk" (this is a Sphinx requirement on GNU/Linux and MacOS X
+     for functioning of "make latexpdf")
+
+   Additional packages are needed in some circumstances (see the
+   discussion of the "'fontpkg'" key of >>:confval:`latex_elements`<<
+   for more information):
+
+   * to support occasional Cyrillic letters or words, and a fortiori
+     if >>:confval:`language`<< is set to a Cyrillic language, the
+     package "texlive-lang-cyrillic" is required, and, with unmodified
+     "'fontpkg'", also "cm-super" or "cm-super-minimal",
+
+   * to support occasional Greek letters or words (in text, not in
+     "math" directive contents), "texlive-lang-greek" is required,
+     and, with unmodified "'fontpkg'", also "cm-super" or "cm-super-
+     minimal",
+
+   * for "'xelatex'" or "'lualatex'" (see
+     >>:confval:`latex_engine`<<), "texlive-xetex" resp. "texlive-
+     luatex", and, if leaving unchanged "'fontpkg'", "fonts-freefont-
+     otf".
+
+   The testing of Sphinx LaTeX is done on Ubuntu xenial whose TeX
+   distribution is based on a TeXLive 2015 snapshot dated March 2016.
+
+   Changed in version 1.6: Formerly, testing had been done on Ubuntu
+   precise (TeXLive 2009).
+
+   Changed in version 2.0: Formerly, testing had been done on Ubuntu
+   trusty (TeXLive 2013).
+
+   Note:
+
+     Since 1.6, "make latexpdf" uses "latexmk" (not on Windows).  This
+     makes sure the needed number of runs is automatically executed to
+     get the cross-references, bookmarks, indices, and tables of
+     contents right.One can pass to "latexmk" options via the
+     "LATEXMKOPTS" Makefile variable. For example:
+
+        make latexpdf LATEXMKOPTS="-silent"
+
+     reduces console output to a minimum.Also, if "latexmk" is at
+     version 4.52b or higher (January 2017) "LATEXMKOPTS="-xelatex""
+     speeds up PDF builds via XeLateX in case of numerous graphics
+     inclusions.To pass options directly to the "(pdf|xe|lua)latex"
+     binary, use variable "LATEXOPTS", for example:
+
+        make latexpdf LATEXOPTS="--halt-on-error"
+
+   name = 'latex'
+
+      The builder's name, for the -b command line option.
+
+   format = 'latex'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['application/pdf', 'image/png', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+Note that a direct PDF builder is being provided by rinohtype. The
+builder's name is "rinoh". Refer to the rinohtype manual for details.
+
+class sphinx.builders.text.TextBuilder
+
+   This builder produces a text file for each reST file -- this is
+   almost the same as the reST source, but with much of the markup
+   stripped for better readability.
+
+   name = 'text'
+
+      The builder's name, for the -b command line option.
+
+   format = 'text'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 0.4.
+
+class sphinx.builders.manpage.ManualPageBuilder
+
+   This builder produces manual pages in the groff format.  You have
+   to specify which documents are to be included in which manual pages
+   via the >>:confval:`man_pages`<< configuration value.
+
+   name = 'man'
+
+      The builder's name, for the -b command line option.
+
+   format = 'man'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.0.
+
+class sphinx.builders.texinfo.TexinfoBuilder
+
+   This builder produces Texinfo files that can be processed into Info
+   files by the **makeinfo** program.  You have to specify which
+   documents are to be included in which Texinfo files via the
+   >>:confval:`texinfo_documents`<< configuration value.
+
+   The Info format is the basis of the on-line help system used by GNU
+   Emacs and the terminal-based program **info**.  See Texinfo info
+   for more details.  The Texinfo format is the official documentation
+   system used by the GNU project.  More information on Texinfo can be
+   found at https://www.gnu.org/software/texinfo/.
+
+   name = 'texinfo'
+
+      The builder's name, for the -b command line option.
+
+   format = 'texinfo'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/png', 'image/jpeg', 'image/gif']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.1.
+
+class sphinxcontrib.serializinghtml.SerializingHTMLBuilder
+
+   This builder uses a module that implements the Python serialization
+   API (*pickle*, *simplejson*, *phpserialize*, and others) to dump
+   the generated HTML documentation.  The pickle builder is a subclass
+   of it.
+
+   A concrete subclass of this builder serializing to the PHP
+   serialization format could look like this:
+
+      import phpserialize
+
+      class PHPSerializedBuilder(SerializingHTMLBuilder):
+          name = 'phpserialized'
+          implementation = phpserialize
+          out_suffix = '.file.phpdump'
+          globalcontext_filename = 'globalcontext.phpdump'
+          searchindex_filename = 'searchindex.phpdump'
+
+   implementation
+
+      A module that implements *dump()*, *load()*, *dumps()* and
+      *loads()* functions that conform to the functions with the same
+      names from the pickle module.  Known modules implementing this
+      interface are *simplejson*, *phpserialize*, *plistlib*, and
+      others.
+
+   out_suffix
+
+      The suffix for all regular files.
+
+   globalcontext_filename
+
+      The filename for the file that contains the "global context".
+      This is a dict with some general configuration values such as
+      the name of the project.
+
+   searchindex_filename
+
+      The filename for the search index Sphinx generates.
+
+   See Serialization builder details for details about the output
+   format.
+
+   New in version 0.5.
+
+class sphinxcontrib.serializinghtml.PickleHTMLBuilder
+
+   This builder produces a directory with pickle files containing
+   mostly HTML fragments and TOC information, for use of a web
+   application (or custom postprocessing tool) that doesn't use the
+   standard HTML templates.
+
+   See Serialization builder details for details about the output
+   format.
+
+   name = 'pickle'
+
+      The builder's name, for the -b command line option.
+
+      The old name "web" still works as well.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   The file suffix is ".fpickle".  The global context is called
+   "globalcontext.pickle", the search index "searchindex.pickle".
+
+class sphinxcontrib.serializinghtml.JSONHTMLBuilder
+
+   This builder produces a directory with JSON files containing mostly
+   HTML fragments and TOC information, for use of a web application
+   (or custom postprocessing tool) that doesn't use the standard HTML
+   templates.
+
+   See Serialization builder details for details about the output
+   format.
+
+   name = 'json'
+
+      The builder's name, for the -b command line option.
+
+   format = 'html'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = ['image/svg+xml', 'image/png', 'image/gif', 'image/jpeg']
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   The file suffix is ".fjson".  The global context is called
+   "globalcontext.json", the search index "searchindex.json".
+
+   New in version 0.5.
+
+class sphinx.builders.gettext.MessageCatalogBuilder
+
+   This builder produces gettext-style message catalogs.  Each top-
+   level file or subdirectory grows a single ".pot" catalog template.
+
+   See the documentation on Internationalization for further
+   reference.
+
+   name = 'gettext'
+
+      The builder's name, for the -b command line option.
+
+   format = ''
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.1.
+
+class sphinx.builders.changes.ChangesBuilder
+
+   This builder produces an HTML overview of all "versionadded",
+   "versionchanged" and "deprecated" directives for the current
+   >>:confval:`version`<<.  This is useful to generate a ChangeLog
+   file, for example.
+
+   name = 'changes'
+
+      The builder's name, for the -b command line option.
+
+   format = ''
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+class sphinx.builders.dummy.DummyBuilder
+
+   This builder produces no output.  The input is only parsed and
+   checked for consistency.  This is useful for linting purposes.
+
+   name = 'dummy'
+
+      The builder's name, for the -b command line option.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.4.
+
+class sphinx.builders.linkcheck.CheckExternalLinksBuilder
+
+   This builder scans all documents for external links, tries to open
+   them with "requests", and writes an overview which ones are broken
+   and redirected to standard output and to "output.txt" in the output
+   directory.
+
+   name = 'linkcheck'
+
+      The builder's name, for the -b command line option.
+
+   format = ''
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   Changed in version 1.5: Since Sphinx-1.5, the linkcheck builder
+   comes to use requests module.
+
+   Changed in version 3.4: The linkcheck builder retries links when
+   servers apply rate limits.
+
+class sphinx.builders.xml.XMLBuilder
+
+   This builder produces Docutils-native XML files.  The output can be
+   transformed with standard XML tools such as XSLT processors into
+   arbitrary final forms.
+
+   name = 'xml'
+
+      The builder's name, for the -b command line option.
+
+   format = 'xml'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.2.
+
+class sphinx.builders.xml.PseudoXMLBuilder
+
+   This builder is used for debugging the Sphinx/Docutils "Reader to
+   Transform to Writer" pipeline. It produces compact pretty-printed
+   "pseudo-XML", files where nesting is indicated by indentation (no
+   end-tags). External attributes for all elements are output, and
+   internal attributes for any leftover "pending" elements are also
+   given.
+
+   name = 'pseudoxml'
+
+      The builder's name, for the -b command line option.
+
+   format = 'pseudoxml'
+
+      The builder's output format, or '' if no document output is
+      produced.
+
+   supported_image_types: List[str] = []
+
+      The list of MIME types of image formats supported by the
+      builder. Image files are searched in the order in which they
+      appear here.
+
+   New in version 1.2.
+
+Built-in Sphinx extensions that offer more builders are:
+
+* "doctest"
+
+* "coverage"
+
+
+Serialization builder details
+=============================
+
+All serialization builders outputs one file per source file and a few
+special files.  They also copy the reST source files in the directory
+"_sources" under the output directory.
+
+The "PickleHTMLBuilder" is a builtin subclass that implements the
+pickle serialization interface.
+
+The files per source file have the extensions of "out_suffix", and are
+arranged in directories just as the source files are.  They
+unserialize to a dictionary (or dictionary like structure) with these
+keys:
+
+"body"
+   The HTML "body" (that is, the HTML rendering of the source file),
+   as rendered by the HTML translator.
+
+"title"
+   The title of the document, as HTML (may contain markup).
+
+"toc"
+   The table of contents for the file, rendered as an HTML "<ul>".
+
+"display_toc"
+   A boolean that is "True" if the "toc" contains more than one entry.
+
+"current_page_name"
+   The document name of the current file.
+
+"parents", "prev" and "next"
+   Information about related chapters in the TOC tree.  Each relation
+   is a dictionary with the keys "link" (HREF for the relation) and
+   "title" (title of the related document, as HTML).  "parents" is a
+   list of relations, while "prev" and "next" are a single relation.
+
+"sourcename"
+   The name of the source file under "_sources".
+
+The special files are located in the root output directory.  They are:
+
+"SerializingHTMLBuilder.globalcontext_filename"
+   A pickled dict with these keys:
+
+   "project", "copyright", "release", "version"
+      The same values as given in the configuration file.
+
+   "style"
+      >>:confval:`html_style`<<.
+
+   "last_updated"
+      Date of last build.
+
+   "builder"
+      Name of the used builder, in the case of pickles this is always
+      "'pickle'".
+
+   "titles"
+      A dictionary of all documents' titles, as HTML strings.
+
+"SerializingHTMLBuilder.searchindex_filename"
+   An index that can be used for searching the documentation.  It is a
+   pickled list with these entries:
+
+   * A list of indexed docnames.
+
+   * A list of document titles, as HTML strings, in the same order as
+     the first list.
+
+   * A dict mapping word roots (processed by an English-language
+     stemmer) to a list of integers, which are indices into the first
+     list.
+
+"environment.pickle"
+   The build environment.  This is always a pickle file, independent
+   of the builder and a copy of the environment that was used when the
+   builder was started.
+
+   Unlike the other pickle files this pickle file requires that the
+   "sphinx" package is available on unpickling.
diff --git a/_build/doc/usage/configuration.txt b/_build/doc/usage/configuration.txt
new file mode 100644
index 000000000..2a193a487
--- /dev/null
+++ b/_build/doc/usage/configuration.txt
@@ -0,0 +1,170 @@
+Configuration
+*************
+
+The *configuration directory* must contain a file named "conf.py".
+This file (containing Python code) is called the "build configuration
+file" and contains (almost) all configuration needed to customize
+Sphinx input and output behavior.
+
+   An optional file docutils.conf can be added to the configuration
+   directory to adjust Docutils configuration if not otherwise
+   overridden or set by Sphinx.
+
+The configuration file is executed as Python code at build time (using
+"execfile()", and with the current directory set to its containing
+directory), and therefore can execute arbitrarily complex code.
+Sphinx then reads simple names from the file's namespace as its
+configuration.
+
+Important points to note:
+
+* If not otherwise documented, values must be strings, and their
+  default is the empty string.
+
+* The term "fully-qualified name" refers to a string that names an
+  importable Python object inside a module; for example, the FQN
+  ""sphinx.builders.Builder"" means the "Builder" class in the
+  "sphinx.builders" module.
+
+* Remember that document names use "/" as the path separator and don't
+  contain the file name extension.
+
+* Since "conf.py" is read as a Python file, the usual rules apply for
+  encodings and Unicode support.
+
+* The contents of the config namespace are pickled (so that Sphinx can
+  find out when configuration changes), so it may not contain
+  unpickleable values -- delete them from the namespace with "del" if
+  appropriate.  Modules are removed automatically, so you don't need
+  to "del" your imports after use.
+
+* There is a special object named "tags" available in the config file.
+  It can be used to query and change the tags (see Including content
+  based on tags).  Use "tags.has('tag')" to query, "tags.add('tag')"
+  and "tags.remove('tag')" to change. Only tags set via the "-t"
+  command-line option or via "tags.add('tag')" can be queried using
+  "tags.has('tag')". Note that the current builder tag is not
+  available in "conf.py", as it is created *after* the builder is
+  initialized.
+
+
+Project information
+===================
+
+
+General configuration
+=====================
+
+
+Options for internationalization
+================================
+
+These options influence Sphinx's *Native Language Support*.  See the
+documentation on Internationalization for details.
+
+
+Options for Math
+================
+
+These options influence Math notations.
+
+
+Options for HTML output
+=======================
+
+These options influence HTML as well as HTML Help output, and other
+builders that use Sphinx's HTMLWriter class.
+
+
+Options for Single HTML output
+==============================
+
+
+Options for HTML help output
+============================
+
+
+Options for Apple Help output
+=============================
+
+New in version 1.3.
+
+These options influence the Apple Help output.  This builder derives
+from the HTML builder, so the HTML options also apply where
+appropriate.
+
+Note:
+
+  Apple Help output will only work on Mac OS X 10.6 and higher, as it
+  requires the **hiutil** and **codesign** command line tools, neither
+  of which are Open Source.You can disable the use of these tools
+  using >>:confval:`applehelp_disable_external_tools`<<, but the
+  result will not be a valid help book until the indexer is run over
+  the ".lproj" folders within the bundle.
+
+
+Options for epub output
+=======================
+
+These options influence the epub output.  As this builder derives from
+the HTML builder, the HTML options also apply where appropriate.  The
+actual values for some of the options is not really important, they
+just have to be entered into the Dublin Core metadata.
+
+
+Options for LaTeX output
+========================
+
+These options influence LaTeX output.
+
+
+Options for text output
+=======================
+
+These options influence text output.
+
+
+Options for manual page output
+==============================
+
+These options influence manual page output.
+
+
+Options for Texinfo output
+==========================
+
+These options influence Texinfo output.
+
+
+Options for QtHelp output
+=========================
+
+These options influence qthelp output.  As this builder derives from
+the HTML builder, the HTML options also apply where appropriate.
+
+
+Options for the linkcheck builder
+=================================
+
+
+Options for the XML builder
+===========================
+
+-[ Footnotes ]-
+
+[1] A note on available globbing syntax: you can use the standard
+    shell constructs "*", "?", "[...]" and "[!...]" with the feature
+    that these all don't match slashes.  A double star "**" can be
+    used to match any sequence of characters *including* slashes.
+
+
+Options for the C domain
+========================
+
+
+Options for the C++ domain
+==========================
+
+
+Example of configuration file
+-----------------------------
diff --git a/_build/doc/usage/extensions/autodoc.txt b/_build/doc/usage/extensions/autodoc.txt
new file mode 100644
index 000000000..d8012e13a
--- /dev/null
+++ b/_build/doc/usage/extensions/autodoc.txt
@@ -0,0 +1,431 @@
+"sphinx.ext.autodoc" -- Include documentation from docstrings
+*************************************************************
+
+This extension can import the modules you are documenting, and pull in
+documentation from docstrings in a semi-automatic way.
+
+Note:
+
+  For Sphinx (actually, the Python interpreter that executes Sphinx)
+  to find your module, it must be importable.  That means that the
+  module or the package must be in one of the directories on
+  "sys.path" -- adapt your "sys.path" in the configuration file
+  accordingly.
+
+Warning:
+
+  "autodoc" **imports** the modules to be documented.  If any modules
+  have side effects on import, these will be executed by "autodoc"
+  when "sphinx-build" is run.If you document scripts (as opposed to
+  library modules), make sure their main routine is protected by a "if
+  __name__ == '__main__'" condition.
+
+For this to work, the docstrings must of course be written in correct
+reStructuredText.  You can then use all of the usual Sphinx markup in
+the docstrings, and it will end up correctly in the documentation.
+Together with hand-written documentation, this technique eases the
+pain of having to maintain two locations for documentation, while at
+the same time avoiding auto-generated-looking pure API documentation.
+
+If you prefer NumPy or Google style docstrings over reStructuredText,
+you can also enable the "napoleon" extension. "napoleon" is a
+preprocessor that converts your docstrings to correct reStructuredText
+before "autodoc" processes them.
+
+
+Directives
+==========
+
+"autodoc" provides several directives that are versions of the usual
+"py:module", "py:class" and so forth.  On parsing time, they import
+the corresponding module and extract the docstring of the given
+objects, inserting them into the page source under a suitable
+"py:module", "py:class" etc.  directive.
+
+Note:
+
+  Just as "py:class" respects the current "py:module", "autoclass"
+  will also do so.  Likewise, "automethod" will respect the current
+  "py:class".
+
+.. automodule::
+.. autoclass::
+.. autoexception::
+
+   Document a module, class or exception.  All three directives will
+   by default only insert the docstring of the object itself:
+
+      .. autoclass:: Noodle
+
+   will produce source like this:
+
+      .. class:: Noodle
+
+         Noodle's docstring.
+
+   The "auto" directives can also contain content of their own, it
+   will be inserted into the resulting non-auto directive source after
+   the docstring (but before any automatic member documentation).
+
+   Therefore, you can also mix automatic and non-automatic member
+   documentation, like so:
+
+      .. autoclass:: Noodle
+         :members: eat, slurp
+
+         .. method:: boil(time=10)
+
+            Boil the noodle *time* minutes.
+
+   **Options and advanced usage**
+
+   * If you want to automatically document members, there's a
+     "members" option:
+
+        .. automodule:: noodle
+           :members:
+
+     will document all module members (recursively), and
+
+        .. autoclass:: Noodle
+           :members:
+
+     will document all non-private member functions and properties
+     (that is, those whose name doesn't start with "_").
+
+     For modules, "__all__" will be respected when looking for members
+     unless you give the "ignore-module-all" flag option.  Without
+     "ignore-module-all", the order of the members will also be the
+     order in "__all__".
+
+     You can also give an explicit list of members; only these will
+     then be documented:
+
+        .. autoclass:: Noodle
+           :members: eat, slurp
+
+   * If you want to make the "members" option (or other options
+     described below) the default, see
+     >>:confval:`autodoc_default_options`<<.
+
+     Tip:
+
+       You can use a negated form, "'no-*flag*'", as an option of
+       autodoc directive, to disable it temporarily.  For example:
+
+          .. automodule:: foo
+             :no-undoc-members:
+
+   * Members without docstrings will be left out, unless you give the
+     "undoc-members" flag option:
+
+        .. automodule:: noodle
+           :members:
+           :undoc-members:
+
+   * "Private" members (that is, those named like "_private" or
+     "__private") will be included if the "private-members" flag
+     option is given:
+
+        .. automodule:: noodle
+           :members:
+           :private-members:
+
+     It can also take an explicit list of member names to be
+     documented as arguments:
+
+        .. automodule:: noodle
+           :members:
+           :private-members: _spicy, _garlickly
+
+     New in version 1.1.
+
+     Changed in version 3.2: The option can now take arguments.
+
+   * autodoc considers a member private if its docstring contains
+     ":meta private:" in its Info field lists. For example:
+
+        def my_function(my_arg, my_other_arg):
+            """blah blah blah
+
+            :meta private:
+            """
+
+     New in version 3.0.
+
+   * autodoc considers a member public if its docstring contains
+     ":meta public:" in its Info field lists, even if it starts with
+     an underscore. For example:
+
+        def _my_function(my_arg, my_other_arg):
+            """blah blah blah
+
+            :meta public:
+            """
+
+     New in version 3.1.
+
+   * autodoc considers a variable member does not have any default
+     value if its docstring contains ":meta hide-value:" in its Info
+     field lists. Example:
+
+        var1 = None  #: :meta hide-value:
+
+     New in version 3.5.
+
+   * Python "special" members (that is, those named like
+     "__special__") will be included if the "special-members" flag
+     option is given:
+
+        .. autoclass:: my.Class
+           :members:
+           :private-members:
+           :special-members:
+
+     would document both "private" and "special" members of the class.
+
+     New in version 1.1.
+
+     Changed in version 1.2: The option can now take arguments, i.e.
+     the special members to document.
+
+   * For classes and exceptions, members inherited from base classes
+     will be left out when documenting all members, unless you give
+     the "inherited-members" option, in addition to "members":
+
+        .. autoclass:: Noodle
+           :members:
+           :inherited-members:
+
+     This can be combined with "undoc-members" to document *all*
+     available members of the class or module.
+
+     It can take an ancestor class not to document inherited members
+     from it. By default, members of "object" class are not
+     documented.  To show them all, give "None" to the option.
+
+     For example; If your class "Foo" is derived from "list" class and
+     you don't want to document "list.__len__()", you should specify a
+     option ":inherited-members: list" to avoid special members of
+     list class.
+
+     Another example; If your class Foo has "__str__" special method
+     and autodoc directive has both "inherited-members" and "special-
+     members", "__str__" will be documented as in the past, but other
+     special method that are not implemented in your class "Foo".
+
+     Note: this will lead to markup errors if the inherited members
+     come from a module whose docstrings are not reST formatted.
+
+     New in version 0.3.
+
+     Changed in version 3.0: It takes an ancestor class name as an
+     argument.
+
+   * It's possible to override the signature for explicitly documented
+     callable objects (functions, methods, classes) with the regular
+     syntax that will override the signature gained from
+     introspection:
+
+        .. autoclass:: Noodle(type)
+
+           .. automethod:: eat(persona)
+
+     This is useful if the signature from the method is hidden by a
+     decorator.
+
+     New in version 0.4.
+
+   * The "automodule", "autoclass" and "autoexception" directives also
+     support a flag option called "show-inheritance".  When given, a
+     list of base classes will be inserted just below the class
+     signature (when used with "automodule", this will be inserted for
+     every class that is documented in the module).
+
+     New in version 0.4.
+
+   * All autodoc directives support the "noindex" flag option that has
+     the same effect as for standard "py:function" etc. directives: no
+     index entries are generated for the documented object (and all
+     autodocumented members).
+
+     New in version 0.4.
+
+   * "automodule" also recognizes the "synopsis", "platform" and
+     "deprecated" options that the standard "py:module" directive
+     supports.
+
+     New in version 0.5.
+
+   * "automodule" and "autoclass" also has an "member-order" option
+     that can be used to override the global value of
+     >>:confval:`autodoc_member_order`<< for one directive.
+
+     New in version 0.6.
+
+   * The directives supporting member documentation also have a
+     "exclude-members" option that can be used to exclude single
+     member names from documentation, if all members are to be
+     documented.
+
+     New in version 0.6.
+
+   * In an "automodule" directive with the "members" option set, only
+     module members whose "__module__" attribute is equal to the
+     module name as given to "automodule" will be documented.  This is
+     to prevent documentation of imported classes or functions.  Set
+     the "imported-members" option if you want to prevent this
+     behavior and document all available members.  Note that
+     attributes from imported modules will not be documented, because
+     attribute documentation is discovered by parsing the source file
+     of the current module.
+
+     New in version 1.2.
+
+   * Add a list of modules in the >>:confval:`autodoc_mock_imports`<<
+     to prevent import errors to halt the building process when some
+     external dependencies are not importable at build time.
+
+     New in version 1.3.
+
+   * As a hint to autodoc extension, you can put a "::" separator in
+     between module name and object name to let autodoc know the
+     correct module name if it is ambiguous.
+
+        .. autoclass:: module.name::Noodle
+
+.. autofunction::
+.. autodecorator::
+.. autodata::
+.. automethod::
+.. autoattribute::
+
+   These work exactly like "autoclass" etc., but do not offer the
+   options used for automatic member documentation.
+
+   "autodata" and "autoattribute" support the "annotation" option.
+   The option controls how the value of variable is shown.  If
+   specified without arguments, only the name of the variable will be
+   printed, and its value is not shown:
+
+      .. autodata:: CD_DRIVE
+         :annotation:
+
+   If the option specified with arguments, it is printed after the
+   name as a value of the variable:
+
+      .. autodata:: CD_DRIVE
+         :annotation: = your CD device name
+
+   By default, without "annotation" option, Sphinx tries to obtain the
+   value of the variable and print it after the name.
+
+   The "no-value" option can be used instead of a blank "annotation"
+   to show the type hint but not the value:
+
+      .. autodata:: CD_DRIVE
+         :no-value:
+
+   If both the "annotation" and "no-value" options are used, "no-
+   value" has no effect.
+
+   For module data members and class attributes, documentation can
+   either be put into a comment with special formatting (using a "#:"
+   to start the comment instead of just "#"), or in a docstring
+   *after* the definition.  Comments need to be either on a line of
+   their own *before* the definition, or immediately after the
+   assignment *on the same line*.  The latter form is restricted to
+   one line only.
+
+   This means that in the following class definition, all attributes
+   can be autodocumented:
+
+      class Foo:
+          """Docstring for class Foo."""
+
+          #: Doc comment for class attribute Foo.bar.
+          #: It can have multiple lines.
+          bar = 1
+
+          flox = 1.5   #: Doc comment for Foo.flox. One line only.
+
+          baz = 2
+          """Docstring for class attribute Foo.baz."""
+
+          def __init__(self):
+              #: Doc comment for instance attribute qux.
+              self.qux = 3
+
+              self.spam = 4
+              """Docstring for instance attribute spam."""
+
+   Changed in version 0.6: "autodata" and "autoattribute" can now
+   extract docstrings.
+
+   Changed in version 1.1: Comment docs are now allowed on the same
+   line after an assignment.
+
+   Changed in version 1.2: "autodata" and "autoattribute" have an
+   "annotation" option.
+
+   Changed in version 2.0: "autodecorator" added.
+
+   Changed in version 3.4: "autodata" and "autoattribute" now have a
+   "no-value" option.
+
+   Note:
+
+     If you document decorated functions or methods, keep in mind that
+     autodoc retrieves its docstrings by importing the module and
+     inspecting the "__doc__" attribute of the given function or
+     method.  That means that if a decorator replaces the decorated
+     function with another, it must copy the original "__doc__" to the
+     new function.
+
+
+Configuration
+=============
+
+There are also config values that you can set:
+
+
+Docstring preprocessing
+=======================
+
+autodoc provides the following additional events:
+
+The "sphinx.ext.autodoc" module provides factory functions for
+commonly needed docstring processing in event >>:event:`autodoc-
+process-docstring`<<:
+
+sphinx.ext.autodoc.cut_lines(pre: int, post: int = 0, what: Optional[str] = None) -> Callable
+
+   Return a listener that removes the first *pre* and last *post*
+   lines of every docstring.  If *what* is a sequence of strings, only
+   docstrings of a type in *what* will be processed.
+
+   Use like this (e.g. in the "setup()" function of "conf.py"):
+
+      from sphinx.ext.autodoc import cut_lines
+      app.connect('autodoc-process-docstring', cut_lines(4, what=['module']))
+
+   This can (and should) be used in place of
+   >>:confval:`automodule_skip_lines`<<.
+
+sphinx.ext.autodoc.between(marker: str, what: Optional[Sequence[str]] = None, keepempty: bool = False, exclude: bool = False) -> Callable
+
+   Return a listener that either keeps, or if *exclude* is True
+   excludes, lines between lines that match the *marker* regular
+   expression.  If no line matches, the resulting docstring would be
+   empty, so no change will be made unless *keepempty* is true.
+
+   If *what* is a sequence of strings, only docstrings of a type in
+   *what* will be processed.
+
+
+Skipping members
+================
+
+autodoc allows the user to define a custom method for determining
+whether a member should be included in the documentation by using the
+following event:
diff --git a/_build/doc/usage/extensions/autosectionlabel.txt b/_build/doc/usage/extensions/autosectionlabel.txt
new file mode 100644
index 000000000..b7ed6b572
--- /dev/null
+++ b/_build/doc/usage/extensions/autosectionlabel.txt
@@ -0,0 +1,26 @@
+"sphinx.ext.autosectionlabel" -- Allow reference sections using its title
+*************************************************************************
+
+New in version 1.4.
+
+This extension allows you to refer sections its title.  This affects
+to the reference role ("ref").
+
+For example:
+
+   A Plain Title
+   -------------
+
+   This is the text of the section.
+
+   It refers to the section title, see :ref:`A Plain Title`.
+
+Internally, this extension generates the labels for each section.  If
+same section names are used in whole of document, any one is used for
+a target by default. The "autosectionlabel_prefix_document"
+configuration variable can be used to make headings which appear
+multiple times but in different documents unique.
+
+
+Configuration
+=============
diff --git a/_build/doc/usage/extensions/autosummary.txt b/_build/doc/usage/extensions/autosummary.txt
new file mode 100644
index 000000000..c69ea21fd
--- /dev/null
+++ b/_build/doc/usage/extensions/autosummary.txt
@@ -0,0 +1,267 @@
+"sphinx.ext.autosummary" -- Generate autodoc summaries
+******************************************************
+
+New in version 0.6.
+
+This extension generates function/method/attribute summary lists,
+similar to those output e.g. by Epydoc and other API doc generation
+tools.  This is especially useful when your docstrings are long and
+detailed, and putting each one of them on a separate page makes them
+easier to read.
+
+The "sphinx.ext.autosummary" extension does this in two parts:
+
+1. There is an "autosummary" directive for generating summary listings
+   that contain links to the documented items, and short summary
+   blurbs extracted from their docstrings.
+
+2. Optionally, the convenience script **sphinx-autogen** or the new
+   >>:confval:`autosummary_generate`<< config value can be used to
+   generate short "stub" files for the entries listed in the
+   "autosummary" directives. These files by default contain only the
+   corresponding "sphinx.ext.autodoc" directive, but can be customized
+   with templates.
+
+.. autosummary::
+
+   Insert a table that contains links to documented items, and a short
+   summary blurb (the first sentence of the docstring) for each of
+   them.
+
+   The "autosummary" directive can also optionally serve as a
+   "toctree" entry for the included items. Optionally, stub ".rst"
+   files for these items can also be automatically generated when
+   >>:confval:`autosummary_generate`<< is *True*.
+
+   For example,
+
+      .. currentmodule:: sphinx
+
+      .. autosummary::
+
+         environment.BuildEnvironment
+         util.relative_uri
+
+   produces a table like this:
+
+   Autosummary preprocesses the docstrings and signatures with the
+   same >>:event:`autodoc-process-docstring`<< and >>:event:`autodoc-
+   process-signature`<< hooks as "autodoc".
+
+   **Options**
+
+   * If you want the "autosummary" table to also serve as a "toctree"
+     entry, use the "toctree" option, for example:
+
+        .. autosummary::
+           :toctree: DIRNAME
+
+           sphinx.environment.BuildEnvironment
+           sphinx.util.relative_uri
+
+     The "toctree" option also signals to the **sphinx-autogen**
+     script that stub pages should be generated for the entries listed
+     in this directive.  The option accepts a directory name as an
+     argument; **sphinx-autogen** will by default place its output in
+     this directory. If no argument is given, output is placed in the
+     same directory as the file that contains the directive.
+
+     You can also use "caption" option to give a caption to the
+     toctree.
+
+     New in version 3.1: caption option added.
+
+   * If you don't want the "autosummary" to show function signatures
+     in the listing, include the "nosignatures" option:
+
+        .. autosummary::
+           :nosignatures:
+
+           sphinx.environment.BuildEnvironment
+           sphinx.util.relative_uri
+
+   * You can specify a custom template with the "template" option. For
+     example,
+
+        .. autosummary::
+           :template: mytemplate.rst
+
+           sphinx.environment.BuildEnvironment
+
+     would use the template "mytemplate.rst" in your
+     >>:confval:`templates_path`<< to generate the pages for all
+     entries listed. See Customizing templates below.
+
+     New in version 1.0.
+
+   * You can specify the "recursive" option to generate documents for
+     modules and sub-packages recursively.  It defaults to disabled.
+     For example,
+
+        .. autosummary::
+           :recursive:
+
+           sphinx.environment.BuildEnvironment
+
+     New in version 3.1.
+
+
+**sphinx-autogen** -- generate autodoc stub pages
+=================================================
+
+The **sphinx-autogen** script can be used to conveniently generate
+stub documentation pages for items included in "autosummary" listings.
+
+For example, the command
+
+   $ sphinx-autogen -o generated *.rst
+
+will read all "autosummary" tables in the "*.rst" files that have the
+":toctree:" option set, and output corresponding stub pages in
+directory "generated" for all documented items.  The generated pages
+by default contain text of the form:
+
+   sphinx.util.relative_uri
+   ========================
+
+   .. autofunction:: sphinx.util.relative_uri
+
+If the "-o" option is not given, the script will place the output
+files in the directories specified in the ":toctree:" options.
+
+For more information, refer to the *sphinx-autogen documentation*
+
+
+Generating stub pages automatically
+===================================
+
+If you do not want to create stub pages with **sphinx-autogen**, you
+can also use these config values:
+
+
+Customizing templates
+=====================
+
+New in version 1.0.
+
+You can customize the stub page templates, in a similar way as the
+HTML Jinja templates, see Templating. ("TemplateBridge" is not
+supported.)
+
+Note:
+
+  If you find yourself spending much time tailoring the stub
+  templates, this may indicate that it's a better idea to write custom
+  narrative documentation instead.
+
+Autosummary uses the following Jinja template files:
+
+* "autosummary/base.rst" -- fallback template
+
+* "autosummary/module.rst" -- template for modules
+
+* "autosummary/class.rst" -- template for classes
+
+* "autosummary/function.rst" -- template for functions
+
+* "autosummary/attribute.rst" -- template for class attributes
+
+* "autosummary/method.rst" -- template for class methods
+
+The following variables available in the templates:
+
+name
+
+   Name of the documented object, excluding the module and class
+   parts.
+
+objname
+
+   Name of the documented object, excluding the module parts.
+
+fullname
+
+   Full name of the documented object, including module and class
+   parts.
+
+module
+
+   Name of the module the documented object belongs to.
+
+class
+
+   Name of the class the documented object belongs to.  Only available
+   for methods and attributes.
+
+underline
+
+   A string containing "len(full_name) * '='". Use the "underline"
+   filter instead.
+
+members
+
+   List containing names of all members of the module or class.  Only
+   available for modules and classes.
+
+inherited_members
+
+   List containing names of all inherited members of class.  Only
+   available for classes.
+
+   New in version 1.8.0.
+
+functions
+
+   List containing names of "public" functions in the module.  Here,
+   "public" here means that the name does not start with an
+   underscore. Only available for modules.
+
+classes
+
+   List containing names of "public" classes in the module.  Only
+   available for modules.
+
+exceptions
+
+   List containing names of "public" exceptions in the module.  Only
+   available for modules.
+
+methods
+
+   List containing names of "public" methods in the class.  Only
+   available for classes.
+
+attributes
+
+   List containing names of "public" attributes in the class/module.
+   Only available for classes and modules.
+
+      Changed in version 3.1: Attributes of modules are supported.
+
+modules
+
+   List containing names of "public" modules in the package.  Only
+   available for modules that are packages.
+
+   New in version 3.1.
+
+Additionally, the following filters are available
+
+escape(s)
+
+   Escape any special characters in the text to be used in formatting
+   RST contexts. For instance, this prevents asterisks making things
+   bold. This replaces the builtin Jinja escape filter that does html-
+   escaping.
+
+underline(s, line='=')
+
+   Add a title underline to a piece of text.
+
+For instance, "{{ fullname | escape | underline }}" should be used to
+produce the title of a page.
+
+Note:
+
+  You can use the "autosummary" directive in the stub pages. Stub
+  pages are generated also based on these directives.
diff --git a/_build/doc/usage/extensions/coverage.txt b/_build/doc/usage/extensions/coverage.txt
new file mode 100644
index 000000000..5758e86e8
--- /dev/null
+++ b/_build/doc/usage/extensions/coverage.txt
@@ -0,0 +1,12 @@
+"sphinx.ext.coverage" -- Collect doc coverage stats
+***************************************************
+
+This extension features one additional builder, the "CoverageBuilder".
+
+class sphinx.ext.coverage.CoverageBuilder
+
+   To use this builder, activate the coverage extension in your
+   configuration file and give "-b coverage" on the command line.
+
+Several configuration values can be used to specify what the builder
+should check:
diff --git a/_build/doc/usage/extensions/doctest.txt b/_build/doc/usage/extensions/doctest.txt
new file mode 100644
index 000000000..8bf5acbae
--- /dev/null
+++ b/_build/doc/usage/extensions/doctest.txt
@@ -0,0 +1,294 @@
+"sphinx.ext.doctest" -- Test snippets in the documentation
+**********************************************************
+
+It is often helpful to include snippets of code in your documentation
+and demonstrate the results of executing them. But it is important to
+ensure that the documentation stays up-to-date with the code.
+
+This extension allows you to test such code snippets in the
+documentation in a natural way.  If you mark the code blocks as shown
+here, the "doctest" builder will collect them and run them as doctest
+tests.
+
+Within each document, you can assign each snippet to a *group*. Each
+group consists of:
+
+* zero or more *setup code* blocks (e.g. importing the module to test)
+
+* one or more *test* blocks
+
+When building the docs with the "doctest" builder, groups are
+collected for each document and run one after the other, first
+executing setup code blocks, then the test blocks in the order they
+appear in the file.
+
+There are two kinds of test blocks:
+
+* *doctest-style* blocks mimic interactive sessions by interleaving
+  Python code (including the interpreter prompt) and output.
+
+* *code-output-style* blocks consist of an ordinary piece of Python
+  code, and optionally, a piece of output for that code.
+
+
+Directives
+==========
+
+The *group* argument below is interpreted as follows: if it is empty,
+the block is assigned to the group named "default".  If it is "*", the
+block is assigned to all groups (including the "default" group).
+Otherwise, it must be a comma-separated list of group names.
+
+.. testsetup:: [group]
+
+   A setup code block.  This code is not shown in the output for other
+   builders, but executed before the doctests of the group(s) it
+   belongs to.
+
+.. testcleanup:: [group]
+
+   A cleanup code block.  This code is not shown in the output for
+   other builders, but executed after the doctests of the group(s) it
+   belongs to.
+
+   New in version 1.1.
+
+.. doctest:: [group]
+
+   A doctest-style code block.  You can use standard "doctest" flags
+   for controlling how actual output is compared with what you give as
+   output.  The default set of flags is specified by the
+   >>:confval:`doctest_default_flags`<< configuration variable.
+
+   This directive supports five options:
+
+   * "hide", a flag option, hides the doctest block in other builders.
+     By default it is shown as a highlighted doctest block.
+
+   * "options", a string option, can be used to give a comma-separated
+     list of doctest flags that apply to each example in the tests.
+     (You still can give explicit flags per example, with doctest
+     comments, but they will show up in other builders too.)
+
+   * "pyversion", a string option, can be used to specify the required
+     Python version for the example to be tested. For instance, in the
+     following case the example will be tested only for Python
+     versions greater than 3.3:
+
+        .. doctest::
+           :pyversion: > 3.3
+
+     The following operands are supported:
+
+     * "~=": Compatible release clause
+
+     * "==": Version matching clause
+
+     * "!=": Version exclusion clause
+
+     * "<=", ">=": Inclusive ordered comparison clause
+
+     * "<", ">": Exclusive ordered comparison clause
+
+     * "===": Arbitrary equality clause.
+
+     "pyversion" option is followed PEP-440: Version Specifiers.
+
+     New in version 1.6.
+
+     Changed in version 1.7: Supported PEP-440 operands and notations
+
+   * "trim-doctest-flags" and "no-trim-doctest-flags", a flag option,
+     doctest flags (comments looking like "# doctest: FLAG, ...") at
+     the ends of lines and "<BLANKLINE>" markers are removed (or not
+     removed) individually.  Default is "trim-doctest-flags".
+
+   Note that like with standard doctests, you have to use
+   "<BLANKLINE>" to signal a blank line in the expected output.  The
+   "<BLANKLINE>" is removed when building presentation output (HTML,
+   LaTeX etc.).
+
+   Also, you can give inline doctest options, like in doctest:
+
+      >>> datetime.date.now()   # doctest: +SKIP
+      datetime.date(2008, 1, 1)
+
+   They will be respected when the test is run, but stripped from
+   presentation output.
+
+.. testcode:: [group]
+
+   A code block for a code-output-style test.
+
+   This directive supports three options:
+
+   * "hide", a flag option, hides the code block in other builders.
+     By default it is shown as a highlighted code block.
+
+   * "trim-doctest-flags" and "no-trim-doctest-flags", a flag option,
+     doctest flags (comments looking like "# doctest: FLAG, ...") at
+     the ends of lines and "<BLANKLINE>" markers are removed (or not
+     removed) individually.  Default is "trim-doctest-flags".
+
+   Note:
+
+     Code in a "testcode" block is always executed all at once, no
+     matter how many statements it contains.  Therefore, output will
+     *not* be generated for bare expressions -- use "print".  Example:
+
+        .. testcode::
+
+           1+1         # this will give no output!
+           print(2+2)  # this will give output
+
+        .. testoutput::
+
+           4
+
+     Also, please be aware that since the doctest module does not
+     support mixing regular output and an exception message in the
+     same snippet, this applies to testcode/testoutput as well.
+
+.. testoutput:: [group]
+
+   The corresponding output, or the exception message, for the last
+   "testcode" block.
+
+   This directive supports four options:
+
+   * "hide", a flag option, hides the output block in other builders.
+     By default it is shown as a literal block without highlighting.
+
+   * "options", a string option, can be used to give doctest flags
+     (comma-separated) just like in normal doctest blocks.
+
+   * "trim-doctest-flags" and "no-trim-doctest-flags", a flag option,
+     doctest flags (comments looking like "# doctest: FLAG, ...") at
+     the ends of lines and "<BLANKLINE>" markers are removed (or not
+     removed) individually.  Default is "trim-doctest-flags".
+
+   Example:
+
+      .. testcode::
+
+         print('Output     text.')
+
+      .. testoutput::
+         :hide:
+         :options: -ELLIPSIS, +NORMALIZE_WHITESPACE
+
+         Output text.
+
+The following is an example for the usage of the directives.  The test
+via "doctest" and the test via "testcode" and "testoutput" are
+equivalent.
+
+   The parrot module
+   =================
+
+   .. testsetup:: *
+
+      import parrot
+
+   The parrot module is a module about parrots.
+
+   Doctest example:
+
+   .. doctest::
+
+      >>> parrot.voom(3000)
+      This parrot wouldn't voom if you put 3000 volts through it!
+
+   Test-Output example:
+
+   .. testcode::
+
+      parrot.voom(3000)
+
+   This would output:
+
+   .. testoutput::
+
+      This parrot wouldn't voom if you put 3000 volts through it!
+
+
+Skipping tests conditionally
+============================
+
+"skipif", a string option, can be used to skip directives
+conditionally. This may be useful e.g. when a different set of tests
+should be run depending on the environment (hardware, network/VPN,
+optional dependencies or different versions of dependencies). The
+"skipif" option is supported by all of the doctest directives. Below
+are typical use cases for "skipif" when used for different directives:
+
+* "testsetup" and "testcleanup"
+
+  * conditionally skip test setup and/or cleanup
+
+  * customize setup/cleanup code per environment
+
+* "doctest"
+
+  * conditionally skip both a test and its output verification
+
+* "testcode"
+
+  * conditionally skip a test
+
+  * customize test code per environment
+
+* "testoutput"
+
+  * conditionally skip output assertion for a skipped test
+
+  * expect different output depending on the environment
+
+The value of the "skipif" option is evaluated as a Python expression.
+If the result is a true value, the directive is omitted from the test
+run just as if it wasn't present in the file at all.
+
+Instead of repeating an expression, the
+>>:confval:`doctest_global_setup`<< configuration option can be used
+to assign it to a variable which can then be used instead.
+
+Here's an example which skips some tests if Pandas is not installed:
+
+conf.py
+
+   extensions = ['sphinx.ext.doctest']
+   doctest_global_setup = '''
+   try:
+       import pandas as pd
+   except ImportError:
+       pd = None
+   '''
+
+contents.rst
+
+   .. testsetup::
+      :skipif: pd is None
+
+      data = pd.Series([42])
+
+   .. doctest::
+      :skipif: pd is None
+
+      >>> data.iloc[0]
+      42
+
+   .. testcode::
+      :skipif: pd is None
+
+      print(data.iloc[-1])
+
+   .. testoutput::
+      :skipif: pd is None
+
+      42
+
+
+Configuration
+=============
+
+The doctest extension uses the following configuration values:
diff --git a/_build/doc/usage/extensions/duration.txt b/_build/doc/usage/extensions/duration.txt
new file mode 100644
index 000000000..d67331ff3
--- /dev/null
+++ b/_build/doc/usage/extensions/duration.txt
@@ -0,0 +1,8 @@
+"sphinx.ext.duration" -- Measure durations of Sphinx processing
+***************************************************************
+
+New in version 2.4.
+
+This extension measures durations of Sphinx processing and show its
+result at end of the build.  It is useful for inspecting what document
+is slowly built.
diff --git a/_build/doc/usage/extensions/example_google.txt b/_build/doc/usage/extensions/example_google.txt
new file mode 100644
index 000000000..ed38f89ae
--- /dev/null
+++ b/_build/doc/usage/extensions/example_google.txt
@@ -0,0 +1,319 @@
+Example Google Style Python Docstrings
+**************************************
+
+See also: Example NumPy Style Python Docstrings
+
+   """Example Google style docstrings.
+
+   This module demonstrates documentation as specified by the `Google Python
+   Style Guide`_. Docstrings may extend over multiple lines. Sections are created
+   with a section header and a colon followed by a block of indented text.
+
+   Example:
+       Examples can be given using either the ``Example`` or ``Examples``
+       sections. Sections support any reStructuredText formatting, including
+       literal blocks::
+
+           $ python example_google.py
+
+   Section breaks are created by resuming unindented text. Section breaks
+   are also implicitly created anytime a new section starts.
+
+   Attributes:
+       module_level_variable1 (int): Module level variables may be documented in
+           either the ``Attributes`` section of the module docstring, or in an
+           inline docstring immediately following the variable.
+
+           Either form is acceptable, but the two should not be mixed. Choose
+           one convention to document module level variables and be consistent
+           with it.
+
+   Todo:
+       * For module TODOs
+       * You have to also use ``sphinx.ext.todo`` extension
+
+   .. _Google Python Style Guide:
+      https://google.github.io/styleguide/pyguide.html
+
+   """
+
+   module_level_variable1 = 12345
+
+   module_level_variable2 = 98765
+   """int: Module level variable documented inline.
+
+   The docstring may span multiple lines. The type may optionally be specified
+   on the first line, separated by a colon.
+   """
+
+
+   def function_with_types_in_docstring(param1, param2):
+       """Example function with types documented in the docstring.
+
+       `PEP 484`_ type annotations are supported. If attribute, parameter, and
+       return types are annotated according to `PEP 484`_, they do not need to be
+       included in the docstring:
+
+       Args:
+           param1 (int): The first parameter.
+           param2 (str): The second parameter.
+
+       Returns:
+           bool: The return value. True for success, False otherwise.
+
+       .. _PEP 484:
+           https://www.python.org/dev/peps/pep-0484/
+
+       """
+
+
+   def function_with_pep484_type_annotations(param1: int, param2: str) -> bool:
+       """Example function with PEP 484 type annotations.
+
+       Args:
+           param1: The first parameter.
+           param2: The second parameter.
+
+       Returns:
+           The return value. True for success, False otherwise.
+
+       """
+
+
+   def module_level_function(param1, param2=None, *args, **kwargs):
+       """This is an example of a module level function.
+
+       Function parameters should be documented in the ``Args`` section. The name
+       of each parameter is required. The type and description of each parameter
+       is optional, but should be included if not obvious.
+
+       If ``*args`` or ``**kwargs`` are accepted,
+       they should be listed as ``*args`` and ``**kwargs``.
+
+       The format for a parameter is::
+
+           name (type): description
+               The description may span multiple lines. Following
+               lines should be indented. The "(type)" is optional.
+
+               Multiple paragraphs are supported in parameter
+               descriptions.
+
+       Args:
+           param1 (int): The first parameter.
+           param2 (:obj:`str`, optional): The second parameter. Defaults to None.
+               Second line of description should be indented.
+           *args: Variable length argument list.
+           **kwargs: Arbitrary keyword arguments.
+
+       Returns:
+           bool: True if successful, False otherwise.
+
+           The return type is optional and may be specified at the beginning of
+           the ``Returns`` section followed by a colon.
+
+           The ``Returns`` section may span multiple lines and paragraphs.
+           Following lines should be indented to match the first line.
+
+           The ``Returns`` section supports any reStructuredText formatting,
+           including literal blocks::
+
+               {
+                   'param1': param1,
+                   'param2': param2
+               }
+
+       Raises:
+           AttributeError: The ``Raises`` section is a list of all exceptions
+               that are relevant to the interface.
+           ValueError: If `param2` is equal to `param1`.
+
+       """
+       if param1 == param2:
+           raise ValueError('param1 may not be equal to param2')
+       return True
+
+
+   def example_generator(n):
+       """Generators have a ``Yields`` section instead of a ``Returns`` section.
+
+       Args:
+           n (int): The upper limit of the range to generate, from 0 to `n` - 1.
+
+       Yields:
+           int: The next number in the range of 0 to `n` - 1.
+
+       Examples:
+           Examples should be written in doctest format, and should illustrate how
+           to use the function.
+
+           >>> print([i for i in example_generator(4)])
+           [0, 1, 2, 3]
+
+       """
+       for i in range(n):
+           yield i
+
+
+   class ExampleError(Exception):
+       """Exceptions are documented in the same way as classes.
+
+       The __init__ method may be documented in either the class level
+       docstring, or as a docstring on the __init__ method itself.
+
+       Either form is acceptable, but the two should not be mixed. Choose one
+       convention to document the __init__ method and be consistent with it.
+
+       Note:
+           Do not include the `self` parameter in the ``Args`` section.
+
+       Args:
+           msg (str): Human readable string describing the exception.
+           code (:obj:`int`, optional): Error code.
+
+       Attributes:
+           msg (str): Human readable string describing the exception.
+           code (int): Exception error code.
+
+       """
+
+       def __init__(self, msg, code):
+           self.msg = msg
+           self.code = code
+
+
+   class ExampleClass:
+       """The summary line for a class docstring should fit on one line.
+
+       If the class has public attributes, they may be documented here
+       in an ``Attributes`` section and follow the same formatting as a
+       function's ``Args`` section. Alternatively, attributes may be documented
+       inline with the attribute's declaration (see __init__ method below).
+
+       Properties created with the ``@property`` decorator should be documented
+       in the property's getter method.
+
+       Attributes:
+           attr1 (str): Description of `attr1`.
+           attr2 (:obj:`int`, optional): Description of `attr2`.
+
+       """
+
+       def __init__(self, param1, param2, param3):
+           """Example of docstring on the __init__ method.
+
+           The __init__ method may be documented in either the class level
+           docstring, or as a docstring on the __init__ method itself.
+
+           Either form is acceptable, but the two should not be mixed. Choose one
+           convention to document the __init__ method and be consistent with it.
+
+           Note:
+               Do not include the `self` parameter in the ``Args`` section.
+
+           Args:
+               param1 (str): Description of `param1`.
+               param2 (:obj:`int`, optional): Description of `param2`. Multiple
+                   lines are supported.
+               param3 (list(str)): Description of `param3`.
+
+           """
+           self.attr1 = param1
+           self.attr2 = param2
+           self.attr3 = param3  #: Doc comment *inline* with attribute
+
+           #: list(str): Doc comment *before* attribute, with type specified
+           self.attr4 = ['attr4']
+
+           self.attr5 = None
+           """str: Docstring *after* attribute, with type specified."""
+
+       @property
+       def readonly_property(self):
+           """str: Properties should be documented in their getter method."""
+           return 'readonly_property'
+
+       @property
+       def readwrite_property(self):
+           """list(str): Properties with both a getter and setter
+           should only be documented in their getter method.
+
+           If the setter method contains notable behavior, it should be
+           mentioned here.
+           """
+           return ['readwrite_property']
+
+       @readwrite_property.setter
+       def readwrite_property(self, value):
+           value
+
+       def example_method(self, param1, param2):
+           """Class methods are similar to regular functions.
+
+           Note:
+               Do not include the `self` parameter in the ``Args`` section.
+
+           Args:
+               param1: The first parameter.
+               param2: The second parameter.
+
+           Returns:
+               True if successful, False otherwise.
+
+           """
+           return True
+
+       def __special__(self):
+           """By default special members with docstrings are not included.
+
+           Special members are any methods or attributes that start with and
+           end with a double underscore. Any special member with a docstring
+           will be included in the output, if
+           ``napoleon_include_special_with_doc`` is set to True.
+
+           This behavior can be enabled by changing the following setting in
+           Sphinx's conf.py::
+
+               napoleon_include_special_with_doc = True
+
+           """
+           pass
+
+       def __special_without_docstring__(self):
+           pass
+
+       def _private(self):
+           """By default private members are not included.
+
+           Private members are any methods or attributes that start with an
+           underscore and are *not* special. By default they are not included
+           in the output.
+
+           This behavior can be changed such that private members *are* included
+           by changing the following setting in Sphinx's conf.py::
+
+               napoleon_include_private_with_doc = True
+
+           """
+           pass
+
+       def _private_without_docstring(self):
+           pass
+
+   class ExamplePEP526Class:
+       """The summary line for a class docstring should fit on one line.
+
+       If the class has public attributes, they may be documented here
+       in an ``Attributes`` section and follow the same formatting as a
+       function's ``Args`` section. If ``napoleon_attr_annotations``
+       is True, types can be specified in the class body using ``PEP 526``
+       annotations.
+
+       Attributes:
+           attr1: Description of `attr1`.
+           attr2: Description of `attr2`.
+
+       """
+
+       attr1: str
+       attr2: int
diff --git a/_build/doc/usage/extensions/example_numpy.txt b/_build/doc/usage/extensions/example_numpy.txt
new file mode 100644
index 000000000..727e75c37
--- /dev/null
+++ b/_build/doc/usage/extensions/example_numpy.txt
@@ -0,0 +1,360 @@
+Example NumPy Style Python Docstrings
+*************************************
+
+See also: Example Google Style Python Docstrings
+
+   """Example NumPy style docstrings.
+
+   This module demonstrates documentation as specified by the `NumPy
+   Documentation HOWTO`_. Docstrings may extend over multiple lines. Sections
+   are created with a section header followed by an underline of equal length.
+
+   Example
+   -------
+   Examples can be given using either the ``Example`` or ``Examples``
+   sections. Sections support any reStructuredText formatting, including
+   literal blocks::
+
+       $ python example_numpy.py
+
+
+   Section breaks are created with two blank lines. Section breaks are also
+   implicitly created anytime a new section starts. Section bodies *may* be
+   indented:
+
+   Notes
+   -----
+       This is an example of an indented section. It's like any other section,
+       but the body is indented to help it stand out from surrounding text.
+
+   If a section is indented, then a section break is created by
+   resuming unindented text.
+
+   Attributes
+   ----------
+   module_level_variable1 : int
+       Module level variables may be documented in either the ``Attributes``
+       section of the module docstring, or in an inline docstring immediately
+       following the variable.
+
+       Either form is acceptable, but the two should not be mixed. Choose
+       one convention to document module level variables and be consistent
+       with it.
+
+
+   .. _NumPy Documentation HOWTO:
+      https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt
+
+   """
+
+   module_level_variable1 = 12345
+
+   module_level_variable2 = 98765
+   """int: Module level variable documented inline.
+
+   The docstring may span multiple lines. The type may optionally be specified
+   on the first line, separated by a colon.
+   """
+
+
+   def function_with_types_in_docstring(param1, param2):
+       """Example function with types documented in the docstring.
+
+       `PEP 484`_ type annotations are supported. If attribute, parameter, and
+       return types are annotated according to `PEP 484`_, they do not need to be
+       included in the docstring:
+
+       Parameters
+       ----------
+       param1 : int
+           The first parameter.
+       param2 : str
+           The second parameter.
+
+       Returns
+       -------
+       bool
+           True if successful, False otherwise.
+
+       .. _PEP 484:
+           https://www.python.org/dev/peps/pep-0484/
+
+       """
+
+
+   def function_with_pep484_type_annotations(param1: int, param2: str) -> bool:
+       """Example function with PEP 484 type annotations.
+
+       The return type must be duplicated in the docstring to comply
+       with the NumPy docstring style.
+
+       Parameters
+       ----------
+       param1
+           The first parameter.
+       param2
+           The second parameter.
+
+       Returns
+       -------
+       bool
+           True if successful, False otherwise.
+
+       """
+
+
+   def module_level_function(param1, param2=None, *args, **kwargs):
+       """This is an example of a module level function.
+
+       Function parameters should be documented in the ``Parameters`` section.
+       The name of each parameter is required. The type and description of each
+       parameter is optional, but should be included if not obvious.
+
+       If ``*args`` or ``**kwargs`` are accepted,
+       they should be listed as ``*args`` and ``**kwargs``.
+
+       The format for a parameter is::
+
+           name : type
+               description
+
+               The description may span multiple lines. Following lines
+               should be indented to match the first line of the description.
+               The ": type" is optional.
+
+               Multiple paragraphs are supported in parameter
+               descriptions.
+
+       Parameters
+       ----------
+       param1 : int
+           The first parameter.
+       param2 : :obj:`str`, optional
+           The second parameter.
+       *args
+           Variable length argument list.
+       **kwargs
+           Arbitrary keyword arguments.
+
+       Returns
+       -------
+       bool
+           True if successful, False otherwise.
+
+           The return type is not optional. The ``Returns`` section may span
+           multiple lines and paragraphs. Following lines should be indented to
+           match the first line of the description.
+
+           The ``Returns`` section supports any reStructuredText formatting,
+           including literal blocks::
+
+               {
+                   'param1': param1,
+                   'param2': param2
+               }
+
+       Raises
+       ------
+       AttributeError
+           The ``Raises`` section is a list of all exceptions
+           that are relevant to the interface.
+       ValueError
+           If `param2` is equal to `param1`.
+
+       """
+       if param1 == param2:
+           raise ValueError('param1 may not be equal to param2')
+       return True
+
+
+   def example_generator(n):
+       """Generators have a ``Yields`` section instead of a ``Returns`` section.
+
+       Parameters
+       ----------
+       n : int
+           The upper limit of the range to generate, from 0 to `n` - 1.
+
+       Yields
+       ------
+       int
+           The next number in the range of 0 to `n` - 1.
+
+       Examples
+       --------
+       Examples should be written in doctest format, and should illustrate how
+       to use the function.
+
+       >>> print([i for i in example_generator(4)])
+       [0, 1, 2, 3]
+
+       """
+       for i in range(n):
+           yield i
+
+
+   class ExampleError(Exception):
+       """Exceptions are documented in the same way as classes.
+
+       The __init__ method may be documented in either the class level
+       docstring, or as a docstring on the __init__ method itself.
+
+       Either form is acceptable, but the two should not be mixed. Choose one
+       convention to document the __init__ method and be consistent with it.
+
+       Note
+       ----
+       Do not include the `self` parameter in the ``Parameters`` section.
+
+       Parameters
+       ----------
+       msg : str
+           Human readable string describing the exception.
+       code : :obj:`int`, optional
+           Numeric error code.
+
+       Attributes
+       ----------
+       msg : str
+           Human readable string describing the exception.
+       code : int
+           Numeric error code.
+
+       """
+
+       def __init__(self, msg, code):
+           self.msg = msg
+           self.code = code
+
+
+   class ExampleClass:
+       """The summary line for a class docstring should fit on one line.
+
+       If the class has public attributes, they may be documented here
+       in an ``Attributes`` section and follow the same formatting as a
+       function's ``Args`` section. Alternatively, attributes may be documented
+       inline with the attribute's declaration (see __init__ method below).
+
+       Properties created with the ``@property`` decorator should be documented
+       in the property's getter method.
+
+       Attributes
+       ----------
+       attr1 : str
+           Description of `attr1`.
+       attr2 : :obj:`int`, optional
+           Description of `attr2`.
+
+       """
+
+       def __init__(self, param1, param2, param3):
+           """Example of docstring on the __init__ method.
+
+           The __init__ method may be documented in either the class level
+           docstring, or as a docstring on the __init__ method itself.
+
+           Either form is acceptable, but the two should not be mixed. Choose one
+           convention to document the __init__ method and be consistent with it.
+
+           Note
+           ----
+           Do not include the `self` parameter in the ``Parameters`` section.
+
+           Parameters
+           ----------
+           param1 : str
+               Description of `param1`.
+           param2 : list(str)
+               Description of `param2`. Multiple
+               lines are supported.
+           param3 : :obj:`int`, optional
+               Description of `param3`.
+
+           """
+           self.attr1 = param1
+           self.attr2 = param2
+           self.attr3 = param3  #: Doc comment *inline* with attribute
+
+           #: list(str): Doc comment *before* attribute, with type specified
+           self.attr4 = ["attr4"]
+
+           self.attr5 = None
+           """str: Docstring *after* attribute, with type specified."""
+
+       @property
+       def readonly_property(self):
+           """str: Properties should be documented in their getter method."""
+           return "readonly_property"
+
+       @property
+       def readwrite_property(self):
+           """list(str): Properties with both a getter and setter
+           should only be documented in their getter method.
+
+           If the setter method contains notable behavior, it should be
+           mentioned here.
+           """
+           return ["readwrite_property"]
+
+       @readwrite_property.setter
+       def readwrite_property(self, value):
+           value
+
+       def example_method(self, param1, param2):
+           """Class methods are similar to regular functions.
+
+           Note
+           ----
+           Do not include the `self` parameter in the ``Parameters`` section.
+
+           Parameters
+           ----------
+           param1
+               The first parameter.
+           param2
+               The second parameter.
+
+           Returns
+           -------
+           bool
+               True if successful, False otherwise.
+
+           """
+           return True
+
+       def __special__(self):
+           """By default special members with docstrings are not included.
+
+           Special members are any methods or attributes that start with and
+           end with a double underscore. Any special member with a docstring
+           will be included in the output, if
+           ``napoleon_include_special_with_doc`` is set to True.
+
+           This behavior can be enabled by changing the following setting in
+           Sphinx's conf.py::
+
+               napoleon_include_special_with_doc = True
+
+           """
+           pass
+
+       def __special_without_docstring__(self):
+           pass
+
+       def _private(self):
+           """By default private members are not included.
+
+           Private members are any methods or attributes that start with an
+           underscore and are *not* special. By default they are not included
+           in the output.
+
+           This behavior can be changed such that private members *are* included
+           by changing the following setting in Sphinx's conf.py::
+
+               napoleon_include_private_with_doc = True
+
+           """
+           pass
+
+       def _private_without_docstring(self):
+           pass
diff --git a/_build/doc/usage/extensions/extlinks.txt b/_build/doc/usage/extensions/extlinks.txt
new file mode 100644
index 000000000..9e830196e
--- /dev/null
+++ b/_build/doc/usage/extensions/extlinks.txt
@@ -0,0 +1,22 @@
+"sphinx.ext.extlinks" -- Markup to shorten external links
+*********************************************************
+
+New in version 1.0.
+
+This extension is meant to help with the common pattern of having many
+external links that point to URLs on one and the same site, e.g. links
+to bug trackers, version control web interfaces, or simply subpages in
+other websites.  It does so by providing aliases to base URLs, so that
+you only need to give the subpage name when creating a link.
+
+Let's assume that you want to include many links to issues at the
+Sphinx tracker, at "https://github.com/sphinx-
+doc/sphinx/issues/*num*".  Typing this URL again and again is tedious,
+so you can use "extlinks" to avoid repeating yourself.
+
+The extension adds a config value:
+
+Note:
+
+  Since links are generated from the role in the reading stage, they
+  appear as ordinary links to e.g. the "linkcheck" builder.
diff --git a/_build/doc/usage/extensions/githubpages.txt b/_build/doc/usage/extensions/githubpages.txt
new file mode 100644
index 000000000..3b4d62d7c
--- /dev/null
+++ b/_build/doc/usage/extensions/githubpages.txt
@@ -0,0 +1,12 @@
+"sphinx.ext.githubpages" -- Publish HTML docs in GitHub Pages
+*************************************************************
+
+New in version 1.4.
+
+Changed in version 2.0: Support "CNAME" file
+
+This extension creates ".nojekyll" file on generated HTML directory to
+publish the document on GitHub Pages.
+
+It also creates a "CNAME" file for custom domains when
+>>:confval:`html_baseurl`<< set.
diff --git a/_build/doc/usage/extensions/graphviz.txt b/_build/doc/usage/extensions/graphviz.txt
new file mode 100644
index 000000000..1021acc9e
--- /dev/null
+++ b/_build/doc/usage/extensions/graphviz.txt
@@ -0,0 +1,174 @@
+"sphinx.ext.graphviz" -- Add Graphviz graphs
+********************************************
+
+New in version 0.6.
+
+This extension allows you to embed Graphviz graphs in your documents.
+
+It adds these directives:
+
+.. graphviz::
+
+   Directive to embed graphviz code.  The input code for "dot" is
+   given as the content.  For example:
+
+      .. graphviz::
+
+         digraph foo {
+            "bar" -> "baz";
+         }
+
+   In HTML output, the code will be rendered to a PNG or SVG image
+   (see >>:confval:`graphviz_output_format`<<).  In LaTeX output, the
+   code will be rendered to an embeddable PDF file.
+
+   You can also embed external dot files, by giving the file name as
+   an argument to "graphviz" and no additional content:
+
+      .. graphviz:: external.dot
+
+   As for all file references in Sphinx, if the filename is absolute,
+   it is taken as relative to the source directory.
+
+   Changed in version 1.1: Added support for external files.
+
+   -[ options ]-
+
+   :alt: alternate text (text)
+
+      The alternate text of the graph.  By default, the graph code is
+      used to the alternate text.
+
+      New in version 1.0.
+
+   :align: alignment of the graph (left, center or right)
+
+      The horizontal alignment of the graph.
+
+      New in version 1.5.
+
+   :caption: caption of the graph (text)
+
+      The caption of the graph.
+
+      New in version 1.1.
+
+   :layout: layout type of the graph (text)
+
+      The layout of the graph (ex. "dot", "neato" and so on).  A path
+      to the graphviz commands are also allowed.  By default,
+      >>:confval:`graphviz_dot`<< is used.
+
+      New in version 1.4.
+
+      Changed in version 2.2: Renamed from "graphviz_dot"
+
+   :name: label (text)
+
+      The label of the graph.
+
+      New in version 1.6.
+
+   :class: class names (a list of class names separeted by spaces)
+
+      The class name of the graph.
+
+      New in version 2.4.
+
+.. graph::
+
+   Directive for embedding a single undirected graph.  The name is
+   given as a directive argument, the contents of the graph are the
+   directive content. This is a convenience directive to generate
+   "graph <name> { <content> }".
+
+   For example:
+
+      .. graph:: foo
+
+         "bar" -- "baz";
+
+   Note:
+
+     The graph name is passed unchanged to Graphviz.  If it contains
+     non-alphanumeric characters (e.g. a dash), you will have to
+     double-quote it.
+
+   -[ options ]-
+
+   Same as "graphviz".
+
+   :alt: alternate text (text)
+
+      New in version 1.0.
+
+   :align: alignment of the graph (left, center or right)
+
+      New in version 1.5.
+
+   :caption: caption of the graph (text)
+
+      New in version 1.1.
+
+   :layout: layout type of the graph (text)
+
+      New in version 1.4.
+
+      Changed in version 2.2: Renamed from "graphviz_dot"
+
+   :name: label (text)
+
+      New in version 1.6.
+
+   :class: class names (a list of class names separeted by spaces)
+
+      The class name of the graph.
+
+      New in version 2.4.
+
+.. digraph::
+
+   Directive for embedding a single directed graph.  The name is given
+   as a directive argument, the contents of the graph are the
+   directive content. This is a convenience directive to generate
+   "digraph <name> { <content> }".
+
+   For example:
+
+      .. digraph:: foo
+
+         "bar" -> "baz" -> "quux";
+
+   -[ options ]-
+
+   Same as "graphviz".
+
+   :alt: alternate text (text)
+
+      New in version 1.0.
+
+   :align: alignment of the graph (left, center or right)
+
+      New in version 1.5.
+
+   :caption: caption of the graph (text)
+
+      New in version 1.1.
+
+   :layout: layout type of the graph (text)
+
+      New in version 1.4.
+
+      Changed in version 2.2: Renamed from "graphviz_dot"
+
+   :name: label (text)
+
+      New in version 1.6.
+
+   :class: class names (a list of class names separeted by spaces)
+
+      The class name of the graph.
+
+      New in version 2.4.
+
+There are also these config values:
diff --git a/_build/doc/usage/extensions/ifconfig.txt b/_build/doc/usage/extensions/ifconfig.txt
new file mode 100644
index 000000000..0fa5dbed9
--- /dev/null
+++ b/_build/doc/usage/extensions/ifconfig.txt
@@ -0,0 +1,32 @@
+"sphinx.ext.ifconfig" -- Include content based on configuration
+***************************************************************
+
+This extension is quite simple, and features only one directive:
+
+Warning:
+
+  This directive is designed to control only content of document.  It
+  could not control sections, labels and so on.
+
+.. ifconfig::
+
+   Include content of the directive only if the Python expression
+   given as an argument is "True", evaluated in the namespace of the
+   project's configuration (that is, all registered variables from
+   "conf.py" are available).
+
+   For example, one could write
+
+      .. ifconfig:: releaselevel in ('alpha', 'beta', 'rc')
+
+         This stuff is only included in the built docs for unstable versions.
+
+   To make a custom config value known to Sphinx, use
+   "add_config_value()" in the setup function in "conf.py", e.g.:
+
+      def setup(app):
+          app.add_config_value('releaselevel', '', 'env')
+
+   The second argument is the default value, the third should always
+   be "'env'" for such values (it selects if Sphinx re-reads the
+   documents if the value changes).
diff --git a/_build/doc/usage/extensions/imgconverter.txt b/_build/doc/usage/extensions/imgconverter.txt
new file mode 100644
index 000000000..e3b16e44b
--- /dev/null
+++ b/_build/doc/usage/extensions/imgconverter.txt
@@ -0,0 +1,22 @@
+"sphinx.ext.imgconverter" -- A reference image converter using Imagemagick
+**************************************************************************
+
+New in version 1.6.
+
+This extension converts images in your document to appropriate format
+for builders.  For example, it allows you to use SVG images with LaTeX
+builder. As a result, you don't mind what image format the builder
+supports.
+
+Internally, this extension uses Imagemagick to convert images.
+
+Note:
+
+  Imagemagick rasterizes a SVG image on conversion.  As a result, the
+  image becomes not scalable.  To avoid that, please use other image
+  converters like sphinxcontrib-svg2pdfconverter (which uses Inkscape
+  or "rsvg-convert").
+
+
+Configuration
+=============
diff --git a/_build/doc/usage/extensions/index.txt b/_build/doc/usage/extensions/index.txt
new file mode 100644
index 000000000..9c627e387
--- /dev/null
+++ b/_build/doc/usage/extensions/index.txt
@@ -0,0 +1,151 @@
+Extensions
+**********
+
+Since many projects will need special features in their documentation,
+Sphinx allows adding "extensions" to the build process, each of which
+can modify almost any aspect of document processing.
+
+This chapter describes the extensions bundled with Sphinx.  For the
+API documentation on writing your own extension, refer to Developing
+extensions for Sphinx.
+
+
+Built-in extensions
+===================
+
+These extensions are built in and can be activated by respective
+entries in the >>:confval:`extensions`<< configuration value:
+
+* "sphinx.ext.autodoc" -- Include documentation from docstrings
+
+  * Directives
+
+  * Configuration
+
+  * Docstring preprocessing
+
+  * Skipping members
+
+* "sphinx.ext.autosectionlabel" -- Allow reference sections using its
+  title
+
+  * Configuration
+
+* "sphinx.ext.autosummary" -- Generate autodoc summaries
+
+  * **sphinx-autogen** -- generate autodoc stub pages
+
+  * Generating stub pages automatically
+
+  * Customizing templates
+
+* "sphinx.ext.coverage" -- Collect doc coverage stats
+
+* "sphinx.ext.doctest" -- Test snippets in the documentation
+
+  * Directives
+
+  * Skipping tests conditionally
+
+  * Configuration
+
+* "sphinx.ext.duration" -- Measure durations of Sphinx processing
+
+* "sphinx.ext.extlinks" -- Markup to shorten external links
+
+* "sphinx.ext.githubpages" -- Publish HTML docs in GitHub Pages
+
+* "sphinx.ext.graphviz" -- Add Graphviz graphs
+
+* "sphinx.ext.ifconfig" -- Include content based on configuration
+
+* "sphinx.ext.imgconverter" -- A reference image converter using
+  Imagemagick
+
+  * Configuration
+
+* "sphinx.ext.inheritance_diagram" -- Include inheritance diagrams
+
+  * Examples
+
+  * Configuration
+
+* "sphinx.ext.intersphinx" -- Link to other projects' documentation
+
+  * Configuration
+
+  * Showing all links of an Intersphinx mapping file
+
+  * Using Intersphinx with inventory file under Basic Authorization
+
+* "sphinx.ext.linkcode" -- Add external links to source code
+
+  * Configuration
+
+* Math support for HTML outputs in Sphinx
+
+  * "sphinx.ext.imgmath" -- Render math as images
+
+  * "sphinx.ext.mathjax" -- Render math via JavaScript
+
+  * "sphinx.ext.jsmath" -- Render math via JavaScript
+
+* "sphinx.ext.napoleon" -- Support for NumPy and Google style
+  docstrings
+
+  * Overview
+
+    * Getting Started
+
+    * Docstrings
+
+    * Docstring Sections
+
+    * Google vs NumPy
+
+    * Type Annotations
+
+  * Configuration
+
+* "sphinx.ext.todo" -- Support for todo items
+
+  * Configuration
+
+* "sphinx.ext.viewcode" -- Add links to highlighted source code
+
+  * Configuration
+
+
+Third-party extensions
+======================
+
+You can find several extensions contributed by users in the Sphinx
+Contrib repository.  It is open for anyone who wants to maintain an
+extension publicly; just send a short message asking for write
+permissions.
+
+There are also several extensions hosted elsewhere.  The Sphinx
+extension survey and awesome-sphinxdoc contains a comprehensive list.
+
+If you write an extension that you think others will find useful or
+you think should be included as a part of Sphinx, please write to the
+project mailing list (join here).
+
+
+Where to put your own extensions?
+---------------------------------
+
+Extensions local to a project should be put within the project's
+directory structure.  Set Python's module search path, "sys.path",
+accordingly so that Sphinx can find them.  For example, if your
+extension "foo.py" lies in the "exts" subdirectory of the project
+root, put into "conf.py":
+
+   import sys, os
+
+   sys.path.append(os.path.abspath('exts'))
+
+   extensions = ['foo']
+
+You can also install extensions anywhere else on "sys.path", e.g. in
+the "site-packages" directory.
diff --git a/_build/doc/usage/extensions/inheritance.txt b/_build/doc/usage/extensions/inheritance.txt
new file mode 100644
index 000000000..7cdb545b7
--- /dev/null
+++ b/_build/doc/usage/extensions/inheritance.txt
@@ -0,0 +1,123 @@
+"sphinx.ext.inheritance_diagram" -- Include inheritance diagrams
+****************************************************************
+
+New in version 0.6.
+
+This extension allows you to include inheritance diagrams, rendered
+via the "Graphviz extension".
+
+It adds this directive:
+
+.. inheritance-diagram::
+
+   This directive has one or more arguments, each giving a module or
+   class name.  Class names can be unqualified; in that case they are
+   taken to exist in the currently described module (see "py:module").
+
+   For each given class, and each class in each given module, the base
+   classes are determined.  Then, from all classes and their base
+   classes, a graph is generated which is then rendered via the
+   graphviz extension to a directed graph.
+
+   This directive supports an option called "parts" that, if given,
+   must be an integer, advising the directive to keep that many dot-
+   separated parts in the displayed names (from right to left). For
+   example, "parts=1" will only display class names, without the names
+   of the modules that contain them.
+
+   Changed in version 2.0: The value of for "parts" can also be
+   negative, indicating how many parts to drop from the left.  For
+   example, if all your class names start with "lib.", you can give
+   ":parts: -1" to remove that prefix from the displayed node names.
+
+   The directive also supports a "private-bases" flag option; if
+   given, private base classes (those whose name starts with "_") will
+   be included.
+
+   You can use "caption" option to give a caption to the diagram.
+
+   Changed in version 1.1: Added "private-bases" option; previously,
+   all bases were always included.
+
+   Changed in version 1.5: Added "caption" option
+
+   It also supports a "top-classes" option which requires one or more
+   class names separated by comma. If specified inheritance traversal
+   will stop at the specified class names. Given the following Python
+   module:
+
+      """
+             A
+            / \
+           B   C
+          / \ / \
+         E   D   F
+      """
+
+      class A:
+          pass
+
+      class B(A):
+          pass
+
+      class C(A):
+          pass
+
+      class D(B, C):
+          pass
+
+      class E(B):
+          pass
+
+      class F(C):
+          pass
+
+   If you have specified a module in the inheritance diagram like
+   this:
+
+      .. inheritance-diagram:: dummy.test
+         :top-classes: dummy.test.B, dummy.test.C
+
+   any base classes which are ancestors to "top-classes" and are also
+   defined in the same module will be rendered as stand alone nodes.
+   In this example class A will be rendered as stand alone node in the
+   graph. This is a known issue due to how this extension works
+   internally.
+
+   If you don't want class A (or any other ancestors) to be visible
+   then specify only the classes you would like to generate the
+   diagram for like this:
+
+      .. inheritance-diagram:: dummy.test.D dummy.test.E dummy.test.F
+         :top-classes: dummy.test.B, dummy.test.C
+
+   Changed in version 1.7: Added "top-classes" option to limit the
+   scope of inheritance graphs.
+
+
+Examples
+========
+
+The following are different inheritance diagrams for the internal
+"InheritanceDiagram" class that implements the directive.
+
+With full names:
+
+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram
+
+Showing class names only:
+
+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram
+      :parts: 1
+
+Stopping the diagram at "sphinx.util.docutils.SphinxDirective" (the
+highest superclass still part of Sphinx), and dropping the common
+left-most part ("sphinx") from all names:
+
+   .. inheritance-diagram:: sphinx.ext.inheritance_diagram.InheritanceDiagram
+      :top-classes: sphinx.util.docutils.SphinxDirective
+      :parts: -1
+
+
+Configuration
+=============
diff --git a/_build/doc/usage/extensions/intersphinx.txt b/_build/doc/usage/extensions/intersphinx.txt
new file mode 100644
index 000000000..0119035b9
--- /dev/null
+++ b/_build/doc/usage/extensions/intersphinx.txt
@@ -0,0 +1,68 @@
+"sphinx.ext.intersphinx" -- Link to other projects' documentation
+*****************************************************************
+
+New in version 0.5.
+
+This extension can generate automatic links to the documentation of
+objects in other projects.
+
+Usage is simple: whenever Sphinx encounters a cross-reference that has
+no matching target in the current documentation set, it looks for
+targets in the documentation sets configured in
+>>:confval:`intersphinx_mapping`<<.  A reference like
+":py:class:`zipfile.ZipFile`" can then link to the Python
+documentation for the ZipFile class, without you having to specify
+where it is located exactly.
+
+When using the "new" format (see below), you can even force lookup in
+a foreign set by prefixing the link target appropriately.  A link like
+":ref:`comparison manual <python:comparisons>`" will then link to the
+label "comparisons" in the doc set "python", if it exists.
+
+Behind the scenes, this works as follows:
+
+* Each Sphinx HTML build creates a file named "objects.inv" that
+  contains a mapping from object names to URIs relative to the HTML
+  set's root.
+
+* Projects using the Intersphinx extension can specify the location of
+  such mapping files in the >>:confval:`intersphinx_mapping`<< config
+  value.  The mapping will then be used to resolve otherwise missing
+  references to objects into links to the other documentation.
+
+* By default, the mapping file is assumed to be at the same location
+  as the rest of the documentation; however, the location of the
+  mapping file can also be specified individually, e.g. if the docs
+  should be buildable without Internet access.
+
+
+Configuration
+=============
+
+To use Intersphinx linking, add "'sphinx.ext.intersphinx'" to your
+>>:confval:`extensions`<< config value, and use these config values to
+activate linking:
+
+
+Showing all links of an Intersphinx mapping file
+================================================
+
+To show all Intersphinx links and their targets of an Intersphinx
+mapping file, run "python -msphinx.ext.intersphinx url-or-path".  This
+is helpful when searching for the root cause of a broken Intersphinx
+link in a documentation project. The following example prints the
+Intersphinx mapping of the Python 3 documentation:
+
+   $ python -msphinx.ext.intersphinx https://docs.python.org/3/objects.inv
+
+
+Using Intersphinx with inventory file under Basic Authorization
+===============================================================
+
+Intersphinx supports Basic Authorization like this:
+
+   intersphinx_mapping = {'python': ('https://user:password@docs.python.org/3',
+                                     None)}
+
+The user and password will be stripped from the URL when generating
+the links.
diff --git a/_build/doc/usage/extensions/linkcode.txt b/_build/doc/usage/extensions/linkcode.txt
new file mode 100644
index 000000000..37dc9fd8f
--- /dev/null
+++ b/_build/doc/usage/extensions/linkcode.txt
@@ -0,0 +1,17 @@
+"sphinx.ext.linkcode" -- Add external links to source code
+**********************************************************
+
+New in version 1.2.
+
+This extension looks at your object descriptions (".. class::", "..
+function::" etc.) and adds external links to code hosted somewhere on
+the web. The intent is similar to the "sphinx.ext.viewcode" extension,
+but assumes the source code can be found somewhere on the Internet.
+
+In your configuration, you need to specify a
+>>:confval:`linkcode_resolve`<< function that returns an URL based on
+the object.
+
+
+Configuration
+=============
diff --git a/_build/doc/usage/extensions/math.txt b/_build/doc/usage/extensions/math.txt
new file mode 100644
index 000000000..88404109d
--- /dev/null
+++ b/_build/doc/usage/extensions/math.txt
@@ -0,0 +1,51 @@
+Math support for HTML outputs in Sphinx
+***************************************
+
+New in version 0.5.
+
+Changed in version 1.8: Math support for non-HTML builders is
+integrated to sphinx-core. So mathbase extension is no longer needed.
+
+Since mathematical notation isn't natively supported by HTML in any
+way, Sphinx gives a math support to HTML document with several
+extensions.  These use the reStructuredText math "directive" and
+"role".
+
+
+"sphinx.ext.imgmath" -- Render math as images
+=============================================
+
+New in version 1.4.
+
+This extension renders math via LaTeX and dvipng or dvisvgm into PNG
+or SVG images. This of course means that the computer where the docs
+are built must have both programs available.
+
+There are various configuration values you can set to influence how
+the images are built:
+
+
+"sphinx.ext.mathjax" -- Render math via JavaScript
+==================================================
+
+New in version 1.1.
+
+This extension puts math as-is into the HTML files.  The JavaScript
+package MathJax is then loaded and transforms the LaTeX markup to
+readable math live in the browser.
+
+Because MathJax (and the necessary fonts) is very large, it is not
+included in Sphinx but is set to automatically include it from a
+third-party site.
+
+Attention:
+
+  You should use the math "directive" and "role", not the native
+  MathJax "$$", "\(", etc.
+
+
+"sphinx.ext.jsmath" -- Render math via JavaScript
+=================================================
+
+This extension works just as the MathJax extension does, but uses the
+older package jsMath.  It provides this config value:
diff --git a/_build/doc/usage/extensions/napoleon.txt b/_build/doc/usage/extensions/napoleon.txt
new file mode 100644
index 000000000..3a9cb4d79
--- /dev/null
+++ b/_build/doc/usage/extensions/napoleon.txt
@@ -0,0 +1,308 @@
+"sphinx.ext.napoleon" -- Support for NumPy and Google style docstrings
+**********************************************************************
+
+New in version 1.3.
+
+
+Overview
+========
+
+Are you tired of writing docstrings that look like this:
+
+   :param path: The path of the file to wrap
+   :type path: str
+   :param field_storage: The :class:`FileStorage` instance to wrap
+   :type field_storage: FileStorage
+   :param temporary: Whether or not to delete the file when the File
+      instance is destructed
+   :type temporary: bool
+   :returns: A buffered writable file descriptor
+   :rtype: BufferedFileStorage
+
+reStructuredText is great, but it creates visually dense, hard to read
+docstrings. Compare the jumble above to the same thing rewritten
+according to the Google Python Style Guide:
+
+   Args:
+       path (str): The path of the file to wrap
+       field_storage (FileStorage): The :class:`FileStorage` instance to wrap
+       temporary (bool): Whether or not to delete the file when the File
+          instance is destructed
+
+   Returns:
+       BufferedFileStorage: A buffered writable file descriptor
+
+Much more legible, no?
+
+Napoleon is a *extension* that enables Sphinx to parse both NumPy and
+Google style docstrings - the style recommended by Khan Academy.
+
+Napoleon is a pre-processor that parses NumPy and Google style
+docstrings and converts them to reStructuredText before Sphinx
+attempts to parse them. This happens in an intermediate step while
+Sphinx is processing the documentation, so it doesn't modify any of
+the docstrings in your actual source code files.
+
+
+Getting Started
+---------------
+
+1. After *setting up Sphinx* to build your docs, enable napoleon in
+   the Sphinx *conf.py* file:
+
+      # conf.py
+
+      # Add napoleon to the extensions list
+      extensions = ['sphinx.ext.napoleon']
+
+2. Use *sphinx-apidoc* to build your API documentation:
+
+      $ sphinx-apidoc -f -o docs/source projectdir
+
+
+Docstrings
+----------
+
+Napoleon interprets every docstring that "autodoc" can find, including
+docstrings on: "modules", "classes", "attributes", "methods",
+"functions", and "variables". Inside each docstring, specially
+formatted Sections are parsed and converted to reStructuredText.
+
+All standard reStructuredText formatting still works as expected.
+
+
+Docstring Sections
+------------------
+
+All of the following section headers are supported:
+
+   * "Args" *(alias of Parameters)*
+
+   * "Arguments" *(alias of Parameters)*
+
+   * "Attention"
+
+   * "Attributes"
+
+   * "Caution"
+
+   * "Danger"
+
+   * "Error"
+
+   * "Example"
+
+   * "Examples"
+
+   * "Hint"
+
+   * "Important"
+
+   * "Keyword Args" *(alias of Keyword Arguments)*
+
+   * "Keyword Arguments"
+
+   * "Methods"
+
+   * "Note"
+
+   * "Notes"
+
+   * "Other Parameters"
+
+   * "Parameters"
+
+   * "Return" *(alias of Returns)*
+
+   * "Returns"
+
+   * "Raise" *(alias of Raises)*
+
+   * "Raises"
+
+   * "References"
+
+   * "See Also"
+
+   * "Tip"
+
+   * "Todo"
+
+   * "Warning"
+
+   * "Warnings" *(alias of Warning)*
+
+   * "Warn" *(alias of Warns)*
+
+   * "Warns"
+
+   * "Yield" *(alias of Yields)*
+
+   * "Yields"
+
+
+Google vs NumPy
+---------------
+
+Napoleon supports two styles of docstrings: Google and NumPy. The main
+difference between the two styles is that Google uses indentation to
+separate sections, whereas NumPy uses underlines.
+
+Google style:
+
+   def func(arg1, arg2):
+       """Summary line.
+
+       Extended description of function.
+
+       Args:
+           arg1 (int): Description of arg1
+           arg2 (str): Description of arg2
+
+       Returns:
+           bool: Description of return value
+
+       """
+       return True
+
+NumPy style:
+
+   def func(arg1, arg2):
+       """Summary line.
+
+       Extended description of function.
+
+       Parameters
+       ----------
+       arg1 : int
+           Description of arg1
+       arg2 : str
+           Description of arg2
+
+       Returns
+       -------
+       bool
+           Description of return value
+
+       """
+       return True
+
+NumPy style tends to require more vertical space, whereas Google style
+tends to use more horizontal space. Google style tends to be easier to
+read for short and simple docstrings, whereas NumPy style tends be
+easier to read for long and in-depth docstrings.
+
+The Khan Academy recommends using Google style.
+
+The choice between styles is largely aesthetic, but the two styles
+should not be mixed. Choose one style for your project and be
+consistent with it.
+
+See also:
+
+  For complete examples:
+
+  * Example Google Style Python Docstrings
+
+  * Example NumPy Style Python Docstrings
+
+
+Type Annotations
+----------------
+
+PEP 484 introduced a standard way to express types in Python code.
+This is an alternative to expressing types directly in docstrings. One
+benefit of expressing types according to PEP 484 is that type checkers
+and IDEs can take advantage of them for static code analysis. PEP 484
+was then extended by PEP 526 which introduced a similar way to
+annotate variables (and attributes).
+
+Google style with Python 3 type annotations:
+
+   def func(arg1: int, arg2: str) -> bool:
+       """Summary line.
+
+       Extended description of function.
+
+       Args:
+           arg1: Description of arg1
+           arg2: Description of arg2
+
+       Returns:
+           Description of return value
+
+       """
+       return True
+
+   class Class:
+       """Summary line.
+
+       Extended description of class
+
+       Attributes:
+           attr1: Description of attr1
+           attr2: Description of attr2
+       """
+
+       attr1: int
+       attr2: str
+
+Google style with types in docstrings:
+
+   def func(arg1, arg2):
+       """Summary line.
+
+       Extended description of function.
+
+       Args:
+           arg1 (int): Description of arg1
+           arg2 (str): Description of arg2
+
+       Returns:
+           bool: Description of return value
+
+       """
+       return True
+
+   class Class:
+       """Summary line.
+
+       Extended description of class
+
+       Attributes:
+           attr1 (int): Description of attr1
+           attr2 (str): Description of attr2
+       """
+
+Note:
+
+  Python 2/3 compatible annotations aren't currently supported by
+  Sphinx and won't show up in the docs.
+
+
+Configuration
+=============
+
+Listed below are all the settings used by napoleon and their default
+values. These settings can be changed in the Sphinx *conf.py* file.
+Make sure that "sphinx.ext.napoleon" is enabled in *conf.py*:
+
+   # conf.py
+
+   # Add any Sphinx extension module names here, as strings
+   extensions = ['sphinx.ext.napoleon']
+
+   # Napoleon settings
+   napoleon_google_docstring = True
+   napoleon_numpy_docstring = True
+   napoleon_include_init_with_doc = False
+   napoleon_include_private_with_doc = False
+   napoleon_include_special_with_doc = True
+   napoleon_use_admonition_for_examples = False
+   napoleon_use_admonition_for_notes = False
+   napoleon_use_admonition_for_references = False
+   napoleon_use_ivar = False
+   napoleon_use_param = True
+   napoleon_use_rtype = True
+   napoleon_type_aliases = None
+   napoleon_attr_annotations = True
diff --git a/_build/doc/usage/extensions/todo.txt b/_build/doc/usage/extensions/todo.txt
new file mode 100644
index 000000000..d9ff0082d
--- /dev/null
+++ b/_build/doc/usage/extensions/todo.txt
@@ -0,0 +1,31 @@
+"sphinx.ext.todo" -- Support for todo items
+*******************************************
+
+New in version 0.5.
+
+There are two additional directives when using this extension:
+
+.. todo::
+
+   Use this directive like, for example, "note".
+
+   It will only show up in the output if
+   >>:confval:`todo_include_todos`<< is "True".
+
+   New in version 1.3.2: This directive supports an "class" option
+   that determines the class attribute for HTML output.  If not given,
+   the class defaults to "admonition-todo".
+
+.. todolist::
+
+   This directive is replaced by a list of all todo directives in the
+   whole documentation, if >>:confval:`todo_include_todos`<< is
+   "True".
+
+These can be configured as seen below.
+
+
+Configuration
+=============
+
+autodoc provides the following an additional event:
diff --git a/_build/doc/usage/extensions/viewcode.txt b/_build/doc/usage/extensions/viewcode.txt
new file mode 100644
index 000000000..a4a7f2d24
--- /dev/null
+++ b/_build/doc/usage/extensions/viewcode.txt
@@ -0,0 +1,35 @@
+"sphinx.ext.viewcode" -- Add links to highlighted source code
+*************************************************************
+
+New in version 1.0.
+
+This extension looks at your Python object descriptions (".. class::",
+".. function::" etc.) and tries to find the source files where the
+objects are contained.  When found, a separate HTML page will be
+output for each module with a highlighted version of the source code,
+and a link will be added to all object descriptions that leads to the
+source code of the described object.  A link back from the source to
+the description will also be inserted.
+
+Warning:
+
+  Basically, "viewcode" extension will import the modules being linked
+  to. If any modules have side effects on import, these will be
+  executed when "sphinx-build" is run.If you document scripts (as
+  opposed to library modules), make sure their main routine is
+  protected by a "if __name__ == '__main__'" condition.In addition, if
+  you don't want to import the modules by "viewcode", you can tell the
+  location of the location of source code to "viewcode" using the
+  >>:event:`viewcode-find-source`<< event.If
+  >>:confval:`viewcode_follow_imported_members`<< is enabled, you will
+  also need to resolve imported attributes using the >>:event
+  :`viewcode-follow-imported`<< event.
+
+This extension works only on HTML related builders like "html",
+"applehelp", "devhelp", "htmlhelp", "qthelp" and so on except
+"singlehtml". By default "epub" builder doesn't support this extension
+(see >>:confval:`viewcode_enable_epub`<<).
+
+
+Configuration
+=============
diff --git a/_build/doc/usage/index.txt b/_build/doc/usage/index.txt
new file mode 100644
index 000000000..063edb552
--- /dev/null
+++ b/_build/doc/usage/index.txt
@@ -0,0 +1,140 @@
+Using Sphinx
+************
+
+This guide serves to demonstrate how one can get started with Sphinx
+and covers everything from installing Sphinx and configuring your
+first Sphinx project to using some of the advanced features Sphinx
+provides out-of-the-box. If you are looking for guidance on extending
+Sphinx, refer to */development/index*.
+
+* Getting Started
+
+  * Setting up the documentation sources
+
+  * Defining document structure
+
+  * Adding content
+
+  * Running the build
+
+  * Documenting objects
+
+  * Basic configuration
+
+  * Autodoc
+
+  * Intersphinx
+
+  * More topics to be covered
+
+* Installing Sphinx
+
+  * Overview
+
+  * Linux
+
+  * macOS
+
+  * Windows
+
+  * Installation from PyPI
+
+  * Docker
+
+  * Installation from source
+
+* reStructuredText
+
+  * reStructuredText Primer
+
+  * Roles
+
+  * Directives
+
+  * Field Lists
+
+  * Domains
+
+* Markdown
+
+  * Configuration
+
+* Configuration
+
+  * Project information
+
+  * General configuration
+
+  * Options for internationalization
+
+  * Options for Math
+
+  * Options for HTML output
+
+  * Options for Single HTML output
+
+  * Options for HTML help output
+
+  * Options for Apple Help output
+
+  * Options for epub output
+
+  * Options for LaTeX output
+
+  * Options for text output
+
+  * Options for manual page output
+
+  * Options for Texinfo output
+
+  * Options for QtHelp output
+
+  * Options for the linkcheck builder
+
+  * Options for the XML builder
+
+  * Options for the C domain
+
+  * Options for the C++ domain
+
+* Builders
+
+  * Serialization builder details
+
+* Extensions
+
+  * Built-in extensions
+
+  * Third-party extensions
+
+* HTML Theming
+
+  * Builders
+
+  * Themes
+
+* Internationalization
+
+  * Sphinx internationalization details
+
+  * Translating with sphinx-intl
+
+  * Using Transifex service for team translation
+
+  * Contributing to Sphinx reference translation
+
+* Setuptools integration
+
+  * Using setuptools integration
+
+  * Options for setuptools integration
+
+* Sphinx Web Support
+
+  * Web Support Quick Start
+
+  * The WebSupport Class
+
+  * Search Adapters
+
+  * Storage Backends
diff --git a/_build/doc/usage/installation.txt b/_build/doc/usage/installation.txt
new file mode 100644
index 000000000..584f88849
--- /dev/null
+++ b/_build/doc/usage/installation.txt
@@ -0,0 +1,191 @@
+Installing Sphinx
+*****************
+
+* Overview
+
+* Linux
+
+* macOS
+
+* Windows
+
+* Installation from PyPI
+
+* Docker
+
+* Installation from source
+
+
+Overview
+========
+
+Sphinx is written in Python and supports Python 3.5+. It builds upon
+the shoulders of many third-party libraries such as Docutils and
+Jinja, which are installed when Sphinx is installed.
+
+
+Linux
+=====
+
+
+Debian/Ubuntu
+-------------
+
+Install either "python3-sphinx" using **apt-get**:
+
+   $ apt-get install python3-sphinx
+
+If it not already present, this will install Python for you.
+
+
+RHEL, CentOS
+------------
+
+Install "python-sphinx" using **yum**:
+
+   $ yum install python-sphinx
+
+If it not already present, this will install Python for you.
+
+
+Other distributions
+-------------------
+
+Most Linux distributions have Sphinx in their package repositories.
+Usually the package is called "python3-sphinx", "python-sphinx" or
+"sphinx".  Be aware that there are at least two other packages with
+"sphinx" in their name: a speech recognition toolkit (*CMU Sphinx*)
+and a full-text search database (*Sphinx search*).
+
+
+macOS
+=====
+
+Sphinx can be installed using Homebrew, MacPorts, or as part of a
+Python distribution such as Anaconda.
+
+
+Homebrew
+--------
+
+   $ brew install sphinx-doc
+
+For more information, refer to the package overview.
+
+
+MacPorts
+--------
+
+Install either "python3x-sphinx" using **port**:
+
+   $ sudo port install py38-sphinx
+
+To set up the executable paths, use the "port select" command:
+
+   $ sudo port select --set python python38
+   $ sudo port select --set sphinx py38-sphinx
+
+For more information, refer to the package overview.
+
+
+Anaconda
+--------
+
+   $ conda install sphinx
+
+
+Windows
+=======
+
+Most Windows users do not have Python installed by default, so we
+begin with the installation of Python itself.  To check if you already
+have Python installed, open the *Command Prompt* ("⊞Win-r" and type
+**cmd**). Once the command prompt is open, type **python --version**
+and press Enter.  If Python is installed, you will see the version of
+Python printed to the screen.  If you do not have Python installed,
+refer to the Hitchhikers Guide to Python's Python on Windows
+installation guides. You must install Python 3.
+
+Once Python is installed, you can install Sphinx using **pip**.  Refer
+to the pip installation instructions below for more information.
+
+
+Installation from PyPI
+======================
+
+Sphinx packages are published on the Python Package Index.  The
+preferred tool for installing packages from *PyPI* is **pip**.  This
+tool is provided with all modern versions of Python.
+
+On Linux or MacOS, you should open your terminal and run the following
+command.
+
+   $ pip install -U sphinx
+
+On Windows, you should open *Command Prompt* ("⊞Win-r" and type
+**cmd**) and run the same command.
+
+   C:\> pip install -U sphinx
+
+After installation, type **sphinx-build --version** on the command
+prompt.  If everything worked fine, you will see the version number
+for the Sphinx package you just installed.
+
+Installation from *PyPI* also allows you to install the latest
+development release.  You will not generally need (or want) to do
+this, but it can be useful if you see a possible bug in the latest
+stable release.  To do this, use the "--pre" flag.
+
+   $ pip install -U --pre sphinx
+
+
+Docker
+======
+
+Docker images for Sphinx are published on the Docker Hub. There are
+two kind of images:
+
+* sphinxdoc/sphinx
+
+* sphinxdoc/sphinx-latexpdf
+
+Former one is used for standard usage of Sphinx, and latter one is
+mainly used for PDF builds using LaTeX. Please choose one for your
+purpose.
+
+Note:
+
+  sphinxdoc/sphinx-latexpdf contains TeXLive packages. So the image is
+  very large (over 2GB!).
+
+Hint:
+
+  When using docker images, please use "docker run" command to invoke
+  sphinx commands.  For example, you can use following command to
+  create a Sphinx project:
+
+     $ docker run --rm -v /path/to/document:/docs sphinxdoc/sphinx sphinx-quickstart
+
+  And you can following command this to build HTML document:
+
+     $ docker run --rm -v /path/to/document:/docs sphinxdoc/sphinx make html
+
+For more details, please read README file of docker images.
+
+
+Installation from source
+========================
+
+You can install Sphinx directly from a clone of the Git repository.
+This can be done either by cloning the repo and installing from the
+local clone, on simply installing directly via **git**.
+
+   $ git clone https://github.com/sphinx-doc/sphinx
+   $ cd sphinx
+   $ pip install .
+
+   $ pip install git+https://github.com/sphinx-doc/sphinx
+
+You can also download a snapshot of the Git repo in either tar.gz or
+zip format.  Once downloaded and extracted, these can be installed
+with **pip** as above.
diff --git a/_build/doc/usage/markdown.txt b/_build/doc/usage/markdown.txt
new file mode 100644
index 000000000..51b353473
--- /dev/null
+++ b/_build/doc/usage/markdown.txt
@@ -0,0 +1,48 @@
+Markdown
+********
+
+Markdown is a lightweight markup language with a simplistic plain text
+formatting syntax.  It exists in many syntactically different
+*flavors*.  To support Markdown-based documentation, Sphinx can use
+recommonmark. recommonmark is a Docutils bridge to CommonMark-py, a
+Python package for parsing the CommonMark Markdown flavor.
+
+
+Configuration
+=============
+
+To configure your Sphinx project for Markdown support, proceed as
+follows:
+
+1. Install the Markdown parser *recommonmark*:
+
+      pip install --upgrade recommonmark
+
+   Note:
+
+     The configuration as explained here requires recommonmark version
+     0.5.0 or later.
+
+2. Add *recommonmark* to the >>:confval:`list of configured extensions
+   <extensions>`<<:
+
+      extensions = ['recommonmark']
+
+   Changed in version 1.8: Version 1.8 deprecates and version 3.0
+   removes the "source_parsers" configuration variable that was used
+   by older *recommonmark* versions.
+
+3. If you want to use Markdown files with extensions other than ".md",
+   adjust the >>:confval:`source_suffix`<< variable.  The following
+   example configures Sphinx to parse all files with the extensions
+   ".md" and ".txt" as Markdown:
+
+      source_suffix = {
+          '.rst': 'restructuredtext',
+          '.txt': 'markdown',
+          '.md': 'markdown',
+      }
+
+4. You can further configure *recommonmark* to allow custom syntax
+   that standard *CommonMark* doesn't support.  Read more in the
+   recommonmark documentation.
diff --git a/_build/doc/usage/quickstart.txt b/_build/doc/usage/quickstart.txt
new file mode 100644
index 000000000..648088956
--- /dev/null
+++ b/_build/doc/usage/quickstart.txt
@@ -0,0 +1,326 @@
+Getting Started
+***************
+
+Sphinx is a *documentation generator* or a tool that translates a set
+of plain text source files into various output formats, automatically
+producing cross-references, indices, etc.  That is, if you have a
+directory containing a bunch of */usage/restructuredtext/index* or
+*/usage/markdown* documents, Sphinx can generate a series of HTML
+files, a PDF file (via LaTeX), man pages and much more.
+
+Sphinx focuses on documentation, in particular handwritten
+documentation, however, Sphinx can also be used to generate blogs,
+homepages and even books. Much of Sphinx's power comes from the
+richness of its default plain-text markup format, *reStructuredText*,
+along with it's *significant extensibility capabilities*.
+
+The goal of this document is to give you a quick taste of what Sphinx
+is and how you might use it. When you're done here, you can check out
+the *installation guide* followed by the intro to the default markup
+format used by Sphinx, *reStucturedText*.
+
+For a great "introduction" to writing docs in general -- the whys and
+hows, see also Write the docs, written by Eric Holscher.
+
+
+Setting up the documentation sources
+====================================
+
+The root directory of a Sphinx collection of plain-text document
+sources is called the *source directory*.  This directory also
+contains the Sphinx configuration file "conf.py", where you can
+configure all aspects of how Sphinx reads your sources and builds your
+documentation.  [1]
+
+Sphinx comes with a script called **sphinx-quickstart** that sets up a
+source directory and creates a default "conf.py" with the most useful
+configuration values from a few questions it asks you. To use this,
+run:
+
+   $ sphinx-quickstart
+
+
+Defining document structure
+===========================
+
+Let's assume you've run **sphinx-quickstart**.  It created a source
+directory with "conf.py" and a master document, "index.rst".  The main
+function of the *master document* is to serve as a welcome page, and
+to contain the root of the "table of contents tree" (or *toctree*).
+This is one of the main things that Sphinx adds to reStructuredText, a
+way to connect multiple files to a single hierarchy of documents.
+
+
+reStructuredText directives
+^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+"toctree" is a reStructuredText *directive*, a very versatile piece of
+markup.  Directives can have arguments, options and content.
+
+*Arguments* are given directly after the double colon following the
+directive's name.  Each directive decides whether it can have
+arguments, and how many.
+
+*Options* are given after the arguments, in form of a "field list".
+The "maxdepth" is such an option for the "toctree" directive.
+
+*Content* follows the options or arguments after a blank line.  Each
+directive decides whether to allow content, and what to do with it.
+
+A common gotcha with directives is that **the first line of the
+content must be indented to the same level as the options are**.
+
+The "toctree" directive initially is empty, and looks like so:
+
+   .. toctree::
+      :maxdepth: 2
+
+You add documents listing them in the *content* of the directive:
+
+   .. toctree::
+      :maxdepth: 2
+
+      usage/installation
+      usage/quickstart
+      ...
+
+This is exactly how the "toctree" for this documentation looks.  The
+documents to include are given as *document name*s, which in short
+means that you leave off the file name extension and use forward
+slashes ("/") as directory separators.
+
+[image: more info][image] Read more about the toctree directive.
+
+You can now create the files you listed in the "toctree" and add
+content, and their section titles will be inserted (up to the
+"maxdepth" level) at the place where the "toctree" directive is
+placed.  Also, Sphinx now knows about the order and hierarchy of your
+documents.  (They may contain "toctree" directives themselves, which
+means you can create deeply nested hierarchies if necessary.)
+
+
+Adding content
+==============
+
+In Sphinx source files, you can use most features of standard
+*reStructuredText*.  There are also several features added by Sphinx.
+For example, you can add cross-file references in a portable way
+(which works for all output types) using the "ref" role.
+
+For an example, if you are viewing the HTML version, you can look at
+the source for this document -- use the "Show Source" link in the
+sidebar.
+
+[image: more info][image] See */usage/restructuredtext/index* for a
+more in-depth introduction to reStructuredText, including markup added
+by Sphinx.
+
+
+Running the build
+=================
+
+Now that you have added some files and content, let's make a first
+build of the docs.  A build is started with the **sphinx-build**
+program:
+
+   $ sphinx-build -b html sourcedir builddir
+
+where *sourcedir* is the *source directory*, and *builddir* is the
+directory in which you want to place the built documentation. The "-b"
+option selects a builder; in this example Sphinx will build HTML
+files.
+
+[image: more info][image] Refer to the *sphinx-build man page* for all
+options that **sphinx-build** supports.
+
+However, **sphinx-quickstart** script creates a "Makefile" and a
+"make.bat" which make life even easier for you. These can be executed
+by running **make** with the name of the builder. For example.
+
+   $ make html
+
+This will build HTML docs in the build directory you chose. Execute
+**make** without an argument to see which targets are available.
+
+How do I generate PDF documents?: "make latexpdf" runs the "LaTeX
+builder" and readily invokes the pdfTeX toolchain for you.
+
+
+Documenting objects
+===================
+
+One of Sphinx's main objectives is easy documentation of *objects* (in
+a very general sense) in any *domain*.  A domain is a collection of
+object types that belong together, complete with markup to create and
+reference descriptions of these objects.
+
+The most prominent domain is the Python domain. For example, to
+document Python's built-in function "enumerate()", you would add this
+to one of your source files.
+
+   .. py:function:: enumerate(sequence[, start=0])
+
+      Return an iterator that yields tuples of an index and an item of the
+      *sequence*. (And so on.)
+
+This is rendered like this:
+
+enumerate(sequence[, start=0])
+
+   Return an iterator that yields tuples of an index and an item of
+   the *sequence*. (And so on.)
+
+The argument of the directive is the *signature* of the object you
+describe, the content is the documentation for it.  Multiple
+signatures can be given, each in its own line.
+
+The Python domain also happens to be the default domain, so you don't
+need to prefix the markup with the domain name.
+
+   .. function:: enumerate(sequence[, start=0])
+
+      ...
+
+does the same job if you keep the default setting for the default
+domain.
+
+There are several more directives for documenting other types of
+Python objects, for example "py:class" or "py:method".  There is also
+a cross-referencing *role* for each of these object types.  This
+markup will create a link to the documentation of "enumerate()".
+
+   The :py:func:`enumerate` function can be used for ...
+
+And here is the proof: A link to "enumerate()".
+
+Again, the "py:" can be left out if the Python domain is the default
+one.  It doesn't matter which file contains the actual documentation
+for "enumerate()"; Sphinx will find it and create a link to it.
+
+Each domain will have special rules for how the signatures can look
+like, and make the formatted output look pretty, or add specific
+features like links to parameter types, e.g. in the C/C++ domains.
+
+[image: more info][image] See */usage/restructuredtext/domains* for
+all the available domains and their directives/roles.
+
+
+Basic configuration
+===================
+
+Earlier we mentioned that the "conf.py" file controls how Sphinx
+processes your documents.  In that file, which is executed as a Python
+source file, you assign configuration values.  For advanced users:
+since it is executed by Sphinx, you can do non-trivial tasks in it,
+like extending "sys.path" or importing a module to find out the
+version you are documenting.
+
+The config values that you probably want to change are already put
+into the "conf.py" by **sphinx-quickstart** and initially commented
+out (with standard Python syntax: a "#" comments the rest of the
+line).  To change the default value, remove the hash sign and modify
+the value.  To customize a config value that is not automatically
+added by **sphinx-quickstart**, just add an additional assignment.
+
+Keep in mind that the file uses Python syntax for strings, numbers,
+lists and so on.  The file is saved in UTF-8 by default, as indicated
+by the encoding declaration in the first line.
+
+[image: more info][image] See */usage/configuration* for documentation
+of all available config values.
+
+
+Autodoc
+=======
+
+When documenting Python code, it is common to put a lot of
+documentation in the source files, in documentation strings.  Sphinx
+supports the inclusion of docstrings from your modules with an
+*extension* (an extension is a Python module that provides additional
+features for Sphinx projects) called *autodoc*.
+
+In order to use *autodoc*, you need to activate it in "conf.py" by
+putting the string "'sphinx.ext.autodoc'" into the list assigned to
+the >>:confval:`extensions`<< config value:
+
+   extensions = ['sphinx.ext.autodoc']
+
+Then, you have a few additional directives at your disposal.  For
+example, to document the function "io.open()", reading its signature
+and docstring from the source file, you'd write this:
+
+   .. autofunction:: io.open
+
+You can also document whole classes or even modules automatically,
+using member options for the auto directives, like
+
+   .. automodule:: io
+      :members:
+
+*autodoc* needs to import your modules in order to extract the
+docstrings. Therefore, you must add the appropriate path to "sys.path"
+in your "conf.py".
+
+Warning:
+
+  "autodoc" **imports** the modules to be documented.  If any modules
+  have side effects on import, these will be executed by "autodoc"
+  when "sphinx-build" is run.If you document scripts (as opposed to
+  library modules), make sure their main routine is protected by a "if
+  __name__ == '__main__'" condition.
+
+[image: more info][image] See "sphinx.ext.autodoc" for the complete
+description of the features of autodoc.
+
+
+Intersphinx
+===========
+
+Many Sphinx documents including the Python documentation are published
+on the Internet.  When you want to make links to such documents from
+your documentation, you can do it with "sphinx.ext.intersphinx".
+
+In order to use intersphinx, you need to activate it in "conf.py" by
+putting the string "'sphinx.ext.intersphinx'" into the
+>>:confval:`extensions`<< list and set up the
+>>:confval:`intersphinx_mapping`<< config value.
+
+For example, to link to "io.open()" in the Python library manual, you
+need to setup your >>:confval:`intersphinx_mapping`<< like:
+
+   intersphinx_mapping = {'python': ('https://docs.python.org/3', None)}
+
+And now, you can write a cross-reference like ":py:func:`io.open`".
+Any cross-reference that has no matching target in the current
+documentation set, will be looked up in the documentation sets
+configured in >>:confval:`intersphinx_mapping`<< (this needs access to
+the URL in order to download the list of valid targets).  Intersphinx
+also works for some other *domain*'s roles including ":ref:", however
+it doesn't work for ":doc:" as that is non-domain role.
+
+[image: more info][image] See "sphinx.ext.intersphinx" for the
+complete description of the features of intersphinx.
+
+
+More topics to be covered
+=========================
+
+* *Other extensions*:
+
+* Static files
+
+* *Selecting a theme*
+
+* */usage/advanced/setuptools*
+
+* Templating
+
+* Using extensions
+
+* Writing extensions
+
+-[ Footnotes ]-
+
+[1] This is the usual layout.  However, "conf.py" can also live in
+    another directory, the *configuration directory*.  Refer to the
+    *sphinx-build man page* for more information.
diff --git a/_build/doc/usage/restructuredtext/basics.txt b/_build/doc/usage/restructuredtext/basics.txt
new file mode 100644
index 000000000..59829bced
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/basics.txt
@@ -0,0 +1,642 @@
+reStructuredText Primer
+***********************
+
+reStructuredText is the default plaintext markup language used by
+Sphinx.  This section is a brief introduction to reStructuredText
+(reST) concepts and syntax, intended to provide authors with enough
+information to author documents productively.  Since reST was designed
+to be a simple, unobtrusive markup language, this will not take too
+long.
+
+See also:
+
+  The authoritative reStructuredText User Documentation.  The "ref"
+  links in this document link to the description of the individual
+  constructs in the reST reference.
+
+
+Paragraphs
+==========
+
+The paragraph (>>:duref:`ref <paragraphs>`<<) is the most basic block
+in a reST document.  Paragraphs are simply chunks of text separated by
+one or more blank lines.  As in Python, indentation is significant in
+reST, so all lines of the same paragraph must be left-aligned to the
+same level of indentation.
+
+
+Inline markup
+=============
+
+The standard reST inline markup is quite simple: use
+
+* one asterisk: "*text*" for emphasis (italics),
+
+* two asterisks: "**text**" for strong emphasis (boldface), and
+
+* backquotes: "``text``" for code samples.
+
+If asterisks or backquotes appear in running text and could be
+confused with inline markup delimiters, they have to be escaped with a
+backslash.
+
+Be aware of some restrictions of this markup:
+
+* it may not be nested,
+
+* content may not start or end with whitespace: "* text*" is wrong,
+
+* it must be separated from surrounding text by non-word characters.
+  Use a backslash escaped space to work around that: "thisis\ *one*\
+  word".
+
+These restrictions may be lifted in future versions of the docutils.
+
+It is also possible to replace or expand upon some of this inline
+markup with roles. Refer to Roles for more information.
+
+
+Lists and Quote-like blocks
+===========================
+
+List markup (>>:duref:`ref <bullet-lists>`<<) is natural: just place
+an asterisk at the start of a paragraph and indent properly.  The same
+goes for numbered lists; they can also be autonumbered using a "#"
+sign:
+
+   * This is a bulleted list.
+   * It has two items, the second
+     item uses two lines.
+
+   1. This is a numbered list.
+   2. It has two items too.
+
+   #. This is a numbered list.
+   #. It has two items too.
+
+Nested lists are possible, but be aware that they must be separated
+from the parent list items by blank lines:
+
+   * this is
+   * a list
+
+     * with a nested list
+     * and some subitems
+
+   * and here the parent list continues
+
+Definition lists (>>:duref:`ref <definition-lists>`<<) are created as
+follows:
+
+   term (up to a line of text)
+      Definition of the term, which must be indented
+
+      and can even consist of multiple paragraphs
+
+   next term
+      Description.
+
+Note that the term cannot have more than one line of text.
+
+Quoted paragraphs (>>:duref:`ref <block-quotes>`<<) are created by
+just indenting them more than the surrounding paragraphs.
+
+Line blocks (>>:duref:`ref <line-blocks>`<<) are a way of preserving
+line breaks:
+
+   | These lines are
+   | broken exactly like in
+   | the source file.
+
+There are also several more special blocks available:
+
+* field lists (>>:duref:`ref <field-lists>`<<, with caveats noted in
+  Field Lists)
+
+* option lists (>>:duref:`ref <option-lists>`<<)
+
+* quoted literal blocks (>>:duref:`ref <quoted-literal-blocks>`<<)
+
+* doctest blocks (>>:duref:`ref <doctest-blocks>`<<)
+
+
+Literal blocks
+==============
+
+Literal code blocks (>>:duref:`ref <literal-blocks>`<<) are introduced
+by ending a paragraph with the special marker "::".  The literal block
+must be indented (and, like all paragraphs, separated from the
+surrounding ones by blank lines):
+
+   This is a normal text paragraph. The next paragraph is a code sample::
+
+      It is not processed in any way, except
+      that the indentation is removed.
+
+      It can span multiple lines.
+
+   This is a normal text paragraph again.
+
+The handling of the "::" marker is smart:
+
+* If it occurs as a paragraph of its own, that paragraph is completely
+  left out of the document.
+
+* If it is preceded by whitespace, the marker is removed.
+
+* If it is preceded by non-whitespace, the marker is replaced by a
+  single colon.
+
+That way, the second sentence in the above example's first paragraph
+would be rendered as "The next paragraph is a code sample:".
+
+Code highlighting can be enabled for these literal blocks on a
+document-wide basis using the "highlight" directive and on a project-
+wide basis using the >>:confval:`highlight_language`<< configuration
+option. The "code-block" directive can be used to set highlighting on
+a block-by-block basis. These directives are discussed later.
+
+
+Doctest blocks
+==============
+
+Doctest blocks (>>:duref:`ref <doctest-blocks>`<<) are interactive
+Python sessions cut-and-pasted into docstrings. They do not require
+the literal blocks syntax. The doctest block must end with a blank
+line and should *not* end with an unused prompt:
+
+   >>> 1 + 1
+   2
+
+
+Tables
+======
+
+For *grid tables* (>>:duref:`ref <grid-tables>`<<), you have to
+"paint" the cell grid yourself.  They look like this:
+
+   +------------------------+------------+----------+----------+
+   | Header row, column 1   | Header 2   | Header 3 | Header 4 |
+   | (header rows optional) |            |          |          |
+   +========================+============+==========+==========+
+   | body row 1, column 1   | column 2   | column 3 | column 4 |
+   +------------------------+------------+----------+----------+
+   | body row 2             | ...        | ...      |          |
+   +------------------------+------------+----------+----------+
+
+*Simple tables* (>>:duref:`ref <simple-tables>`<<) are easier to
+write, but limited: they must contain more than one row, and the first
+column cells cannot contain multiple lines.  They look like this:
+
+   =====  =====  =======
+   A      B      A and B
+   =====  =====  =======
+   False  False  False
+   True   False  False
+   False  True   False
+   True   True   True
+   =====  =====  =======
+
+Two more syntaxes are supported: *CSV tables* and *List tables*. They
+use an *explicit markup block*. Refer to Tables for more information.
+
+
+Hyperlinks
+==========
+
+
+External links
+--------------
+
+Use "`Link text <https://domain.invalid/>`_" for inline web links.  If
+the link text should be the web address, you don't need special markup
+at all, the parser finds links and mail addresses in ordinary text.
+
+Important:
+
+  There must be a space between the link text and the opening < for
+  the URL.
+
+You can also separate the link and the target definition
+(>>:duref:`ref <hyperlink-targets>`<<), like this:
+
+   This is a paragraph that contains `a link`_.
+
+   .. _a link: https://domain.invalid/
+
+
+Internal links
+--------------
+
+Internal linking is done via a special reST role provided by Sphinx,
+see the section on specific markup, Cross-referencing arbitrary
+locations.
+
+
+Sections
+========
+
+Section headers (>>:duref:`ref <sections>`<<) are created by
+underlining (and optionally overlining) the section title with a
+punctuation character, at least as long as the text:
+
+   =================
+   This is a heading
+   =================
+
+Normally, there are no heading levels assigned to certain characters
+as the structure is determined from the succession of headings.
+However, this convention is used in Python's Style Guide for
+documenting which you may follow:
+
+* "#" with overline, for parts
+
+* "*" with overline, for chapters
+
+* "=", for sections
+
+* "-", for subsections
+
+* "^", for subsubsections
+
+* """, for paragraphs
+
+Of course, you are free to use your own marker characters (see the
+reST documentation), and use a deeper nesting level, but keep in mind
+that most target formats (HTML, LaTeX) have a limited supported
+nesting depth.
+
+
+Field Lists
+===========
+
+Field lists (>>:duref:`ref <field-lists>`<<) are sequences of fields
+marked up like this:
+
+   :fieldname: Field content
+
+They are commonly used in Python documentation:
+
+   def my_function(my_arg, my_other_arg):
+       """A function just for me.
+
+       :param my_arg: The first of my arguments.
+       :param my_other_arg: The second of my arguments.
+
+       :returns: A message (just for me, of course).
+       """
+
+Sphinx extends standard docutils behavior and intercepts field lists
+specified at the beginning of documents.  Refer to Field Lists for
+more information.
+
+
+Roles
+=====
+
+A role or "custom interpreted text role" (>>:duref:`ref <roles>`<<) is
+an inline piece of explicit markup. It signifies that that the
+enclosed text should be interpreted in a specific way.  Sphinx uses
+this to provide semantic markup and cross-referencing of identifiers,
+as described in the appropriate section.  The general syntax is
+":rolename:`content`".
+
+Docutils supports the following roles:
+
+* >>:durole:`emphasis`<< -- equivalent of "*emphasis*"
+
+* >>:durole:`strong`<< -- equivalent of "**strong**"
+
+* >>:durole:`literal`<< -- equivalent of "``literal``"
+
+* >>:durole:`subscript`<< -- subscript text
+
+* >>:durole:`superscript`<< -- superscript text
+
+* >>:durole:`title-reference`<< -- for titles of books, periodicals,
+  and other materials
+
+Refer to Roles for roles added by Sphinx.
+
+
+Explicit Markup
+===============
+
+"Explicit markup" (>>:duref:`ref <explicit-markup-blocks>`<<) is used
+in reST for most constructs that need special handling, such as
+footnotes, specially-highlighted paragraphs, comments, and generic
+directives.
+
+An explicit markup block begins with a line starting with ".."
+followed by whitespace and is terminated by the next paragraph at the
+same level of indentation.  (There needs to be a blank line between
+explicit markup and normal paragraphs.  This may all sound a bit
+complicated, but it is intuitive enough when you write it.)
+
+
+Directives
+==========
+
+A directive (>>:duref:`ref <directives>`<<) is a generic block of
+explicit markup. Along with roles, it is one of the extension
+mechanisms of reST, and Sphinx makes heavy use of it.
+
+Docutils supports the following directives:
+
+* Admonitions: >>:dudir:`attention`<<, >>:dudir:`caution`<<,
+  >>:dudir:`danger`<<, >>:dudir:`error`<<, >>:dudir:`hint`<<,
+  >>:dudir:`important`<<, >>:dudir:`note`<<, >>:dudir:`tip`<<,
+  >>:dudir:`warning`<< and the generic >>:dudir:`admonition
+  <admonitions>`<<.  (Most themes style only "note" and "warning"
+  specially.)
+
+* Images:
+
+  * >>:dudir:`image`<< (see also Images below)
+
+  * >>:dudir:`figure`<< (an image with caption and optional legend)
+
+* Additional body elements:
+
+  * >>:dudir:`contents <table-of-contents>`<< (a local, i.e. for the
+    current file only, table of contents)
+
+  * >>:dudir:`container`<< (a container with a custom class, useful to
+    generate an outer "<div>" in HTML)
+
+  * >>:dudir:`rubric`<< (a heading without relation to the document
+    sectioning)
+
+  * >>:dudir:`topic`<<, >>:dudir:`sidebar`<< (special highlighted body
+    elements)
+
+  * >>:dudir:`parsed-literal`<< (literal block that supports inline
+    markup)
+
+  * >>:dudir:`epigraph`<< (a block quote with optional attribution
+    line)
+
+  * >>:dudir:`highlights`<<, >>:dudir:`pull-quote`<< (block quotes
+    with their own class attribute)
+
+  * >>:dudir:`compound <compound-paragraph>`<< (a compound paragraph)
+
+* Special tables:
+
+  * >>:dudir:`table`<< (a table with title)
+
+  * >>:dudir:`csv-table`<< (a table generated from comma-separated
+    values)
+
+  * >>:dudir:`list-table`<< (a table generated from a list of lists)
+
+* Special directives:
+
+  * >>:dudir:`raw <raw-data-pass-through>`<< (include raw target-
+    format markup)
+
+  * >>:dudir:`include`<< (include reStructuredText from another file)
+    -- in Sphinx, when given an absolute include file path, this
+    directive takes it as relative to the source directory
+
+  * >>:dudir:`class`<< (assign a class attribute to the next element)
+    [1]
+
+* HTML specifics:
+
+  * >>:dudir:`meta`<< (generation of HTML "<meta>" tags, see also HTML
+    Metadata below)
+
+  * >>:dudir:`title <metadata-document-title>`<< (override document
+    title)
+
+* Influencing markup:
+
+  * >>:dudir:`default-role`<< (set a new default role)
+
+  * >>:dudir:`role`<< (create a new role)
+
+  Since these are only per-file, better use Sphinx's facilities for
+  setting the >>:confval:`default_role`<<.
+
+Warning:
+
+  Do *not* use the directives >>:dudir:`sectnum`<<,
+  >>:dudir:`header`<< and >>:dudir:`footer`<<.
+
+Directives added by Sphinx are described in Directives.
+
+Basically, a directive consists of a name, arguments, options and
+content. (Keep this terminology in mind, it is used in the next
+chapter describing custom directives.)  Looking at this example,
+
+   .. function:: foo(x)
+                 foo(y, z)
+      :module: some.module.name
+
+      Return a line of text input from the user.
+
+"function" is the directive name.  It is given two arguments here, the
+remainder of the first line and the second line, as well as one option
+"module" (as you can see, options are given in the lines immediately
+following the arguments and indicated by the colons).  Options must be
+indented to the same level as the directive content.
+
+The directive content follows after a blank line and is indented
+relative to the directive start.
+
+
+Images
+======
+
+reST supports an image directive (>>:dudir:`ref <image>`<<), used like
+so:
+
+   .. image:: gnu.png
+      (options)
+
+When used within Sphinx, the file name given (here "gnu.png") must
+either be relative to the source file, or absolute which means that
+they are relative to the top source directory.  For example, the file
+"sketch/spam.rst" could refer to the image "images/spam.png" as
+"../images/spam.png" or "/images/spam.png".
+
+Sphinx will automatically copy image files over to a subdirectory of
+the output directory on building (e.g. the "_static" directory for
+HTML output.)
+
+Interpretation of image size options ("width" and "height") is as
+follows: if the size has no unit or the unit is pixels, the given size
+will only be respected for output channels that support pixels. Other
+units (like "pt" for points) will be used for HTML and LaTeX output
+(the latter replaces "pt" by "bp" as this is the TeX unit such that
+"72bp=1in").
+
+Sphinx extends the standard docutils behavior by allowing an asterisk
+for the extension:
+
+   .. image:: gnu.*
+
+Sphinx then searches for all images matching the provided pattern and
+determines their type.  Each builder then chooses the best image out
+of these candidates.  For instance, if the file name "gnu.*" was given
+and two files "gnu.pdf" and "gnu.png" existed in the source tree, the
+LaTeX builder would choose the former, while the HTML builder would
+prefer the latter.  Supported image types and choosing priority are
+defined at */usage/builders/index*.
+
+Note that image file names should not contain spaces.
+
+Changed in version 0.4: Added the support for file names ending in an
+asterisk.
+
+Changed in version 0.6: Image paths can now be absolute.
+
+Changed in version 1.5: latex target supports pixels (default is
+"96px=1in").
+
+
+Footnotes
+=========
+
+For footnotes (>>:duref:`ref <footnotes>`<<), use "[#name]_" to mark
+the footnote location, and add the footnote body at the bottom of the
+document after a "Footnotes" rubric heading, like so:
+
+   Lorem ipsum [#f1]_ dolor sit amet ... [#f2]_
+
+   .. rubric:: Footnotes
+
+   .. [#f1] Text of the first footnote.
+   .. [#f2] Text of the second footnote.
+
+You can also explicitly number the footnotes ("[1]_") or use auto-
+numbered footnotes without names ("[#]_").
+
+
+Citations
+=========
+
+Standard reST citations (>>:duref:`ref <citations>`<<) are supported,
+with the additional feature that they are "global", i.e. all citations
+can be referenced from all files.  Use them like so:
+
+   Lorem ipsum [Ref]_ dolor sit amet.
+
+   .. [Ref] Book or article reference, URL or whatever.
+
+Citation usage is similar to footnote usage, but with a label that is
+not numeric or begins with "#".
+
+
+Substitutions
+=============
+
+reST supports "substitutions" (>>:duref:`ref <substitution-
+definitions>`<<), which are pieces of text and/or markup referred to
+in the text by "|name|".  They are defined like footnotes with
+explicit markup blocks, like this:
+
+   .. |name| replace:: replacement *text*
+
+or this:
+
+   .. |caution| image:: warning.png
+                :alt: Warning!
+
+See the >>:duref:`reST reference for substitutions <substitution-
+definitions>`<< for details.
+
+If you want to use some substitutions for all documents, put them into
+>>:confval:`rst_prolog`<< or >>:confval:`rst_epilog`<< or put them
+into a separate file and include it into all documents you want to use
+them in, using the "include" directive.  (Be sure to give the include
+file a file name extension differing from that of other source files,
+to avoid Sphinx finding it as a standalone document.)
+
+Sphinx defines some default substitutions, see Substitutions.
+
+
+Comments
+========
+
+Every explicit markup block which isn't a valid markup construct (like
+the footnotes above) is regarded as a comment (>>:duref:`ref
+<comments>`<<).  For example:
+
+   .. This is a comment.
+
+You can indent text after a comment start to form multiline comments:
+
+   ..
+      This whole indented block
+      is a comment.
+
+      Still in the comment.
+
+
+HTML Metadata
+=============
+
+The "meta" directive (>>:dudir:`ref <meta>`<<) allows specifying the
+HTML metadata element of a Sphinx documentation page.  For example,
+the directive:
+
+   .. meta::
+      :description: The Sphinx documentation builder
+      :keywords: Sphinx, documentation, builder
+
+will generate the following HTML output:
+
+   <meta name="description" content="The Sphinx documentation builder">
+   <meta name="keywords" content="Sphinx, documentation, builder">
+
+Also, Sphinx will add the keywords as specified in the meta directive
+to the search index.  Thereby, the "lang" attribute of the meta
+element is considered.  For example, the directive:
+
+   .. meta::
+      :keywords: backup
+      :keywords lang=en: pleasefindthiskey pleasefindthiskeytoo
+      :keywords lang=de: bittediesenkeyfinden
+
+adds the following words to the search indices of builds with
+different language configurations:
+
+* "pleasefindthiskey", "pleasefindthiskeytoo" to *English* builds;
+
+* "bittediesenkeyfinden" to *German* builds;
+
+* "backup" to builds in all languages.
+
+
+Source encoding
+===============
+
+Since the easiest way to include special characters like em dashes or
+copyright signs in reST is to directly write them as Unicode
+characters, one has to specify an encoding.  Sphinx assumes source
+files to be encoded in UTF-8 by default; you can change this with the
+>>:confval:`source_encoding`<< config value.
+
+
+Gotchas
+=======
+
+There are some problems one commonly runs into while authoring reST
+documents:
+
+* **Separation of inline markup:** As said above, inline markup spans
+  must be separated from the surrounding text by non-word characters,
+  you have to use a backslash-escaped space to get around that.  See
+  >>:duref:`the reference <substitution-definitions>`<< for the
+  details.
+
+* **No nested inline markup:** Something like "*see :func:`foo`*" is
+  not possible.
+
+-[ Footnotes ]-
+
+[1] When the default domain contains a "class" directive, this
+    directive will be shadowed.  Therefore, Sphinx re-exports it as
+    "rst-class".
diff --git a/_build/doc/usage/restructuredtext/directives.txt b/_build/doc/usage/restructuredtext/directives.txt
new file mode 100644
index 000000000..3b9679115
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/directives.txt
@@ -0,0 +1,1243 @@
+Directives
+**********
+
+As previously discussed, a directive is a generic block of explicit
+markup. While Docutils provides a number of directives, Sphinx
+provides many more and uses directives as one of the primary extension
+mechanisms.
+
+See */usage/restructuredtext/domains* for roles added by domains.
+
+See also:
+
+  Refer to the reStructuredText Primer for an overview of the
+  directives provided by Docutils.
+
+
+Table of contents
+=================
+
+Since reST does not have facilities to interconnect several documents,
+or split documents into multiple output files, Sphinx uses a custom
+directive to add relations between the single files the documentation
+is made of, as well as tables of contents.  The "toctree" directive is
+the central element.
+
+Note:
+
+  Simple "inclusion" of one file in another can be done with the
+  >>:dudir:`include`<< directive.
+
+Note:
+
+  To create table of contents for current document (.rst file), use
+  the standard reST >>:dudir:`contents directive <table-of-
+  contents>`<<.
+
+.. toctree::
+
+   This directive inserts a "TOC tree" at the current location, using
+   the individual TOCs (including "sub-TOC trees") of the documents
+   given in the directive body.  Relative document names (not
+   beginning with a slash) are relative to the document the directive
+   occurs in, absolute names are relative to the source directory.  A
+   numeric "maxdepth" option may be given to indicate the depth of the
+   tree; by default, all levels are included. [1]
+
+   The representation of "TOC tree" is changed in each output format.
+   The builders that output multiple files (ex. HTML) treat it as a
+   collection of hyperlinks.  On the other hand, the builders that
+   output a single file (ex. LaTeX, man page, etc.) replace it with
+   the content of the documents on the TOC tree.
+
+   Consider this example (taken from the Python docs' library
+   reference index):
+
+      .. toctree::
+         :maxdepth: 2
+
+         intro
+         strings
+         datatypes
+         numeric
+         (many more documents listed here)
+
+   This accomplishes two things:
+
+   * Tables of contents from all those documents are inserted, with a
+     maximum depth of two, that means one nested heading.  "toctree"
+     directives in those documents are also taken into account.
+
+   * Sphinx knows the relative order of the documents "intro",
+     "strings" and so forth, and it knows that they are children of
+     the shown document, the library index.  From this information it
+     generates "next chapter", "previous chapter" and "parent chapter"
+     links.
+
+   **Entries**
+
+   Document titles in the "toctree" will be automatically read from
+   the title of the referenced document. If that isn't what you want,
+   you can specify an explicit title and target using a similar syntax
+   to reST hyperlinks (and Sphinx's cross-referencing syntax). This
+   looks like:
+
+      .. toctree::
+
+         intro
+         All about strings <strings>
+         datatypes
+
+   The second line above will link to the "strings" document, but will
+   use the title "All about strings" instead of the title of the
+   "strings" document.
+
+   You can also add external links, by giving an HTTP URL instead of a
+   document name.
+
+   **Section numbering**
+
+   If you want to have section numbers even in HTML output, give the
+   **toplevel** toctree a "numbered" option.  For example:
+
+      .. toctree::
+         :numbered:
+
+         foo
+         bar
+
+   Numbering then starts at the heading of "foo".  Sub-toctrees are
+   automatically numbered (don't give the "numbered" flag to those).
+
+   Numbering up to a specific depth is also possible, by giving the
+   depth as a numeric argument to "numbered".
+
+   **Additional options**
+
+   You can use the "caption" option to provide a toctree caption and
+   you can use the "name" option to provide an implicit target name
+   that can be referenced by using "ref":
+
+      .. toctree::
+         :caption: Table of Contents
+         :name: mastertoc
+
+         foo
+
+   If you want only the titles of documents in the tree to show up,
+   not other headings of the same level, you can use the "titlesonly"
+   option:
+
+      .. toctree::
+         :titlesonly:
+
+         foo
+         bar
+
+   You can use "globbing" in toctree directives, by giving the "glob"
+   flag option.  All entries are then matched against the list of
+   available documents, and matches are inserted into the list
+   alphabetically.  Example:
+
+      .. toctree::
+         :glob:
+
+         intro*
+         recipe/*
+         *
+
+   This includes first all documents whose names start with "intro",
+   then all documents in the "recipe" folder, then all remaining
+   documents (except the one containing the directive, of course.) [2]
+
+   The special entry name "self" stands for the document containing
+   the toctree directive.  This is useful if you want to generate a
+   "sitemap" from the toctree.
+
+   You can use the "reversed" flag option to reverse the order of the
+   entries in the list. This can be useful when using the "glob" flag
+   option to reverse the ordering of the files.  Example:
+
+      .. toctree::
+         :glob:
+         :reversed:
+
+         recipe/*
+
+   You can also give a "hidden" option to the directive, like this:
+
+      .. toctree::
+         :hidden:
+
+         doc_1
+         doc_2
+
+   This will still notify Sphinx of the document hierarchy, but not
+   insert links into the document at the location of the directive --
+   this makes sense if you intend to insert these links yourself, in a
+   different style, or in the HTML sidebar.
+
+   In cases where you want to have only one top-level toctree and hide
+   all other lower level toctrees you can add the "includehidden"
+   option to the top-level toctree entry:
+
+      .. toctree::
+         :includehidden:
+
+         doc_1
+         doc_2
+
+   All other toctree entries can then be eliminated by the "hidden"
+   option.
+
+   In the end, all documents in the *source directory* (or
+   subdirectories) must occur in some "toctree" directive; Sphinx will
+   emit a warning if it finds a file that is not included, because
+   that means that this file will not be reachable through standard
+   navigation.
+
+   Use >>:confval:`exclude_patterns`<< to explicitly exclude documents
+   or directories from building completely.  Use the "orphan" metadata
+   to let a document be built, but notify Sphinx that it is not
+   reachable via a toctree.
+
+   The "master document" (selected by >>:confval:`master_doc`<<) is
+   the "root" of the TOC tree hierarchy.  It can be used as the
+   documentation's main page, or as a "full table of contents" if you
+   don't give a "maxdepth" option.
+
+   Changed in version 0.3: Added "globbing" option.
+
+   Changed in version 0.6: Added "numbered" and "hidden" options as
+   well as external links and support for "self" references.
+
+   Changed in version 1.0: Added "titlesonly" option.
+
+   Changed in version 1.1: Added numeric argument to "numbered".
+
+   Changed in version 1.2: Added "includehidden" option.
+
+   Changed in version 1.3: Added "caption" and "name" option.
+
+
+Special names
+-------------
+
+Sphinx reserves some document names for its own use; you should not
+try to create documents with these names -- it will cause problems.
+
+The special document names (and pages generated for them) are:
+
+* "genindex", "modindex", "search"
+
+  These are used for the general index, the Python module index, and
+  the search page, respectively.
+
+  The general index is populated with entries from modules, all index-
+  generating object descriptions, and from "index" directives.
+
+  The Python module index contains one entry per "py:module"
+  directive.
+
+  The search page contains a form that uses the generated JSON search
+  index and JavaScript to full-text search the generated documents for
+  search words; it should work on every major browser that supports
+  modern JavaScript.
+
+* every name beginning with "_"
+
+  Though few such names are currently used by Sphinx, you should not
+  create documents or document-containing directories with such names.
+  (Using "_" as a prefix for a custom template directory is fine.)
+
+Warning:
+
+  Be careful with unusual characters in filenames.  Some formats may
+  interpret these characters in unexpected ways:
+
+  * Do not use the colon ":" for HTML based formats.  Links to other
+    parts may not work.
+
+  * Do not use the plus "+" for the ePub format.  Some resources may
+    not be found.
+
+
+Paragraph-level markup
+======================
+
+These directives create short paragraphs and can be used inside
+information units as well as normal text.
+
+.. note::
+
+   An especially important bit of information about an API that a user
+   should be aware of when using whatever bit of API the note pertains
+   to.  The content of the directive should be written in complete
+   sentences and include all appropriate punctuation.
+
+   Example:
+
+      .. note::
+
+         This function is not suitable for sending spam e-mails.
+
+.. warning::
+
+   An important bit of information about an API that a user should be
+   very aware of when using whatever bit of API the warning pertains
+   to.  The content of the directive should be written in complete
+   sentences and include all appropriate punctuation. This differs
+   from "note" in that it is recommended over "note" for information
+   regarding security.
+
+.. versionadded:: version
+
+   This directive documents the version of the project which added the
+   described feature to the library or C API. When this applies to an
+   entire module, it should be placed at the top of the module section
+   before any prose.
+
+   The first argument must be given and is the version in question;
+   you can add a second argument consisting of a *brief* explanation
+   of the change.
+
+   Example:
+
+      .. versionadded:: 2.5
+         The *spam* parameter.
+
+   Note that there must be no blank line between the directive head
+   and the explanation; this is to make these blocks visually
+   continuous in the markup.
+
+.. versionchanged:: version
+
+   Similar to "versionadded", but describes when and what changed in
+   the named feature in some way (new parameters, changed side
+   effects, etc.).
+
+.. deprecated:: version
+
+   Similar to "versionchanged", but describes when the feature was
+   deprecated.  An explanation can also be given, for example to
+   inform the reader what should be used instead.  Example:
+
+      .. deprecated:: 3.1
+         Use :func:`spam` instead.
+
+.. seealso::
+
+   Many sections include a list of references to module documentation
+   or external documents.  These lists are created using the "seealso"
+   directive.
+
+   The "seealso" directive is typically placed in a section just
+   before any subsections.  For the HTML output, it is shown boxed off
+   from the main flow of the text.
+
+   The content of the "seealso" directive should be a reST definition
+   list. Example:
+
+      .. seealso::
+
+         Module :py:mod:`zipfile`
+            Documentation of the :py:mod:`zipfile` standard module.
+
+         `GNU tar manual, Basic Tar Format <http://link>`_
+            Documentation for tar archive files, including GNU tar extensions.
+
+   There's also a "short form" allowed that looks like this:
+
+      .. seealso:: modules :py:mod:`zipfile`, :py:mod:`tarfile`
+
+   New in version 0.5: The short form.
+
+.. rubric:: title
+
+   This directive creates a paragraph heading that is not used to
+   create a table of contents node.
+
+   Note:
+
+     If the *title* of the rubric is "Footnotes" (or the selected
+     language's equivalent), this rubric is ignored by the LaTeX
+     writer, since it is assumed to only contain footnote definitions
+     and therefore would create an empty heading.
+
+.. centered::
+
+   This directive creates a centered boldfaced line of text.  Use it
+   as follows:
+
+      .. centered:: LICENSE AGREEMENT
+
+   Deprecated since version 1.1: This presentation-only directive is a
+   legacy from older versions.  Use a "rst-class" directive instead
+   and add an appropriate style.
+
+.. hlist::
+
+   This directive must contain a bullet list.  It will transform it
+   into a more compact list by either distributing more than one item
+   horizontally, or reducing spacing between items, depending on the
+   builder.
+
+   For builders that support the horizontal distribution, there is a
+   "columns" option that specifies the number of columns; it defaults
+   to 2.  Example:
+
+      .. hlist::
+         :columns: 3
+
+         * A list of
+         * short items
+         * that should be
+         * displayed
+         * horizontally
+
+   New in version 0.6.
+
+
+Showing code examples
+=====================
+
+There are multiple ways to show syntax-highlighted literal code blocks
+in Sphinx: using reST doctest blocks; using reST literal blocks,
+optionally in combination with the "highlight" directive; using the
+"code-block" directive; and using the "literalinclude" directive.
+Doctest blocks can only be used to show interactive Python sessions,
+while the remaining three can be used for other languages. Of these
+three, literal blocks are useful when an entire document, or at least
+large sections of it, use code blocks with the same syntax and which
+should be styled in the same manner. On the other hand, the "code-
+block" directive makes more sense when you want more fine-tuned
+control over the styling of each block or when you have a document
+containing code blocks using multiple varied syntaxes. Finally, the
+"literalinclude" directive is useful for including entire code files
+in your documentation.
+
+In all cases, Syntax highlighting is provided by Pygments. When using
+literal blocks, this is configured using any "highlight" directives in
+the source file. When a "highlight" directive is encountered, it is
+used until the next "highlight" directive is encountered. If there is
+no "highlight" directive in the file, the global highlighting language
+is used. This defaults to "python" but can be configured using the
+>>:confval:`highlight_language`<< config value. The following values
+are supported:
+
+* "none" (no highlighting)
+
+* "default" (similar to "python3" but with a fallback to "none"
+  without warning highlighting fails; the default when
+  >>:confval:`highlight_language`<< isn't set)
+
+* "guess" (let Pygments guess the lexer based on contents, only works
+  with certain well-recognizable languages)
+
+* "python"
+
+* "rest"
+
+* "c"
+
+* ... and any other lexer alias that Pygments supports
+
+If highlighting with the selected language fails (i.e. Pygments emits
+an "Error" token), the block is not highlighted in any way.
+
+Important:
+
+  The list of lexer aliases supported is tied to the Pygment version.
+  If you want to ensure consistent highlighting, you should fix your
+  version of Pygments.
+
+.. highlight:: language
+
+   Example:
+
+      .. highlight:: c
+
+   This language is used until the next "highlight" directive is
+   encountered. As discussed previously, *language* can be any lexer
+   alias supported by Pygments.
+
+   -[ options ]-
+
+   :linenothreshold: threshold (number (optional))
+
+      Enable to generate line numbers for code blocks.
+
+      This option takes an optional number as threshold parameter.  If
+      any threshold given, the directive will produce line numbers
+      only for the code blocks longer than N lines.  If not given,
+      line numbers will be produced for all of code blocks.
+
+      Example:
+
+         .. highlight:: python
+            :linenothreshold: 5
+
+   :force: (no value)
+
+      If given, minor errors on highlighting are ignored.
+
+      New in version 2.1.
+
+.. code-block:: [language]
+
+   Example:
+
+      .. code-block:: ruby
+
+         Some Ruby code.
+
+   The directive's alias name "sourcecode" works as well.  This
+   directive takes a language name as an argument.  It can be any
+   lexer alias supported by Pygments.  If it is not given, the setting
+   of "highlight" directive will be used.  If not set,
+   >>:confval:`highlight_language`<< will be used.
+
+   Changed in version 2.0: The "language" argument becomes optional.
+
+   -[ options ]-
+
+   :linenos: (no value)
+
+      Enable to generate line numbers for the code block:
+
+         .. code-block:: ruby
+            :linenos:
+
+            Some more Ruby code.
+
+   :lineno-start: number (number)
+
+      Set the first line number of the code block.  If present,
+      "linenos" option is also automatically activated:
+
+         .. code-block:: ruby
+            :lineno-start: 10
+
+            Some more Ruby code, with line numbering starting at 10.
+
+      New in version 1.3.
+
+   :emphasize-lines: line numbers (comma separated numbers)
+
+      Emphasize particular lines of the code block:
+
+         .. code-block:: python
+            :emphasize-lines: 3,5
+
+            def some_function():
+                interesting = False
+                print 'This line is highlighted.'
+                print 'This one is not...'
+                print '...but this one is.'
+
+      New in version 1.1.
+
+      Changed in version 1.6.6: LaTeX supports the "emphasize-lines"
+      option.
+
+   :caption: caption of code block (text)
+
+      Set a caption to the code block.
+
+      New in version 1.3.
+
+   :name: a label for hyperlink (text)
+
+      Define implicit target name that can be referenced by using
+      "ref".  For example:
+
+         .. code-block:: python
+            :caption: this.py
+            :name: this-py
+
+            print 'Explicit is better than implicit.'
+
+      New in version 1.3.
+
+   :dedent: number (number)
+
+      Strip indentation characters from the code block. For example:
+
+         .. code-block:: ruby
+            :dedent: 4
+
+                some ruby code
+
+      New in version 1.3.
+
+   :force: (no value)
+
+      If given, minor errors on highlighting are ignored.
+
+      New in version 2.1.
+
+.. literalinclude:: filename
+
+   Longer displays of verbatim text may be included by storing the
+   example text in an external file containing only plain text.  The
+   file may be included using the "literalinclude" directive. [3] For
+   example, to include the Python source file "example.py", use:
+
+      .. literalinclude:: example.py
+
+   The file name is usually relative to the current file's path.
+   However, if it is absolute (starting with "/"), it is relative to
+   the top source directory.
+
+   **Additional options**
+
+   Like "code-block", the directive supports the "linenos" flag option
+   to switch on line numbers, the "lineno-start" option to select the
+   first line number, the "emphasize-lines" option to emphasize
+   particular lines, the "name" option to provide an implicit target
+   name, the "dedent" option to strip indentation characters for the
+   code block, and a "language" option to select a language different
+   from the current file's standard language. In addition, it supports
+   the "caption" option; however, this can be provided with no
+   argument to use the filename as the caption. Example with options:
+
+      .. literalinclude:: example.rb
+         :language: ruby
+         :emphasize-lines: 12,15-18
+         :linenos:
+
+   Tabs in the input are expanded if you give a "tab-width" option
+   with the desired tab width.
+
+   Include files are assumed to be encoded in the
+   >>:confval:`source_encoding`<<. If the file has a different
+   encoding, you can specify it with the "encoding" option:
+
+      .. literalinclude:: example.py
+         :encoding: latin-1
+
+   The directive also supports including only parts of the file.  If
+   it is a Python module, you can select a class, function or method
+   to include using the "pyobject" option:
+
+      .. literalinclude:: example.py
+         :pyobject: Timer.start
+
+   This would only include the code lines belonging to the "start()"
+   method in the "Timer" class within the file.
+
+   Alternately, you can specify exactly which lines to include by
+   giving a "lines" option:
+
+      .. literalinclude:: example.py
+         :lines: 1,3,5-10,20-
+
+   This includes the lines 1, 3, 5 to 10 and lines 20 to the last
+   line.
+
+   Another way to control which part of the file is included is to use
+   the "start-after" and "end-before" options (or only one of them).
+   If "start-after" is given as a string option, only lines that
+   follow the first line containing that string are included.  If
+   "end-before" is given as a string option, only lines that precede
+   the first lines containing that string are included. The "start-at"
+   and "end-at" options behave in a similar way, but the lines
+   containing the matched string are included.
+
+   "start-after"/"start-at" and "end-before"/"end-at" can have same
+   string. "start-after"/"start-at" filter lines before the line that
+   contains option string ("start-at" will keep the line). Then "end-
+   before"/"end-at" filter lines after the line that contains option
+   string ("end-at" will keep the line and "end-before" skip the first
+   line).
+
+   Note:
+
+     If you want to select only "[second-section]" of ini file like
+     the following, you can use ":start-at: [second-section]" and
+     ":end-before: [third-section]":
+
+        [first-section]
+
+        var_in_first=true
+
+        [second-section]
+
+        var_in_second=true
+
+        [third-section]
+
+        var_in_third=true
+
+     Useful cases of these option is working with tag comments.
+     ":start-after: [initialized]" and ":end-before: [initialized]"
+     options keep lines between comments:
+
+        if __name__ == "__main__":
+            # [initialize]
+            app.start(":8000")
+            # [initialize]
+
+   When lines have been selected in any of the ways described above,
+   the line numbers in "emphasize-lines" refer to those selected
+   lines, counted consecutively starting at "1".
+
+   When specifying particular parts of a file to display, it can be
+   useful to display the original line numbers. This can be done using
+   the "lineno-match" option, which is however allowed only when the
+   selection consists of contiguous lines.
+
+   You can prepend and/or append a line to the included code, using
+   the "prepend" and "append" option, respectively.  This is useful
+   e.g. for highlighting PHP code that doesn't include the
+   "<?php"/"?>" markers.
+
+   If you want to show the diff of the code, you can specify the old
+   file by giving a "diff" option:
+
+      .. literalinclude:: example.py
+         :diff: example.py.orig
+
+   This shows the diff between "example.py" and "example.py.orig" with
+   unified diff format.
+
+   A "force" option can ignore minor errors on highlighting.
+
+   Changed in version 0.4.3: Added the "encoding" option.
+
+   Changed in version 0.6: Added the "pyobject", "lines", "start-
+   after" and "end-before" options, as well as support for absolute
+   filenames.
+
+   Changed in version 1.0: Added the "prepend", "append", and "tab-
+   width" options.
+
+   Changed in version 1.3: Added the "diff", "lineno-match",
+   "caption", "name", and "dedent" options.
+
+   Changed in version 1.5: Added the "start-at", and "end-at" options.
+
+   Changed in version 1.6: With both "start-after" and "lines" in use,
+   the first line as per "start-after" is considered to be with line
+   number "1" for "lines".
+
+   Changed in version 2.1: Added the "force" option.
+
+
+Glossary
+========
+
+.. glossary::
+
+   This directive must contain a reST definition-list-like markup with
+   terms and definitions.  The definitions will then be referenceable
+   with the "term" role.  Example:
+
+      .. glossary::
+
+         environment
+            A structure where information about all documents under the root is
+            saved, and used for cross-referencing.  The environment is pickled
+            after the parsing stage, so that successive runs only need to read
+            and parse new and changed documents.
+
+         source directory
+            The directory which, including its subdirectories, contains all
+            source files for one Sphinx project.
+
+   In contrast to regular definition lists, *multiple* terms per entry
+   are allowed, and inline markup is allowed in terms.  You can link
+   to all of the terms.  For example:
+
+      .. glossary::
+
+         term 1
+         term 2
+            Definition of both terms.
+
+   (When the glossary is sorted, the first term determines the sort
+   order.)
+
+   If you want to specify "grouping key" for general index entries,
+   you can put a "key" as "term : key". For example:
+
+      .. glossary::
+
+         term 1 : A
+         term 2 : B
+            Definition of both terms.
+
+   Note that "key" is used for grouping key as is. The "key" isn't
+   normalized; key "A" and "a" become different groups. The whole
+   characters in "key" is used instead of a first character; it is
+   used for "Combining Character Sequence" and "Surrogate Pairs"
+   grouping key.
+
+   In i18n situation, you can specify "localized term : key" even if
+   original text only have "term" part. In this case, translated
+   "localized term" will be categorized in "key" group.
+
+   New in version 0.6: You can now give the glossary directive a
+   ":sorted:" flag that will automatically sort the entries
+   alphabetically.
+
+   Changed in version 1.1: Now supports multiple terms and inline
+   markup in terms.
+
+   Changed in version 1.4: Index key for glossary term should be
+   considered *experimental*.
+
+
+Meta-information markup
+=======================
+
+.. sectionauthor:: name <email>
+
+   Identifies the author of the current section.  The argument should
+   include the author's name such that it can be used for presentation
+   and email address.  The domain name portion of the address should
+   be lower case. Example:
+
+      .. sectionauthor:: Guido van Rossum <guido@python.org>
+
+   By default, this markup isn't reflected in the output in any way
+   (it helps keep track of contributions), but you can set the
+   configuration value >>:confval:`show_authors`<< to "True" to make
+   them produce a paragraph in the output.
+
+.. codeauthor:: name <email>
+
+   The "codeauthor" directive, which can appear multiple times, names
+   the authors of the described code, just like "sectionauthor" names
+   the author(s) of a piece of documentation.  It too only produces
+   output if the >>:confval:`show_authors`<< configuration value is
+   "True".
+
+
+Index-generating markup
+=======================
+
+Sphinx automatically creates index entries from all object
+descriptions (like functions, classes or attributes) like discussed in
+*/usage/restructuredtext/domains*.
+
+However, there is also explicit markup available, to make the index
+more comprehensive and enable index entries in documents where
+information is not mainly contained in information units, such as the
+language reference.
+
+.. index:: <entries>
+
+   This directive contains one or more index entries.  Each entry
+   consists of a type and a value, separated by a colon.
+
+   For example:
+
+      .. index::
+         single: execution; context
+         module: __main__
+         module: sys
+         triple: module; search; path
+
+      The execution context
+      ---------------------
+
+      ...
+
+   This directive contains five entries, which will be converted to
+   entries in the generated index which link to the exact location of
+   the index statement (or, in case of offline media, the
+   corresponding page number).
+
+   Since index directives generate cross-reference targets at their
+   location in the source, it makes sense to put them *before* the
+   thing they refer to -- e.g. a heading, as in the example above.
+
+   The possible entry types are:
+
+   single
+      Creates a single index entry.  Can be made a subentry by
+      separating the subentry text with a semicolon (this notation is
+      also used below to describe what entries are created).
+
+   pair
+      "pair: loop; statement" is a shortcut that creates two index
+      entries, namely "loop; statement" and "statement; loop".
+
+   triple
+      Likewise, "triple: module; search; path" is a shortcut that
+      creates three index entries, which are "module; search path",
+      "search; path, module" and "path; module search".
+
+   see
+      "see: entry; other" creates an index entry that refers from
+      "entry" to "other".
+
+   seealso
+      Like "see", but inserts "see also" instead of "see".
+
+   module, keyword, operator, object, exception, statement, builtin
+      These all create two index entries.  For example, "module:
+      hashlib" creates the entries "module; hashlib" and "hashlib;
+      module".  (These are Python-specific and therefore deprecated.)
+
+   You can mark up "main" index entries by prefixing them with an
+   exclamation mark.  The references to "main" entries are emphasized
+   in the generated index.  For example, if two pages contain
+
+      .. index:: Python
+
+   and one page contains
+
+      .. index:: ! Python
+
+   then the backlink to the latter page is emphasized among the three
+   backlinks.
+
+   For index directives containing only "single" entries, there is a
+   shorthand notation:
+
+      .. index:: BNF, grammar, syntax, notation
+
+   This creates four index entries.
+
+   Changed in version 1.1: Added "see" and "seealso" types, as well as
+   marking main entries.
+
+   -[ options ]-
+
+   :name: a label for hyperlink (text)
+
+      Define implicit target name that can be referenced by using
+      "ref".  For example:
+
+         .. index:: Python
+            :name: py-index
+
+   New in version 3.0.
+
+:index:
+
+   While the "index" directive is a block-level markup and links to
+   the beginning of the next paragraph, there is also a corresponding
+   role that sets the link target directly where it is used.
+
+   The content of the role can be a simple phrase, which is then kept
+   in the text and used as an index entry.  It can also be a
+   combination of text and index entry, styled like with explicit
+   targets of cross-references.  In that case, the "target" part can
+   be a full entry as described for the directive above.  For example:
+
+      This is a normal reST :index:`paragraph` that contains several
+      :index:`index entries <pair: index; entry>`.
+
+   New in version 1.1.
+
+
+Including content based on tags
+===============================
+
+.. only:: <expression>
+
+   Include the content of the directive only if the *expression* is
+   true.  The expression should consist of tags, like this:
+
+      .. only:: html and draft
+
+   Undefined tags are false, defined tags (via the "-t" command-line
+   option or within "conf.py", see here) are true.  Boolean
+   expressions, also using parentheses (like "html and (latex or
+   draft)") are supported.
+
+   The *format* and the *name* of the current builder ("html", "latex"
+   or "text") are always set as a tag [4].  To make the distinction
+   between format and name explicit, they are also added with the
+   prefix "format_" and "builder_", e.g. the epub builder defines the
+   tags  "html", "epub", "format_html" and "builder_epub".
+
+   These standard tags are set *after* the configuration file is read,
+   so they are not available there.
+
+   All tags must follow the standard Python identifier syntax as set
+   out in the Identifiers and keywords documentation.  That is, a tag
+   expression may only consist of tags that conform to the syntax of
+   Python variables.  In ASCII, this consists of the uppercase and
+   lowercase letters "A" through "Z", the underscore "_" and, except
+   for the first character, the digits "0" through "9".
+
+   New in version 0.6.
+
+   Changed in version 1.2: Added the name of the builder and the
+   prefixes.
+
+   Warning:
+
+     This directive is designed to control only content of document.
+     It could not control sections, labels and so on.
+
+
+Tables
+======
+
+Use reStructuredText tables, i.e. either
+
+* grid table syntax (>>:duref:`ref <grid-tables>`<<),
+
+* simple table syntax (>>:duref:`ref <simple-tables>`<<),
+
+* >>:dudir:`csv-table`<< syntax,
+
+* or >>:dudir:`list-table`<< syntax.
+
+The >>:dudir:`table`<< directive serves as optional wrapper of the
+*grid* and *simple* syntaxes.
+
+They work fine in HTML output, however there are some gotchas when
+using tables in LaTeX: the column width is hard to determine correctly
+automatically.  For this reason, the following directive exists:
+
+.. tabularcolumns:: column spec
+
+   This directive gives a "column spec" for the next table occurring
+   in the source file.  The spec is the second argument to the LaTeX
+   "tabulary" package's environment (which Sphinx uses to translate
+   tables).  It can have values like
+
+      |l|l|l|
+
+   which means three left-adjusted, nonbreaking columns.  For columns
+   with longer text that should automatically be broken, use either
+   the standard "p{width}" construct, or tabulary's automatic
+   specifiers:
+
+   +-------+--------------------------------------------+
+   | "L"   | flush left column with automatic width     |
+   +-------+--------------------------------------------+
+   | "R"   | flush right column with automatic width    |
+   +-------+--------------------------------------------+
+   | "C"   | centered column with automatic width       |
+   +-------+--------------------------------------------+
+   | "J"   | justified column with automatic width      |
+   +-------+--------------------------------------------+
+
+   The automatic widths of the "LRCJ" columns are attributed by
+   "tabulary" in proportion to the observed shares in a first pass
+   where the table cells are rendered at their natural "horizontal"
+   widths.
+
+   By default, Sphinx uses a table layout with "J" for every column.
+
+   New in version 0.3.
+
+   Changed in version 1.6: Merged cells may now contain multiple
+   paragraphs and are much better handled, thanks to custom Sphinx
+   LaTeX macros. This novel situation motivated the switch to "J"
+   specifier and not "L" by default.
+
+   Hint:
+
+     Sphinx actually uses "T" specifier having done
+     "\newcolumntype{T}{J}". To revert to previous default, insert
+     "\newcolumntype{T}{L}" in the LaTeX preamble (see
+     >>:confval:`latex_elements`<<).A frequent issue with tabulary is
+     that columns with little contents are "squeezed". The minimal
+     column width is a tabulary parameter called "\tymin". You may set
+     it globally in the LaTeX preamble via "\setlength{\tymin}{40pt}"
+     for example.Else, use the "tabularcolumns" directive with an
+     explicit "p{40pt}" (for example) for that column. You may use
+     also "l" specifier but this makes the task of setting column
+     widths more difficult if some merged cell intersects that column.
+
+   Warning:
+
+     Tables with more than 30 rows are rendered using "longtable", not
+     "tabulary", in order to allow pagebreaks. The "L", "R", ...
+     specifiers do not work for these tables.Tables that contain list-
+     like elements such as object descriptions, blockquotes or any
+     kind of lists cannot be set out of the box with "tabulary". They
+     are therefore set with the standard LaTeX "tabular" (or
+     "longtable") environment if you don't give a "tabularcolumns"
+     directive.  If you do, the table will be set with "tabulary" but
+     you must use the "p{width}" construct (or Sphinx's "\X" and "\Y"
+     specifiers described below) for the columns containing these
+     elements.Literal blocks do not work with "tabulary" at all, so
+     tables containing a literal block are always set with "tabular".
+     The verbatim environment used for literal blocks only works in
+     "p{width}" (and "\X" or "\Y") columns, hence Sphinx generates
+     such column specs for tables containing literal blocks.
+
+   Since Sphinx 1.5, the "\X{a}{b}" specifier is used (there *is* a
+   backslash in the specifier letter). It is like "p{width}" with the
+   width set to a fraction "a/b" of the current line width. You can
+   use it in the "tabularcolumns" (it is not a problem if some LaTeX
+   macro is also called "\X".)
+
+   It is *not* needed for "b" to be the total number of columns, nor
+   for the sum of the fractions of the "\X" specifiers to add  up to
+   one. For example "|\X{2}{5}|\X{1}{5}|\X{1}{5}|" is legitimate and
+   the table will occupy 80% of the line width, the first of its three
+   columns having the same width as the sum  of the next two.
+
+   This is used by the ":widths:" option of the >>:dudir:`table`<<
+   directive.
+
+   Since Sphinx 1.6, there is also the "\Y{f}" specifier which admits
+   a decimal argument, such has "\Y{0.15}": this would have the same
+   effect as "\X{3}{20}".
+
+   Changed in version 1.6: Merged cells from complex grid tables
+   (either multi-row, multi-column, or both) now allow blockquotes,
+   lists, literal blocks, ... as do regular cells.Sphinx's merged
+   cells interact well with "p{width}", "\X{a}{b}", "\Y{f}" and
+   tabulary's columns.
+
+   Note:
+
+     "tabularcolumns" conflicts with ":widths:" option of table
+     directives.  If both are specified, ":widths:" option will be
+     ignored.
+
+
+Math
+====
+
+The input language for mathematics is LaTeX markup.  This is the de-
+facto standard for plain-text math notation and has the added
+advantage that no further translation is necessary when building LaTeX
+output.
+
+Keep in mind that when you put math markup in **Python docstrings**
+read by "autodoc", you either have to double all backslashes, or use
+Python raw strings ("r"raw"").
+
+.. math::
+
+   Directive for displayed math (math that takes the whole line for
+   itself).
+
+   The directive supports multiple equations, which should be
+   separated by a blank line:
+
+      .. math::
+
+         (a + b)^2 = a^2 + 2ab + b^2
+
+         (a - b)^2 = a^2 - 2ab + b^2
+
+   In addition, each single equation is set within a "split"
+   environment, which means that you can have multiple aligned lines
+   in an equation, aligned at "&" and separated by "\\":
+
+      .. math::
+
+         (a + b)^2  &=  (a + b)(a + b) \\
+                    &=  a^2 + 2ab + b^2
+
+   For more details, look into the documentation of the AmSMath LaTeX
+   package.
+
+   When the math is only one line of text, it can also be given as a
+   directive argument:
+
+      .. math:: (a + b)^2 = a^2 + 2ab + b^2
+
+   Normally, equations are not numbered.  If you want your equation to
+   get a number, use the "label" option.  When given, it selects an
+   internal label for the equation, by which it can be cross-
+   referenced, and causes an equation number to be issued.  See "eq"
+   for an example.  The numbering style depends on the output format.
+
+   There is also an option "nowrap" that prevents any wrapping of the
+   given math in a math environment.  When you give this option, you
+   must make sure yourself that the math is properly set up.  For
+   example:
+
+      .. math::
+         :nowrap:
+
+         \begin{eqnarray}
+            y    & = & ax^2 + bx + c \\
+            f(x) & = & x^2 + 2xy + y^2
+         \end{eqnarray}
+
+See also:
+
+  Math support for HTML outputs in Sphinx
+     Rendering options for math with HTML builders.
+
+  >>:confval:`latex_engine`<<
+     Explains how to configure LaTeX builder to support Unicode
+     literals in math mark-up.
+
+
+Grammar production displays
+===========================
+
+Special markup is available for displaying the productions of a formal
+grammar. The markup is simple and does not attempt to model all
+aspects of BNF (or any derived forms), but provides enough to allow
+context-free grammars to be displayed in a way that causes uses of a
+symbol to be rendered as hyperlinks to the definition of the symbol.
+There is this directive:
+
+.. productionlist:: [productionGroup]
+
+   This directive is used to enclose a group of productions.  Each
+   production is given on a single line and consists of a name,
+   separated by a colon from the following definition.  If the
+   definition spans multiple lines, each continuation line must begin
+   with a colon placed at the same column as in the first line.
+
+   The *productionGroup* argument to "productionlist" serves to
+   distinguish different sets of production lists that belong to
+   different grammars.  Multiple production lists with the same
+   *productionGroup* thus define rules in the same scope.
+
+   Blank lines are not allowed within "productionlist" directive
+   arguments.
+
+   The definition can contain token names which are marked as
+   interpreted text (e.g. ""sum ::= `integer` "+" `integer`"") -- this
+   generates cross-references to the productions of these tokens.
+   Outside of the production list, you can reference to token
+   productions using "token". However, if you have given a
+   *productionGroup* argument you must prefix the token name in the
+   cross-reference with the group name and a colon, e.g.,
+   ""myGroup:sum"" instead of just ""sum"". If the group should not be
+   shown in the title of the link either an explicit title can be
+   given (e.g., ""myTitle <myGroup:sum>""), or the target can be
+   prefixed with a tilde (e.g., ""~myGroup:sum"").
+
+   Note that no further reST parsing is done in the production, so
+   that you don't have to escape "*" or "|" characters.
+
+The following is an example taken from the Python Reference Manual:
+
+   .. productionlist::
+      try_stmt: try1_stmt | try2_stmt
+      try1_stmt: "try" ":" `suite`
+               : ("except" [`expression` ["," `target`]] ":" `suite`)+
+               : ["else" ":" `suite`]
+               : ["finally" ":" `suite`]
+      try2_stmt: "try" ":" `suite`
+               : "finally" ":" `suite`
+
+-[ Footnotes ]-
+
+[1] The LaTeX writer only refers the "maxdepth" option of first
+    toctree directive in the document.
+
+[2] A note on available globbing syntax: you can use the standard
+    shell constructs "*", "?", "[...]" and "[!...]" with the feature
+    that these all don't match slashes.  A double star "**" can be
+    used to match any sequence of characters *including* slashes.
+
+[3] There is a standard ".. include" directive, but it raises errors
+    if the file is not found.  This one only emits a warning.
+
+[4] For most builders name and format are the same. At the moment only
+    builders derived from the html builder distinguish between the
+    builder format and the builder name.
+
+    Note that the current builder tag is not available in "conf.py",
+    it is only available after the builder is initialized.
diff --git a/_build/doc/usage/restructuredtext/domains.txt b/_build/doc/usage/restructuredtext/domains.txt
new file mode 100644
index 000000000..f188b1f3b
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/domains.txt
@@ -0,0 +1,1855 @@
+Domains
+*******
+
+New in version 1.0.
+
+Originally, Sphinx was conceived for a single project, the
+documentation of the Python language.  Shortly afterwards, it was made
+available for everyone as a documentation tool, but the documentation
+of Python modules remained deeply built in -- the most fundamental
+directives, like "function", were designed for Python objects.  Since
+Sphinx has become somewhat popular, interest developed in using it for
+many different purposes: C/C++ projects, JavaScript, or even
+reStructuredText markup (like in this documentation).
+
+While this was always possible, it is now much easier to easily
+support documentation of projects using different programming
+languages or even ones not supported by the main Sphinx distribution,
+by providing a **domain** for every such purpose.
+
+A domain is a collection of markup (reStructuredText *directive*s and
+*role*s) to describe and link to *object*s belonging together, e.g.
+elements of a programming language.  Directive and role names in a
+domain have names like "domain:name", e.g. "py:function".  Domains can
+also provide custom indices (like the Python Module Index).
+
+Having domains means that there are no naming problems when one set of
+documentation wants to refer to e.g. C++ and Python classes.  It also
+means that extensions that support the documentation of whole new
+languages are much easier to write.
+
+This section describes what the domains that are included with Sphinx
+provide. The domain API is documented as well, in the section Domain
+API.
+
+
+Basic Markup
+============
+
+Most domains provide a number of *object description directives*, used
+to describe specific objects provided by modules.  Each directive
+requires one or more signatures to provide basic information about
+what is being described, and the content should be the description.  A
+domain will typically keep an internal index of all entites to aid
+cross-referencing. Typically it will also add entries in the shown
+general index. If you want to suppress the addition of an entry in the
+shown index, you can give the directive option flag ":noindexentry:".
+If you want to typeset an object description, without even making it
+available for cross-referencing, you can give the directive option
+flag ":noindex:" (which implies ":noindexentry:"). Though, note that
+not every directive en every domain may support these options.
+
+New in version 3.2: The directive option "noindexentry" in the Python,
+C, C++, and Javascript domains.
+
+An example using a Python domain directive:
+
+   .. py:function:: spam(eggs)
+                    ham(eggs)
+
+      Spam or ham the foo.
+
+This describes the two Python functions "spam" and "ham".  (Note that
+when signatures become too long, you can break them if you add a
+backslash to lines that are continued in the next line.  Example:
+
+   .. py:function:: filterwarnings(action, message='', category=Warning, \
+                                   module='', lineno=0, append=False)
+      :noindex:
+
+(This example also shows how to use the ":noindex:" flag.)
+
+The domains also provide roles that link back to these object
+descriptions. For example, to link to one of the functions described
+in the example above, you could say
+
+   The function :py:func:`spam` does a similar thing.
+
+As you can see, both directive and role names contain the domain name
+and the directive name.
+
+-[ Default Domain ]-
+
+For documentation describing objects from solely one domain, authors
+will not have to state again its name at each directive, role, etc...
+after having specified a default. This can be done either via the
+config value >>:confval:`primary_domain`<< or via this directive:
+
+.. default-domain:: name
+
+   Select a new default domain.  While the
+   >>:confval:`primary_domain`<< selects a global default, this only
+   has an effect within the same file.
+
+If no other default is selected, the Python domain (named "py") is the
+default one, mostly for compatibility with documentation written for
+older versions of Sphinx.
+
+Directives and roles that belong to the default domain can be
+mentioned without giving the domain name, i.e.
+
+   .. function:: pyfunc()
+
+      Describes a Python function.
+
+   Reference to :func:`pyfunc`.
+
+
+Cross-referencing syntax
+------------------------
+
+For cross-reference roles provided by domains, the same facilities
+exist as for general cross-references.  See Cross-referencing syntax.
+
+In short:
+
+* You may supply an explicit title and reference target: ":role:`title
+  <target>`" will refer to *target*, but the link text will be
+  *title*.
+
+* If you prefix the content with "!", no reference/hyperlink will be
+  created.
+
+* If you prefix the content with "~", the link text will only be the
+  last component of the target.  For example,
+  ":py:meth:`~Queue.Queue.get`" will refer to "Queue.Queue.get" but
+  only display "get" as the link text.
+
+
+The Python Domain
+=================
+
+The Python domain (name **py**) provides the following directives for
+module declarations:
+
+.. py:module:: name
+
+   This directive marks the beginning of the description of a module
+   (or package submodule, in which case the name should be fully
+   qualified, including the package name).  It does not create content
+   (like e.g. "py:class" does).
+
+   This directive will also cause an entry in the global module index.
+
+   -[ options ]-
+
+   :platform: platforms (comma separated list)
+
+      Indicate platforms which the module is available (if it is
+      available on all platforms, the option should be omitted).  The
+      keys are short identifiers; examples that are in use include
+      "IRIX", "Mac", "Windows" and "Unix".  It is important to use a
+      key which has already been used when applicable.
+
+   :synopsis: purpose (text)
+
+      Consist of one sentence describing the module's purpose -- it is
+      currently only used in the Global Module Index.
+
+   :deprecated: (no argument)
+
+      Mark a module as deprecated; it will be designated as such in
+      various locations then.
+
+.. py:currentmodule:: name
+
+   This directive tells Sphinx that the classes, functions etc.
+   documented from here are in the given module (like "py:module"),
+   but it will not create index entries, an entry in the Global Module
+   Index, or a link target for "py:mod".  This is helpful in
+   situations where documentation for things in a module is spread
+   over multiple files or sections -- one location has the "py:module"
+   directive, the others only "py:currentmodule".
+
+The following directives are provided for module and class contents:
+
+.. py:function:: name(parameters)
+
+   Describes a module-level function.  The signature should include
+   the parameters as given in the Python function definition, see
+   Python Signatures. For example:
+
+      .. py:function:: Timer.repeat(repeat=3, number=1000000)
+
+   For methods you should use "py:method".
+
+   The description normally includes information about the parameters
+   required and how they are used (especially whether mutable objects
+   passed as parameters are modified), side effects, and possible
+   exceptions.
+
+   This information can (in any "py" directive) optionally be given in
+   a structured form, see Info field lists.
+
+   -[ options ]-
+
+   :async: (no value)
+
+      Indicate the function is an async function.
+
+      New in version 2.1.
+
+.. py:data:: name
+
+   Describes global data in a module, including both variables and
+   values used as "defined constants."  Class and object attributes
+   are not documented using this environment.
+
+   -[ options ]-
+
+   :type: type of the variable (text)
+
+      New in version 2.4.
+
+   :value: initial value of the variable (text)
+
+      New in version 2.4.
+
+.. py:exception:: name
+
+   Describes an exception class.  The signature can, but need not
+   include parentheses with constructor arguments.
+
+   -[ options ]-
+
+   :final: (no value)
+
+      Indicate the class is a final class.
+
+      New in version 3.1.
+
+.. py:class:: name
+.. py:class:: name(parameters)
+
+   Describes a class.  The signature can optionally include
+   parentheses with parameters which will be shown as the constructor
+   arguments.  See also Python Signatures.
+
+   Methods and attributes belonging to the class should be placed in
+   this directive's body.  If they are placed outside, the supplied
+   name should contain the class name so that cross-references still
+   work.  Example:
+
+      .. py:class:: Foo
+
+         .. py:method:: quux()
+
+      -- or --
+
+      .. py:class:: Bar
+
+      .. py:method:: Bar.quux()
+
+   The first way is the preferred one.
+
+   -[ options ]-
+
+   :final: (no value)
+
+      Indicate the class is a final class.
+
+      New in version 3.1.
+
+.. py:attribute:: name
+
+   Describes an object data attribute.  The description should include
+   information about the type of the data to be expected and whether
+   it may be changed directly.
+
+   -[ options ]-
+
+   :type: type of the attribute (text)
+
+      New in version 2.4.
+
+   :value: initial value of the attribute (text)
+
+      New in version 2.4.
+
+.. py:method:: name(parameters)
+
+   Describes an object method.  The parameters should not include the
+   "self" parameter.  The description should include similar
+   information to that described for "function".  See also Python
+   Signatures and Info field lists.
+
+   -[ options ]-
+
+   :abstractmethod: (no value)
+
+      Indicate the method is an abstract method.
+
+      New in version 2.1.
+
+   :async: (no value)
+
+      Indicate the method is an async method.
+
+      New in version 2.1.
+
+   :classmethod: (no value)
+
+      Indicate the method is a class method.
+
+      New in version 2.1.
+
+   :final: (no value)
+
+      Indicate the class is a final method.
+
+      New in version 3.1.
+
+   :property: (no value)
+
+      Indicate the method is a property.
+
+      New in version 2.1.
+
+   :staticmethod: (no value)
+
+      Indicate the method is a static method.
+
+      New in version 2.1.
+
+.. py:staticmethod:: name(parameters)
+
+   Like "py:method", but indicates that the method is a static method.
+
+   New in version 0.4.
+
+.. py:classmethod:: name(parameters)
+
+   Like "py:method", but indicates that the method is a class method.
+
+   New in version 0.6.
+
+.. py:decorator:: name
+.. py:decorator:: name(parameters)
+
+   Describes a decorator function.  The signature should represent the
+   usage as a decorator.  For example, given the functions
+
+      def removename(func):
+          func.__name__ = ''
+          return func
+
+      def setnewname(name):
+          def decorator(func):
+              func.__name__ = name
+              return func
+          return decorator
+
+   the descriptions should look like this:
+
+      .. py:decorator:: removename
+
+         Remove name of the decorated function.
+
+      .. py:decorator:: setnewname(name)
+
+         Set name of the decorated function to *name*.
+
+   (as opposed to ".. py:decorator:: removename(func)".)
+
+   There is no "py:deco" role to link to a decorator that is marked up
+   with this directive; rather, use the "py:func" role.
+
+.. py:decoratormethod:: name
+.. py:decoratormethod:: name(signature)
+
+   Same as "py:decorator", but for decorators that are methods.
+
+   Refer to a decorator method using the "py:meth" role.
+
+
+Python Signatures
+-----------------
+
+Signatures of functions, methods and class constructors can be given
+like they would be written in Python.
+
+Default values for optional arguments can be given (but if they
+contain commas, they will confuse the signature parser).  Python
+3-style argument annotations can also be given as well as return type
+annotations:
+
+   .. py:function:: compile(source : string, filename, symbol='file') -> ast object
+
+For functions with optional parameters that don't have default values
+(typically functions implemented in C extension modules without
+keyword argument support), you can use brackets to specify the
+optional parts:
+
+   compile(source[, filename[, symbol]])
+
+It is customary to put the opening bracket before the comma.
+
+
+Info field lists
+----------------
+
+New in version 0.4.
+
+Changed in version 3.0: meta fields are added.
+
+Inside Python object description directives, reST field lists with
+these fields are recognized and formatted nicely:
+
+* "param", "parameter", "arg", "argument", "key", "keyword":
+  Description of a parameter.
+
+* "type": Type of a parameter.  Creates a link if possible.
+
+* "raises", "raise", "except", "exception": That (and when) a specific
+  exception is raised.
+
+* "var", "ivar", "cvar": Description of a variable.
+
+* "vartype": Type of a variable.  Creates a link if possible.
+
+* "returns", "return": Description of the return value.
+
+* "rtype": Return type.  Creates a link if possible.
+
+* "meta": Add metadata to description of the python object.  The
+  metadata will not be shown on output document.  For example, ":meta
+  private:" indicates the python object is private member.  It is used
+  in "sphinx.ext.autodoc" for filtering members.
+
+Note:
+
+  In current release, all "var", "ivar" and "cvar" are represented as
+  "Variable".  There is no difference at all.
+
+The field names must consist of one of these keywords and an argument
+(except for "returns" and "rtype", which do not need an argument).
+This is best explained by an example:
+
+   .. py:function:: send_message(sender, recipient, message_body, [priority=1])
+
+      Send a message to a recipient
+
+      :param str sender: The person sending the message
+      :param str recipient: The recipient of the message
+      :param str message_body: The body of the message
+      :param priority: The priority of the message, can be a number 1-5
+      :type priority: integer or None
+      :return: the message id
+      :rtype: int
+      :raises ValueError: if the message_body exceeds 160 characters
+      :raises TypeError: if the message_body is not a basestring
+
+This will render like this:
+
+   send_message(sender, recipient, message_body[, priority=1])
+
+      Send a message to a recipient
+
+      Parameters:
+         * **sender** (*str*) -- The person sending the message
+
+         * **recipient** (*str*) -- The recipient of the message
+
+         * **message_body** (*str*) -- The body of the message
+
+         * **priority** (*integer** or **None*) -- The priority of the
+           message, can be a number 1-5
+
+      Returns:
+         the message id
+
+      Return type:
+         int
+
+      Raises:
+         * **ValueError** -- if the message_body exceeds 160
+           characters
+
+         * **TypeError** -- if the message_body is not a basestring
+
+It is also possible to combine parameter type and description, if the
+type is a single word, like this:
+
+   :param int priority: The priority of the message, can be a number 1-5
+
+New in version 1.5.
+
+Container types such as lists and dictionaries can be linked
+automatically using the following syntax:
+
+   :type priorities: list(int)
+   :type priorities: list[int]
+   :type mapping: dict(str, int)
+   :type mapping: dict[str, int]
+   :type point: tuple(float, float)
+   :type point: tuple[float, float]
+
+Multiple types in a type field will be linked automatically if
+separated by the word "or":
+
+   :type an_arg: int or None
+   :vartype a_var: str or int
+   :rtype: float or str
+
+
+Cross-referencing Python objects
+--------------------------------
+
+The following roles refer to objects in modules and are possibly
+hyperlinked if a matching identifier is found:
+
+:py:mod:
+
+   Reference a module; a dotted name may be used.  This should also be
+   used for package names.
+
+:py:func:
+
+   Reference a Python function; dotted names may be used.  The role
+   text needs not include trailing parentheses to enhance readability;
+   they will be added automatically by Sphinx if the
+   >>:confval:`add_function_parentheses`<< config value is "True" (the
+   default).
+
+:py:data:
+
+   Reference a module-level variable.
+
+:py:const:
+
+   Reference a "defined" constant.  This may be a Python variable that
+   is not intended to be changed.
+
+:py:class:
+
+   Reference a class; a dotted name may be used.
+
+:py:meth:
+
+   Reference a method of an object.  The role text can include the
+   type name and the method name; if it occurs within the description
+   of a type, the type name can be omitted.  A dotted name may be
+   used.
+
+:py:attr:
+
+   Reference a data attribute of an object.
+
+:py:exc:
+
+   Reference an exception.  A dotted name may be used.
+
+:py:obj:
+
+   Reference an object of unspecified type.  Useful e.g. as the
+   >>:confval:`default_role`<<.
+
+   New in version 0.4.
+
+The name enclosed in this markup can include a module name and/or a
+class name. For example, ":py:func:`filter`" could refer to a function
+named "filter" in the current module, or the built-in function of that
+name.  In contrast, ":py:func:`foo.filter`" clearly refers to the
+"filter" function in the "foo" module.
+
+Normally, names in these roles are searched first without any further
+qualification, then with the current module name prepended, then with
+the current module and class name (if any) prepended.  If you prefix
+the name with a dot, this order is reversed.  For example, in the
+documentation of Python's "codecs" module, ":py:func:`open`" always
+refers to the built-in function, while ":py:func:`.open`" refers to
+"codecs.open()".
+
+A similar heuristic is used to determine whether the name is an
+attribute of the currently documented class.
+
+Also, if the name is prefixed with a dot, and no exact match is found,
+the target is taken as a suffix and all object names with that suffix
+are searched. For example, ":py:meth:`.TarFile.close`" references the
+"tarfile.TarFile.close()" function, even if the current module is not
+"tarfile".  Since this can get ambiguous, if there is more than one
+possible match, you will get a warning from Sphinx.
+
+Note that you can combine the "~" and "." prefixes:
+":py:meth:`~.TarFile.close`" will reference the
+"tarfile.TarFile.close()" method, but the visible link caption will
+only be "close()".
+
+
+The C Domain
+============
+
+The C domain (name **c**) is suited for documentation of C API.
+
+.. c:member:: declaration
+.. c:var:: declaration
+
+   Describes a C struct member or variable. Example signature:
+
+      .. c:member:: PyObject *PyTypeObject.tp_bases
+
+   The difference between the two directives is only cosmetic.
+
+.. c:function:: function prototype
+
+   Describes a C function. The signature should be given as in C,
+   e.g.:
+
+      .. c:function:: PyObject *PyType_GenericAlloc(PyTypeObject *type, Py_ssize_t nitems)
+
+   Note that you don't have to backslash-escape asterisks in the
+   signature, as it is not parsed by the reST inliner.
+
+.. c:macro:: name
+.. c:macro:: name(arg list)
+
+   Describes a C macro, i.e., a C-language "#define", without the
+   replacement text.
+
+   New in version 3.0: The function style variant.
+
+.. c:struct:: name
+
+   Describes a C struct.
+
+   New in version 3.0.
+
+.. c:union:: name
+
+   Describes a C union.
+
+   New in version 3.0.
+
+.. c:enum:: name
+
+   Describes a C enum.
+
+   New in version 3.0.
+
+.. c:enumerator:: name
+
+   Describes a C enumerator.
+
+   New in version 3.0.
+
+.. c:type:: typedef-like declaration
+.. c:type:: name
+
+   Describes a C type, either as a typedef, or the alias for an
+   unspecified type.
+
+
+Cross-referencing C constructs
+------------------------------
+
+The following roles create cross-references to C-language constructs
+if they are defined in the documentation:
+
+:c:member:
+:c:data:
+:c:var:
+:c:func:
+:c:macro:
+:c:struct:
+:c:union:
+:c:enum:
+:c:enumerator:
+:c:type:
+
+   Reference a C declaration, as defined above. Note that "c:member",
+   "c:data", and "c:var" are equivalent.
+
+   New in version 3.0: The var, struct, union, enum, and enumerator
+   roles.
+
+
+Anonymous Entities
+------------------
+
+C supports anonymous structs, enums, and unions. For the sake of
+documentation they must be given some name that starts with "@", e.g.,
+"@42" or "@data". These names can also be used in cross-references,
+though nested symbols will be found even when omitted. The "@..." name
+will always be rendered as **[anonymous]** (possibly as a link).
+
+Example:
+
+   .. c:struct:: Data
+
+      .. c:union:: @data
+
+         .. c:var:: int a
+
+         .. c:var:: double b
+
+   Explicit ref: :c:var:`Data.@data.a`. Short-hand ref: :c:var:`Data.a`.
+
+This will be rendered as:
+
+struct Data
+
+   union **[anonymous]**
+
+      int a
+
+      double b
+
+Explicit ref: "Data.[anonymous].a". Short-hand ref: "Data.a".
+
+New in version 3.0.
+
+
+Aliasing Declarations
+---------------------
+
+Sometimes it may be helpful list declarations elsewhere than their
+main documentation, e.g., when creating a synopsis of an interface.
+The following directive can be used for this purpose.
+
+.. c:alias:: name
+
+   Insert one or more alias declarations. Each entity can be specified
+   as they can in the "c:any" role.
+
+   For example:
+
+      .. c:var:: int data
+      .. c:function:: int f(double k)
+
+      .. c:alias:: data
+                   f
+
+   becomes
+
+   int data
+
+   int f(double k)
+
+   int data
+   int f(double k)
+   New in version 3.2.
+
+   -[ Options ]-
+
+   :maxdepth: int
+
+      Insert nested declarations as well, up to the total depth given.
+      Use 0 for infinite depth and 1 for just the mentioned
+      declaration. Defaults to 1.
+
+      New in version 3.3.
+
+
+Inline Expressions and Types
+----------------------------
+
+:c:expr:
+:c:texpr:
+
+   Insert a C expression or type either as inline code ("cpp:expr") or
+   inline text ("cpp:texpr"). For example:
+
+      .. c:var:: int a = 42
+
+      .. c:function:: int f(int i)
+
+      An expression: :c:expr:`a * f(a)` (or as text: :c:texpr:`a * f(a)`).
+
+      A type: :c:expr:`const Data*`
+      (or as text :c:texpr:`const Data*`).
+
+   will be rendered as follows:
+
+   int a = 42
+
+   int f(int i)
+
+   An expression: "a * f(a)" (or as text: *a * f(a)*).
+
+   A type: "const Data*" (or as text *const Data**).
+
+   New in version 3.0.
+
+
+Namespacing
+-----------
+
+New in version 3.1.
+
+The C language it self does not support namespacing, but it can
+sometimes be useful to emulate it in documentation, e.g., to show
+alternate declarations. The feature may also be used to document
+members of structs/unions/enums separate from their parent
+declaration.
+
+The current scope can be changed using three namespace directives.
+They manage a stack declarations where "c:namespace" resets the stack
+and changes a given scope.
+
+The "c:namespace-push" directive changes the scope to a given inner
+scope of the current one.
+
+The "c:namespace-pop" directive undoes the most recent "c:namespace-
+push" directive.
+
+.. c:namespace:: scope specification
+
+   Changes the current scope for the subsequent objects to the given
+   scope, and resets the namespace directive stack. Note that nested
+   scopes can be specified by separating with a dot, e.g.:
+
+      .. c:namespace:: Namespace1.Namespace2.SomeStruct.AnInnerStruct
+
+   All subsequent objects will be defined as if their name were
+   declared with the scope prepended. The subsequent cross-references
+   will be searched for starting in the current scope.
+
+   Using "NULL" or "0" as the scope will change to global scope.
+
+.. c:namespace-push:: scope specification
+
+   Change the scope relatively to the current scope. For example,
+   after:
+
+      .. c:namespace:: A.B
+
+      .. c:namespace-push:: C.D
+
+   the current scope will be "A.B.C.D".
+
+.. c:namespace-pop::
+
+   Undo the previous "c:namespace-push" directive (*not* just pop a
+   scope). For example, after:
+
+      .. c:namespace:: A.B
+
+      .. c:namespace-push:: C.D
+
+      .. c:namespace-pop::
+
+   the current scope will be "A.B" (*not* "A.B.C").
+
+   If no previous "c:namespace-push" directive has been used, but only
+   a "c:namespace" directive, then the current scope will be reset to
+   global scope.  That is, ".. c:namespace:: A.B" is equivalent to:
+
+      .. c:namespace:: NULL
+
+      .. c:namespace-push:: A.B
+
+
+Configuration Variables
+-----------------------
+
+See Options for the C domain.
+
+
+The C++ Domain
+==============
+
+The C++ domain (name **cpp**) supports documenting C++ projects.
+
+
+Directives for Declaring Entities
+---------------------------------
+
+The following directives are available. All declarations can start
+with a visibility statement ("public", "private" or "protected").
+
+.. cpp:class:: class specifier
+.. cpp:struct:: class specifier
+
+   Describe a class/struct, possibly with specification of
+   inheritance, e.g.,:
+
+      .. cpp:class:: MyClass : public MyBase, MyOtherBase
+
+   The difference between "cpp:class" and "cpp:struct" is only
+   cosmetic: the prefix rendered in the output, and the specifier
+   shown in the index.
+
+   The class can be directly declared inside a nested scope, e.g.,:
+
+      .. cpp:class:: OuterScope::MyClass : public MyBase, MyOtherBase
+
+   A class template can be declared:
+
+      .. cpp:class:: template<typename T, std::size_t N> std::array
+
+   or with a line break:
+
+      .. cpp:class:: template<typename T, std::size_t N> \
+                     std::array
+
+   Full and partial template specialisations can be declared:
+
+      .. cpp:class:: template<> \
+                     std::array<bool, 256>
+
+      .. cpp:class:: template<typename T> \
+                     std::array<T, 42>
+
+   New in version 2.0: The "cpp:struct" directive.
+
+.. cpp:function:: (member) function prototype
+
+   Describe a function or member function, e.g.,:
+
+      .. cpp:function:: bool myMethod(int arg1, std::string arg2)
+
+         A function with parameters and types.
+
+      .. cpp:function:: bool myMethod(int, double)
+
+         A function with unnamed parameters.
+
+      .. cpp:function:: const T &MyClass::operator[](std::size_t i) const
+
+         An overload for the indexing operator.
+
+      .. cpp:function:: operator bool() const
+
+         A casting operator.
+
+      .. cpp:function:: constexpr void foo(std::string &bar[2]) noexcept
+
+         A constexpr function.
+
+      .. cpp:function:: MyClass::MyClass(const MyClass&) = default
+
+         A copy constructor with default implementation.
+
+   Function templates can also be described:
+
+      .. cpp:function:: template<typename U> \
+                        void print(U &&u)
+
+   and function template specialisations:
+
+      .. cpp:function:: template<> \
+                        void print(int i)
+
+.. cpp:member:: (member) variable declaration
+.. cpp:var:: (member) variable declaration
+
+   Describe a variable or member variable, e.g.,:
+
+      .. cpp:member:: std::string MyClass::myMember
+
+      .. cpp:var:: std::string MyClass::myOtherMember[N][M]
+
+      .. cpp:member:: int a = 42
+
+   Variable templates can also be described:
+
+      .. cpp:member:: template<class T> \
+                      constexpr T pi = T(3.1415926535897932385)
+
+.. cpp:type:: typedef declaration
+.. cpp:type:: name
+.. cpp:type:: type alias declaration
+
+   Describe a type as in a typedef declaration, a type alias
+   declaration, or simply the name of a type with unspecified type,
+   e.g.,:
+
+      .. cpp:type:: std::vector<int> MyList
+
+         A typedef-like declaration of a type.
+
+      .. cpp:type:: MyContainer::const_iterator
+
+         Declaration of a type alias with unspecified type.
+
+      .. cpp:type:: MyType = std::unordered_map<int, std::string>
+
+         Declaration of a type alias.
+
+   A type alias can also be templated:
+
+      .. cpp:type:: template<typename T> \
+                    MyContainer = std::vector<T>
+
+   The example are rendered as follows.
+
+   typedef std::vector<int> MyList
+
+      A typedef-like declaration of a type.
+
+   type MyContainer::const_iterator
+
+      Declaration of a type alias with unspecified type.
+
+   using MyType = std::unordered_map<int, std::string>
+
+      Declaration of a type alias.
+
+   template<typename T>
+   using MyContainer = std::vector<T>
+
+.. cpp:enum:: unscoped enum declaration
+.. cpp:enum-struct:: scoped enum declaration
+.. cpp:enum-class:: scoped enum declaration
+
+   Describe a (scoped) enum, possibly with the underlying type
+   specified.  Any enumerators declared inside an unscoped enum will
+   be declared both in the enum scope and in the parent scope.
+   Examples:
+
+      .. cpp:enum:: MyEnum
+
+         An unscoped enum.
+
+      .. cpp:enum:: MySpecificEnum : long
+
+         An unscoped enum with specified underlying type.
+
+      .. cpp:enum-class:: MyScopedEnum
+
+         A scoped enum.
+
+      .. cpp:enum-struct:: protected MyScopedVisibilityEnum : std::underlying_type<MySpecificEnum>::type
+
+         A scoped enum with non-default visibility, and with a specified
+         underlying type.
+
+.. cpp:enumerator:: name
+.. cpp:enumerator:: name = constant
+
+   Describe an enumerator, optionally with its value defined, e.g.,:
+
+      .. cpp:enumerator:: MyEnum::myEnumerator
+
+      .. cpp:enumerator:: MyEnum::myOtherEnumerator = 42
+
+.. cpp:union:: name
+
+   Describe a union.
+
+   New in version 1.8.
+
+.. cpp:concept:: template-parameter-list name
+
+   Warning:
+
+     The support for concepts is experimental. It is based on the
+     current draft standard and the Concepts Technical Specification.
+     The features may change as they evolve.
+
+   Describe a concept. It must have exactly 1 template parameter list.
+   The name may be a nested name. Example:
+
+      .. cpp:concept:: template<typename It> std::Iterator
+
+         Proxy to an element of a notional sequence that can be compared,
+         indirected, or incremented.
+
+         **Notation**
+
+         .. cpp:var:: It r
+
+            An lvalue.
+
+         **Valid Expressions**
+
+         - :cpp:expr:`*r`, when :cpp:expr:`r` is dereferenceable.
+         - :cpp:expr:`++r`, with return type :cpp:expr:`It&`, when
+           :cpp:expr:`r` is incrementable.
+
+   This will render as follows:
+
+   template<typename It>
+   concept std::Iterator
+
+      Proxy to an element of a notional sequence that can be compared,
+      indirected, or incremented.
+
+      **Notation**
+
+      It r
+
+         An lvalue.
+
+      **Valid Expressions**
+
+      * "*r", when "r" is dereferenceable.
+
+      * "++r", with return type "It&", when "r" is incrementable.
+
+   New in version 1.5.
+
+
+Options
+~~~~~~~
+
+Some directives support options:
+
+* ":noindexentry:", see Basic Markup.
+
+* ":tparam-line-spec:", for templated declarations. If specified, each
+  template parameter will be rendered on a separate line.
+
+  New in version 1.6.
+
+
+Anonymous Entities
+------------------
+
+C++ supports anonymous namespaces, classes, enums, and unions. For the
+sake of documentation they must be given some name that starts with
+"@", e.g., "@42" or "@data". These names can also be used in cross-
+references and (type) expressions, though nested symbols will be found
+even when omitted. The "@..." name will always be rendered as
+**[anonymous]** (possibly as a link).
+
+Example:
+
+   .. cpp:class:: Data
+
+      .. cpp:union:: @data
+
+         .. cpp:var:: int a
+
+         .. cpp:var:: double b
+
+   Explicit ref: :cpp:var:`Data::@data::a`. Short-hand ref: :cpp:var:`Data::a`.
+
+This will be rendered as:
+
+class Data
+
+   union **[anonymous]**
+
+      int a
+
+      double b
+
+Explicit ref: "Data::[anonymous]::a". Short-hand ref: "Data::a".
+
+New in version 1.8.
+
+
+Aliasing Declarations
+---------------------
+
+Sometimes it may be helpful list declarations elsewhere than their
+main documentation, e.g., when creating a synopsis of a class
+interface. The following directive can be used for this purpose.
+
+.. cpp:alias:: name or function signature
+
+   Insert one or more alias declarations. Each entity can be specified
+   as they can in the "cpp:any" role. If the name of a function is
+   given (as opposed to the complete signature), then all overloads of
+   the function will be listed.
+
+   For example:
+
+      .. cpp:alias:: Data::a
+                     overload_example::C::f
+
+   becomes
+
+   int a
+   void f(double d) const
+   void f(double d)
+   void f(int i)
+   void f()
+
+   whereas:
+
+      .. cpp:alias:: void overload_example::C::f(double d) const
+                     void overload_example::C::f(double d)
+
+   becomes
+
+   void f(double d) const
+   void f(double d)
+
+   New in version 2.0.
+
+
+Constrained Templates
+---------------------
+
+Warning:
+
+  The support for concepts is experimental. It is based on the current
+  draft standard and the Concepts Technical Specification. The
+  features may change as they evolve.
+
+Note:
+
+  Sphinx does not currently support "requires" clauses.
+
+
+Placeholders
+~~~~~~~~~~~~
+
+Declarations may use the name of a concept to introduce constrained
+template parameters, or the keyword "auto" to introduce unconstrained
+template parameters:
+
+   .. cpp:function:: void f(auto &&arg)
+
+      A function template with a single unconstrained template parameter.
+
+   .. cpp:function:: void f(std::Iterator it)
+
+      A function template with a single template parameter, constrained by the
+      Iterator concept.
+
+
+Template Introductions
+~~~~~~~~~~~~~~~~~~~~~~
+
+Simple constrained function or class templates can be declared with a
+*template introduction* instead of a template parameter list:
+
+   .. cpp:function:: std::Iterator{It} void advance(It &it)
+
+       A function template with a template parameter constrained to be an
+       Iterator.
+
+   .. cpp:class:: std::LessThanComparable{T} MySortedContainer
+
+       A class template with a template parameter constrained to be
+       LessThanComparable.
+
+They are rendered as follows.
+
+std::Iterator{It}
+void advance(It &it)
+
+   A function template with a template parameter constrained to be an
+   Iterator.
+
+std::LessThanComparable{T}
+class MySortedContainer
+
+   A class template with a template parameter constrained to be
+   LessThanComparable.
+
+Note however that no checking is performed with respect to parameter
+compatibility. E.g., "Iterator{A, B, C}" will be accepted as an
+introduction even though it would not be valid C++.
+
+
+Inline Expressions and Types
+----------------------------
+
+:cpp:expr:
+:cpp:texpr:
+
+   Insert a C++ expression or type either as inline code ("cpp:expr")
+   or inline text ("cpp:texpr"). For example:
+
+      .. cpp:var:: int a = 42
+
+      .. cpp:function:: int f(int i)
+
+      An expression: :cpp:expr:`a * f(a)` (or as text: :cpp:texpr:`a * f(a)`).
+
+      A type: :cpp:expr:`const MySortedContainer<int>&`
+      (or as text :cpp:texpr:`const MySortedContainer<int>&`).
+
+   will be rendered as follows:
+
+   int a = 42
+
+   int f(int i)
+
+   An expression: "a * f(a)" (or as text: *a * f(a)*).
+
+   A type: "const MySortedContainer<int>&" (or as text *const
+   MySortedContainer<int>&*).
+
+   New in version 1.7: The "cpp:expr" role.
+
+   New in version 1.8: The "cpp:texpr" role.
+
+
+Namespacing
+-----------
+
+Declarations in the C++ domain are as default placed in global scope.
+The current scope can be changed using three namespace directives.
+They manage a stack declarations where "cpp:namespace" resets the
+stack and changes a given scope.
+
+The "cpp:namespace-push" directive changes the scope to a given inner
+scope of the current one.
+
+The "cpp:namespace-pop" directive undoes the most recent "cpp
+:namespace-push" directive.
+
+.. cpp:namespace:: scope specification
+
+   Changes the current scope for the subsequent objects to the given
+   scope, and resets the namespace directive stack.  Note that the
+   namespace does not need to correspond to C++ namespaces, but can
+   end in names of classes, e.g.,:
+
+      .. cpp:namespace:: Namespace1::Namespace2::SomeClass::AnInnerClass
+
+   All subsequent objects will be defined as if their name were
+   declared with the scope prepended. The subsequent cross-references
+   will be searched for starting in the current scope.
+
+   Using "NULL", "0", or "nullptr" as the scope will change to global
+   scope.
+
+   A namespace declaration can also be templated, e.g.,:
+
+      .. cpp:class:: template<typename T> \
+                     std::vector
+
+      .. cpp:namespace:: template<typename T> std::vector
+
+      .. cpp:function:: std::size_t size() const
+
+   declares "size" as a member function of the class template
+   "std::vector".  Equivalently this could have been declared using:
+
+      .. cpp:class:: template<typename T> \
+                     std::vector
+
+         .. cpp:function:: std::size_t size() const
+
+   or:
+
+      .. cpp:class:: template<typename T> \
+                     std::vector
+
+.. cpp:namespace-push:: scope specification
+
+   Change the scope relatively to the current scope. For example,
+   after:
+
+      .. cpp:namespace:: A::B
+
+      .. cpp:namespace-push:: C::D
+
+   the current scope will be "A::B::C::D".
+
+   New in version 1.4.
+
+.. cpp:namespace-pop::
+
+   Undo the previous "cpp:namespace-push" directive (*not* just pop a
+   scope). For example, after:
+
+      .. cpp:namespace:: A::B
+
+      .. cpp:namespace-push:: C::D
+
+      .. cpp:namespace-pop::
+
+   the current scope will be "A::B" (*not* "A::B::C").
+
+   If no previous "cpp:namespace-push" directive has been used, but
+   only a "cpp:namespace" directive, then the current scope will be
+   reset to global scope.  That is, ".. cpp:namespace:: A::B" is
+   equivalent to:
+
+      .. cpp:namespace:: nullptr
+
+      .. cpp:namespace-push:: A::B
+
+   New in version 1.4.
+
+
+Info field lists
+----------------
+
+The C++ directives support the following info fields (see also Info
+field lists):
+
+* *param*, *parameter*, *arg*, *argument*: Description of a parameter.
+
+* *tparam*: Description of a template parameter.
+
+* *returns*, *return*: Description of a return value.
+
+* *throws*, *throw*, *exception*: Description of a possibly thrown
+  exception.
+
+
+Cross-referencing
+-----------------
+
+These roles link to the given declaration types:
+
+:cpp:any:
+:cpp:class:
+:cpp:struct:
+:cpp:func:
+:cpp:member:
+:cpp:var:
+:cpp:type:
+:cpp:concept:
+:cpp:enum:
+:cpp:enumerator:
+
+   Reference a C++ declaration by name (see below for details).  The
+   name must be properly qualified relative to the position of the
+   link.
+
+   New in version 2.0: The "cpp:struct" role as alias for the
+   "cpp:class" role.
+
+Note on References with Templates Parameters/Arguments: These roles
+follow the Sphinx Cross-referencing syntax rules. This means care must
+be taken when referencing a (partial) template specialization, e.g. if
+the link looks like this: ":cpp:class:`MyClass<int>`". This is
+interpreted as a link to "int" with a title of "MyClass". In this
+case, escape the opening angle bracket with a backslash, like this:
+":cpp:class:`MyClass\<int>`".When a custom title is not needed it may
+be useful to use the roles for inline expressions, "cpp:expr" and
+"cpp:texpr", where angle brackets do not need escaping.
+
+
+Declarations without template parameters and template arguments
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+For linking to non-templated declarations the name must be a nested
+name, e.g., "f" or "MyClass::f".
+
+
+Overloaded (member) functions
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+When a (member) function is referenced using just its name, the
+reference will point to an arbitrary matching overload. The "cpp:any"
+and "cpp:func" roles use an alternative format, which simply is a
+complete function declaration. This will resolve to the exact matching
+overload. As example, consider the following class declaration:
+
+class C
+
+   void f(double d) const
+
+   void f(double d)
+
+   void f(int i)
+
+   void f()
+
+References using the "cpp:func" role:
+
+* Arbitrary overload: "C::f", "C::f()"
+
+* Also arbitrary overload: "C::f()", "C::f()"
+
+* Specific overload: "void C::f()", "void C::f()"
+
+* Specific overload: "void C::f(int)", "void C::f(int)"
+
+* Specific overload: "void C::f(double)", "void C::f(double)"
+
+* Specific overload: "void C::f(double) const", "void C::f(double)
+  const"
+
+Note that the >>:confval:`add_function_parentheses`<< configuration
+variable does not influence specific overload references.
+
+
+Templated declarations
+~~~~~~~~~~~~~~~~~~~~~~
+
+Assume the following declarations.
+
+class Wrapper
+
+   template<typename TOuter>
+   class Outer
+
+      template<typename TInner>
+      class Inner
+
+In general the reference must include the template parameter
+declarations, and template arguments for the prefix of qualified
+names. For example:
+
+* "template\<typename TOuter> Wrapper::Outer" ("template<typename
+  TOuter> Wrapper::Outer")
+
+* "template\<typename TOuter> template\<typename TInner>
+  Wrapper::Outer<TOuter>::Inner" ("template<typename TOuter>
+  template<typename TInner> Wrapper::Outer<TOuter>::Inner")
+
+Currently the lookup only succeed if the template parameter
+identifiers are equal strings.  That is, "template\<typename UOuter>
+Wrapper::Outer" will not work.
+
+As a shorthand notation, if a template parameter list is omitted, then
+the lookup will assume either a primary template or a non-template,
+but not a partial template specialisation. This means the following
+references work as well:
+
+* "Wrapper::Outer" ("Wrapper::Outer")
+
+* "Wrapper::Outer::Inner" ("Wrapper::Outer::Inner")
+
+* "template\<typename TInner> Wrapper::Outer::Inner"
+  ("template<typename TInner> Wrapper::Outer::Inner")
+
+
+(Full) Template Specialisations
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Assume the following declarations.
+
+template<typename TOuter>
+class Outer
+
+   template<typename TInner>
+   class Inner
+
+template<>
+class Outer<int>
+
+   template<typename TInner>
+   class Inner
+
+   template<>
+   class Inner<bool>
+
+In general the reference must include a template parameter list for
+each template argument list.  The full specialisation above can
+therefore be referenced with "template\<> Outer\<int>" ("template<>
+Outer<int>") and "template\<> template\<> Outer\<int>::Inner\<bool>"
+("template<> template<> Outer<int>::Inner<bool>").  As a shorthand the
+empty template parameter list can be omitted, e.g., "Outer\<int>"
+("Outer<int>") and "Outer\<int>::Inner\<bool>"
+("Outer<int>::Inner<bool>").
+
+
+Partial Template Specialisations
+~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+
+Assume the following declaration.
+
+template<typename T>
+class Outer<T*>
+
+References to partial specialisations must always include the template
+parameter lists, e.g., "template\<typename T> Outer\<T*>"
+("template<typename T> Outer<T*>").  Currently the lookup only succeed
+if the template parameter identifiers are equal strings.
+
+
+Configuration Variables
+-----------------------
+
+See Options for the C++ domain.
+
+
+The Standard Domain
+===================
+
+The so-called "standard" domain collects all markup that doesn't
+warrant a domain of its own.  Its directives and roles are not
+prefixed with a domain name.
+
+The standard domain is also where custom object descriptions, added
+using the "add_object_type()" API, are placed.
+
+There is a set of directives allowing documenting command-line
+programs:
+
+.. option:: name args, name args, ...
+
+   Describes a command line argument or switch.  Option argument names
+   should be enclosed in angle brackets.  Examples:
+
+      .. option:: dest_dir
+
+         Destination directory.
+
+      .. option:: -m <module>, --module <module>
+
+         Run a module as a script.
+
+   The directive will create cross-reference targets for the given
+   options, referenceable by "option" (in the example case, you'd use
+   something like ":option:`dest_dir`", ":option:`-m`", or
+   ":option:`--module`").
+
+   "cmdoption" directive is a deprecated alias for the "option"
+   directive.
+
+.. envvar:: name
+
+   Describes an environment variable that the documented code or
+   program uses or defines.  Referenceable by "envvar".
+
+.. program:: name
+
+   Like "py:currentmodule", this directive produces no output.
+   Instead, it serves to notify Sphinx that all following "option"
+   directives document options for the program called *name*.
+
+   If you use "program", you have to qualify the references in your
+   "option" roles by the program name, so if you have the following
+   situation
+
+      .. program:: rm
+
+      .. option:: -r
+
+         Work recursively.
+
+      .. program:: svn
+
+      .. option:: -r revision
+
+         Specify the revision to work upon.
+
+   then ":option:`rm -r`" would refer to the first option, while
+   ":option:`svn -r`" would refer to the second one.
+
+   The program name may contain spaces (in case you want to document
+   subcommands like "svn add" and "svn commit" separately).
+
+   New in version 0.5.
+
+There is also a very generic object description directive, which is
+not tied to any domain:
+
+.. describe:: text
+.. object:: text
+
+   This directive produces the same formatting as the specific ones
+   provided by domains, but does not create index entries or cross-
+   referencing targets. Example:
+
+      .. describe:: PAPER
+
+         You can set this variable to select a paper size.
+
+
+The JavaScript Domain
+=====================
+
+The JavaScript domain (name **js**) provides the following directives:
+
+.. js:module:: name
+
+   This directive sets the module name for object declarations that
+   follow after. The module name is used in the global module index
+   and in cross references. This directive does not create an object
+   heading like "py:class" would, for example.
+
+   By default, this directive will create a linkable entity and will
+   cause an entry in the global module index, unless the "noindex"
+   option is specified.  If this option is specified, the directive
+   will only update the current module name.
+
+   New in version 1.6.
+
+.. js:function:: name(signature)
+
+   Describes a JavaScript function or method.  If you want to describe
+   arguments as optional use square brackets as documented for Python
+   signatures.
+
+   You can use fields to give more details about arguments and their
+   expected types, errors which may be thrown by the function, and the
+   value being returned:
+
+      .. js:function:: $.getJSON(href, callback[, errback])
+
+         :param string href: An URI to the location of the resource.
+         :param callback: Gets called with the object.
+         :param errback:
+             Gets called in case the request fails. And a lot of other
+             text so we need multiple lines.
+         :throws SomeError: For whatever reason in that case.
+         :returns: Something.
+
+   This is rendered as:
+
+      $.getJSON(href, callback[, errback])
+
+         Arguments:
+            * **href** (*string*) -- An URI to the location of the
+              resource.
+
+            * **callback** -- Gets called with the object.
+
+            * **errback** -- Gets called in case the request fails.
+              And a lot of other text so we need multiple lines.
+
+         Throws:
+            **SomeError** -- For whatever reason in that case.
+
+         Returns:
+            Something.
+
+.. js:method:: name(signature)
+
+   This directive is an alias for "js:function", however it describes
+   a function that is implemented as a method on a class object.
+
+   New in version 1.6.
+
+.. js:class:: name
+
+   Describes a constructor that creates an object.  This is basically
+   like a function but will show up with a *class* prefix:
+
+      .. js:class:: MyAnimal(name[, age])
+
+         :param string name: The name of the animal
+         :param number age: an optional age for the animal
+
+   This is rendered as:
+
+      class MyAnimal(name[, age])
+
+         Arguments:
+            * **name** (*string*) -- The name of the animal
+
+            * **age** (*number*) -- an optional age for the animal
+
+.. js:data:: name
+
+   Describes a global variable or constant.
+
+.. js:attribute:: object.name
+
+   Describes the attribute *name* of *object*.
+
+These roles are provided to refer to the described objects:
+
+:js:mod:
+:js:func:
+:js:meth:
+:js:class:
+:js:data:
+:js:attr:
+
+
+The reStructuredText domain
+===========================
+
+The reStructuredText domain (name **rst**) provides the following
+directives:
+
+.. rst:directive:: name
+
+   Describes a reST directive.  The *name* can be a single directive
+   name or actual directive syntax (*..* prefix and *::* suffix) with
+   arguments that will be rendered differently.  For example:
+
+      .. rst:directive:: foo
+
+         Foo description.
+
+      .. rst:directive:: .. bar:: baz
+
+         Bar description.
+
+   will be rendered as:
+
+      .. foo::
+
+         Foo description.
+
+      .. bar:: baz
+
+         Bar description.
+
+.. rst:directive:option:: name
+
+   Describes an option for reST directive.  The *name* can be a single
+   option name or option name with arguments which separated with
+   colon (":"). For example:
+
+      .. rst:directive:: toctree
+
+         .. rst:directive:option:: caption: caption of ToC
+
+         .. rst:directive:option:: glob
+
+   will be rendered as:
+
+      .. toctree::
+
+         :caption: caption of ToC
+
+         :glob:
+
+   -[ options ]-
+
+   :type: description of argument (text)
+
+      Describe the type of option value.
+
+      For example:
+
+         .. rst:directive:: toctree
+
+            .. rst:directive:option:: maxdepth
+               :type: integer or no value
+
+      New in version 2.1.
+
+.. rst:role:: name
+
+   Describes a reST role.  For example:
+
+      .. rst:role:: foo
+
+         Foo description.
+
+   will be rendered as:
+
+      :foo:
+
+         Foo description.
+
+These roles are provided to refer to the described objects:
+
+:rst:dir:
+:rst:role:
+
+
+The Math Domain
+===============
+
+The math domain (name **math**) provides the following roles:
+
+:math:numref:
+
+   Role for cross-referencing equations defined by "math" directive
+   via their label.  Example:
+
+      .. math:: e^{i\pi} + 1 = 0
+         :label: euler
+
+      Euler's identity, equation :math:numref:`euler`, was elected one of the
+      most beautiful mathematical formulas.
+
+   New in version 1.8.
+
+
+More domains
+============
+
+The sphinx-contrib repository contains more domains available as
+extensions; currently Ada, CoffeeScript, Erlang, HTTP, Lasso, MATLAB,
+PHP, and Ruby domains. Also available are domains for Chapel, Common
+Lisp, dqn, Go, Jinja, Operation, and Scala.
diff --git a/_build/doc/usage/restructuredtext/field-lists.txt b/_build/doc/usage/restructuredtext/field-lists.txt
new file mode 100644
index 000000000..b1f9e11dc
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/field-lists.txt
@@ -0,0 +1,77 @@
+Field Lists
+***********
+
+As previously discussed, field lists are sequences of fields marked up
+like this:
+
+   :fieldname: Field content
+
+Sphinx extends standard docutils behavior for field lists and adds
+some extra functionality that is covered in this section.
+
+Note:
+
+  The values of field lists will be parsed as strings. You cannot use
+  Python collections such as lists or dictionaries.
+
+
+File-wide metadata
+==================
+
+A field list near the top of a file is normally parsed by docutils as
+the *docinfo* and shown on the page.  However, in Sphinx, a field list
+preceding any other markup is moved from the *docinfo* to the Sphinx
+environment as document metadata, and is not displayed in the output.
+
+Note:
+
+  A field list appearing after the document title *will* be part of
+  the *docinfo* as normal and will be displayed in the output.
+
+
+Special metadata fields
+=======================
+
+Sphinx provides custom behavior for bibliographic fields compared to
+docutils.
+
+At the moment, these metadata fields are recognized:
+
+"tocdepth"
+   The maximum depth for a table of contents of this file.
+
+      :tocdepth: 2
+
+   Note:
+
+     This metadata effects to the depth of local toctree.  But it does
+     not effect to the depth of *global* toctree.  So this would not
+     be change the sidebar of some themes which uses global one.
+
+   New in version 0.4.
+
+"nocomments"
+   If set, the web application won't display a comment form for a page
+   generated from this source file.
+
+      :nocomments:
+
+"orphan"
+   If set, warnings about this file not being included in any toctree
+   will be suppressed.
+
+      :orphan:
+
+   New in version 1.0.
+
+"nosearch"
+   If set, full text search for this file is disabled.
+
+      :nosearch:
+
+   Note:
+
+     object search is still available even if *nosearch* option is
+     set.
+
+   New in version 3.0.
diff --git a/_build/doc/usage/restructuredtext/index.txt b/_build/doc/usage/restructuredtext/index.txt
new file mode 100644
index 000000000..275569434
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/index.txt
@@ -0,0 +1,111 @@
+reStructuredText
+****************
+
+reStructuredText (reST) is the default plaintext markup language used
+by both Docutils and Sphinx. Docutils provides the basic
+reStructuredText syntax, while Sphinx extends this to support
+additional functionality.
+
+The below guides go through the most important aspects of reST. For
+the authoritative reStructuredText reference, refer to the docutils
+documentation.
+
+* reStructuredText Primer
+
+  * Paragraphs
+
+  * Inline markup
+
+  * Lists and Quote-like blocks
+
+  * Literal blocks
+
+  * Doctest blocks
+
+  * Tables
+
+  * Hyperlinks
+
+  * Sections
+
+  * Field Lists
+
+  * Roles
+
+  * Explicit Markup
+
+  * Directives
+
+  * Images
+
+  * Footnotes
+
+  * Citations
+
+  * Substitutions
+
+  * Comments
+
+  * HTML Metadata
+
+  * Source encoding
+
+  * Gotchas
+
+* Roles
+
+  * Cross-referencing syntax
+
+  * Math
+
+  * Other semantic markup
+
+  * Substitutions
+
+* Directives
+
+  * Table of contents
+
+  * Paragraph-level markup
+
+  * Showing code examples
+
+  * Glossary
+
+  * Meta-information markup
+
+  * Index-generating markup
+
+  * Including content based on tags
+
+  * Tables
+
+  * Math
+
+  * Grammar production displays
+
+* Field Lists
+
+  * File-wide metadata
+
+  * Special metadata fields
+
+* Domains
+
+  * Basic Markup
+
+  * The Python Domain
+
+  * The C Domain
+
+  * The C++ Domain
+
+  * The Standard Domain
+
+  * The JavaScript Domain
+
+  * The reStructuredText domain
+
+  * The Math Domain
+
+  * More domains
diff --git a/_build/doc/usage/restructuredtext/roles.txt b/_build/doc/usage/restructuredtext/roles.txt
new file mode 100644
index 000000000..1b30d29bf
--- /dev/null
+++ b/_build/doc/usage/restructuredtext/roles.txt
@@ -0,0 +1,481 @@
+Roles
+*****
+
+Sphinx uses interpreted text roles to insert semantic markup into
+documents. They are written as ":rolename:`content`".
+
+Note:
+
+  The default role ("`content`") has no special meaning by default.
+  You are free to use it for anything you like, e.g. variable names;
+  use the >>:confval:`default_role`<< config value to set it to a
+  known role -- the "any" role to find anything or the "py:obj" role
+  to find Python objects are very useful for this.
+
+See */usage/restructuredtext/domains* for roles added by domains.
+
+
+Cross-referencing syntax
+========================
+
+Cross-references are generated by many semantic interpreted text
+roles. Basically, you only need to write ":role:`target`", and a link
+will be created to the item named *target* of the type indicated by
+*role*.  The link's text will be the same as *target*.
+
+There are some additional facilities, however, that make cross-
+referencing roles more versatile:
+
+* You may supply an explicit title and reference target, like in reST
+  direct hyperlinks: ":role:`title <target>`" will refer to *target*,
+  but the link text will be *title*.
+
+* If you prefix the content with "!", no reference/hyperlink will be
+  created.
+
+* If you prefix the content with "~", the link text will only be the
+  last component of the target.  For example,
+  ":py:meth:`~Queue.Queue.get`" will refer to "Queue.Queue.get" but
+  only display "get" as the link text.  This does not work with all
+  cross-reference roles, but is domain specific.
+
+  In HTML output, the link's "title" attribute (that is e.g. shown as
+  a tool-tip on mouse-hover) will always be the full target name.
+
+
+Cross-referencing anything
+--------------------------
+
+:any:
+
+   New in version 1.3.
+
+   This convenience role tries to do its best to find a valid target
+   for its reference text.
+
+   * First, it tries standard cross-reference targets that would be
+     referenced by "doc", "ref" or "option".
+
+     Custom objects added to the standard domain by extensions (see
+     "Sphinx.add_object_type()") are also searched.
+
+   * Then, it looks for objects (targets) in all loaded domains.  It
+     is up to the domains how specific a match must be.  For example,
+     in the Python domain a reference of ":any:`Builder`" would match
+     the "sphinx.builders.Builder" class.
+
+   If none or multiple targets are found, a warning will be emitted.
+   In the case of multiple targets, you can change "any" to a specific
+   role.
+
+   This role is a good candidate for setting
+   >>:confval:`default_role`<<.  If you do, you can write cross-
+   references without a lot of markup overhead.  For example, in this
+   Python function documentation
+
+      .. function:: install()
+
+         This function installs a `handler` for every signal known by the
+         `signal` module.  See the section `about-signals` for more information.
+
+   there could be references to a glossary term (usually
+   ":term:`handler`"), a Python module (usually ":py:mod:`signal`" or
+   ":mod:`signal`") and a section (usually ":ref:`about-signals`").
+
+   The "any" role also works together with the "intersphinx"
+   extension: when no local cross-reference is found, all object types
+   of intersphinx inventories are also searched.
+
+
+Cross-referencing objects
+-------------------------
+
+These roles are described with their respective domains:
+
+* Python
+
+* C
+
+* C++
+
+* JavaScript
+
+* ReST
+
+
+Cross-referencing arbitrary locations
+-------------------------------------
+
+:ref:
+
+   To support cross-referencing to arbitrary locations in any
+   document, the standard reST labels are used.  For this to work
+   label names must be unique throughout the entire documentation.
+   There are two ways in which you can refer to labels:
+
+   * If you place a label directly before a section title, you can
+     reference to it with ":ref:`label-name`".  For example:
+
+        .. _my-reference-label:
+
+        Section to cross-reference
+        --------------------------
+
+        This is the text of the section.
+
+        It refers to the section itself, see :ref:`my-reference-label`.
+
+     The ":ref:" role would then generate a link to the section, with
+     the link title being "Section to cross-reference".  This works
+     just as well when section and reference are in different source
+     files.
+
+     Automatic labels also work with figures. For example:
+
+        .. _my-figure:
+
+        .. figure:: whatever
+
+           Figure caption
+
+     In this case, a  reference ":ref:`my-figure`" would insert a
+     reference to the figure with link text "Figure caption".
+
+     The same works for tables that are given an explicit caption
+     using the >>:dudir:`table`<< directive.
+
+   * Labels that aren't placed before a section title can still be
+     referenced, but you must give the link an explicit title, using
+     this syntax: ":ref:`Link title <label-name>`".
+
+   Note:
+
+     Reference labels must start with an underscore. When referencing
+     a label, the underscore must be omitted (see examples above).
+
+   Using "ref" is advised over standard reStructuredText links to
+   sections (like "`Section title`_") because it works across files,
+   when section headings are changed, will raise warnings if
+   incorrect, and works for all builders that support cross-
+   references.
+
+
+Cross-referencing documents
+---------------------------
+
+New in version 0.6.
+
+There is also a way to directly link to documents:
+
+:doc:
+
+   Link to the specified document; the document name can be specified
+   in absolute or relative fashion.  For example, if the reference
+   ":doc:`parrot`" occurs in the document "sketches/index", then the
+   link refers to "sketches/parrot".  If the reference is
+   ":doc:`/people`" or ":doc:`../people`", the link refers to
+   "people".
+
+   If no explicit link text is given (like usual: ":doc:`Monty Python
+   members </people>`"), the link caption will be the title of the
+   given document.
+
+
+Referencing downloadable files
+------------------------------
+
+New in version 0.6.
+
+:download:
+
+   This role lets you link to files within your source tree that are
+   not reST documents that can be viewed, but files that can be
+   downloaded.
+
+   When you use this role, the referenced file is automatically marked
+   for inclusion in the output when building (obviously, for HTML
+   output only). All downloadable files are put into a
+   "_downloads/<unique hash>/" subdirectory of the output directory;
+   duplicate filenames are handled.
+
+   An example:
+
+      See :download:`this example script <../example.py>`.
+
+   The given filename is usually relative to the directory the current
+   source file is contained in, but if it absolute (starting with
+   "/"), it is taken as relative to the top source directory.
+
+   The "example.py" file will be copied to the output directory, and a
+   suitable link generated to it.
+
+   Not to show unavailable download links, you should wrap whole
+   paragraphs that have this role:
+
+      .. only:: builder_html
+
+         See :download:`this example script <../example.py>`.
+
+
+Cross-referencing figures by figure number
+------------------------------------------
+
+New in version 1.3.
+
+Changed in version 1.5: *numref* role can also refer sections. And
+*numref* allows *{name}* for the link text.
+
+:numref:
+
+   Link to the specified figures, tables, code-blocks and sections;
+   the standard reST labels are used.  When you use this role, it will
+   insert a reference to the figure with link text by its figure
+   number like "Fig. 1.1".
+
+   If an explicit link text is given (as usual: ":numref:`Image of
+   Sphinx (Fig. %s) <my-figure>`"), the link caption will serve as
+   title of the reference. As placeholders, *%s* and *{number}* get
+   replaced by the figure number and  *{name}* by the figure caption.
+   If no explicit link text is given, the >>:confval:`numfig_format`<<
+   setting is used as fall-back default.
+
+   If >>:confval:`numfig`<< is "False", figures are not numbered, so
+   this role inserts not a reference but the label or the link text.
+
+
+Cross-referencing other items of interest
+-----------------------------------------
+
+The following roles do possibly create a cross-reference, but do not
+refer to objects:
+
+:envvar:
+
+   An environment variable.  Index entries are generated.  Also
+   generates a link to the matching "envvar" directive, if it exists.
+
+:token:
+
+   The name of a grammar token (used to create links between
+   "productionlist" directives).
+
+:keyword:
+
+   The name of a keyword in Python.  This creates a link to a
+   reference label with that name, if it exists.
+
+:option:
+
+   A command-line option to an executable program.  This generates a
+   link to a "option" directive, if it exists.
+
+The following role creates a cross-reference to a term in a glossary:
+
+:term:
+
+   Reference to a term in a glossary.  A glossary is created using the
+   "glossary" directive containing a definition list with terms and
+   definitions.  It does not have to be in the same file as the "term"
+   markup, for example the Python docs have one global glossary in the
+   "glossary.rst" file.
+
+   If you use a term that's not explained in a glossary, you'll get a
+   warning during build.
+
+
+Math
+====
+
+:math:
+
+   Role for inline math.  Use like this:
+
+      Since Pythagoras, we know that :math:`a^2 + b^2 = c^2`.
+
+:eq:
+
+   Same as "math:numref".
+
+
+Other semantic markup
+=====================
+
+The following roles don't do anything special except formatting the
+text in a different style:
+
+:abbr:
+
+   An abbreviation.  If the role content contains a parenthesized
+   explanation, it will be treated specially: it will be shown in a
+   tool-tip in HTML, and output only once in LaTeX.
+
+   Example: ":abbr:`LIFO (last-in, first-out)`".
+
+   New in version 0.6.
+
+:command:
+
+   The name of an OS-level command, such as "rm".
+
+:dfn:
+
+   Mark the defining instance of a term in the text.  (No index
+   entries are generated.)
+
+:file:
+
+   The name of a file or directory.  Within the contents, you can use
+   curly braces to indicate a "variable" part, for example:
+
+      ... is installed in :file:`/usr/lib/python2.{x}/site-packages` ...
+
+   In the built documentation, the "x" will be displayed differently
+   to indicate that it is to be replaced by the Python minor version.
+
+:guilabel:
+
+   Labels presented as part of an interactive user interface should be
+   marked using "guilabel".  This includes labels from text-based
+   interfaces such as those created using "curses" or other text-based
+   libraries.  Any label used in the interface should be marked with
+   this role, including button labels, window titles, field names,
+   menu and menu selection names, and even values in selection lists.
+
+   Changed in version 1.0: An accelerator key for the GUI label can be
+   included using an ampersand; this will be stripped and displayed
+   underlined in the output (example: ":guilabel:`&Cancel`").  To
+   include a literal ampersand, double it.
+
+:kbd:
+
+   Mark a sequence of keystrokes.  What form the key sequence takes
+   may depend on platform- or application-specific conventions.  When
+   there are no relevant conventions, the names of modifier keys
+   should be spelled out, to improve accessibility for new users and
+   non-native speakers.  For example, an *xemacs* key sequence may be
+   marked like ":kbd:`C-x C-f`", but without reference to a specific
+   application or platform, the same sequence should be marked as
+   ":kbd:`Control-x Control-f`".
+
+:mailheader:
+
+   The name of an RFC 822-style mail header.  This markup does not
+   imply that the header is being used in an email message, but can be
+   used to refer to any header of the same "style."  This is also used
+   for headers defined by the various MIME specifications.  The header
+   name should be entered in the same way it would normally be found
+   in practice, with the camel-casing conventions being preferred
+   where there is more than one common usage. For example:
+   ":mailheader:`Content-Type`".
+
+:makevar:
+
+   The name of a **make** variable.
+
+:manpage:
+
+   A reference to a Unix manual page including the section, e.g.
+   ":manpage:`ls(1)`". Creates a hyperlink to an external site
+   rendering the manpage if >>:confval:`manpages_url`<< is defined.
+
+:menuselection:
+
+   Menu selections should be marked using the "menuselection" role.
+   This is used to mark a complete sequence of menu selections,
+   including selecting submenus and choosing a specific operation, or
+   any subsequence of such a sequence.  The names of individual
+   selections should be separated by "-->".
+
+   For example, to mark the selection "Start > Programs", use this
+   markup:
+
+      :menuselection:`Start --> Programs`
+
+   When including a selection that includes some trailing indicator,
+   such as the ellipsis some operating systems use to indicate that
+   the command opens a dialog, the indicator should be omitted from
+   the selection name.
+
+   "menuselection" also supports ampersand accelerators just like
+   "guilabel".
+
+:mimetype:
+
+   The name of a MIME type, or a component of a MIME type (the major
+   or minor portion, taken alone).
+
+:newsgroup:
+
+   The name of a Usenet newsgroup.
+
+:program:
+
+   The name of an executable program.  This may differ from the file
+   name for the executable for some platforms.  In particular, the
+   ".exe" (or other) extension should be omitted for Windows programs.
+
+:regexp:
+
+   A regular expression. Quotes should not be included.
+
+:samp:
+
+   A piece of literal text, such as code.  Within the contents, you
+   can use curly braces to indicate a "variable" part, as in "file".
+   For example, in ":samp:`print 1+{variable}`", the part "variable"
+   would be emphasized.
+
+   If you don't need the "variable part" indication, use the standard
+   "``code``" instead.
+
+   Changed in version 1.8: Allowed to escape curly braces with
+   backslash
+
+There is also an "index" role to generate index entries.
+
+The following roles generate external links:
+
+:pep:
+
+   A reference to a Python Enhancement Proposal.  This generates
+   appropriate index entries. The text "PEP *number*" is generated; in
+   the HTML output, this text is a hyperlink to an online copy of the
+   specified PEP.  You can link to a specific section by saying
+   ":pep:`number#anchor`".
+
+:rfc:
+
+   A reference to an Internet Request for Comments.  This generates
+   appropriate index entries. The text "RFC *number*" is generated; in
+   the HTML output, this text is a hyperlink to an online copy of the
+   specified RFC.  You can link to a specific section by saying
+   ":rfc:`number#anchor`".
+
+Note that there are no special roles for including hyperlinks as you
+can use the standard reST markup for that purpose.
+
+
+Substitutions
+=============
+
+The documentation system provides three substitutions that are defined
+by default. They are set in the build configuration file.
+
+|release|
+
+   Replaced by the project release the documentation refers to.  This
+   is meant to be the full version string including alpha/beta/release
+   candidate tags, e.g. "2.5.2b3".  Set by >>:confval:`release`<<.
+
+|version|
+
+   Replaced by the project version the documentation refers to. This
+   is meant to consist only of the major and minor version parts, e.g.
+   "2.5", even for version 2.5.1.  Set by >>:confval:`version`<<.
+
+|today|
+
+   Replaced by either today's date (the date on which the document is
+   read), or the date set in the build configuration file.  Normally
+   has the format "April 14, 2007".  Set by >>:confval:`today_fmt`<<
+   and >>:confval:`today`<<.
diff --git a/_build/doc/usage/theming.txt b/_build/doc/usage/theming.txt
new file mode 100644
index 000000000..004ecae81
--- /dev/null
+++ b/_build/doc/usage/theming.txt
@@ -0,0 +1,377 @@
+HTML Theming
+************
+
+Sphinx provides a number of builders for HTML and HTML-based formats.
+
+
+Builders
+========
+
+
+Themes
+======
+
+New in version 0.6.
+
+Note:
+
+  This section provides information about using pre-existing HTML
+  themes. If you wish to create your own theme, refer to
+  */development/theming*.
+
+Sphinx supports changing the appearance of its HTML output via
+*themes*.  A theme is a collection of HTML templates, stylesheet(s)
+and other static files. Additionally, it has a configuration file
+which specifies from which theme to inherit, which highlighting style
+to use, and what options exist for customizing the theme's look and
+feel.
+
+Themes are meant to be project-unaware, so they can be used for
+different projects without change.
+
+
+Using a theme
+-------------
+
+Using a theme provided with Sphinx is easy. Since these do not need to
+be installed, you only need to set the >>:confval:`html_theme`<<
+config value. For example, to enable the "classic" theme, add the
+following to "conf.py":
+
+   html_theme = "classic"
+
+You can also set theme-specific options using the
+>>:confval:`html_theme_options`<< config value.  These options are
+generally used to change the look and feel of the theme. For example,
+to place the sidebar on the right side and a black background for the
+relation bar (the bar with the navigation links at the page's top and
+bottom), add the following "conf.py":
+
+   html_theme_options = {
+       "rightsidebar": "true",
+       "relbarbgcolor": "black"
+   }
+
+If the theme does not come with Sphinx, it can be in two static forms
+or as a Python package. For the static forms, either a directory
+(containing "theme.conf" and other needed files), or a zip file with
+the same contents is supported. The directory or zipfile must be put
+where Sphinx can find it; for this there is the config value
+>>:confval:`html_theme_path`<<. This can be a list of directories,
+relative to the directory containing "conf.py", that can contain theme
+directories or zip files.  For example, if you have a theme in the
+file "blue.zip", you can put it right in the directory containing
+"conf.py" and use this configuration:
+
+   html_theme = "blue"
+   html_theme_path = ["."]
+
+The third form is a Python package.  If a theme you want to use is
+distributed as a Python package, you can use it after installing
+
+   # installing theme package
+   $ pip install sphinxjp.themes.dotted
+
+Once installed, this can be used in the same manner as a directory or
+zipfile-based theme:
+
+   html_theme = "dotted"
+
+For more information on the design of themes, including information
+about writing your own themes, refer to */development/theming*.
+
+
+Builtin themes
+--------------
+
++----------------------+----------------------+
+| **Theme overview**   |                      |
++----------------------+----------------------+
+| [image:              | [image:              |
+| alabaster][image]    | classic][image]      |
+| *alabaster*          | *classic*            |
++----------------------+----------------------+
+| [image:              | [image:              |
+| sphinxdoc][image]    | scrolls][image]      |
+| *sphinxdoc*          | *scrolls*            |
++----------------------+----------------------+
+| [image:              | [image:              |
+| agogo][image]        | traditional][image]  |
+| *agogo*              | *traditional*        |
++----------------------+----------------------+
+| [image:              | [image:              |
+| nature][image]       | haiku][image]        |
+| *nature*             | *haiku*              |
++----------------------+----------------------+
+| [image:              | [image:              |
+| pyramid][image]      | bizstyle][image]     |
+| *pyramid*            | *bizstyle*           |
++----------------------+----------------------+
+
+Sphinx comes with a selection of themes to choose from.
+
+These themes are:
+
+**basic**
+   This is a basically unstyled layout used as the base for the other
+   themes, and usable as the base for custom themes as well.  The HTML
+   contains all important elements like sidebar and relation bar.
+   There are these options (which are inherited by the other themes):
+
+   * **nosidebar** (true or false): Don't include the sidebar.
+     Defaults to "False".
+
+   * **sidebarwidth** (int or str): Width of the sidebar in pixels.
+     This can be an int, which is interpreted as pixels or a valid CSS
+     dimension string such as '70em' or '50%'.  Defaults to 230
+     pixels.
+
+   * **body_min_width** (int or str): Minimal width of the document
+     body. This can be an int, which is interpreted as pixels or a
+     valid CSS dimension string such as '70em' or '50%'. Use 0 if you
+     don't want a width limit. Defaults may depend on the theme (often
+     450px).
+
+   * **body_max_width** (int or str): Maximal width of the document
+     body. This can be an int, which is interpreted as pixels or a
+     valid CSS dimension string such as '70em' or '50%'. Use 'none' if
+     you don't want a width limit. Defaults may depend on the theme
+     (often 800px).
+
+   * **navigation_with_keys** (true or false): Allow navigating to the
+     previous/next page using the keyboard's left and right arrows.
+     Defaults to "False".
+
+   * **globaltoc_collapse** (true or false): Only expand subsections
+     of the current document in "globaltoc.html" (see
+     >>:confval:`html_sidebars`<<). Defaults to "True".
+
+     New in version 3.1.
+
+   * **globaltoc_includehidden** (true or false): Show even those
+     subsections in "globaltoc.html" (see
+     >>:confval:`html_sidebars`<<) which have been included with the
+     ":hidden:" flag of the "toctree" directive. Defaults to "False".
+
+     New in version 3.1.
+
+   * **globaltoc_maxdepth** (int): The maximum depth of the toctree in
+     "globaltoc.html" (see >>:confval:`html_sidebars`<<).  Set it to
+     -1 to allow unlimited depth. Defaults to the max depth selected
+     in the toctree directive.
+
+     New in version 3.2.
+
+**alabaster**
+   Alabaster theme is a modified "Kr" Sphinx theme from @kennethreitz
+   (especially as used in his Requests project), which was itself
+   originally based on @mitsuhiko's theme used for Flask & related
+   projects.  Refer to its installation page for information on how to
+   configure >>:confval:`html_sidebars`<< for its use.
+
+**classic**
+   This is the classic theme, which looks like the Python 2
+   documentation.  It can be customized via these options:
+
+   * **rightsidebar** (true or false): Put the sidebar on the right
+     side. Defaults to "False".
+
+   * **stickysidebar** (true or false): Make the sidebar "fixed" so
+     that it doesn't scroll out of view for long body content.  This
+     may not work well with all browsers.  Defaults to "False".
+
+   * **collapsiblesidebar** (true or false): Add an *experimental*
+     JavaScript snippet that makes the sidebar collapsible via a
+     button on its side. Defaults to "False".
+
+   * **externalrefs** (true or false): Display external links
+     differently from internal links.  Defaults to "False".
+
+   There are also various color and font options that can change the
+   color scheme without having to write a custom stylesheet:
+
+   * **footerbgcolor** (CSS color): Background color for the footer
+     line.
+
+   * **footertextcolor** (CSS color): Text color for the footer line.
+
+   * **sidebarbgcolor** (CSS color): Background color for the sidebar.
+
+   * **sidebarbtncolor** (CSS color): Background color for the sidebar
+     collapse button (used when *collapsiblesidebar* is "True").
+
+   * **sidebartextcolor** (CSS color): Text color for the sidebar.
+
+   * **sidebarlinkcolor** (CSS color): Link color for the sidebar.
+
+   * **relbarbgcolor** (CSS color): Background color for the relation
+     bar.
+
+   * **relbartextcolor** (CSS color): Text color for the relation bar.
+
+   * **relbarlinkcolor** (CSS color): Link color for the relation bar.
+
+   * **bgcolor** (CSS color): Body background color.
+
+   * **textcolor** (CSS color): Body text color.
+
+   * **linkcolor** (CSS color): Body link color.
+
+   * **visitedlinkcolor** (CSS color): Body color for visited links.
+
+   * **headbgcolor** (CSS color): Background color for headings.
+
+   * **headtextcolor** (CSS color): Text color for headings.
+
+   * **headlinkcolor** (CSS color): Link color for headings.
+
+   * **codebgcolor** (CSS color): Background color for code blocks.
+
+   * **codetextcolor** (CSS color): Default text color for code
+     blocks, if not set differently by the highlighting style.
+
+   * **bodyfont** (CSS font-family): Font for normal text.
+
+   * **headfont** (CSS font-family): Font for headings.
+
+**sphinxdoc**
+   The theme originally used by this documentation. It features a
+   sidebar on the right side. There are currently no options beyond
+   *nosidebar* and *sidebarwidth*.
+
+   Note:
+
+     The Sphinx documentation now uses an adjusted version of the
+     sphinxdoc theme.
+
+**scrolls**
+   A more lightweight theme, based on the Jinja documentation.  The
+   following color options are available:
+
+   * **headerbordercolor**
+
+   * **subheadlinecolor**
+
+   * **linkcolor**
+
+   * **visitedlinkcolor**
+
+   * **admonitioncolor**
+
+**agogo**
+   A theme created by Andi Albrecht.  The following options are
+   supported:
+
+   * **bodyfont** (CSS font family): Font for normal text.
+
+   * **headerfont** (CSS font family): Font for headings.
+
+   * **pagewidth** (CSS length): Width of the page content, default
+     70em.
+
+   * **documentwidth** (CSS length): Width of the document (without
+     sidebar), default 50em.
+
+   * **sidebarwidth** (CSS length): Width of the sidebar, default
+     20em.
+
+   * **rightsidebar** (true or false): Put the sidebar on the right
+     side. Defaults to "True".
+
+   * **bgcolor** (CSS color): Background color.
+
+   * **headerbg** (CSS value for "background"): background for the
+     header area, default a grayish gradient.
+
+   * **footerbg** (CSS value for "background"): background for the
+     footer area, default a light gray gradient.
+
+   * **linkcolor** (CSS color): Body link color.
+
+   * **headercolor1**, **headercolor2** (CSS color): colors for <h1>
+     and <h2> headings.
+
+   * **headerlinkcolor** (CSS color): Color for the backreference link
+     in headings.
+
+   * **textalign** (CSS *text-align* value): Text alignment for the
+     body, default is "justify".
+
+**nature**
+   A greenish theme.  There are currently no options beyond
+   *nosidebar* and *sidebarwidth*.
+
+**pyramid**
+   A theme from the Pyramid web framework project, designed by Blaise
+   Laflamme. There are currently no options beyond *nosidebar* and
+   *sidebarwidth*.
+
+**haiku**
+   A theme without sidebar inspired by the Haiku OS user guide.  The
+   following options are supported:
+
+   * **full_logo** (true or false, default "False"): If this is true,
+     the header will only show the >>:confval:`html_logo`<<.  Use this
+     for large logos. If this is false, the logo (if present) will be
+     shown floating right, and the documentation title will be put in
+     the header.
+
+   * **textcolor**, **headingcolor**, **linkcolor**,
+     **visitedlinkcolor**, **hoverlinkcolor** (CSS colors): Colors for
+     various body elements.
+
+**traditional**
+   A theme resembling the old Python documentation.  There are
+   currently no options beyond *nosidebar* and *sidebarwidth*.
+
+**epub**
+   A theme for the epub builder.  This theme tries to save visual
+   space which is a sparse resource on ebook readers.  The following
+   options are supported:
+
+   * **relbar1** (true or false, default "True"): If this is true, the
+     *relbar1* block is inserted in the epub output, otherwise it is
+     omitted.
+
+   * **footer**  (true or false, default "True"): If this is true, the
+     *footer* block is inserted in the epub output, otherwise it is
+     omitted.
+
+**bizstyle**
+   A simple bluish theme. The following options are supported beyond
+   *nosidebar* and *sidebarwidth*:
+
+   * **rightsidebar** (true or false): Put the sidebar on the right
+     side. Defaults to "False".
+
+New in version 1.3: 'alabaster', 'sphinx_rtd_theme' and 'bizstyle'
+theme.
+
+Changed in version 1.3: The 'default' theme has been renamed to
+'classic'. 'default' is still available, however it will emit a notice
+that it is an alias for the new 'alabaster' theme.
+
+
+Third Party Themes
+------------------
+
++----------------------+----------------------+
+| **Theme overview**   |                      |
++----------------------+----------------------+
+| [image: sphinx_rtd_  |                      |
+| theme][image]        |                      |
+| *sphinx_rtd_theme*   |                      |
++----------------------+----------------------+
+
+There are many third-party themes available. Some of these are general
+use, while others are specific to an individual project. A section of
+third-party themes is listed below. Many more can be found on PyPI,
+GitHub, GitLab and sphinx-themes.org.
+
+**sphinx_rtd_theme**
+   Read the Docs Sphinx Theme. This is a mobile-friendly sphinx theme
+   that was made for readthedocs.org. View a working demo over on
+   readthedocs.org. You can get install and options information at
+   Read the Docs Sphinx Theme page.
+
+   Changed in version 1.4: **sphinx_rtd_theme** has become optional.
diff --git a/_build/index.txt b/_build/index.txt
new file mode 100644
index 000000000..ffbfbb938
--- /dev/null
+++ b/_build/index.txt
@@ -0,0 +1,2 @@
+Test Empty __all__
+******************
diff --git a/_build/sphinx/ext/autosummary/templates/autosummary/base.txt b/_build/sphinx/ext/autosummary/templates/autosummary/base.txt
new file mode 100644
index 000000000..dd39496e1
--- /dev/null
+++ b/_build/sphinx/ext/autosummary/templates/autosummary/base.txt
@@ -0,0 +1 @@
+{{ fullname | escape | underline}}
diff --git a/_build/sphinx/ext/autosummary/templates/autosummary/class.txt b/_build/sphinx/ext/autosummary/templates/autosummary/class.txt
new file mode 100644
index 000000000..dd39496e1
--- /dev/null
+++ b/_build/sphinx/ext/autosummary/templates/autosummary/class.txt
@@ -0,0 +1 @@
+{{ fullname | escape | underline}}
diff --git a/_build/sphinx/ext/autosummary/templates/autosummary/module.txt b/_build/sphinx/ext/autosummary/templates/autosummary/module.txt
new file mode 100644
index 000000000..24459882e
--- /dev/null
+++ b/_build/sphinx/ext/autosummary/templates/autosummary/module.txt
@@ -0,0 +1,8 @@
+{{ fullname | escape | underline}}
+
+{% block modules %} {% if modules %} .. rubric:: Modules
+
+{% for item in modules %}
+   {{ item }}
+
+{%- endfor %} {% endif %} {% endblock %}
diff --git a/_build/tests/roots/test-add_enumerable_node/index.txt b/_build/tests/roots/test-add_enumerable_node/index.txt
new file mode 100644
index 000000000..0a5d88de0
--- /dev/null
+++ b/_build/tests/roots/test-add_enumerable_node/index.txt
@@ -0,0 +1,26 @@
+test-add_enumerable_node
+************************
+
+
+First section
+=============
+
+   [image]First figure
+
+
+Second section
+==============
+
+
+Reference section
+=================
+
+* first_figure is "first_figure"
+
+* first_my_figure is "first_my_figure"
+
+* second_my_figure is "second_my_figure"
+
+* first numbered_text is "first_numbered_text"
+
+* second numbered_text is "second_numbered_text"
diff --git a/_build/tests/roots/test-api-set-translator/index.txt b/_build/tests/roots/test-api-set-translator/index.txt
new file mode 100644
index 000000000..30ed9459c
--- /dev/null
+++ b/_build/tests/roots/test-api-set-translator/index.txt
@@ -0,0 +1,2 @@
+Test API set_translator
+***********************
diff --git a/_build/tests/roots/test-autosummary/index.txt b/_build/tests/roots/test-autosummary/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-autosummary/sphinx.txt b/_build/tests/roots/test-autosummary/sphinx.txt
new file mode 100644
index 000000000..745555901
--- /dev/null
+++ b/_build/tests/roots/test-autosummary/sphinx.txt
@@ -0,0 +1,23 @@
+Autosummary test
+****************
+
+class sphinx.application.TemplateBridge
+
+   This class defines the interface for a "template bridge", that is,
+   a class that renders templates given a template name and a context.
+
+      Basic test
+
+      Test with tildes
+
+      Methods:
+
+   render(template: str, context: Dict) -> None
+
+      Called by the builder to render a template given as a filename
+      with a specified context (a Python dictionary).
+
+   render_string(template: str, context: Dict) -> str
+
+      Called by the builder to render a template given as a string
+      with a specified context (a Python dictionary).
diff --git a/_build/tests/roots/test-basic/index.txt b/_build/tests/roots/test-basic/index.txt
new file mode 100644
index 000000000..c598333ae
--- /dev/null
+++ b/_build/tests/roots/test-basic/index.txt
@@ -0,0 +1,40 @@
+The basic Sphinx documentation for testing
+******************************************
+
+Sphinx is a tool that makes it easy to create intelligent and
+beautiful documentation for Python projects (or other documents
+consisting of multiple reStructuredText sources), written by Georg
+Brandl.  It was originally created for the new Python documentation,
+and has excellent facilities for Python project documentation, but
+C/C++ is supported as well, and more languages are planned.
+
+Sphinx uses reStructuredText as its markup language, and many of its
+strengths come from the power and straightforwardness of
+reStructuredText and its parsing and translating suite, the Docutils.
+
+
+features
+========
+
+Among its features are the following:
+
+* Output formats: HTML (including derivative formats such as HTML
+  Help, Epub and Qt Help), plain text, manual pages and LaTeX or
+  direct PDF output using rst2pdf
+
+* Extensive cross-references: semantic markup and automatic links for
+  functions, classes, glossary terms and similar pieces of information
+
+* Hierarchical structure: easy definition of a document tree, with
+  automatic links to siblings, parents and children
+
+* Automatic indices: general index as well as a module index
+
+* Code handling: automatic highlighting using the Pygments highlighter
+
+* Flexible HTML output using the Jinja 2 templating engine
+
+* Various extensions are available, e.g. for automatic testing of
+  snippets and inclusion of appropriately formatted docstrings
+
+* Setuptools integration
diff --git a/_build/tests/roots/test-build-html-translator/index.txt b/_build/tests/roots/test-build-html-translator/index.txt
new file mode 100644
index 000000000..84966b73e
--- /dev/null
+++ b/_build/tests/roots/test-build-html-translator/index.txt
@@ -0,0 +1,40 @@
+Test HTML admonitions
+*********************
+
+See also: test
+
+Note:
+
+  test
+
+Warning:
+
+  test
+
+Attention:
+
+  test
+
+Caution:
+
+  test
+
+Danger:
+
+  test
+
+Error:
+
+  test
+
+Hint:
+
+  test
+
+Important:
+
+  test
+
+Tip:
+
+  test
diff --git a/_build/tests/roots/test-builder-dirhtml/bar.txt b/_build/tests/roots/test-builder-dirhtml/bar.txt
new file mode 100644
index 000000000..b87b461ba
--- /dev/null
+++ b/_build/tests/roots/test-builder-dirhtml/bar.txt
@@ -0,0 +1,2 @@
+bar
+***
diff --git a/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt b/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt
new file mode 100644
index 000000000..eb6250074
--- /dev/null
+++ b/_build/tests/roots/test-builder-dirhtml/foo/foo_1.txt
@@ -0,0 +1,2 @@
+foo/foo_1
+*********
diff --git a/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt b/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt
new file mode 100644
index 000000000..379914a9e
--- /dev/null
+++ b/_build/tests/roots/test-builder-dirhtml/foo/foo_2.txt
@@ -0,0 +1,2 @@
+foo/foo_2
+*********
diff --git a/_build/tests/roots/test-builder-dirhtml/foo/index.txt b/_build/tests/roots/test-builder-dirhtml/foo/index.txt
new file mode 100644
index 000000000..8776afe7a
--- /dev/null
+++ b/_build/tests/roots/test-builder-dirhtml/foo/index.txt
@@ -0,0 +1,6 @@
+foo/index
+*********
+
+* foo/foo_1
+
+* foo/foo_2
diff --git a/_build/tests/roots/test-builder-dirhtml/index.txt b/_build/tests/roots/test-builder-dirhtml/index.txt
new file mode 100644
index 000000000..2f7791cd0
--- /dev/null
+++ b/_build/tests/roots/test-builder-dirhtml/index.txt
@@ -0,0 +1,10 @@
+index
+*****
+
+* foo/index
+
+  * foo/foo_1
+
+  * foo/foo_2
+
+* bar
diff --git a/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt
new file mode 100644
index 000000000..04dd7ff66
--- /dev/null
+++ b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/bom.txt
@@ -0,0 +1,4 @@
+File with UTF-8 BOM
+*******************
+
+This file has a UTF-8 "BOM".
diff --git a/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt
new file mode 100644
index 000000000..361a681a1
--- /dev/null
+++ b/_build/tests/roots/test-builder-gettext-dont-rebuild-mo/index.txt
@@ -0,0 +1,4 @@
+The basic Sphinx documentation for testing
+******************************************
+
+* File with UTF-8 BOM
diff --git a/_build/tests/roots/test-changes/base.txt b/_build/tests/roots/test-changes/base.txt
new file mode 100644
index 000000000..eff465326
--- /dev/null
+++ b/_build/tests/roots/test-changes/base.txt
@@ -0,0 +1,13 @@
+Version markup
+**************
+
+New in version 0.6: Some funny **stuff**.
+
+Changed in version 0.6: Even more funny stuff.
+
+Deprecated since version 0.6: Boring stuff.
+
+New in version 1.2: First paragraph of versionadded.
+
+Changed in version 1.2: First paragraph of versionchanged.Second
+paragraph of versionchanged.
diff --git a/_build/tests/roots/test-changes/c-api.txt b/_build/tests/roots/test-changes/c-api.txt
new file mode 100644
index 000000000..6026e035c
--- /dev/null
+++ b/_build/tests/roots/test-changes/c-api.txt
@@ -0,0 +1,21 @@
+Memory
+******
+
+void *Test_Malloc(size_t n)
+
+   Allocate *n* bytes of memory.
+
+   Changed in version 0.6: Can now be replaced with a different
+   allocator.
+
+
+System
+======
+
+Access to the system allocator.
+
+New in version 0.6.
+
+void *Test_SysMalloc(size_t n)
+
+   Allocate *n* bytes of memory using system allocator.
diff --git a/_build/tests/roots/test-changes/contents.txt b/_build/tests/roots/test-changes/contents.txt
new file mode 100644
index 000000000..d9f89cbb7
--- /dev/null
+++ b/_build/tests/roots/test-changes/contents.txt
@@ -0,0 +1,16 @@
+Index for ChangesBuilder tests
+******************************
+
+Contents:
+
+Table of Contents
+
+* Version markup
+
+* Memory
+
+  * System
+
+* "utils" --- Fake utilities module for tests
+
+  * Classes
diff --git a/_build/tests/roots/test-changes/library/utils.txt b/_build/tests/roots/test-changes/library/utils.txt
new file mode 100644
index 000000000..8dd95600e
--- /dev/null
+++ b/_build/tests/roots/test-changes/library/utils.txt
@@ -0,0 +1,20 @@
+"utils" --- Fake utilities module for tests
+*******************************************
+
+======================================================================
+
+The "utils" module is a pretend python module for changes testing.
+
+
+Classes
+=======
+
+class utils.Path
+
+   Class for handling paths.
+
+      New in version 0.5:
+
+      Innovative new way to handle paths.
+
+   Deprecated since version 0.6: So, that was a bad idea it turns out.
diff --git a/_build/tests/roots/test-circular/index.txt b/_build/tests/roots/test-circular/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-circular/sub.txt b/_build/tests/roots/test-circular/sub.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-correct-year/index.txt b/_build/tests/roots/test-correct-year/index.txt
new file mode 100644
index 000000000..fb59ff843
--- /dev/null
+++ b/_build/tests/roots/test-correct-year/index.txt
@@ -0,0 +1,2 @@
+test-correct-year
+*****************
diff --git a/_build/tests/roots/test-default_role/foo.txt b/_build/tests/roots/test-default_role/foo.txt
new file mode 100644
index 000000000..91e34e9ae
--- /dev/null
+++ b/_build/tests/roots/test-default_role/foo.txt
@@ -0,0 +1,4 @@
+foo.rst
+*******
+
+*OK* button
diff --git a/_build/tests/roots/test-default_role/index.txt b/_build/tests/roots/test-default_role/index.txt
new file mode 100644
index 000000000..0b81881a3
--- /dev/null
+++ b/_build/tests/roots/test-default_role/index.txt
@@ -0,0 +1,4 @@
+default_role
+************
+
+**PEP 8**
diff --git a/_build/tests/roots/test-directive-code/caption.txt b/_build/tests/roots/test-directive-code/caption.txt
new file mode 100644
index 000000000..3be08c97b
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/caption.txt
@@ -0,0 +1,48 @@
+Caption
+*******
+
+
+References
+==========
+
+See "name *test* rb" and "name **test** py".
+
+See Ruby and Python.
+
+
+Code blocks
+===========
+
+caption *test* rb
+
+   def ruby?
+       false
+   end
+
+
+Literal Include
+===============
+
+caption **test** py
+
+           pass
+
+
+
+Named Code blocks
+=================
+
+caption *test* rbnamed
+
+   def ruby?
+       false
+   end
+
+
+Named Literal Include
+=====================
+
+caption **test** pynamed
+
+           pass
+
diff --git a/_build/tests/roots/test-directive-code/classes.txt b/_build/tests/roots/test-directive-code/classes.txt
new file mode 100644
index 000000000..87076515c
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/classes.txt
@@ -0,0 +1,28 @@
+classes
+*******
+
+
+Code blocks
+===========
+
+       def ruby?
+           false
+       end
+
+
+Literal Includes
+================
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
diff --git a/_build/tests/roots/test-directive-code/emphasize.txt b/_build/tests/roots/test-directive-code/emphasize.txt
new file mode 100644
index 000000000..5a853a81c
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/emphasize.txt
@@ -0,0 +1,29 @@
+Literal Includes with Highlighted Lines
+***************************************
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
+
+   def block_start_with_comment():
+       # Comment
+       return 1
+
+   def block_start_with_blank():
+
+       return 1
+
+
+   class Qux:
+   	def quux(self):
+   		pass
diff --git a/_build/tests/roots/test-directive-code/force.txt b/_build/tests/roots/test-directive-code/force.txt
new file mode 100644
index 000000000..ba6ec9f3a
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/force.txt
@@ -0,0 +1,8 @@
+force option
+************
+
+   not a python script!
+
+   not a python script!
+
+   not a python script!
diff --git a/_build/tests/roots/test-directive-code/highlight.txt b/_build/tests/roots/test-directive-code/highlight.txt
new file mode 100644
index 000000000..4904cd660
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/highlight.txt
@@ -0,0 +1,10 @@
+highlight
+*********
+
+   "A code-block without no language"
+
+   "A code-block with language argument"
+
+   "A code-block without no language after highlight directive"
+
+   "A code-block without language argument after highlight directive"
diff --git a/_build/tests/roots/test-directive-code/index.txt b/_build/tests/roots/test-directive-code/index.txt
new file mode 100644
index 000000000..540ad1abd
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/index.txt
@@ -0,0 +1,73 @@
+test-directive-code
+*******************
+
+* Caption
+
+  * References
+
+  * Code blocks
+
+  * Literal Include
+
+  * Named Code blocks
+
+  * Named Literal Include
+
+* classes
+
+  * Code blocks
+
+  * Literal Includes
+
+* Literal Includes with Highlighted Lines
+
+* force option
+
+* highlight
+
+* Literal Includes with Line Numbers
+
+* Code Blocks and Literal Includes with Line Numbers via
+  linenothreshold
+
+* Named Blocks
+
+  * References to named blocks
+
+  * Named Code block
+
+  * Named Literal Include
+
+* py-decorators
+
+  * Various decorators
+
+* Literal Includes for python
+
+  * block start with blank or comment
+
+
+Code blocks
+===========
+
+       def ruby?
+           false
+       end
+
+
+Literal Includes
+================
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
diff --git a/_build/tests/roots/test-directive-code/linenos.txt b/_build/tests/roots/test-directive-code/linenos.txt
new file mode 100644
index 000000000..1dfa7ee75
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/linenos.txt
@@ -0,0 +1,40 @@
+Literal Includes with Line Numbers
+**********************************
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+
+
+
+
diff --git a/_build/tests/roots/test-directive-code/linenothreshold.txt b/_build/tests/roots/test-directive-code/linenothreshold.txt
new file mode 100644
index 000000000..aba0d36da
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/linenothreshold.txt
@@ -0,0 +1,30 @@
+Code Blocks and Literal Includes with Line Numbers via linenothreshold
+**********************************************************************
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+       pass
+
+   # comment
+   value = True
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
+
+   # Very small literal include (linenothreshold check)
+
+   value = True
diff --git a/_build/tests/roots/test-directive-code/namedblocks.txt b/_build/tests/roots/test-directive-code/namedblocks.txt
new file mode 100644
index 000000000..371b6a16f
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/namedblocks.txt
@@ -0,0 +1,34 @@
+Named Blocks
+************
+
+
+References to named blocks
+==========================
+
+See the ruby code and also the python code.
+
+
+Named Code block
+================
+
+   def ruby?
+       false
+   end
+
+
+Named Literal Include
+=====================
+
+   # Literally included file using Python highlighting
+
+   foo = "Including Unicode characters: üöä"
+
+   class Foo:
+       pass
+
+   class Bar:
+       def baz():
+           pass
+
+   # comment after Bar class definition
+   def bar(): pass
diff --git a/_build/tests/roots/test-directive-code/py-decorators.txt b/_build/tests/roots/test-directive-code/py-decorators.txt
new file mode 100644
index 000000000..75c404be6
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/py-decorators.txt
@@ -0,0 +1,25 @@
+py-decorators
+*************
+
+
+Various decorators
+==================
+
+   @class_decorator
+   @other_decorator()
+   class TheClass(object):
+
+       @method_decorator
+       @other_decorator()
+       def the_method():
+           pass
+
+       @method_decorator
+       @other_decorator()
+       def the_method():
+           pass
+
+   @function_decorator
+   @other_decorator()
+   def the_function():
+       pass
diff --git a/_build/tests/roots/test-directive-code/python.txt b/_build/tests/roots/test-directive-code/python.txt
new file mode 100644
index 000000000..9ea6ea3cf
--- /dev/null
+++ b/_build/tests/roots/test-directive-code/python.txt
@@ -0,0 +1,14 @@
+Literal Includes for python
+***************************
+
+
+block start with blank or comment
+=================================
+
+   def block_start_with_comment():
+       # Comment
+       return 1
+
+   def block_start_with_blank():
+
+       return 1
diff --git a/_build/tests/roots/test-directive-only/index.txt b/_build/tests/roots/test-directive-only/index.txt
new file mode 100644
index 000000000..330079193
--- /dev/null
+++ b/_build/tests/roots/test-directive-only/index.txt
@@ -0,0 +1,76 @@
+test-directive-only
+*******************
+
+* 1. Sections in only directives
+
+  * 1.1. Section
+
+  * 1.2. Section
+
+    * 1.2.1. Subsection
+
+  * 1.3. Section
+
+    * 1.3.1. Subsection
+
+  * 1.4. Section
+
+    * 1.4.1. Subsection
+
+  * 1.5. Section
+
+    * 1.5.1. Subsection
+
+    * 1.5.2. Subsection
+
+  * 1.6. Section
+
+    * 1.6.1. Subsection
+
+    * 1.6.2. Subsection
+
+    * 1.6.3. Subsection
+
+  * 1.7. Section
+
+    * 1.7.1. Subsection
+
+      * 1.7.1.1. Subsubsection
+
+  * 1.8. Section
+
+    * 1.8.1. Subsection
+
+      * 1.8.1.1. Subsubsection
+
+      * 1.8.1.2. Subsubsection
+
+  * 1.9. Section
+
+    * 1.9.1. Subsection
+
+      * 1.9.1.1. Subsubsection
+
+  * 1.10. Section
+
+  * 1.11. Section
+
+    * 1.11.1. Subsection
+
+  * 1.12. Section
+
+    * 1.12.1. Subsection
+
+  * 1.13. Section
+
+  * 1.14. Section
+
+    * 1.14.1. Subsection
+
+  * 1.15. Section
+
+* 2. Included document level heading
+
+* 3. Document level heading
+
+* 4. Another included document level heading
diff --git a/_build/tests/roots/test-directive-only/only.txt b/_build/tests/roots/test-directive-only/only.txt
new file mode 100644
index 000000000..4a4c1b53a
--- /dev/null
+++ b/_build/tests/roots/test-directive-only/only.txt
@@ -0,0 +1,208 @@
+1. Sections in only directives
+******************************
+
+Testing sections in only directives.
+
+
+1.1. Section
+============
+
+Should be here.
+
+
+1.2. Section
+============
+
+
+1.2.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.3. Section
+============
+
+
+1.3.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.4. Section
+============
+
+
+1.4.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.5. Section
+============
+
+
+1.5.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.5.2. Subsection
+-----------------
+
+Should be here.
+
+
+1.6. Section
+============
+
+
+1.6.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.6.2. Subsection
+-----------------
+
+Should be here.
+
+
+1.6.3. Subsection
+-----------------
+
+Should be here.
+
+
+1.7. Section
+============
+
+
+1.7.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.7.1.1. Subsubsection
+~~~~~~~~~~~~~~~~~~~~~~
+
+Should be here.
+
+
+1.8. Section
+============
+
+
+1.8.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.8.1.1. Subsubsection
+~~~~~~~~~~~~~~~~~~~~~~
+
+Should be here.
+
+
+1.8.1.2. Subsubsection
+~~~~~~~~~~~~~~~~~~~~~~
+
+Should be here.
+
+
+1.9. Section
+============
+
+
+1.9.1. Subsection
+-----------------
+
+Should be here.
+
+
+1.9.1.1. Subsubsection
+~~~~~~~~~~~~~~~~~~~~~~
+
+Should be here.
+
+
+1.10. Section
+=============
+
+Should be here.
+
+
+1.11. Section
+=============
+
+Text before subsection 11.1.
+
+More text before subsection 11.1.
+
+
+1.11.1. Subsection
+------------------
+
+Should be here.
+
+Text after subsection 11.1.
+
+
+1.12. Section
+=============
+
+Should be here.
+
+
+1.12.1. Subsection
+------------------
+
+Should be here.
+
+
+1.13. Section
+=============
+
+Should be here.
+
+
+1.14. Section
+=============
+
+Should be here.
+
+
+1.14.1. Subsection
+------------------
+
+Should be here.
+
+
+1.15. Section
+=============
+
+Should be here.
+
+
+2. Included document level heading
+**********************************
+
+Should be here.
+
+
+3. Document level heading
+*************************
+
+Should be here.
+
+
+4. Another included document level heading
+******************************************
+
+Should be here.
diff --git a/_build/tests/roots/test-directives-raw/index.txt b/_build/tests/roots/test-directives-raw/index.txt
new file mode 100644
index 000000000..e1bcf6376
--- /dev/null
+++ b/_build/tests/roots/test-directives-raw/index.txt
@@ -0,0 +1,30 @@
+test-directives-raw
+*******************
+
+
+HTML
+====
+
+
+standard
+--------
+
+
+with substitution
+-----------------
+
+HTML: abc  ghi
+
+
+LaTeX
+=====
+
+
+standard
+--------
+
+
+with substitution
+-----------------
+
+LaTeX: abc  ghi
diff --git a/_build/tests/roots/test-docutilsconf/index.txt b/_build/tests/roots/test-docutilsconf/index.txt
new file mode 100644
index 000000000..0acaea259
--- /dev/null
+++ b/_build/tests/roots/test-docutilsconf/index.txt
@@ -0,0 +1,6 @@
+test-docutilsconf
+*****************
+
+Sphinx [1]
+
+[1] Python Documentation Generator
diff --git a/_build/tests/roots/test-domain-c/anon-dup-decl.txt b/_build/tests/roots/test-domain-c/anon-dup-decl.txt
new file mode 100644
index 000000000..bd45a272b
--- /dev/null
+++ b/_build/tests/roots/test-domain-c/anon-dup-decl.txt
@@ -0,0 +1,7 @@
+struct anon_dup_decl
+
+   struct **[anonymous]**.A
+
+   struct **[anonymous]**.A
+
+   struct A
diff --git a/_build/tests/roots/test-domain-c/function_param_target.txt b/_build/tests/roots/test-domain-c/function_param_target.txt
new file mode 100644
index 000000000..ac07f1a35
--- /dev/null
+++ b/_build/tests/roots/test-domain-c/function_param_target.txt
@@ -0,0 +1,5 @@
+void f(int i)
+
+   * "i"
+
+* "f.i"
diff --git a/_build/tests/roots/test-domain-c/index.txt b/_build/tests/roots/test-domain-c/index.txt
new file mode 100644
index 000000000..3b669abf9
--- /dev/null
+++ b/_build/tests/roots/test-domain-c/index.txt
@@ -0,0 +1,62 @@
+test-domain-c
+*************
+
+
+directives
+==========
+
+int hello(const char *name)
+
+   Return type:
+      int
+
+MyStruct hello2(char *name)
+
+   Return type:
+      MyStruct
+
+float Sphinx.version
+
+int version
+
+IS_SPHINX
+
+SPHINX(arg1, arg2)
+
+struct MyStruct
+
+union MyUnion
+
+enum MyEnum
+
+   enumerator MyEnumerator
+
+      "MyEnumerator"
+
+   "MyEnumerator"
+
+"MyEnumerator"
+
+type Sphinx
+
+typedef int SphinxVersionNum
+
+struct A
+
+   union **[anonymous]**
+
+      int a
+
+* "A.[anonymous].a"
+
+* "A.a"
+
+* "unsigned int"
+
+* *unsigned int*
+
+A a
+
+* "a->b"
+
+* *a->b*
diff --git a/_build/tests/roots/test-domain-c/namespace.txt b/_build/tests/roots/test-domain-c/namespace.txt
new file mode 100644
index 000000000..5dff6fbea
--- /dev/null
+++ b/_build/tests/roots/test-domain-c/namespace.txt
@@ -0,0 +1,9 @@
+int NSVar
+
+int NULLVar
+
+int ZeroVar
+
+int NS2NS3Var
+
+int PopVar
diff --git a/_build/tests/roots/test-domain-c/semicolon.txt b/_build/tests/roots/test-domain-c/semicolon.txt
new file mode 100644
index 000000000..58edd66ed
--- /dev/null
+++ b/_build/tests/roots/test-domain-c/semicolon.txt
@@ -0,0 +1,17 @@
+int member;
+
+int var;
+
+void f();
+
+struct Struct;
+
+union Union;
+
+enum Enum;
+
+enumerator Enumerator;
+
+type Type;
+
+typedef int TypeDef;
diff --git a/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt b/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt
new file mode 100644
index 000000000..83bff8cca
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/anon-dup-decl.txt
@@ -0,0 +1,5 @@
+class **[anonymous]**::A
+
+class **[anonymous]**::A
+
+class A
diff --git a/_build/tests/roots/test-domain-cpp/any-role.txt b/_build/tests/roots/test-domain-cpp/any-role.txt
new file mode 100644
index 000000000..3536daaad
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/any-role.txt
@@ -0,0 +1,28 @@
+any role
+********
+
+* "Sphinx"
+
+* "Sphinx::version"
+
+* "version"
+
+* "List"
+
+* "MyEnum"
+
+* ref function without parens "paren_1()"
+
+* ref function with parens "paren_2()"
+
+* ref function without parens, explicit title "paren_3_title"
+
+* ref function with parens, explicit title "paren_4_title"
+
+* ref op call without parens "paren_5::operator()()"
+
+* ref op call with parens "paren_6::operator()()"
+
+* ref op call without parens, explicit title "paren_7_title"
+
+* ref op call with parens, explicit title "paren_8_title"
diff --git a/_build/tests/roots/test-domain-cpp/backslash.txt b/_build/tests/roots/test-domain-cpp/backslash.txt
new file mode 100644
index 000000000..ff2503546
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/backslash.txt
@@ -0,0 +1 @@
+char c = '\\'
diff --git a/_build/tests/roots/test-domain-cpp/index.txt b/_build/tests/roots/test-domain-cpp/index.txt
new file mode 100644
index 000000000..fe4b79417
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/index.txt
@@ -0,0 +1,61 @@
+test-domain-cpp
+***************
+
+
+directives
+==========
+
+class Sphinx
+
+   The description of Sphinx class.
+
+int hello(char *name)
+
+   The description of hello function.
+
+float Sphinx::version
+
+   The description of Sphinx::version.
+
+int version
+
+   The description of version.
+
+typedef std::vector<int> List
+
+   The description of List type.
+
+enum MyEnum
+
+   An unscoped enum.
+
+   enumerator A
+
+enum class MyScopedEnum
+
+   A scoped enum.
+
+   enumerator B
+
+protected enum struct MyScopedVisibilityEnum : std::underlying_type<MySpecificEnum>::type
+
+   A scoped enum with non-default visibility, and with a specified
+   underlying type.
+
+   enumerator B
+
+void paren_1(int, float)
+
+void paren_2(int, float)
+
+void paren_3(int, float)
+
+void paren_4(int, float)
+
+void paren_5::operator()(int)
+
+void paren_6::operator()(int)
+
+void paren_7::operator()(int)
+
+void paren_8::operator()(int)
diff --git a/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt b/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt
new file mode 100644
index 000000000..9fa5edab2
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/lookup-key-overload.txt
@@ -0,0 +1,5 @@
+void g(int a)
+
+void g(double b)
+
+   "b"
diff --git a/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt b/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt
new file mode 100644
index 000000000..f7cd94f73
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/multi-decl-lookup.txt
@@ -0,0 +1,26 @@
+void f1(int a)
+void f1(double b)
+
+   * a: "a"
+
+   * b: "b"
+
+template<typename T>
+void f2(int a)
+template<typename U>
+void f2(double b)
+
+   * T: "T"
+
+   * U: "U"
+
+template<typename T>
+class A
+template<typename U>
+class B
+
+   void f3()
+
+      * T: "T"
+
+      * U: "U"
diff --git a/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt b/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt
new file mode 100644
index 000000000..b7a27dd32
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/roles-targets-ok.txt
@@ -0,0 +1,60 @@
+class Class
+
+   "Class" "Class" "Class" union func member var "Class" concept enum
+   enumerator
+
+union Union
+
+   "Union" class struct "Union" func member var "Union" concept enum
+   enumerator
+
+void Function()
+
+   "Function()" class struct union "Function()" member var "Function"
+   concept enum enumerator
+
+int Variable
+
+   "Variable" class struct union function "Variable" "Variables" type
+   concept enum enumerator
+
+using Type = void
+
+   "Type" class struct union function member var "Type" concept enum
+   enumerator
+
+template<typename T>
+concept Concept
+
+   "Concept" class struct union function member var type "Concept"
+   enum enumerator
+
+enum struct Enum
+
+   "Enum" class struct union function member var "Enum" concept "Enum"
+   enumerator
+
+   enumerator Enumerator
+
+   "Enumerator" class struct union function member var type concept
+   enum "Enumerator"
+
+template<typename TParamType, int TParamVar, template<typename> typename TParamTemplate>
+class ClassTemplate
+
+   "TParamType" "TParamType" "TParamType" "TParamType" "TParamType()"
+   "TParamType" "TParamType" "TParamType" "TParamType" "TParamType"
+   "TParamType"
+
+   "TParamVar" "TParamVar" "TParamVar" "TParamVar" "TParamVar()"
+   "TParamVar" "TParamVar" "TParamVar" "TParamVar" "TParamVar"
+   "TParamVar"
+
+   "TParamTemplate" "TParamTemplate" "TParamTemplate" "TParamTemplate"
+   "TParamTemplate()" "TParamTemplate" "TParamTemplate"
+   "TParamTemplate" "TParamTemplate" "TParamTemplate" "TParamTemplate"
+
+void FunctionParams(int FunctionParam)
+
+   "FunctionParam" class struct union function "FunctionParam"
+   "FunctionParam" type concept enum enumerator
diff --git a/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt b/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt
new file mode 100644
index 000000000..e5c638a03
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/roles-targets-warn.txt
@@ -0,0 +1,54 @@
+class Class
+
+   class struct "Class" "Class()" "Class" "Class" type "Class" "Class"
+   "Class"
+
+union Union
+
+   "Union" "Union" union "Union()" "Union" "Union" type "Union"
+   "Union" "Union"
+
+void Function()
+
+   "Function" "Function" "Function" func "Function" "Function" type
+   "Function" "Function" "Function"
+
+int Variable
+
+   "Variable" "Variable" "Variable" "Variable()" member var "Variable"
+   "Variable" "Variable" "Variable"
+
+using Type = void
+
+   "Type" "Type" "Type" "Type()" "Type" "Type" type "Type" "Type"
+   "Type"
+
+template<typename T>
+concept Concept
+
+   "Concept" "Concept" "Concept" "Concept()" "Concept" "Concept"
+   "Concept" concept "Concept" "Concept"
+
+enum struct Enum
+
+   "Enum" "Enum" "Enum" "Enum()" "Enum" "Enum" type "Enum" enum "Enum"
+
+   enumerator Enumerator
+
+   "Enumerator" "Enumerator" "Enumerator" "Enumerator()" "Enumerator"
+   "Enumerator" "Enumerator" "Enumerator" "Enumerator" enumerator
+
+template<typename TParamType, int TParamVar, template<typename> typename TParamTemplate>
+class ClassTemplate
+
+   class struct union func member var type concept enum enumerator
+
+   class struct union func member var type concept enum enumerator
+
+   class struct union func member var type concept enum enumerator
+
+void FunctionParams(int FunctionParam)
+
+   "FunctionParam" "FunctionParam" "FunctionParam" "FunctionParam()"
+   member var "FunctionParam" "FunctionParam" "FunctionParam"
+   "FunctionParam"
diff --git a/_build/tests/roots/test-domain-cpp/roles.txt b/_build/tests/roots/test-domain-cpp/roles.txt
new file mode 100644
index 000000000..5b807e489
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/roles.txt
@@ -0,0 +1,28 @@
+roles
+*****
+
+* "Sphinx"
+
+* "Sphinx::version"
+
+* "version"
+
+* "List"
+
+* "MyEnum"
+
+* ref function without parens "paren_1()"
+
+* ref function with parens "paren_2()"
+
+* ref function without parens, explicit title "paren_3_title"
+
+* ref function with parens, explicit title "paren_4_title"
+
+* ref op call without parens "paren_5::operator()()"
+
+* ref op call with parens "paren_6::operator()()"
+
+* ref op call without parens, explicit title "paren_7_title"
+
+* ref op call with parens, explicit title "paren_8_title"
diff --git a/_build/tests/roots/test-domain-cpp/roles2.txt b/_build/tests/roots/test-domain-cpp/roles2.txt
new file mode 100644
index 000000000..4dae6c960
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/roles2.txt
@@ -0,0 +1,5 @@
+Check that we don't crash just because we misuse a role.
+
+class A
+
+"A()"
diff --git a/_build/tests/roots/test-domain-cpp/semicolon.txt b/_build/tests/roots/test-domain-cpp/semicolon.txt
new file mode 100644
index 000000000..1c4ba2c81
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/semicolon.txt
@@ -0,0 +1,28 @@
+class Class;
+
+struct Struct;
+
+union Union;
+
+void f();
+
+int member;
+
+int var;
+
+type Type;
+
+typedef int TypeDef;
+
+using Alias = int;
+
+template<typename T>
+concept Concept;
+
+enum Enum;
+
+enum struct EnumStruct;
+
+enum class EnumClass;
+
+enumerator Enumerator;
diff --git a/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt b/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt
new file mode 100644
index 000000000..f9f43570b
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/warn-template-param-qualified-name.txt
@@ -0,0 +1,10 @@
+template<typename T>
+class A
+
+   using N1 = T::typeOk
+
+   * Not ok, warn: "T::typeWarn"
+
+   using N2 = T::U::typeOk
+
+   * Not ok, warn: "T::U::typeWarn"
diff --git a/_build/tests/roots/test-domain-cpp/xref_consistency.txt b/_build/tests/roots/test-domain-cpp/xref_consistency.txt
new file mode 100644
index 000000000..d30990bbb
--- /dev/null
+++ b/_build/tests/roots/test-domain-cpp/xref_consistency.txt
@@ -0,0 +1,7 @@
+xref consistency
+****************
+
+class item
+
+code-role:      "item" any-role:       "item" cpp-any-role:   "item"
+cpp-expr-role:  "item" cpp-texpr-role: *item*
diff --git a/_build/tests/roots/test-domain-js/index.txt b/_build/tests/roots/test-domain-js/index.txt
new file mode 100644
index 000000000..d760a4ab3
--- /dev/null
+++ b/_build/tests/roots/test-domain-js/index.txt
@@ -0,0 +1,6 @@
+test-domain-js
+**************
+
+* roles
+
+* module
diff --git a/_build/tests/roots/test-domain-js/module.txt b/_build/tests/roots/test-domain-js/module.txt
new file mode 100644
index 000000000..1fdda438f
--- /dev/null
+++ b/_build/tests/roots/test-domain-js/module.txt
@@ -0,0 +1,24 @@
+module
+******
+
+* Link to "ModTopLevel()"
+
+class module_a.submodule.ModTopLevel()
+
+   * Link to "mod_child_1()"
+
+   * Link to "ModTopLevel.mod_child_1()"
+
+ModTopLevel.mod_child_1()
+
+   * Link to "mod_child_2()"
+
+ModTopLevel.mod_child_2()
+
+   * Link to "module_a.submodule.ModTopLevel.mod_child_1()"
+
+* Link to "ModTopLevel()"
+
+class module_b.submodule.ModTopLevel()
+
+   * Link to "module_a.submodule"
diff --git a/_build/tests/roots/test-domain-js/roles.txt b/_build/tests/roots/test-domain-js/roles.txt
new file mode 100644
index 000000000..72d6daab3
--- /dev/null
+++ b/_build/tests/roots/test-domain-js/roles.txt
@@ -0,0 +1,50 @@
+roles
+*****
+
+class TopLevel()
+
+top_level()
+
+* "TopLevel()"
+
+* "top_level()"
+
+class NestedParentA()
+
+   * Link to "child_1()"
+
+   NestedParentA.child_1()
+
+      * Link to "NestedChildA.subchild_2()"
+
+      * Link to "child_2()"
+
+      * Link to "any_child"
+
+   NestedParentA.any_child()
+
+      * Link to "NestedChildA()"
+
+   class NestedParentA.NestedChildA()
+
+      NestedParentA.NestedChildA.subchild_1()
+
+         * Link to "subchild_2()"
+
+      NestedParentA.NestedChildA.subchild_2()
+
+         Link to "NestedParentA.child_1()"
+
+   NestedParentA.child_2()
+
+      Link to "NestedChildA.subchild_1()"
+
+class NestedParentB()
+
+   * Link to "child_1()"
+
+   NestedParentB.child_1()
+
+      * Link to "NestedParentB()"
+
+* "NestedParentA.NestedChildA()"
diff --git a/_build/tests/roots/test-domain-py-xref-warning/index.txt b/_build/tests/roots/test-domain-py-xref-warning/index.txt
new file mode 100644
index 000000000..1810edec0
--- /dev/null
+++ b/_build/tests/roots/test-domain-py-xref-warning/index.txt
@@ -0,0 +1,4 @@
+test-domain-py-xref-warning
+***************************
+
+*no-label* *existing-label*
diff --git a/_build/tests/roots/test-domain-py/index.txt b/_build/tests/roots/test-domain-py/index.txt
new file mode 100644
index 000000000..c8974b335
--- /dev/null
+++ b/_build/tests/roots/test-domain-py/index.txt
@@ -0,0 +1,6 @@
+test-domain-py
+**************
+
+* roles
+
+* module
diff --git a/_build/tests/roots/test-domain-py/module.txt b/_build/tests/roots/test-domain-py/module.txt
new file mode 100644
index 000000000..41db5e9b5
--- /dev/null
+++ b/_build/tests/roots/test-domain-py/module.txt
@@ -0,0 +1,56 @@
+module
+******
+
+* Link to "ModTopLevel"
+
+class module_a.submodule.ModTopLevel
+
+   * Link to "mod_child_1()"
+
+   * Link to "ModTopLevel.mod_child_1()"
+
+ModTopLevel.mod_child_1()
+
+   * Link to "mod_child_2()"
+
+ModTopLevel.mod_child_2()
+
+   * Link to "module_a.submodule.ModTopLevel.mod_child_1()"
+
+property ModTopLevel.prop
+
+   * Link to "prop attribute"
+
+   * Link to "prop method"
+
+class ModNoModule
+
+* Link to "ModTopLevel"
+
+class module_b.submodule.ModTopLevel
+
+   * Link to "ModNoModule"
+
+module_b.submodule.foo(x, y)
+
+   Parameters:
+      * **x** (*int*) -- param x
+
+      * **y** (*tuple**(**str**, **float**)*) -- param y
+
+   Return type:
+      list
+
+module_b.submodule.attr1
+
+   Type:
+      ModTopLevel
+
+module_b.submodule.attr2
+
+   Type:
+      test-domain-py
+
+exception Exception
+
+object.sum()
diff --git a/_build/tests/roots/test-domain-py/module_option.txt b/_build/tests/roots/test-domain-py/module_option.txt
new file mode 100644
index 000000000..5345a5b2a
--- /dev/null
+++ b/_build/tests/roots/test-domain-py/module_option.txt
@@ -0,0 +1,18 @@
+module_option
+*************
+
+class test.extra.B
+
+   This is also a test.
+
+   baz()
+
+      Does something similar to "foo()".
+
+   foo()
+
+      Does something.
+
+   test()
+
+      Does something completely unrelated to "foo()"
diff --git a/_build/tests/roots/test-domain-py/roles.txt b/_build/tests/roots/test-domain-py/roles.txt
new file mode 100644
index 000000000..81065d772
--- /dev/null
+++ b/_build/tests/roots/test-domain-py/roles.txt
@@ -0,0 +1,50 @@
+roles
+*****
+
+class TopLevel
+
+top_level()
+
+* "TopLevel"
+
+* "top_level()"
+
+class NestedParentA
+
+   * Link to "child_1()"
+
+   child_1()
+
+      * Link to "NestedChildA.subchild_2()"
+
+      * Link to "child_2()"
+
+      * Link to "any_child"
+
+   any_child()
+
+      * Link to "NestedChildA"
+
+   class NestedChildA
+
+      subchild_1()
+
+         * Link to "subchild_2()"
+
+      subchild_2()
+
+         Link to "NestedParentA.child_1()"
+
+   child_2()
+
+      Link to "NestedChildA.subchild_1()"
+
+class NestedParentB
+
+   * Link to "child_1()"
+
+   child_1()
+
+      * Link to "NestedParentB"
+
+* "NestedParentA.NestedChildA"
diff --git a/_build/tests/roots/test-double-inheriting-theme/index.txt b/_build/tests/roots/test-double-inheriting-theme/index.txt
new file mode 100644
index 000000000..6f35e57b0
--- /dev/null
+++ b/_build/tests/roots/test-double-inheriting-theme/index.txt
@@ -0,0 +1,2 @@
+Test double inheriting theme
+****************************
diff --git a/_build/tests/roots/test-epub-anchor-id/index.txt b/_build/tests/roots/test-epub-anchor-id/index.txt
new file mode 100644
index 000000000..a3e63b660
--- /dev/null
+++ b/_build/tests/roots/test-epub-anchor-id/index.txt
@@ -0,0 +1,10 @@
+test-epub-anchor-id
+*******************
+
+blah blah blah
+
+
+blah blah blah
+**************
+
+see >>:setting:`STATICFILES_FINDERS`<<
diff --git a/_build/tests/roots/test-ext-autodoc/index.txt b/_build/tests/roots/test-ext-autodoc/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt b/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt
new file mode 100644
index 000000000..e8512bbbf
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosectionlabel-prefix-document/index.txt
@@ -0,0 +1,48 @@
+test-ext-autosectionlabel-prefix-document
+*****************************************
+
+
+Introduce of Sphinx
+===================
+
+
+Installation
+============
+
+
+For Windows users
+-----------------
+
+
+For UNIX users
+--------------
+
+
+Linux
+~~~~~
+
+
+FreeBSD
+~~~~~~~
+
+
+This one's got an apostrophe
+----------------------------
+
+
+References
+==========
+
+* *index:Introduce of Sphinx*
+
+* *index:Installation*
+
+* *index:For Windows users*
+
+* *index:For UNIX users*
+
+* *index:Linux*
+
+* *index:FreeBSD*
+
+* *index:This one's got an apostrophe*
diff --git a/_build/tests/roots/test-ext-autosectionlabel/index.txt b/_build/tests/roots/test-ext-autosectionlabel/index.txt
new file mode 100644
index 000000000..ddde6ade8
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosectionlabel/index.txt
@@ -0,0 +1,50 @@
+test-ext-autosectionlabel
+*************************
+
+
+Introduce of Sphinx
+===================
+
+
+Installation
+============
+
+
+For Windows users
+-----------------
+
+
+For UNIX users
+--------------
+
+
+Linux
+~~~~~
+
+
+FreeBSD
+~~~~~~~
+
+
+This one's got an apostrophe
+----------------------------
+
+
+References
+==========
+
+* *test-ext-autosectionlabel*
+
+* *Introduce of Sphinx*
+
+* *Installation*
+
+* *For Windows users*
+
+* *For UNIX users*
+
+* *Linux*
+
+* *FreeBSD*
+
+* *This one's got an apostrophe*
diff --git a/_build/tests/roots/test-ext-autosummary-filename-map/index.txt b/_build/tests/roots/test-ext-autosummary-filename-map/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-ext-autosummary-imported_members/index.txt b/_build/tests/roots/test-ext-autosummary-imported_members/index.txt
new file mode 100644
index 000000000..6bc7cb0f5
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosummary-imported_members/index.txt
@@ -0,0 +1,2 @@
+test-ext-autosummary-mock_imports
+*********************************
diff --git a/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt b/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt
new file mode 100644
index 000000000..6bc7cb0f5
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosummary-mock_imports/index.txt
@@ -0,0 +1,2 @@
+test-ext-autosummary-mock_imports
+*********************************
diff --git a/_build/tests/roots/test-ext-autosummary-recursive/index.txt b/_build/tests/roots/test-ext-autosummary-recursive/index.txt
new file mode 100644
index 000000000..f10c057e1
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosummary-recursive/index.txt
@@ -0,0 +1,4 @@
+API Reference
+*************
+
+-[ Packages ]-
diff --git a/_build/tests/roots/test-ext-autosummary-skip-member/index.txt b/_build/tests/roots/test-ext-autosummary-skip-member/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt b/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt
new file mode 100644
index 000000000..7f7204cf5
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosummary-template/_templates/empty.txt
@@ -0,0 +1 @@
+EMPTY
diff --git a/_build/tests/roots/test-ext-autosummary-template/index.txt b/_build/tests/roots/test-ext-autosummary-template/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-ext-autosummary/index.txt b/_build/tests/roots/test-ext-autosummary/index.txt
new file mode 100644
index 000000000..0f60f0b4b
--- /dev/null
+++ b/_build/tests/roots/test-ext-autosummary/index.txt
@@ -0,0 +1,3 @@
+>>:autolink:`autosummary_dummy_module.Foo`<<
+
+>>:autolink:`autosummary_importfail`<<
diff --git a/_build/tests/roots/test-ext-coverage/index.txt b/_build/tests/roots/test-ext-coverage/index.txt
new file mode 100644
index 000000000..e69de29bb
diff --git a/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt b/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt
new file mode 100644
index 000000000..42d071bbb
--- /dev/null
+++ b/_build/tests/roots/test-ext-doctest-with-autodoc/dir/inner.txt
@@ -0,0 +1 @@
+>>> 'dir/inner.rst:1'
diff --git a/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt b/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt
new file mode 100644
index 000000000..0822a89ae
--- /dev/null
+++ b/_build/tests/roots/test-ext-doctest-with-autodoc/index.txt
@@ -0,0 +1 @@
+>>> 'index.rst:4'
diff --git a/_build/tests/roots/test-ext-githubpages/index.txt b/_build/tests/roots/test-ext-githubpages/index.txt
new file mode 100644
index 000000000..f2cf096c5
--- /dev/null
+++ b/_build/tests/roots/test-ext-githubpages/index.txt
@@ -0,0 +1,2 @@
+githubpages
+***********
diff --git a/_build/tests/roots/test-ext-graphviz/index.txt b/_build/tests/roots/test-ext-graphviz/index.txt
new file mode 100644
index 000000000..6d207f566
--- /dev/null
+++ b/_build/tests/roots/test-ext-graphviz/index.txt
@@ -0,0 +1,4 @@
+graphviz
+********
+
+Hello >>|graph|<< graphviz world
diff --git a/_build/tests/roots/test-ext-ifconfig/index.txt b/_build/tests/roots/test-ext-ifconfig/index.txt
new file mode 100644
index 000000000..d41beeba3
--- /dev/null
+++ b/_build/tests/roots/test-ext-ifconfig/index.txt
@@ -0,0 +1,2 @@
+ifconfig
+********
diff --git a/_build/tests/roots/test-ext-imgconverter/index.txt b/_build/tests/roots/test-ext-imgconverter/index.txt
new file mode 100644
index 000000000..4532ff73c
--- /dev/null
+++ b/_build/tests/roots/test-ext-imgconverter/index.txt
@@ -0,0 +1,4 @@
+test-ext-imgconverter
+*********************
+
+[image]
diff --git a/_build/tests/roots/test-ext-inheritance_diagram/index.txt b/_build/tests/roots/test-ext-inheritance_diagram/index.txt
new file mode 100644
index 000000000..b8fc7c43b
--- /dev/null
+++ b/_build/tests/roots/test-ext-inheritance_diagram/index.txt
@@ -0,0 +1,2 @@
+test-ext-inheritance_diagram
+****************************
diff --git a/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt b/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt
new file mode 100644
index 000000000..c1e882324
--- /dev/null
+++ b/_build/tests/roots/test-ext-intersphinx-cppdomain/index.txt
@@ -0,0 +1,6 @@
+test-ext-intersphinx-cppdomain
+******************************
+
+"Bar"
+
+foons::bartype FooBarBaz()
diff --git a/_build/tests/roots/test-ext-math-compat/index.txt b/_build/tests/roots/test-ext-math-compat/index.txt
new file mode 100644
index 000000000..74d0f7f0b
--- /dev/null
+++ b/_build/tests/roots/test-ext-math-compat/index.txt
@@ -0,0 +1,20 @@
+Test Math
+*********
+
+
+inline
+======
+
+Inline: E=mc^2 Inline my math: >>:my_math:`:-)`<<
+
+
+block
+=====
+
+   a^2+b^2=c^2
+
+Second math
+
+   e^{i\pi}+1=0
+
+Multi math equations
diff --git a/_build/tests/roots/test-ext-math-simple/index.txt b/_build/tests/roots/test-ext-math-simple/index.txt
new file mode 100644
index 000000000..eeb489db0
--- /dev/null
+++ b/_build/tests/roots/test-ext-math-simple/index.txt
@@ -0,0 +1,4 @@
+Test Math
+*********
+
+   a^2+b^2=c^2
diff --git a/_build/tests/roots/test-ext-math/index.txt b/_build/tests/roots/test-ext-math/index.txt
new file mode 100644
index 000000000..33d4a768a
--- /dev/null
+++ b/_build/tests/roots/test-ext-math/index.txt
@@ -0,0 +1,18 @@
+Test Math
+*********
+
+* 1. Test math extensions E = m c^2
+
+* 2. Test multiple pages
+
+   a^2+b^2=c^2
+
+Inline E=mc^2
+
+Second math
+
+   e^{i\pi}+1=0
+
+Multi math equations
+
+   S &= \pi r^2  V &= \frac{4}{3} \pi r^3
diff --git a/_build/tests/roots/test-ext-math/math.txt b/_build/tests/roots/test-ext-math/math.txt
new file mode 100644
index 000000000..f427af363
--- /dev/null
+++ b/_build/tests/roots/test-ext-math/math.txt
@@ -0,0 +1,18 @@
+1. Test math extensions E = m c^2
+*********************************
+
+This is inline math: a^2 + b^2 = c^2.
+
+   a^2 + b^2 = c^2
+
+   a + 1 < b
+
+   e^{i\pi} = 1
+
+   e^{ix} = \cos x + i\sin x
+
+   n \in \mathbb N
+
+   a + 1 < b
+
+Referencing equation (1) and (1).
diff --git a/_build/tests/roots/test-ext-math/page.txt b/_build/tests/roots/test-ext-math/page.txt
new file mode 100644
index 000000000..52a31aac7
--- /dev/null
+++ b/_build/tests/roots/test-ext-math/page.txt
@@ -0,0 +1,6 @@
+2. Test multiple pages
+**********************
+
+   a = b + 1
+
+Referencing equations (1) and (1).
diff --git a/_build/tests/roots/test-ext-todo/bar.txt b/_build/tests/roots/test-ext-todo/bar.txt
new file mode 100644
index 000000000..b87b461ba
--- /dev/null
+++ b/_build/tests/roots/test-ext-todo/bar.txt
@@ -0,0 +1,2 @@
+bar
+***
diff --git a/_build/tests/roots/test-ext-todo/foo.txt b/_build/tests/roots/test-ext-todo/foo.txt
new file mode 100644
index 000000000..062135349
--- /dev/null
+++ b/_build/tests/roots/test-ext-todo/foo.txt
@@ -0,0 +1,7 @@
+foo
+***
+
+hello()
+
+   Parameters:
+      **bug** -- #5800
diff --git a/_build/tests/roots/test-ext-todo/index.txt b/_build/tests/roots/test-ext-todo/index.txt
new file mode 100644
index 000000000..7e9b09cfe
--- /dev/null
+++ b/_build/tests/roots/test-ext-todo/index.txt
@@ -0,0 +1,6 @@
+test for sphinx.ext.todo
+************************
+
+* foo
+
+* bar
diff --git a/_build/tests/roots/test-ext-viewcode-find/index.txt b/_build/tests/roots/test-ext-viewcode-find/index.txt
new file mode 100644
index 000000000..7b63275a6
--- /dev/null
+++ b/_build/tests/roots/test-ext-viewcode-find/index.txt
@@ -0,0 +1,33 @@
+viewcode
+********
+
+not_a_package.func1(a, b)
+
+   This is func1
+
+not_a_package.submodule.func1(a, b)
+
+   This is func1
+
+class not_a_package.submodule.Class1
+
+   This is Class1
+
+class not_a_package.submodule.Class3
+
+   This is Class3
+
+class not_a_package.submodule.Class1
+
+   This is Class1
+
+   @decorator
+   def func1(a, b):
+       """
+       this is func1
+       """
+       return a, b
+
+not_a_package.submodule.Class3.class_attr
+
+   This is the class attribute class_attr
diff --git a/_build/tests/roots/test-ext-viewcode/index.txt b/_build/tests/roots/test-ext-viewcode/index.txt
new file mode 100644
index 000000000..1f594821d
--- /dev/null
+++ b/_build/tests/roots/test-ext-viewcode/index.txt
@@ -0,0 +1,23 @@
+viewcode
+********
+
+   @decorator
+   def func1(a, b):
+       """
+       this is func1
+       """
+       return a, b
+
+* Testing object descriptions
+
+* C items
+
+* Javascript items
+
+* References
+
+* Others
+
+* User markup
+
+* CPP domain
diff --git a/_build/tests/roots/test-ext-viewcode/objects.txt b/_build/tests/roots/test-ext-viewcode/objects.txt
new file mode 100644
index 000000000..7dc035690
--- /dev/null
+++ b/_build/tests/roots/test-ext-viewcode/objects.txt
@@ -0,0 +1,157 @@
+Testing object descriptions
+***************************
+
+func_without_module(a, b, *c[, d])
+
+   Does something.
+
+func_without_body()
+
+func_noindex()
+
+foolib.func_with_module()
+
+Referring to "func with no index". Referring to "nothing".
+
+mod.func_in_module()
+
+class mod.Cls
+
+   meth1()
+
+   static meths()
+
+   attr
+
+Cls.meth2()
+
+exception errmod.Error(arg1, arg2)
+
+mod.var
+
+func_without_module2() -> annotation
+
+long(parameter,   list)
+another one
+
+class TimeInt
+
+   Has only one parameter (triggers special behavior...)
+
+   Parameters:
+      **moo** (Moo) -- Moo
+
+class Time(hour, minute, isdst)
+
+   Parameters:
+      * **year** (*TimeInt*) -- The year.
+
+      * **minute** (*TimeInt*) -- The minute.
+
+      * **isdst** -- whether it's DST
+
+      * **hour** (*DuplicateType*) -- Some parameter
+
+      * **hour** -- Duplicate param.  Should not lead to crashes.
+
+      * **extcls** (*Cls*) -- A class from another module.
+
+   Returns:
+      a new "Time" instance
+
+   Return type:
+      "Time"
+
+   Raises:
+      **ValueError** -- if the values are out of range
+
+   Variables:
+      * **hour** (*int*) -- like *hour*
+
+      * **minute** (*int*) -- like *minute*
+
+
+C items
+*******
+
+Sphinx_DoSomething()
+
+SphinxStruct.member
+
+SPHINX_USE_PYTHON
+
+type SphinxType
+
+sphinx_global
+
+
+Javascript items
+****************
+
+foo()
+
+bar
+
+bar.baz(href, callback[, errback])
+
+   Arguments:
+      * **href** (*string*) -- The location of the resource.
+
+      * **callback** -- Get's called with the data returned by the
+        resource.
+
+   Throws:
+      **InvalidHref** -- If the *href* is invalid.
+
+   Returns:
+      *undefined*
+
+bar.spam
+
+
+References
+**********
+
+Referencing "mod.Cls" or "mod.Cls" should be the same.
+
+With target: "Sphinx_DoSomething()" (parentheses are handled),
+"SphinxStruct.member", "SPHINX_USE_PYTHON", "SphinxType *" (pointer is
+handled), "sphinx_global".
+
+Without target: "CFunction()". "malloc()".
+
+"foo()" "foo()"
+
+"bar" "bar.baz()" "bar.baz()" "baz()"
+
+"bar.baz"
+
+
+Others
+******
+
+HOME
+
+-c command
+
+-c
+
++p
+
+Link to "perl +p".
+
+
+User markup
+***********
+
+Referencing >>:userdescrole:`myobj`<<.
+
+
+CPP domain
+**********
+
+template<>
+class n::Array<T, d>
+
+   T &operator[](unsigned j)
+   const T &operator[](unsigned j) const
diff --git a/_build/tests/roots/test-footnotes/bar.txt b/_build/tests/roots/test-footnotes/bar.txt
new file mode 100644
index 000000000..5df6b6de2
--- /dev/null
+++ b/_build/tests/roots/test-footnotes/bar.txt
@@ -0,0 +1,6 @@
+bar
+***
+
+Same footnote number [1] in bar.rst
+
+[1] footnote in bar
diff --git a/_build/tests/roots/test-footnotes/baz.txt b/_build/tests/roots/test-footnotes/baz.txt
new file mode 100644
index 000000000..5a2147c27
--- /dev/null
+++ b/_build/tests/roots/test-footnotes/baz.txt
@@ -0,0 +1,6 @@
+baz
+***
+
+Auto footnote number [1] in baz.rst
+
+[1] footnote in baz
diff --git a/conf.py b/conf.py
new file mode 100644
index 000000000..0ba096c9c
--- /dev/null
+++ b/conf.py
@@ -0,0 +1,5 @@
+
+import sys
+sys.path.insert(0, '.')
+
+extensions = ['sphinx.ext.autodoc']
diff --git a/direct_test.py b/direct_test.py
new file mode 100644
index 000000000..d567dbe91
--- /dev/null
+++ b/direct_test.py
@@ -0,0 +1,68 @@
+#!/usr/bin/env python3
+import sys
+sys.path.insert(0, '/testbed')
+
+# Create test module
+with open('test_empty_all.py', 'w') as f:
+    f.write('''
+__all__ = []
+
+def foo():
+    "foo docstring"
+    pass
+
+def bar():
+    "bar docstring"  
+    pass
+
+def baz():
+    "baz docstring"
+    pass
+''')
+
+import test_empty_all
+from sphinx.util import inspect
+
+# Test getall function
+result = inspect.getall(test_empty_all)
+print(f"inspect.getall result: {result}")
+print(f"result is None: {result is None}")
+print(f"result == []: {result == []}")
+print(f"bool(result): {bool(result)}")
+
+# Create a simple test case to check the logic
+class MockModuleDocumenter:
+    def __init__(self):
+        self.__all__ = result
+        
+    def test_old_logic(self):
+        """This is the buggy logic"""
+        if not self.__all__:
+            return "No __all__ defined (treating empty list as no __all__)"
+        else:
+            return "Has __all__ defined"
+            
+    def test_new_logic(self):
+        """This is the fixed logic"""
+        if self.__all__ is None:
+            return "No __all__ defined"
+        else:
+            return f"Has __all__ defined with value: {self.__all__}"
+
+doc = MockModuleDocumenter()
+print(f"\nOld logic result: {doc.test_old_logic()}")
+print(f"New logic result: {doc.test_new_logic()}")
+
+# Test with no __all__ 
+with open('test_no_all.py', 'w') as f:
+    f.write('''
+def foo():
+    "foo docstring"
+    pass
+''')
+
+import test_no_all
+result2 = inspect.getall(test_no_all)
+print(f"\nFor module without __all__:")
+print(f"inspect.getall result: {result2}")
+print(f"result is None: {result2 is None}")
diff --git a/empty_all_module.py b/empty_all_module.py
new file mode 100644
index 000000000..a85d78b33
--- /dev/null
+++ b/empty_all_module.py
@@ -0,0 +1,14 @@
+
+__all__ = []
+
+def foo():
+    "foo docstring"
+    pass
+
+def bar():
+    "bar docstring"
+    pass
+
+def baz():
+    "baz docstring"
+    pass
diff --git a/example.py b/example.py
new file mode 100644
index 000000000..fb47182b4
--- /dev/null
+++ b/example.py
@@ -0,0 +1,14 @@
+
+__all__ = []
+
+
+def foo():
+    "docstring"
+
+
+def bar():
+    "docstring"
+
+
+def baz():
+    "docstring"
diff --git a/index.rst b/index.rst
new file mode 100644
index 000000000..e882781cd
--- /dev/null
+++ b/index.rst
@@ -0,0 +1,6 @@
+
+Test Empty __all__
+==================
+
+.. automodule:: empty_all_module
+   :members:
diff --git a/setup.py b/setup.py
index 8d40de1a8..03f325278 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp',
-    'sphinxcontrib-serializinghtml',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp<=2.0.4',
+    'sphinxcontrib-serializinghtml<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.12',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/simple_test.py b/simple_test.py
new file mode 100644
index 000000000..412765810
--- /dev/null
+++ b/simple_test.py
@@ -0,0 +1,55 @@
+#!/usr/bin/env python3
+import sys
+import os
+sys.path.insert(0, '/testbed')
+
+# Create test module
+with open('empty_all_module.py', 'w') as f:
+    f.write('''
+__all__ = []
+
+def foo():
+    "foo docstring"
+    pass
+
+def bar():
+    "bar docstring"
+    pass
+
+def baz():
+    "baz docstring"
+    pass
+''')
+
+# Create a conf.py 
+with open('conf.py', 'w') as f:
+    f.write('''
+import sys
+sys.path.insert(0, '.')
+
+extensions = ['sphinx.ext.autodoc']
+''')
+
+# Create index.rst
+with open('index.rst', 'w') as f:
+    f.write('''
+Test Empty __all__
+==================
+
+.. automodule:: empty_all_module
+   :members:
+''')
+
+# Run sphinx-build
+os.system('sphinx-build -E -b text . _build')
+
+print("\n\nChecking output:")
+with open('_build/index.txt', 'r') as f:
+    content = f.read()
+    print(content)
+    
+    # Check if any functions are documented
+    if 'foo()' in content or 'bar()' in content or 'baz()' in content:
+        print("\nERROR: Functions are shown even though __all__ is empty!")
+    else:
+        print("\nSUCCESS: No functions shown (as expected with empty __all__)")
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index d85d79617..3d9273e29 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1074,7 +1074,7 @@ class ModuleDocumenter(Documenter):
     def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:
         members = self.get_module_members()
         if want_all:
-            if not self.__all__:
+            if self.__all__ is None:
                 # for implicit module members, check __module__ to avoid
                 # documenting imported objects
                 return True, list(members.values())
@@ -1099,7 +1099,7 @@ class ModuleDocumenter(Documenter):
 
     def sort_members(self, documenters: List[Tuple["Documenter", bool]],
                      order: str) -> List[Tuple["Documenter", bool]]:
-        if order == 'bysource' and self.__all__:
+        if order == 'bysource' and self.__all__ is not None:
             # Sort alphabetically first (for members not listed on the __all__)
             documenters.sort(key=lambda e: e[0].name)
 
diff --git a/test_empty_all.py b/test_empty_all.py
new file mode 100644
index 000000000..3a00559f6
--- /dev/null
+++ b/test_empty_all.py
@@ -0,0 +1,14 @@
+
+__all__ = []
+
+def foo():
+    "foo docstring"
+    pass
+
+def bar():
+    "bar docstring"  
+    pass
+
+def baz():
+    "baz docstring"
+    pass
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 000000000..c6295adc5
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,119 @@
+import sys
+import tempfile
+import os
+from pathlib import Path
+
+# Add the sphinx directory to path
+sys.path.insert(0, '/testbed')
+
+from sphinx.ext.autodoc import ModuleDocumenter
+from sphinx.util.docutils import SphinxDirective
+from sphinx.application import Sphinx
+from sphinx.util import logging
+
+# Create a temporary test directory
+with tempfile.TemporaryDirectory() as tmpdir:
+    # Create a test module with empty __all__
+    test_module = Path(tmpdir) / "test_module.py"
+    test_module.write_text("""
+__all__ = []
+
+def foo():
+    '''Function foo'''
+    pass
+
+def bar():
+    '''Function bar'''
+    pass
+
+def baz():
+    '''Function baz'''
+    pass
+""")
+    
+    # Add tmpdir to path so we can import the module
+    sys.path.insert(0, tmpdir)
+    
+    # Import the module
+    import test_module
+    
+    # Create a mock documenter
+    class MockApp:
+        def __init__(self):
+            self.config = type('Config', (), {})()
+            self.config.autodoc_mock_imports = []
+            self.config.autodoc_typehints = 'signature'
+            self.config.autodoc_class_signature = 'mixed'
+            self.config.autodoc_warningiserror = False
+            self.config.autodoc_inherit_docstrings = True
+            self.events = type('Events', (), {'emit': lambda *args: None})()
+    
+    class MockEnv:
+        def __init__(self):
+            self.config = MockApp().config
+            self.app = MockApp()
+            self.temp_data = {}
+            self.ref_context = {}
+    
+    class MockDirective:
+        def __init__(self):
+            self.env = MockEnv()
+            self.state = type('State', (), {'document': type('Document', (), {'settings': type('Settings', (), {'tab_width': 8})()})()})()
+            self.content = []
+            self.lineno = 0
+            self.reporter = None
+            self.result = []
+            self.genopt = MockOptions()
+            
+    class MockOptions:
+        def __init__(self):
+            self.members = None
+            self.undoc_members = False
+            self.inherited_members = False 
+            self.ignore_module_all = False
+            self.show_inheritance = False
+            self.synopsis = None
+            self.platform = None
+            self.deprecated = None
+            self.exclude_members = set()
+            
+    # Create module documenter
+    directive = MockDirective()
+    documenter = ModuleDocumenter(directive, 'test_module', None)
+    documenter.options = MockOptions()
+    documenter.object = test_module
+    documenter.objpath = []
+    documenter.parent = None
+    documenter.object_name = 'test_module'
+    documenter.modname = 'test_module'
+    documenter.module = test_module
+    documenter.fullname = 'test_module'
+    documenter.real_modname = 'test_module'
+    documenter.titles_allowed = True
+    documenter.indent = ''
+    
+    # Test import_object
+    documenter.import_object()
+    
+    # Check that __all__ was loaded correctly
+    print(f"__all__ attribute: {documenter.__all__}")
+    print(f"__all__ is None: {documenter.__all__ is None}")
+    print(f"__all__ == []: {documenter.__all__ == []}")
+    
+    # Get object members with want_all=True
+    check_module, members = documenter.get_object_members(want_all=True)
+    
+    print(f"\ncheck_module: {check_module}")
+    print(f"Number of members: {len(members)}")
+    
+    # Check which members are skipped
+    skipped_count = 0
+    for member in members:
+        if hasattr(member, 'skipped') and member.skipped:
+            skipped_count += 1
+            print(f"Member '{member.__name__}' is skipped")
+        elif member.__name__ in ['foo', 'bar', 'baz']:
+            print(f"Member '{member.__name__}' is NOT skipped (this is the bug!)")
+            
+    print(f"\nTotal skipped: {skipped_count}")
+    print(f"Expected all 3 functions to be skipped since __all__ is empty")
diff --git a/test_no_all.py b/test_no_all.py
new file mode 100644
index 000000000..a34c94461
--- /dev/null
+++ b/test_no_all.py
@@ -0,0 +1,4 @@
+
+def foo():
+    "foo docstring"
+    pass
diff --git a/tests/roots/test-ext-autodoc/target/empty_all.py b/tests/roots/test-ext-autodoc/target/empty_all.py
new file mode 100644
index 000000000..b5e366a77
--- /dev/null
+++ b/tests/roots/test-ext-autodoc/target/empty_all.py
@@ -0,0 +1,25 @@
+"""
+Module with empty __all__ list for testing.
+"""
+
+__all__ = []
+
+
+def foo():
+    """foo function"""
+    pass
+
+
+def bar():
+    """bar function"""
+    pass
+
+
+def baz():
+    """baz function"""
+    pass
+
+
+class Class:
+    """Class"""
+    pass
diff --git a/tests/test_ext_autodoc.py b/tests/test_ext_autodoc.py
index 39897eb7d..9a28fa33f 100644
--- a/tests/test_ext_autodoc.py
+++ b/tests/test_ext_autodoc.py
@@ -1019,6 +1019,37 @@ def test_autodoc_module_member_order(app):
     ]
 
 
+@pytest.mark.sphinx('html', testroot='ext-autodoc')
+def test_autodoc_module_empty_all(app):
+    """Test that empty __all__ correctly excludes all members."""
+    # Test with empty __all__ - no members should be documented
+    options = {"members": None}
+    actual = do_autodoc(app, 'module', 'target.empty_all', options)
+    assert list(filter(lambda l: '::' in l, actual)) == [
+        '.. py:module:: target.empty_all',
+    ]
+    # No functions or classes should be included!
+    
+    # Test with explicit members list - they should still be shown
+    options = {"members": "foo,bar"}
+    actual = do_autodoc(app, 'module', 'target.empty_all', options)
+    assert list(filter(lambda l: '::' in l, actual)) == [
+        '.. py:module:: target.empty_all',
+        '.. py:function:: foo()',
+        '.. py:function:: bar()',
+    ]
+    
+    # Test with ignore-module-all - should show all members  
+    options = {"members": None, "ignore-module-all": True}
+    actual = do_autodoc(app, 'module', 'target.empty_all', options)
+    members = list(filter(lambda l: '::' in l, actual))
+    assert '.. py:module:: target.empty_all' in members
+    assert '.. py:function:: foo()' in members
+    assert '.. py:function:: bar()' in members
+    assert '.. py:function:: baz()' in members
+    assert '.. py:class:: Class()' in members
+
+
 @pytest.mark.sphinx('html', testroot='ext-autodoc')
 def test_autodoc_module_scope(app):
     app.env.temp_data['autodoc:module'] = 'target'
diff --git a/tox.ini b/tox.ini
index dbb705a3a..9f4fc3a32 100644
--- a/tox.ini
+++ b/tox.ini
@@ -28,7 +28,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
