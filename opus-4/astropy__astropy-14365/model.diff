diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004aa..b9251236ac 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -34,6 +34,8 @@ def _line_type(line, delimiter=None):
     --------
     >>> _line_type("READ SERR 3")
     'command'
+    >>> _line_type("read serr 3")
+    'command'
     >>> _line_type(" \\n    !some gibberish")
     'comment'
     >>> _line_type("   ")
@@ -60,7 +62,7 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"[Rr][Ee][Aa][Dd] [TtSs][Ee][Rr][Rr](\s+[0-9]+)+"
 
     sep = delimiter
     if delimiter is None:
diff --git a/astropy/io/ascii/tests/test_qdp.py b/astropy/io/ascii/tests/test_qdp.py
index ef24e6f6a3..c011577213 100644
--- a/astropy/io/ascii/tests/test_qdp.py
+++ b/astropy/io/ascii/tests/test_qdp.py
@@ -245,3 +245,52 @@ def test_get_lines_from_qdp(tmp_path):
         assert file_output[i] == line
         assert list_output[i] == line
         assert text_output[i] == line
+
+
+def test_case_insensitive_commands():
+    """Test that QDP commands are case-insensitive."""
+    # Test with lowercase commands
+    lines_lower = [
+        'read serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    with pytest.warns(AstropyUserWarning):
+        table = ascii.read(lines_lower, format='qdp')
+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    assert np.allclose(table['col1'][0], 1.0)
+    assert np.allclose(table['col1_err'][0], 0.5)
+    
+    # Test with mixed case
+    lines_mixed = [
+        'Read Serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    with pytest.warns(AstropyUserWarning):
+        table2 = ascii.read(lines_mixed, format='qdp')
+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # Test with uppercase (existing behavior)
+    lines_upper = [
+        'READ SERR 1 2',
+        '1 0.5 1 0.5'
+    ]
+    with pytest.warns(AstropyUserWarning):
+        table3 = ascii.read(lines_upper, format='qdp')
+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # All tables should have the same data
+    for t in [table2, table3]:
+        assert np.array_equal(table['col1'], t['col1'])
+        assert np.array_equal(table['col1_err'], t['col1_err'])
+        assert np.array_equal(table['col2'], t['col2'])
+        assert np.array_equal(table['col2_err'], t['col2_err'])
+    
+    # Test mixed case TERR command
+    lines_terr = [
+        'read terr 1',
+        '1 0.5 -0.5 2'
+    ]
+    with pytest.warns(AstropyUserWarning):
+        table4 = ascii.read(lines_terr, format='qdp')
+    assert 'col1_perr' in table4.colnames
+    assert 'col1_nerr' in table4.colnames
diff --git a/pyproject.toml b/pyproject.toml
index 287a356a08..f2ee6c47cc 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
diff --git a/temp_test.txt b/temp_test.txt
new file mode 100644
index 0000000000..1520ed6251
--- /dev/null
+++ b/temp_test.txt
@@ -0,0 +1,43 @@
+def test_case_insensitive_commands():
+    """Test that QDP commands are case-insensitive."""
+    # Test with lowercase commands
+    lines_lower = [
+        'read serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table = ascii.read(lines_lower, format='qdp')
+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    assert np.allclose(table['col1'][0], 1.0)
+    assert np.allclose(table['col1_err'][0], 0.5)
+    
+    # Test with mixed case
+    lines_mixed = [
+        'Read Serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table2 = ascii.read(lines_mixed, format='qdp')
+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # Test with uppercase (existing behavior)
+    lines_upper = [
+        'READ SERR 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table3 = ascii.read(lines_upper, format='qdp')
+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # All tables should have the same data
+    for t in [table2, table3]:
+        assert np.array_equal(table['col1'], t['col1'])
+        assert np.array_equal(table['col1_err'], t['col1_err'])
+        assert np.array_equal(table['col2'], t['col2'])
+        assert np.array_equal(table['col2_err'], t['col2_err'])
+    
+    # Test mixed case TERR command
+    lines_terr = [
+        'read terr 1',
+        '1 0.5 -0.5 2'
+    ]
+    table4 = ascii.read(lines_terr, format='qdp')
+    assert 'col1_perr' in table4.colnames
+    assert 'col1_nerr' in table4.colnames
diff --git a/test_all_cases.py b/test_all_cases.py
new file mode 100644
index 0000000000..6677ed201d
--- /dev/null
+++ b/test_all_cases.py
@@ -0,0 +1,65 @@
+#!/usr/bin/env python
+"""Test all case variations for QDP commands."""
+
+import tempfile
+import os
+from astropy.table import Table
+
+# Test different case variations
+test_cases = [
+    ("lowercase", "read serr 1 2"),
+    ("uppercase", "READ SERR 1 2"),
+    ("mixed case 1", "Read Serr 1 2"),
+    ("mixed case 2", "ReAd SeRr 1 2"),
+    ("terr lowercase", "read terr 1 2"),
+    ("terr uppercase", "READ TERR 1 2"),
+    ("terr mixed", "Read Terr 1 2"),
+    ("both", "read serr 1\nread terr 2"),
+    ("both mixed", "READ SERR 1\nread terr 2"),
+]
+
+data = "1 0.5 1 0.5"
+
+for name, command in test_cases:
+    print(f"\nTesting {name}: '{command}'")
+    
+    test_content = f"{command}\n{data}\n"
+    
+    with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:
+        f.write(test_content)
+        temp_file = f.name
+    
+    try:
+        table = Table.read(temp_file, format='ascii.qdp')
+        print(f"  ✓ Success! Columns: {table.colnames}")
+    except Exception as e:
+        print(f"  ✗ Error: {type(e).__name__}: {e}")
+    
+    os.unlink(temp_file)
+
+# Also test that invalid commands still fail
+print("\n\nTesting invalid commands (should fail):")
+invalid_cases = [
+    ("invalid command", "read something 1 2"),
+    ("no numbers", "read serr"),
+    ("typo", "raed serr 1 2"),
+]
+
+for name, command in invalid_cases:
+    print(f"\nTesting {name}: '{command}'")
+    
+    test_content = f"{command}\n{data}\n"
+    
+    with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:
+        f.write(test_content)
+        temp_file = f.name
+    
+    try:
+        table = Table.read(temp_file, format='ascii.qdp')
+        print(f"  ✗ Unexpected success! This should have failed.")
+    except ValueError as e:
+        print(f"  ✓ Expected error: {e}")
+    except Exception as e:
+        print(f"  ? Unexpected error type: {type(e).__name__}: {e}")
+    
+    os.unlink(temp_file)
diff --git a/test_case_insensitive.py b/test_case_insensitive.py
new file mode 100644
index 0000000000..60537ce671
--- /dev/null
+++ b/test_case_insensitive.py
@@ -0,0 +1,46 @@
+#!/usr/bin/env python
+"""Test case to add to the existing test suite."""
+
+def test_case_insensitive_commands():
+    """Test that QDP commands are case-insensitive."""
+    from io import StringIO
+    from astropy.io import ascii
+    from astropy.table import Table
+    import numpy as np
+    
+    # Test with lowercase commands
+    lines_lower = [
+        'read serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table = ascii.read(lines_lower, format='qdp')
+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    assert np.allclose(table['col1'][0], 1.0)
+    assert np.allclose(table['col1_err'][0], 0.5)
+    
+    # Test with mixed case
+    lines_mixed = [
+        'Read Serr 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table2 = ascii.read(lines_mixed, format='qdp')
+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # Test with uppercase (existing behavior)
+    lines_upper = [
+        'READ SERR 1 2',
+        '1 0.5 1 0.5'
+    ]
+    table3 = ascii.read(lines_upper, format='qdp')
+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']
+    
+    # All tables should have the same data
+    for t in [table2, table3]:
+        assert np.array_equal(table['col1'], t['col1'])
+        assert np.array_equal(table['col1_err'], t['col1_err'])
+        assert np.array_equal(table['col2'], t['col2'])
+        assert np.array_equal(table['col2_err'], t['col2_err'])
+
+if __name__ == "__main__":
+    test_case_insensitive_commands()
+    print("All tests passed!")
diff --git a/test_qdp_case.py b/test_qdp_case.py
new file mode 100644
index 0000000000..481251548c
--- /dev/null
+++ b/test_qdp_case.py
@@ -0,0 +1,48 @@
+#!/usr/bin/env python
+"""Test case for QDP case sensitivity issue."""
+
+import tempfile
+from astropy.table import Table
+
+# Create a test QDP file with lowercase commands
+test_content = """read serr 1 2 
+1 0.5 1 0.5
+"""
+
+# Create temporary file
+with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:
+    f.write(test_content)
+    temp_file = f.name
+
+print(f"Created test file: {temp_file}")
+
+# Try to read the file
+try:
+    table = Table.read(temp_file, format='ascii.qdp')
+    print("Success! Table read successfully:")
+    print(table)
+except Exception as e:
+    print(f"Error: {type(e).__name__}: {e}")
+
+# Test with uppercase commands  
+test_content_upper = """READ SERR 1 2 
+1 0.5 1 0.5
+"""
+
+with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:
+    f.write(test_content_upper)
+    temp_file_upper = f.name
+
+print(f"\nCreated test file with uppercase: {temp_file_upper}")
+
+try:
+    table = Table.read(temp_file_upper, format='ascii.qdp')
+    print("Success! Table with uppercase commands read successfully:")
+    print(table)
+except Exception as e:
+    print(f"Error: {type(e).__name__}: {e}")
+
+# Cleanup
+import os
+os.unlink(temp_file)
+os.unlink(temp_file_upper)
