From 20c0892f432f75ed4b3b0de442e44266b87ae6b1 Mon Sep 17 00:00:00 2001
From: Mariusz Felisiak <felisiak.mariusz@gmail.com>
Date: Tue, 5 May 2020 06:19:55 +0200
Subject: [PATCH] Fixed #31538 -- Fixed Meta.ordering validation lookups that
 are not transforms.

Regression in 440505cb2cadbe1a5b9fba246bcde6c04f51d07e.

Thanks Simon Meers for the report.
---
 django/db/models/base.py                  | 4 +++-
 docs/releases/3.0.7.txt                   | 3 ++-
 tests/invalid_models_tests/test_models.py | 9 +++++++++
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/django/db/models/base.py b/django/db/models/base.py
index 6c9e9d37074a..bc6f7d283e2d 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1747,7 +1747,9 @@ def _check_ordering(cls):
                     else:
                         _cls = None
                 except (FieldDoesNotExist, AttributeError):
-                    if fld is None or fld.get_transform(part) is None:
+                    if fld is None or (
+                        fld.get_transform(part) is None and fld.get_lookup(part) is None
+                    ):
                         errors.append(
                             checks.Error(
                                 "'ordering' refers to the nonexistent field, "
diff --git a/docs/releases/3.0.7.txt b/docs/releases/3.0.7.txt
index 6b204973bea0..9fc71d9aa28b 100644
--- a/docs/releases/3.0.7.txt
+++ b/docs/releases/3.0.7.txt
@@ -9,4 +9,5 @@ Django 3.0.7 fixes several bugs in 3.0.6.
 Bugfixes
 ========
 
-* ...
+* Fixed a regression in Django 3.0 by restoring the ability to use field
+  lookups in ``Meta.ordering`` (:ticket:`31538`).
diff --git a/tests/invalid_models_tests/test_models.py b/tests/invalid_models_tests/test_models.py
index 6bfdf2e73658..5a1bb4cc7a6b 100644
--- a/tests/invalid_models_tests/test_models.py
+++ b/tests/invalid_models_tests/test_models.py
@@ -893,6 +893,15 @@ class Meta:
         with register_lookup(models.CharField, Lower):
             self.assertEqual(Model.check(), [])
 
+    def test_ordering_pointing_to_lookup_not_transform(self):
+        class Model(models.Model):
+            test = models.CharField(max_length=100)
+
+            class Meta:
+                ordering = ('test__isnull',)
+
+        self.assertEqual(Model.check(), [])
+
     def test_ordering_pointing_to_related_model_pk(self):
         class Parent(models.Model):
             pass
