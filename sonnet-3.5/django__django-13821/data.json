{"instance_id": "django__django-13821", "score": "C", "diff": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex ab4ea70492..dcff5534e0 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -64,8 +64,8 @@ def list_aggregate(function):\n \n \n def check_sqlite_version():\n-    if Database.sqlite_version_info < (3, 8, 3):\n-        raise ImproperlyConfigured('SQLite 3.8.3 or later is required (found %s).' % Database.sqlite_version)\n+    if Database.sqlite_version_info < (3, 9, 0):\n+        raise ImproperlyConfigured('SQLite 3.9.0 or later is required (found %s).' % Database.sqlite_version)\n \n \n check_sqlite_version()\n", "gold_standard_diff": "diff --git a/django/db/backends/sqlite3/base.py b/django/db/backends/sqlite3/base.py\nindex ab4ea704920c..9ce32089601b 100644\n--- a/django/db/backends/sqlite3/base.py\n+++ b/django/db/backends/sqlite3/base.py\n@@ -64,8 +64,10 @@ def list_aggregate(function):\n \n \n def check_sqlite_version():\n-    if Database.sqlite_version_info < (3, 8, 3):\n-        raise ImproperlyConfigured('SQLite 3.8.3 or later is required (found %s).' % Database.sqlite_version)\n+    if Database.sqlite_version_info < (3, 9, 0):\n+        raise ImproperlyConfigured(\n+            'SQLite 3.9.0 or later is required (found %s).' % Database.sqlite_version\n+        )\n \n \n check_sqlite_version()\ndiff --git a/docs/ref/contrib/gis/install/index.txt b/docs/ref/contrib/gis/install/index.txt\nindex 687fe5d59dfd..c8343913cf65 100644\n--- a/docs/ref/contrib/gis/install/index.txt\n+++ b/docs/ref/contrib/gis/install/index.txt\n@@ -61,7 +61,7 @@ Database            Library Requirements            Supported Versions  Notes\n PostgreSQL          GEOS, GDAL, PROJ, PostGIS       9.6+                Requires PostGIS.\n MySQL               GEOS, GDAL                      5.7+                :ref:`Limited functionality <mysql-spatial-limitations>`.\n Oracle              GEOS, GDAL                      12.2+               XE not supported.\n-SQLite              GEOS, GDAL, PROJ, SpatiaLite    3.8.3+              Requires SpatiaLite 4.3+\n+SQLite              GEOS, GDAL, PROJ, SpatiaLite    3.9.0+              Requires SpatiaLite 4.3+\n ==================  ==============================  ==================  =========================================\n \n See also `this comparison matrix`__ on the OSGeo Wiki for\ndiff --git a/docs/ref/databases.txt b/docs/ref/databases.txt\nindex 809ee68db65c..8fc9e8966236 100644\n--- a/docs/ref/databases.txt\n+++ b/docs/ref/databases.txt\n@@ -679,7 +679,7 @@ appropriate typecasting.\n SQLite notes\n ============\n \n-Django supports SQLite 3.8.3 and later.\n+Django supports SQLite 3.9.0 and later.\n \n SQLite_ provides an excellent development alternative for applications that\n are predominantly read-only or require a smaller installation footprint. As\ndiff --git a/docs/ref/models/fields.txt b/docs/ref/models/fields.txt\nindex 759e004fcf11..605b8bd97947 100644\n--- a/docs/ref/models/fields.txt\n+++ b/docs/ref/models/fields.txt\n@@ -1199,7 +1199,7 @@ Python native format: dictionaries, lists, strings, numbers, booleans and\n ``None``.\n \n ``JSONField`` is supported on MariaDB 10.2.7+, MySQL 5.7.8+, Oracle,\n-PostgreSQL, and SQLite 3.9.0+ (with the :ref:`JSON1 extension enabled\n+PostgreSQL, and SQLite (with the :ref:`JSON1 extension enabled\n <sqlite-json1>`).\n \n .. attribute:: JSONField.encoder\ndiff --git a/docs/releases/3.2.txt b/docs/releases/3.2.txt\nindex 8cd77ffad0aa..aba6a6ccd4db 100644\n--- a/docs/releases/3.2.txt\n+++ b/docs/releases/3.2.txt\n@@ -689,6 +689,8 @@ Miscellaneous\n   Due to a ``python-memcached`` limitation, the previous behavior is kept for\n   the deprecated ``MemcachedCache`` backend.\n \n+* The minimum supported version of SQLite is increased from 3.8.3 to 3.9.0.\n+\n .. _deprecated-features-3.2:\n \n Features deprecated in 3.2\ndiff --git a/tests/backends/sqlite/tests.py b/tests/backends/sqlite/tests.py\nindex 17a58f32aedf..07477a5c7130 100644\n--- a/tests/backends/sqlite/tests.py\n+++ b/tests/backends/sqlite/tests.py\n@@ -30,9 +30,9 @@ class Tests(TestCase):\n     longMessage = True\n \n     def test_check_sqlite_version(self):\n-        msg = 'SQLite 3.8.3 or later is required (found 3.8.2).'\n-        with mock.patch.object(dbapi2, 'sqlite_version_info', (3, 8, 2)), \\\n-                mock.patch.object(dbapi2, 'sqlite_version', '3.8.2'), \\\n+        msg = 'SQLite 3.9.0 or later is required (found 3.8.11.1).'\n+        with mock.patch.object(dbapi2, 'sqlite_version_info', (3, 8, 11, 1)), \\\n+                mock.patch.object(dbapi2, 'sqlite_version', '3.8.11.1'), \\\n                 self.assertRaisesMessage(ImproperlyConfigured, msg):\n             check_sqlite_version()\n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/13821"}