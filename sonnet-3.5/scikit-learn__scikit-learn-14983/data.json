{"instance_id": "scikit-learn__scikit-learn-14983", "score": "I", "diff": "diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce6a..dd1d3a05f 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1216,6 +1216,9 @@ class RepeatedKFold(_RepeatedSplits):\n         super().__init__(\n             KFold, n_repeats, random_state, n_splits=n_splits)\n \n+    def __repr__(self):\n+        return f\"RepeatedKFold(n_splits={self.cv.n_splits}, n_repeats={self.n_repeats}, random_state={self.random_state})\"\n+\n \n class RepeatedStratifiedKFold(_RepeatedSplits):\n     \"\"\"Repeated Stratified K-Fold cross validator.\n@@ -1269,6 +1272,9 @@ class RepeatedStratifiedKFold(_RepeatedSplits):\n         super().__init__(\n             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)\n \n+    def __repr__(self):\n+        return f\"RepeatedStratifiedKFold(n_splits={self.cv.n_splits}, n_repeats={self.n_repeats}, random_state={self.random_state})\"\n+\n \n class BaseShuffleSplit(metaclass=ABCMeta):\n     \"\"\"Base class for ShuffleSplit and StratifiedShuffleSplit\"\"\"\n", "gold_standard_diff": "From c7a826e501d3f8803aa16cb93f1f7a908b629714 Mon Sep 17 00:00:00 2001\nFrom: DrGFreeman <DrGFreeman@users.noreply.github.com>\nDate: Fri, 13 Sep 2019 22:14:18 -0400\nSubject: [PATCH 1/5] Added __repr__ method to _RepeatedSplit class (#14970)\n\n---\n sklearn/model_selection/_split.py | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex c49a3ce6aea4e..bfd30dae5a34f 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -1163,6 +1163,9 @@ def get_n_splits(self, X=None, y=None, groups=None):\n                      **self.cvargs)\n         return cv.get_n_splits(X, y, groups) * self.n_repeats\n \n+    def __repr__(self):\n+        return _build_repr(self)\n+\n \n class RepeatedKFold(_RepeatedSplits):\n     \"\"\"Repeated K-Fold cross validator.\n\nFrom f03b56ab58f664ede33e277c039492e87be4f981 Mon Sep 17 00:00:00 2001\nFrom: DrGFreeman <DrGFreeman@users.noreply.github.com>\nDate: Sat, 14 Sep 2019 10:47:05 -0400\nSubject: [PATCH 2/5] Get values of parameters in cvargs attribute (#14970)\n\nModified _build_repr to include values of parameters stored in _RepeatedSplit class attributes.\n---\n sklearn/model_selection/_split.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py\nindex bfd30dae5a34f..ceee1a08146ab 100644\n--- a/sklearn/model_selection/_split.py\n+++ b/sklearn/model_selection/_split.py\n@@ -2161,6 +2161,8 @@ def _build_repr(self):\n         try:\n             with warnings.catch_warnings(record=True) as w:\n                 value = getattr(self, key, None)\n+                if value is None and hasattr(self, 'cvargs'):\n+                    value = self.cvargs.get(key, None)\n             if len(w) and w[0].category == DeprecationWarning:\n                 # if the parameter is deprecated, don't show it\n                 continue\n\nFrom f2e2208d1afb8b20f4f669f91d2bf6c15f6b412e Mon Sep 17 00:00:00 2001\nFrom: DrGFreeman <DrGFreeman@users.noreply.github.com>\nDate: Sat, 14 Sep 2019 11:10:59 -0400\nSubject: [PATCH 3/5] Added test of repeated cv classes __repr__ (#14970)\n\n---\n sklearn/model_selection/tests/test_split.py | 10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ndiff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\nindex a38fb435c9db4..e5ab939c64729 100644\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -979,6 +979,16 @@ def test_repeated_cv_value_errors():\n         assert_raises(ValueError, cv, n_repeats=0)\n         assert_raises(ValueError, cv, n_repeats=1.5)\n \n+def test_repeated_cv_repr():\n+    n_splits = 2\n+    n_repeats = 6\n+    rkf = RepeatedKFold(n_splits, n_repeats)\n+    rskf = RepeatedStratifiedKFold(n_splits, n_repeats)\n+    rkf_repr = 'RepeatedKFold(n_repeats=6, n_splits=2, random_state=None)'\n+    rskf_repr = \\\n+        'RepeatedStratifiedKFold(n_repeats=6, n_splits=2, random_state=None)'\n+    for cv, cv_repr in zip([rkf, rskf], [rkf_repr, rskf_repr]):\n+        assert cv_repr == repr(cv)\n \n def test_repeated_kfold_determinstic_split():\n     X = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]\n\nFrom f23a42f2950d213ae6dcb2eb9778b75c7f2baa88 Mon Sep 17 00:00:00 2001\nFrom: DrGFreeman <DrGFreeman@users.noreply.github.com>\nDate: Sat, 14 Sep 2019 11:47:54 -0400\nSubject: [PATCH 4/5] Added blank lines around new test function\n\n---\n sklearn/model_selection/tests/test_split.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\nindex e5ab939c64729..aa456d36b66a4 100644\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -979,6 +979,7 @@ def test_repeated_cv_value_errors():\n         assert_raises(ValueError, cv, n_repeats=0)\n         assert_raises(ValueError, cv, n_repeats=1.5)\n \n+\n def test_repeated_cv_repr():\n     n_splits = 2\n     n_repeats = 6\n@@ -990,6 +991,7 @@ def test_repeated_cv_repr():\n     for cv, cv_repr in zip([rkf, rskf], [rkf_repr, rskf_repr]):\n         assert cv_repr == repr(cv)\n \n+\n def test_repeated_kfold_determinstic_split():\n     X = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]\n     random_state = 258173307\n\nFrom 0d9fd1cc8ad05d967129c37aaad7c8c77c5217ef Mon Sep 17 00:00:00 2001\nFrom: DrGFreeman <DrGFreeman@users.noreply.github.com>\nDate: Sun, 15 Sep 2019 17:09:25 -0400\nSubject: [PATCH 5/5] Use pytest.mark.parmetrize instead of for loop\n\n---\n sklearn/model_selection/tests/test_split.py | 19 +++++++++----------\n 1 file changed, 9 insertions(+), 10 deletions(-)\n\ndiff --git a/sklearn/model_selection/tests/test_split.py b/sklearn/model_selection/tests/test_split.py\nindex aa456d36b66a4..4aa47a753bb1d 100644\n--- a/sklearn/model_selection/tests/test_split.py\n+++ b/sklearn/model_selection/tests/test_split.py\n@@ -980,16 +980,15 @@ def test_repeated_cv_value_errors():\n         assert_raises(ValueError, cv, n_repeats=1.5)\n \n \n-def test_repeated_cv_repr():\n-    n_splits = 2\n-    n_repeats = 6\n-    rkf = RepeatedKFold(n_splits, n_repeats)\n-    rskf = RepeatedStratifiedKFold(n_splits, n_repeats)\n-    rkf_repr = 'RepeatedKFold(n_repeats=6, n_splits=2, random_state=None)'\n-    rskf_repr = \\\n-        'RepeatedStratifiedKFold(n_repeats=6, n_splits=2, random_state=None)'\n-    for cv, cv_repr in zip([rkf, rskf], [rkf_repr, rskf_repr]):\n-        assert cv_repr == repr(cv)\n+@pytest.mark.parametrize(\n+    \"RepeatedCV\", [RepeatedKFold, RepeatedStratifiedKFold]\n+)\n+def test_repeated_cv_repr(RepeatedCV):\n+    n_splits, n_repeats = 2, 6\n+    repeated_cv = RepeatedCV(n_splits=n_splits, n_repeats=n_repeats)\n+    repeated_cv_repr = ('{}(n_repeats=6, n_splits=2, random_state=None)'\n+                        .format(repeated_cv.__class__.__name__))\n+    assert repeated_cv_repr == repr(repeated_cv)\n \n \n def test_repeated_kfold_determinstic_split():\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/14983"}