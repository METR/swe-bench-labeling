{"instance_id": "django__django-14122", "score": "I", "diff": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 850734709d..ae68796e57 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -135,6 +135,11 @@ class SQLCompiler:\n             expressions.append(expr)\n         result = []\n         seen = set()\n+        \n+        # Exclude Meta.ordering fields from GROUP BY\n+        meta_ordering = getattr(self, '_group_by_ordering', [])\n+        expressions = [expr for expr in expressions if expr not in meta_ordering]\n+        \n         expressions = self.collapse_group_by(expressions, having_group_by)\n \n         for expr in expressions:\n@@ -288,6 +293,20 @@ class SQLCompiler:\n             self._meta_ordering = ordering\n         else:\n             ordering = []\n+        \n+        # If there's a GROUP BY clause, exclude Meta.ordering fields from GROUP BY\n+        # but keep them for ORDER BY\n+        if self.query.group_by:\n+            self._group_by_ordering = []\n+            ordering = [\n+                field for field in ordering\n+                if not isinstance(field, str) or field not in self.query.get_meta().ordering\n+            ]\n+            self._group_by_ordering = [\n+                field for field in self.query.get_meta().ordering\n+                if field in ordering\n+            ]\n+        \n         if self.query.standard_ordering:\n             asc, desc = ORDER_DIR['ASC']\n         else:\n", "gold_standard_diff": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 850734709d7e..f02199d97ca1 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -125,11 +125,12 @@ def get_group_by(self, select, order_by):\n             cols = expr.get_group_by_cols()\n             for col in cols:\n                 expressions.append(col)\n-        for expr, (sql, params, is_ref) in order_by:\n-            # Skip References to the select clause, as all expressions in the\n-            # select clause are already part of the group by.\n-            if not is_ref:\n-                expressions.extend(expr.get_group_by_cols())\n+        if not self._meta_ordering:\n+            for expr, (sql, params, is_ref) in order_by:\n+                # Skip references to the SELECT clause, as all expressions in\n+                # the SELECT clause are already part of the GROUP BY.\n+                if not is_ref:\n+                    expressions.extend(expr.get_group_by_cols())\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\ndiff --git a/tests/ordering/tests.py b/tests/ordering/tests.py\nindex c8e9c98e437d..604c72c1a21e 100644\n--- a/tests/ordering/tests.py\n+++ b/tests/ordering/tests.py\n@@ -2,7 +2,7 @@\n from operator import attrgetter\n \n from django.db.models import (\n-    CharField, DateTimeField, F, Max, OuterRef, Subquery, Value,\n+    CharField, Count, DateTimeField, F, Max, OuterRef, Subquery, Value,\n )\n from django.db.models.functions import Upper\n from django.test import TestCase\n@@ -484,3 +484,12 @@ def test_order_by_ptr_field_with_default_ordering_by_expression(self):\n         ca4 = ChildArticle.objects.create(headline='h1', pub_date=datetime(2005, 7, 28))\n         articles = ChildArticle.objects.order_by('article_ptr')\n         self.assertSequenceEqual(articles, [ca4, ca2, ca1, ca3])\n+\n+    def test_default_ordering_does_not_affect_group_by(self):\n+        Article.objects.exclude(headline='Article 4').update(author=self.author_1)\n+        Article.objects.filter(headline='Article 4').update(author=self.author_2)\n+        articles = Article.objects.values('author').annotate(count=Count('author'))\n+        self.assertCountEqual(articles, [\n+            {'author': self.author_1.pk, 'count': 3},\n+            {'author': self.author_2.pk, 'count': 1},\n+        ])\n", "gold_standard_pr_link": "https://github.com/django/django/pull/14122"}