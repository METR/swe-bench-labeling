diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py
index 1b3285ddce..f627d6b2d1 100644
--- a/astropy/io/fits/card.py
+++ b/astropy/io/fits/card.py
@@ -769,6 +769,12 @@ class Card(_Verify):
             value = m.group("bool") == "T"
         elif m.group("strg") is not None:
             value = re.sub("''", "'", m.group("strg"))
+            # Handle the edge case for strings that are exactly 20 characters long
+            if len(value) >= 18 and value.endswith("'"):
+                if value[-2] == "'":
+                    value = value[:-1]  # Remove the trailing quote for double single-quote
+                else:
+                    value = value[:-1]  # Remove the trailing quote for single-quote
         elif m.group("numr") is not None:
             #  Check for numbers with leading 0s.
             numr = self._number_NFSC_RE.match(m.group("numr"))
@@ -1274,8 +1280,14 @@ def _format_value(value):
             return "''"
         else:
             exp_val_str = value.replace("'", "''")
-            val_str = f"'{exp_val_str:8}'"
-            return f"{val_str:20}"
+            val_str = f"'{exp_val_str}'"
+            if len(val_str) == 20:
+                return val_str  # Return as-is if exactly 20 characters
+            elif len(val_str) > 20:
+                if val_str.endswith("'''"):
+                    return val_str[:-1]  # Remove the last quote for double single-quote
+                return val_str
+            return val_str.ljust(20)  # Left-justify and pad with spaces
 
     # must be before int checking since bool is also int
     elif isinstance(value, (bool, np.bool_)):
diff --git a/astropy/io/fits/tests/test_card_formatting.py b/astropy/io/fits/tests/test_card_formatting.py
new file mode 100644
index 0000000000..190522b215
--- /dev/null
+++ b/astropy/io/fits/tests/test_card_formatting.py
@@ -0,0 +1,16 @@
+import pytest
+from astropy.io import fits
+
+def test_double_single_quote_consistency():
+    for n in range(60, 70):
+        card1 = fits.Card('CONFIG', "x" * n + "''")
+        card2 = fits.Card.fromstring(str(card1))
+        assert card1.value == card2.value, f"Inconsistency at length {n}"
+
+    for n in range(50, 70):
+        card1 = fits.Card('CONFIG', "x" * n + "''" + "x"*10)
+        card2 = fits.Card.fromstring(str(card1))
+        assert card1.value == card2.value, f"Inconsistency at length {n} with trailing characters"
+
+if __name__ == '__main__':
+    pytest.main([__file__])
diff --git a/pyproject.toml b/pyproject.toml
index 243782fdfc..b2688da2a5 100644
--- a/pyproject.toml
+++ b/pyproject.toml
@@ -1,5 +1,5 @@
 [build-system]
-requires = ["setuptools",
+requires = ["setuptools==68.0.0",
             "setuptools_scm>=6.2",
             "wheel",
             "cython==0.29.30",
