{"instance_id": "psf__requests-1921", "score": "I", "diff": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex a023e4ec..8c9cb202 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -51,10 +51,16 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n     ):\n         return request_setting\n \n-    merged_setting = dict_class(to_key_val_list(session_setting))\n+    # Create merged dict, excluding None values from session_setting\n+    merged_setting = dict_class()\n+    for key, value in to_key_val_list(session_setting):\n+        if value is not None:\n+            merged_setting[key] = value\n+    \n+    # Update with request settings\n     merged_setting.update(to_key_val_list(request_setting))\n \n-    # Remove keys that are set to None.\n+    # Remove keys that are set to None in request_setting\n     for (k, v) in request_setting.items():\n         if v is None:\n             del merged_setting[k]\n", "gold_standard_diff": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex a023e4eca6..c06fbcbe25 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -59,6 +59,8 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n         if v is None:\n             del merged_setting[k]\n \n+    merged_setting = dict((k, v) for (k, v) in merged_setting.items() if v is not None)\n+\n     return merged_setting\n \n \ndiff --git a/test_requests.py b/test_requests.py\nindex 3d7cdaaf78..998f17f3b8 100755\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -211,6 +211,14 @@ def test_requests_in_history_are_not_overridden(self):\n         req_urls = [r.request.url for r in resp.history]\n         assert urls == req_urls\n \n+    def test_headers_on_session_with_None_are_not_sent(self):\n+        \"\"\"Do not send headers in Session.headers with None values.\"\"\"\n+        ses = requests.Session()\n+        ses.headers['Accept-Encoding'] = None\n+        req = requests.Request('GET', 'http://httpbin.org/get')\n+        prep = ses.prepare_request(req)\n+        assert 'Accept-Encoding' not in prep.headers\n+\n     def test_user_agent_transfers(self):\n \n         heads = {\n", "gold_standard_pr_link": "https://github.com/psf/requests/pull/1921"}