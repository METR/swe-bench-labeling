{"instance_id": "sphinx-doc__sphinx-9658", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex 2b4504101..d865b8b37 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp>=2.0.0',\n-    'sphinxcontrib-serializinghtml>=1.1.5',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4',\n+    'sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.14,<0.18',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/util/typing.py b/sphinx/util/typing.py\nindex 87707d48f..d747720bc 100644\n--- a/sphinx/util/typing.py\n+++ b/sphinx/util/typing.py\n@@ -302,6 +302,10 @@ def stringify(annotation: Any) -> str:\n     \"\"\"Stringify type annotation object.\"\"\"\n     from sphinx.util import inspect  # lazy loading\n \n+    # Handle mocked objects\n+    if hasattr(annotation, '__module__') and annotation.__module__ == 'unittest.mock':\n+        return str(annotation).split(\"'\")[1]\n+\n     if isinstance(annotation, str):\n         if annotation.startswith(\"'\") and annotation.endswith(\"'\"):\n             # might be a double Forward-ref'ed type.  Go unquoting.\ndiff --git a/tox.ini b/tox.ini\nindex b6a67fd85..483f2df92 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From e79efef63a7e748cc96c95a592a59a2a16704bf1 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Tue, 21 Sep 2021 02:03:31 +0900\nSubject: [PATCH] Fix #9657: autodoc: basecls for a subclass of mocked object\n is incorrect\n\n---\n CHANGES                    |  1 +\n sphinx/ext/autodoc/mock.py |  4 +++-\n tests/test_util_typing.py  | 13 +++++++++++++\n 3 files changed, 17 insertions(+), 1 deletion(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 1f33b88a890..f6a551bb702 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -21,6 +21,7 @@ Bugs fixed\n * #9630: autodoc: Failed to build cross references if :confval:`primary_domain`\n   is not 'py'\n * #9644: autodoc: Crashed on getting source info from problematic object\n+* #9657: autodoc: The base class for a subclass of mocked object is incorrect\n * #9630: autosummary: Failed to build summary table if :confval:`primary_domain`\n   is not 'py'\n \ndiff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py\nindex b562f47fd71..62f36da7956 100644\n--- a/sphinx/ext/autodoc/mock.py\n+++ b/sphinx/ext/autodoc/mock.py\n@@ -26,6 +26,7 @@ class _MockObject:\n     \"\"\"Used by autodoc_mock_imports.\"\"\"\n \n     __display_name__ = '_MockObject'\n+    __name__ = ''\n     __sphinx_mock__ = True\n     __sphinx_decorator_args__: Tuple[Any, ...] = ()\n \n@@ -40,7 +41,7 @@ def __new__(cls, *args: Any, **kwargs: Any) -> Any:\n         return super().__new__(cls)\n \n     def __init__(self, *args: Any, **kwargs: Any) -> None:\n-        self.__qualname__ = ''\n+        self.__qualname__ = self.__name__\n \n     def __len__(self) -> int:\n         return 0\n@@ -73,6 +74,7 @@ def _make_subclass(name: str, module: str, superclass: Any = _MockObject,\n                    attributes: Any = None, decorator_args: Tuple = ()) -> Any:\n     attrs = {'__module__': module,\n              '__display_name__': module + '.' + name,\n+             '__name__': name,\n              '__sphinx_decorator_args__': decorator_args}\n     attrs.update(attributes or {})\n \ndiff --git a/tests/test_util_typing.py b/tests/test_util_typing.py\nindex ad57a347e5e..d65b9cdc553 100644\n--- a/tests/test_util_typing.py\n+++ b/tests/test_util_typing.py\n@@ -17,6 +17,7 @@\n \n import pytest\n \n+from sphinx.ext.autodoc import mock\n from sphinx.util.typing import restify, stringify\n \n \n@@ -169,6 +170,12 @@ def test_restify_broken_type_hints():\n     assert restify(BrokenType) == ':py:class:`tests.test_util_typing.BrokenType`'\n \n \n+def test_restify_mock():\n+    with mock(['unknown']):\n+        import unknown\n+        assert restify(unknown.secret.Class) == ':py:class:`unknown.secret.Class`'\n+\n+\n def test_stringify():\n     assert stringify(int) == \"int\"\n     assert stringify(str) == \"str\"\n@@ -293,3 +300,9 @@ def test_stringify_type_union_operator():\n \n def test_stringify_broken_type_hints():\n     assert stringify(BrokenType) == 'tests.test_util_typing.BrokenType'\n+\n+\n+def test_stringify_mock():\n+    with mock(['unknown']):\n+        import unknown\n+        assert stringify(unknown.secret.Class) == 'unknown.secret.Class'\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/9658"}