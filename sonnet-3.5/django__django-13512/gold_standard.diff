diff --git a/AUTHORS b/AUTHORS
index 9253740857de..bb18fe15dbb4 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -749,6 +749,7 @@ answer newbie questions, and generally made Django that much better:
     Priyansh Saxena <askpriyansh@gmail.com>
     Przemys≈Çaw Buczkowski <przemub@przemub.pl>
     Przemys≈Çaw Suliga <http://suligap.net>
+    Qi Zhao <zhaoqi99@outlook.com>
     Rachel Tobin <rmtobin@me.com>
     Rachel Willmer <http://www.willmer.com/kb/>
     Radek ≈†varz <https://www.svarz.cz/translate/>
diff --git a/django/contrib/admin/utils.py b/django/contrib/admin/utils.py
index 446083e65934..ba06da521105 100644
--- a/django/contrib/admin/utils.py
+++ b/django/contrib/admin/utils.py
@@ -1,5 +1,6 @@
 import datetime
 import decimal
+import json
 from collections import defaultdict
 
 from django.core.exceptions import FieldDoesNotExist
@@ -400,7 +401,7 @@ def display_for_field(value, field, empty_value_display):
         return format_html('<a href="{}">{}</a>', value.url, value)
     elif isinstance(field, models.JSONField) and value:
         try:
-            return field.get_prep_value(value)
+            return json.dumps(value, ensure_ascii=False, cls=field.encoder)
         except TypeError:
             return display_for_value(value, empty_value_display)
     else:
diff --git a/django/forms/fields.py b/django/forms/fields.py
index 9de2c60b3537..17c7956b53f6 100644
--- a/django/forms/fields.py
+++ b/django/forms/fields.py
@@ -1258,7 +1258,7 @@ def bound_data(self, data, initial):
     def prepare_value(self, value):
         if isinstance(value, InvalidJSONInput):
             return value
-        return json.dumps(value, cls=self.encoder)
+        return json.dumps(value, ensure_ascii=False, cls=self.encoder)
 
     def has_changed(self, initial, data):
         if super().has_changed(initial, data):
diff --git a/docs/releases/3.1.3.txt b/docs/releases/3.1.3.txt
index 853ec7a48d5e..e2bb2d0df3d3 100644
--- a/docs/releases/3.1.3.txt
+++ b/docs/releases/3.1.3.txt
@@ -11,3 +11,8 @@ Bugfixes
 
 * Fixed a regression in Django 3.1.2 that caused the incorrect height of the
   admin changelist search bar (:ticket:`32072`).
+
+* Fixed displaying Unicode characters in
+  :class:`forms.JSONField <django.forms.JSONField>` and read-only
+  :class:`models.JSONField <django.db.models.JSONField>` values in the admin
+  (:ticket:`32080`).
diff --git a/tests/admin_utils/tests.py b/tests/admin_utils/tests.py
index a7594deda897..ce9f94dbb9b6 100644
--- a/tests/admin_utils/tests.py
+++ b/tests/admin_utils/tests.py
@@ -186,6 +186,7 @@ def test_json_display_for_field(self):
             ({'a': {'b': 'c'}}, '{"a": {"b": "c"}}'),
             (['a', 'b'], '["a", "b"]'),
             ('a', '"a"'),
+            ({'a': '‰Ω†Â•Ω ‰∏ñÁïå'}, '{"a": "‰Ω†Â•Ω ‰∏ñÁïå"}'),
             ({('a', 'b'): 'c'}, "{('a', 'b'): 'c'}"),  # Invalid JSON.
         ]
         for value, display_value in tests:
diff --git a/tests/forms_tests/field_tests/test_jsonfield.py b/tests/forms_tests/field_tests/test_jsonfield.py
index 915b180d0c41..46ef0005f631 100644
--- a/tests/forms_tests/field_tests/test_jsonfield.py
+++ b/tests/forms_tests/field_tests/test_jsonfield.py
@@ -29,6 +29,12 @@ def test_prepare_value(self):
         self.assertEqual(field.prepare_value({'a': 'b'}), '{"a": "b"}')
         self.assertEqual(field.prepare_value(None), 'null')
         self.assertEqual(field.prepare_value('foo'), '"foo"')
+        self.assertEqual(field.prepare_value('‰Ω†Â•ΩÔºå‰∏ñÁïå'), '"‰Ω†Â•ΩÔºå‰∏ñÁïå"')
+        self.assertEqual(field.prepare_value({'a': 'üòÄüê±'}), '{"a": "üòÄüê±"}')
+        self.assertEqual(
+            field.prepare_value(["‰Ω†Â•ΩÔºå‰∏ñÁïå", "ja≈∫≈Ñ"]),
+            '["‰Ω†Â•ΩÔºå‰∏ñÁïå", "ja≈∫≈Ñ"]',
+        )
 
     def test_widget(self):
         field = JSONField()
