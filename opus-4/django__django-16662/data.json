{"instance_id": "django__django-16662", "score": "C", "diff": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex a59f0c8dcb..09be9d49a9 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -173,9 +173,18 @@ class MigrationWriter:\n         else:\n             imports.add(\"from django.db import migrations\")\n \n-        # Sort imports by the package / module to be imported (the part after\n-        # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n-        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n+        # Sort imports by type (import vs from) and module name.\n+        # This follows PEP 8 and isort defaults.\n+        def import_sort_key(import_line):\n+            parts = import_line.split()\n+            if parts[0] == \"import\":\n+                # Regular imports come first\n+                return (0, parts[1])\n+            else:  # \"from\" imports\n+                # From imports come second\n+                return (1, parts[1])\n+        \n+        sorted_imports = sorted(imports, key=import_sort_key)\n         items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"\n         if migration_imports:\n             items[\"imports\"] += (\ndiff --git a/tests/migrations/test_writer.py b/tests/migrations/test_writer.py\nindex 1c11c68e97..81c6fe3a8e 100644\n--- a/tests/migrations/test_writer.py\n+++ b/tests/migrations/test_writer.py\n@@ -922,6 +922,49 @@ class WriterTests(SimpleTestCase):\n             output,\n         )\n \n+    def test_sorted_imports_multiple_types(self):\n+        \"\"\"\n+        Test that imports follow Django coding style and isort defaults:\n+        regular imports before from imports.\n+        \"\"\"\n+        import time\n+        migration = type(\n+            \"Migration\",\n+            (migrations.Migration,),\n+            {\n+                \"operations\": [\n+                    migrations.AddField(\n+                        \"mymodel\",\n+                        \"datetime_field\",\n+                        models.DateTimeField(\n+                            default=datetime.datetime(\n+                                2012, 1, 1, 1, 1, tzinfo=datetime.timezone.utc\n+                            ),\n+                        ),\n+                    ),\n+                    migrations.AddField(\n+                        \"mymodel\",\n+                        \"time_field\",\n+                        models.TimeField(\n+                            default=time.time,\n+                        ),\n+                    ),\n+                ]\n+            },\n+        )\n+        writer = MigrationWriter(migration)\n+        output = writer.as_string()\n+        # Check that regular imports come before from imports\n+        self.assertIn(\n+            \"import datetime\\nimport time\\nfrom django.db import migrations, models\\n\",\n+            output,\n+        )\n+        # Make sure the wrong order doesn't appear\n+        self.assertNotIn(\n+            \"import datetime\\nfrom django.db import migrations, models\\nimport time\",\n+            output,\n+        )\n+\n     def test_migration_file_header_comments(self):\n         \"\"\"\n         Test comments at top of file.\n", "gold_standard_diff": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex a59f0c8dcb89..79b89b269dbc 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -175,7 +175,10 @@ def as_string(self):\n \n         # Sort imports by the package / module to be imported (the part after\n         # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n-        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n+        # First group the \"import\" statements, then \"from ... import ...\".\n+        sorted_imports = sorted(\n+            imports, key=lambda i: (i.split()[0] == \"from\", i.split()[1])\n+        )\n         items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"\n         if migration_imports:\n             items[\"imports\"] += (\ndiff --git a/tests/migrations/test_writer.py b/tests/migrations/test_writer.py\nindex 1c11c68e970e..c6638b308318 100644\n--- a/tests/migrations/test_writer.py\n+++ b/tests/migrations/test_writer.py\n@@ -7,6 +7,7 @@\n import pathlib\n import re\n import sys\n+import time\n import uuid\n import zoneinfo\n from types import NoneType\n@@ -912,13 +913,18 @@ def test_sorted_imports(self):\n                             ),\n                         ),\n                     ),\n+                    migrations.AddField(\n+                        \"mymodel\",\n+                        \"myfield2\",\n+                        models.FloatField(default=time.time),\n+                    ),\n                 ]\n             },\n         )\n         writer = MigrationWriter(migration)\n         output = writer.as_string()\n         self.assertIn(\n-            \"import datetime\\nfrom django.db import migrations, models\\n\",\n+            \"import datetime\\nimport time\\nfrom django.db import migrations, models\\n\",\n             output,\n         )\n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/16662"}