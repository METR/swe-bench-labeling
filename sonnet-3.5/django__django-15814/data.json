{"instance_id": "django__django-15814", "score": "C", "diff": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 33cc636b22..5036335bec 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -748,7 +748,7 @@ class Query(BaseExpression):\n                     cur_model = source.related_model\n                 else:\n                     cur_model = source.remote_field.model\n-                opts = cur_model._meta\n+                opts = cur_model._meta.concrete_model._meta\n                 # Even if we're \"just passing through\" this model, we must add\n                 # both the current model's pk and the related reference field\n                 # (if it's not a reverse relation) to the things we select.\n", "gold_standard_diff": "diff --git a/django/db/models/sql/query.py b/django/db/models/sql/query.py\nindex 33cc636b2264..cf7566d7711c 100644\n--- a/django/db/models/sql/query.py\n+++ b/django/db/models/sql/query.py\n@@ -748,6 +748,7 @@ def deferred_to_data(self, target):\n                     cur_model = source.related_model\n                 else:\n                     cur_model = source.remote_field.model\n+                cur_model = cur_model._meta.concrete_model\n                 opts = cur_model._meta\n                 # Even if we're \"just passing through\" this model, we must add\n                 # both the current model's pk and the related reference field\ndiff --git a/tests/proxy_models/tests.py b/tests/proxy_models/tests.py\nindex f2f465678b51..7caa43d4893a 100644\n--- a/tests/proxy_models/tests.py\n+++ b/tests/proxy_models/tests.py\n@@ -395,6 +395,12 @@ def test_proxy_load_from_fixture(self):\n         p = MyPerson.objects.get(pk=100)\n         self.assertEqual(p.name, \"Elvis Presley\")\n \n+    def test_select_related_only(self):\n+        user = ProxyTrackerUser.objects.create(name=\"Joe Doe\", status=\"test\")\n+        issue = Issue.objects.create(summary=\"New issue\", assignee=user)\n+        qs = Issue.objects.select_related(\"assignee\").only(\"assignee__status\")\n+        self.assertEqual(qs.get(), issue)\n+\n     def test_eq(self):\n         self.assertEqual(MyPerson(id=100), Person(id=100))\n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/15814"}