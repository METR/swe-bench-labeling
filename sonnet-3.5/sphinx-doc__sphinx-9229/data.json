{"instance_id": "sphinx-doc__sphinx-9229", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex b669afc00..0986baec3 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.14,<0.18',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 1f4c98284..685bf3e33 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1921,7 +1921,8 @@ class DataDocumenter(GenericAliasMixin, NewTypeMixin, TypeVarMixin,\n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\n                             ) -> bool:\n-        return isinstance(parent, ModuleDocumenter) and isattr\n+        return ((isinstance(parent, ModuleDocumenter) and isattr) or\n+                (inspect.isclass(member) and member.__module__ == 'typing'))\n \n     def update_annotations(self, parent: Any) -> None:\n         \"\"\"Update __annotations__ to support type_comment and so on.\"\"\"\n@@ -1979,6 +1980,10 @@ class DataDocumenter(GenericAliasMixin, NewTypeMixin, TypeVarMixin,\n             except ValueError:\n                 pass\n \n+        # Add docstring for type aliases\n+        if inspect.isclass(self.object) and self.object.__doc__:\n+            self.add_content(StringList(self.object.__doc__.split('\\n')))\n+\n     def document_members(self, all_members: bool = False) -> None:\n         pass\n \ndiff --git a/tox.ini b/tox.ini\nindex a363e187f..3b8bc12d0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -27,7 +27,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From 4ceedc102ddaeb7926a66ae9d6e672dd4060f4b1 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Sat, 15 May 2021 16:09:23 +0900\nSubject: [PATCH] Close #8061, #9218: autodoc: Support variable comment for\n alias classes\n\n---\n CHANGES                                        |  1 +\n sphinx/ext/autodoc/__init__.py                 | 17 +++++++++++++++--\n tests/roots/test-ext-autodoc/target/classes.py |  3 +++\n tests/test_ext_autodoc_autoclass.py            | 12 ++++++++++++\n 4 files changed, 31 insertions(+), 2 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 3ef0bb53eaf..c81f9a4b4d3 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -28,6 +28,7 @@ Features added\n * #9195: autodoc: The arguments of ``typing.Literal`` are wrongly rendered\n * #9185: autodoc: :confval:`autodoc_typehints` allows ``'both'`` setting to\n   allow typehints to be included both in the signature and description\n+* #8061, #9218: autodoc: Support variable comment for alias classes\n * #3257: autosummary: Support instance attributes for classes\n * #9129: html search: Show search summaries when html_copy_source = False\n * #9120: html theme: Eliminate prompt characters of code-block from copyable\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex c6449613992..1658376b7ba 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -1661,7 +1661,11 @@ def get_object_members(self, want_all: bool) -> Tuple[bool, ObjectMembers]:\n     def get_doc(self, ignore: int = None) -> Optional[List[List[str]]]:\n         if self.doc_as_attr:\n             # Don't show the docstring of the class when it is an alias.\n-            return None\n+            comment = self.get_variable_comment()\n+            if comment:\n+                return []\n+            else:\n+                return None\n \n         lines = getattr(self, '_new_docstrings', None)\n         if lines is not None:\n@@ -1706,9 +1710,18 @@ def get_doc(self, ignore: int = None) -> Optional[List[List[str]]]:\n         tab_width = self.directive.state.document.settings.tab_width\n         return [prepare_docstring(docstring, ignore, tab_width) for docstring in docstrings]\n \n+    def get_variable_comment(self) -> Optional[List[str]]:\n+        try:\n+            key = ('', '.'.join(self.objpath))\n+            analyzer = ModuleAnalyzer.for_module(self.get_real_modname())\n+            analyzer.analyze()\n+            return list(self.analyzer.attr_docs.get(key, []))\n+        except PycodeError:\n+            return None\n+\n     def add_content(self, more_content: Optional[StringList], no_docstring: bool = False\n                     ) -> None:\n-        if self.doc_as_attr:\n+        if self.doc_as_attr and not self.get_variable_comment():\n             try:\n                 more_content = StringList([_('alias of %s') % restify(self.object)], source='')\n             except AttributeError:\ndiff --git a/tests/roots/test-ext-autodoc/target/classes.py b/tests/roots/test-ext-autodoc/target/classes.py\nindex a3b4c64774d..7526e65bc74 100644\n--- a/tests/roots/test-ext-autodoc/target/classes.py\n+++ b/tests/roots/test-ext-autodoc/target/classes.py\n@@ -30,3 +30,6 @@ class Quux(List[Union[int, float]]):\n \n \n Alias = Foo\n+\n+#: docstring\n+OtherAlias = Bar\ndiff --git a/tests/test_ext_autodoc_autoclass.py b/tests/test_ext_autodoc_autoclass.py\nindex 096dc939738..ee0c00ae27f 100644\n--- a/tests/test_ext_autodoc_autoclass.py\n+++ b/tests/test_ext_autodoc_autoclass.py\n@@ -327,3 +327,15 @@ def autodoc_process_docstring(*args):\n         '',\n         '   alias of :class:`target.classes.Foo`',\n     ]\n+\n+\n+def test_class_alias_having_doccomment(app):\n+    actual = do_autodoc(app, 'class', 'target.classes.OtherAlias')\n+    assert list(actual) == [\n+        '',\n+        '.. py:attribute:: OtherAlias',\n+        '   :module: target.classes',\n+        '',\n+        '   docstring',\n+        '',\n+    ]\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/9229"}