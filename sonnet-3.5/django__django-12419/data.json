{"instance_id": "django__django-12419", "score": "I", "diff": "diff --git a/django/core/checks/security/base.py b/django/core/checks/security/base.py\nindex b69c2a11da..164a9449d8 100644\n--- a/django/core/checks/security/base.py\n+++ b/django/core/checks/security/base.py\n@@ -213,8 +213,13 @@ def check_allowed_hosts(app_configs, **kwargs):\n @register(Tags.security, deploy=True)\n def check_referrer_policy(app_configs, **kwargs):\n     if _security_middleware():\n-        if settings.SECURE_REFERRER_POLICY is None:\n-            return [W022]\n+        if settings.SECURE_REFERRER_POLICY != \"same-origin\":\n+            return [Warning(\n+                \"Your SECURE_REFERRER_POLICY setting is not set to 'same-origin'. \"\n+                \"You may want to consider using this value to prevent information \"\n+                \"leakage to third-party sites.\",\n+                id='security.W022',\n+            )]\n         # Support a comma-separated string or iterable of values to allow fallback.\n         if isinstance(settings.SECURE_REFERRER_POLICY, str):\n             values = {v.strip() for v in settings.SECURE_REFERRER_POLICY.split(',')}\n", "gold_standard_diff": "diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py\nindex 09c9b95d26d5..8bb59a403756 100644\n--- a/django/conf/global_settings.py\n+++ b/django/conf/global_settings.py\n@@ -637,6 +637,6 @@ def gettext_noop(s):\n SECURE_HSTS_PRELOAD = False\n SECURE_HSTS_SECONDS = 0\n SECURE_REDIRECT_EXEMPT = []\n-SECURE_REFERRER_POLICY = None\n+SECURE_REFERRER_POLICY = 'same-origin'\n SECURE_SSL_HOST = None\n SECURE_SSL_REDIRECT = False\ndiff --git a/docs/ref/settings.txt b/docs/ref/settings.txt\nindex b4a5bdc48f9b..8c3f6f2b473f 100644\n--- a/docs/ref/settings.txt\n+++ b/docs/ref/settings.txt\n@@ -2395,12 +2395,16 @@ from URL paths, so patterns shouldn't include them, e.g.\n \n .. versionadded:: 3.0\n \n-Default: ``None``\n+Default: ``'same-origin'``\n \n If configured, the :class:`~django.middleware.security.SecurityMiddleware` sets\n the :ref:`referrer-policy` header on all responses that do not already have it\n to the value provided.\n \n+.. versionchanged:: 3.1\n+\n+    In older versions, the default value is ``None``.\n+\n .. setting:: SECURE_SSL_HOST\n \n ``SECURE_SSL_HOST``\ndiff --git a/docs/releases/3.1.txt b/docs/releases/3.1.txt\nindex 4a165156e13e..903e2510baf3 100644\n--- a/docs/releases/3.1.txt\n+++ b/docs/releases/3.1.txt\n@@ -285,6 +285,19 @@ Requests and Responses\n * The new :meth:`.HttpRequest.accepts` method returns whether the request\n   accepts the given MIME type according to the ``Accept`` HTTP header.\n \n+.. _whats-new-security-3.1:\n+\n+Security\n+~~~~~~~~\n+\n+* The :setting:`SECURE_REFERRER_POLICY` setting now defaults to\n+  ``'same-origin'``. With this configured,\n+  :class:`~django.middleware.security.SecurityMiddleware` sets the\n+  :ref:`referrer-policy` header to ``same-origin`` on all responses that do not\n+  already have it. This prevents the ``Referer`` header being sent to other\n+  origins. If you need the previous behavior, explicitly set\n+  :setting:`SECURE_REFERRER_POLICY` to ``None``.\n+\n Serialization\n ~~~~~~~~~~~~~\n \n@@ -452,6 +465,10 @@ Miscellaneous\n * Providing a non-local remote field in the :attr:`.ForeignKey.to_field`\n   argument now raises :class:`~django.core.exceptions.FieldError`.\n \n+* :setting:`SECURE_REFERRER_POLICY` now defaults to ``'same-origin'``. See the\n+  *What's New* :ref:`Security section <whats-new-security-3.1>` above for more\n+  details.\n+\n .. _deprecated-features-3.1:\n \n Features deprecated in 3.1\ndiff --git a/tests/project_template/test_settings.py b/tests/project_template/test_settings.py\nindex 5617f4a9432e..e8d466938dcb 100644\n--- a/tests/project_template/test_settings.py\n+++ b/tests/project_template/test_settings.py\n@@ -38,6 +38,7 @@ def test_middleware_headers(self):\n             self.assertEqual(headers, [\n                 b'Content-Length: 0',\n                 b'Content-Type: text/html; charset=utf-8',\n+                b'Referrer-Policy: same-origin',\n                 b'X-Content-Type-Options: nosniff',\n                 b'X-Frame-Options: DENY',\n             ])\n", "gold_standard_pr_link": "https://github.com/django/django/pull/12419"}