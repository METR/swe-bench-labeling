{"instance_id": "sphinx-doc__sphinx-9281", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex 2538952e3..94e1d8b32 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.14,<0.18',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex a415a7074..c0418d9a8 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -740,7 +740,10 @@ def stringify_signature(sig: inspect.Signature, show_annotation: bool = True,\n                 arg.write(' = ')\n             else:\n                 arg.write('=')\n-            arg.write(object_description(param.default))\n+            if isinstance(param.default, enum.Enum):\n+                arg.write(param.default.__class__.__name__ + '.' + param.default.name)\n+            else:\n+                arg.write(object_description(param.default))\n \n         args.append(arg.getvalue())\n         last_kind = param.kind\ndiff --git a/tox.ini b/tox.ini\nindex a363e187f..3b8bc12d0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -27,7 +27,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From 31ec519d3808617e333794493e0aabc5fe5d4f81 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Sun, 30 May 2021 02:15:28 +0900\nSubject: [PATCH] Close #9272: autodoc: Render enum values for the default\n argument value better\n\n---\n CHANGES                    | 1 +\n sphinx/util/inspect.py     | 7 +++++--\n tests/test_util_inspect.py | 9 +++++++++\n 3 files changed, 15 insertions(+), 2 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 64410011e3a..8007636a8cc 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -35,6 +35,7 @@ Features added\n * #8061, #9218: autodoc: Support variable comment for alias classes\n * #3014: autodoc: Add :event:`autodoc-process-bases` to modify the base classes\n   of the class definitions\n+* #9272: autodoc: Render enum values for the default argument value better\n * #3257: autosummary: Support instance attributes for classes\n * #9129: html search: Show search summaries when html_copy_source = False\n * #9120: html theme: Eliminate prompt characters of code-block from copyable\ndiff --git a/sphinx/util/inspect.py b/sphinx/util/inspect.py\nindex a415a7074c8..23dd9e9307f 100644\n--- a/sphinx/util/inspect.py\n+++ b/sphinx/util/inspect.py\n@@ -442,14 +442,14 @@ def object_description(object: Any) -> str:\n                      (object_description(key), object_description(object[key]))\n                      for key in sorted_keys)\n             return \"{%s}\" % \", \".join(items)\n-    if isinstance(object, set):\n+    elif isinstance(object, set):\n         try:\n             sorted_values = sorted(object)\n         except TypeError:\n             pass  # Cannot sort set values, fall back to generic repr\n         else:\n             return \"{%s}\" % \", \".join(object_description(x) for x in sorted_values)\n-    if isinstance(object, frozenset):\n+    elif isinstance(object, frozenset):\n         try:\n             sorted_values = sorted(object)\n         except TypeError:\n@@ -457,6 +457,9 @@ def object_description(object: Any) -> str:\n         else:\n             return \"frozenset({%s})\" % \", \".join(object_description(x)\n                                                  for x in sorted_values)\n+    elif isinstance(object, enum.Enum):\n+        return \"%s.%s\" % (object.__class__.__name__, object.name)\n+\n     try:\n         s = repr(object)\n     except Exception as exc:\ndiff --git a/tests/test_util_inspect.py b/tests/test_util_inspect.py\nindex de4ad92366b..2f805a87a89 100644\n--- a/tests/test_util_inspect.py\n+++ b/tests/test_util_inspect.py\n@@ -10,6 +10,7 @@\n \n import ast\n import datetime\n+import enum\n import functools\n import sys\n import types\n@@ -516,6 +517,14 @@ def __repr__(self):\n     assert \"<CustomType(2)>: 2\" in description\n \n \n+def test_object_description_enum():\n+    class MyEnum(enum.Enum):\n+        FOO = 1\n+        BAR = 2\n+\n+    assert inspect.object_description(MyEnum.FOO) == \"MyEnum.FOO\"\n+\n+\n def test_getslots():\n     class Foo:\n         pass\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/9281"}