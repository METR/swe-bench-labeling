{"instance_id": "django__django-12039", "score": "C", "diff": "diff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 44e49806f8..af903f9243 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -84,7 +84,12 @@ class Columns(TableColumns):\n     def __str__(self):\n         def col_str(column, idx):\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx]\n+                # Add space before suffix if it's not empty\n+                if suffix:\n+                    return self.quote_name(column) + ' ' + suffix\n+                else:\n+                    return self.quote_name(column)\n             except IndexError:\n                 return self.quote_name(column)\n \n@@ -114,7 +119,10 @@ class IndexColumns(Columns):\n             # length as self.columns.\n             col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx]\n+                # Only add space and suffix if suffix is not empty\n+                if suffix:\n+                    col = '{} {}'.format(col, suffix)\n             except IndexError:\n                 pass\n             return col\ndiff --git a/tests/backends/test_ddl_references.py b/tests/backends/test_ddl_references.py\nindex d96ebcb57f..3194ae6f3a 100644\n--- a/tests/backends/test_ddl_references.py\n+++ b/tests/backends/test_ddl_references.py\n@@ -1,5 +1,5 @@\n from django.db.backends.ddl_references import (\n-    Columns, ForeignKeyName, IndexName, Statement, Table,\n+    Columns, ForeignKeyName, IndexColumns, IndexName, Statement, Table,\n )\n from django.test import SimpleTestCase\n \n@@ -56,6 +56,19 @@ class ColumnsTests(TableTests):\n     def test_str(self):\n         self.assertEqual(str(self.reference), 'FIRST_COLUMN, SECOND_COLUMN')\n \n+    def test_col_suffixes(self):\n+        # Test whitespace with column suffixes\n+        reference = Columns('table', ['col1', 'col2'], lambda c: c, col_suffixes=('DESC', 'ASC'))\n+        self.assertEqual(str(reference), 'col1 DESC, col2 ASC')\n+        \n+        # Test empty suffix doesn't add extra space\n+        reference = Columns('table', ['col1', 'col2'], lambda c: c, col_suffixes=('', 'DESC'))\n+        self.assertEqual(str(reference), 'col1, col2 DESC')\n+        \n+        # Test all empty suffixes\n+        reference = Columns('table', ['col1', 'col2'], lambda c: c, col_suffixes=('', ''))\n+        self.assertEqual(str(reference), 'col1, col2')\n+\n \n class IndexNameTests(ColumnsTests):\n     def setUp(self):\n", "gold_standard_diff": "From d5af43c8d1de7bc21e6e01f31e711c02a5059a5a Mon Sep 17 00:00:00 2001\nFrom: Hannes Ljungberg <hannes@5monkeys.se>\nDate: Thu, 7 Nov 2019 21:25:48 +0100\nSubject: [PATCH 1/2] Refs #30961 -- Added tests for columns list SQL generated\n for indexes.\n\n---\n tests/indexes/tests.py | 20 ++++++++++++++++++++\n 1 file changed, 20 insertions(+)\n\ndiff --git a/tests/indexes/tests.py b/tests/indexes/tests.py\nindex 588feaddff42..799146d6a8d0 100644\n--- a/tests/indexes/tests.py\n+++ b/tests/indexes/tests.py\n@@ -75,6 +75,14 @@ def test_index_together_single_list(self):\n         index_sql = connection.schema_editor()._model_indexes_sql(IndexTogetherSingleList)\n         self.assertEqual(len(index_sql), 1)\n \n+    def test_columns_list_sql(self):\n+        index = Index(fields=['headline'], name='whitespace_idx')\n+        editor = connection.schema_editor()\n+        self.assertIn(\n+            '(%s)' % editor.quote_name('headline'),\n+            str(index.create_sql(Article, editor)),\n+        )\n+\n \n @skipIf(connection.vendor == 'postgresql', 'opclasses are PostgreSQL only')\n class SchemaIndexesNotPostgreSQLTests(TransactionTestCase):\n@@ -223,6 +231,18 @@ def test_ops_class_descending_partial(self):\n             cursor.execute(self.get_opclass_query % indexname)\n             self.assertCountEqual(cursor.fetchall(), [('text_pattern_ops', indexname)])\n \n+    def test_ops_class_descending_columns_list_sql(self):\n+        index = Index(\n+            fields=['-headline'],\n+            name='whitespace_idx',\n+            opclasses=['text_pattern_ops'],\n+        )\n+        with connection.schema_editor() as editor:\n+            self.assertIn(\n+                '(%s text_pattern_ops DESC)' % editor.quote_name('headline'),\n+                str(index.create_sql(Article, editor)),\n+            )\n+\n \n @skipUnless(connection.vendor == 'mysql', 'MySQL tests')\n class SchemaIndexesMySQLTests(TransactionTestCase):\n\nFrom 6d590bcf1ff1d66990d03f8ee288e18110bdd995 Mon Sep 17 00:00:00 2001\nFrom: Hannes Ljungberg <hannes@5monkeys.se>\nDate: Thu, 7 Nov 2019 21:26:08 +0100\nSubject: [PATCH 2/2] Fixed #30961 -- Fixed spaces in columns list SQL\n generated for indexes.\n\n---\n django/db/backends/ddl_references.py | 12 +++++++++---\n tests/indexes/tests.py               | 20 ++++++++++++++++++++\n 2 files changed, 29 insertions(+), 3 deletions(-)\n\ndiff --git a/django/db/backends/ddl_references.py b/django/db/backends/ddl_references.py\nindex 44e49806f815..ba55de1df8b2 100644\n--- a/django/db/backends/ddl_references.py\n+++ b/django/db/backends/ddl_references.py\n@@ -83,10 +83,14 @@ def __init__(self, table, columns, quote_name, col_suffixes=()):\n \n     def __str__(self):\n         def col_str(column, idx):\n+            col = self.quote_name(column)\n             try:\n-                return self.quote_name(column) + self.col_suffixes[idx]\n+                suffix = self.col_suffixes[idx]\n+                if suffix:\n+                    col = '{} {}'.format(col, suffix)\n             except IndexError:\n-                return self.quote_name(column)\n+                pass\n+            return col\n \n         return ', '.join(col_str(column, idx) for idx, column in enumerate(self.columns))\n \n@@ -114,7 +118,9 @@ def col_str(column, idx):\n             # length as self.columns.\n             col = '{} {}'.format(self.quote_name(column), self.opclasses[idx])\n             try:\n-                col = '{} {}'.format(col, self.col_suffixes[idx])\n+                suffix = self.col_suffixes[idx]\n+                if suffix:\n+                    col = '{} {}'.format(col, suffix)\n             except IndexError:\n                 pass\n             return col\ndiff --git a/tests/indexes/tests.py b/tests/indexes/tests.py\nindex 799146d6a8d0..04ab036139fc 100644\n--- a/tests/indexes/tests.py\n+++ b/tests/indexes/tests.py\n@@ -83,6 +83,14 @@ def test_columns_list_sql(self):\n             str(index.create_sql(Article, editor)),\n         )\n \n+    def test_descending_columns_list_sql(self):\n+        index = Index(fields=['-headline'], name='whitespace_idx')\n+        editor = connection.schema_editor()\n+        self.assertIn(\n+            '(%s DESC)' % editor.quote_name('headline'),\n+            str(index.create_sql(Article, editor)),\n+        )\n+\n \n @skipIf(connection.vendor == 'postgresql', 'opclasses are PostgreSQL only')\n class SchemaIndexesNotPostgreSQLTests(TransactionTestCase):\n@@ -231,6 +239,18 @@ def test_ops_class_descending_partial(self):\n             cursor.execute(self.get_opclass_query % indexname)\n             self.assertCountEqual(cursor.fetchall(), [('text_pattern_ops', indexname)])\n \n+    def test_ops_class_columns_lists_sql(self):\n+        index = Index(\n+            fields=['headline'],\n+            name='whitespace_idx',\n+            opclasses=['text_pattern_ops'],\n+        )\n+        with connection.schema_editor() as editor:\n+            self.assertIn(\n+                '(%s text_pattern_ops)' % editor.quote_name('headline'),\n+                str(index.create_sql(Article, editor)),\n+            )\n+\n     def test_ops_class_descending_columns_list_sql(self):\n         index = Index(\n             fields=['-headline'],\n", "gold_standard_pr_link": "https://github.com/django/django/pull/12039"}