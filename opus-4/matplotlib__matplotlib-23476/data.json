{"instance_id": "matplotlib__matplotlib-23476", "score": "I", "diff": "diff --git a/sinus.pickle b/sinus.pickle\nnew file mode 100644\nindex 0000000000..d1c8e8d11d\nBinary files /dev/null and b/sinus.pickle differ\ndiff --git a/test_dpi_bug.py b/test_dpi_bug.py\nnew file mode 100644\nindex 0000000000..25405a9b2f\n--- /dev/null\n+++ b/test_dpi_bug.py\n@@ -0,0 +1,35 @@\n+import numpy as np\n+import matplotlib\n+import matplotlib.pyplot as plt\n+import pickle\n+import platform\n+\n+print(matplotlib.get_backend())\n+print('Matplotlib ver:', matplotlib.__version__)\n+print('Platform:', platform.platform())\n+print('System:', platform.system())\n+print('Release:', platform.release())\n+print('Python ver:', platform.python_version())\n+\n+\n+def dump_load_get_dpi(fig):\n+    with open('sinus.pickle','wb') as file:\n+        pickle.dump(fig, file)\n+\n+    with open('sinus.pickle', 'rb') as blob:\n+        fig2 = pickle.load(blob)\n+    return fig2, fig2.dpi\n+\n+\n+def run():\n+    fig = plt.figure()\n+    x = np.linspace(0,2*np.pi)\n+    y = np.sin(x)\n+\n+    for i in range(5):  # Reduced from 32 to avoid overflow\n+        print(f'{i}: {fig.dpi}')\n+        fig, dpi = dump_load_get_dpi(fig)\n+\n+\n+if __name__ == '__main__':\n+    run()\n", "gold_standard_diff": "From a05f3795225a90d5fa56683695940ff3f0c0c49b Mon Sep 17 00:00:00 2001\nFrom: Thomas A Caswell <tcaswell@gmail.com>\nDate: Fri, 22 Jul 2022 14:55:38 -0400\nSubject: [PATCH] FIX: reset to original DPI in getstate\n\nThere is a bit of extra caution in extracting the original DPI\njust in case there is a canvas class that does something very funny\nand the `_orignial_dpi` attribute does not get set (it is set to the `Figure`\ninstance in the `CanvasBase` init, not in the `Figure` init).\n\ncloses #23471\n---\n lib/matplotlib/figure.py            | 3 +++\n lib/matplotlib/tests/test_figure.py | 9 +++++++++\n 2 files changed, 12 insertions(+)\n\ndiff --git a/lib/matplotlib/figure.py b/lib/matplotlib/figure.py\nindex c55864243a75..6516816ed6f6 100644\n--- a/lib/matplotlib/figure.py\n+++ b/lib/matplotlib/figure.py\n@@ -3023,6 +3023,9 @@ def __getstate__(self):\n         # Set cached renderer to None -- it can't be pickled.\n         state[\"_cachedRenderer\"] = None\n \n+        # discard any changes to the dpi due to pixel ratio changes\n+        state[\"_dpi\"] = state.get('_original_dpi', state['_dpi'])\n+\n         # add version information to the state\n         state['__mpl_version__'] = mpl.__version__\n \ndiff --git a/lib/matplotlib/tests/test_figure.py b/lib/matplotlib/tests/test_figure.py\nindex ec1a814ebc59..9f3eb68281ca 100644\n--- a/lib/matplotlib/tests/test_figure.py\n+++ b/lib/matplotlib/tests/test_figure.py\n@@ -2,6 +2,7 @@\n from datetime import datetime\n import io\n from pathlib import Path\n+import pickle\n import platform\n from threading import Timer\n from types import SimpleNamespace\n@@ -1380,3 +1381,11 @@ def test_deepcopy():\n \n     assert ax.get_xlim() == (1e-1, 1e2)\n     assert fig2.axes[0].get_xlim() == (0, 1)\n+\n+\n+def test_unpickle_with_device_pixel_ratio():\n+    fig = Figure(dpi=42)\n+    fig.canvas._set_device_pixel_ratio(7)\n+    assert fig.dpi == 42*7\n+    fig2 = pickle.loads(pickle.dumps(fig))\n+    assert fig2.dpi == 42\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/23476"}