{"instance_id": "scikit-learn__scikit-learn-13439", "score": "C", "diff": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 7eaf9a46f..5f0d6dac2 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,6 +199,10 @@ class Pipeline(_BaseComposition):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n+    def __len__(self):\n+        \"\"\"Returns the number of steps in the pipeline.\"\"\"\n+        return len(self.steps)\n+\n     def __getitem__(self, ind):\n         \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n \n", "gold_standard_diff": "From 597476c57cbcc7236761dee3f90711a27abbf2c3 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 01:53:01 +0530\nSubject: [PATCH 01/11] adding length function to pipeline.py\n\n---\n sklearn/pipeline.py | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 7eaf9a46f09e9..89cb9a5b95912 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,6 +199,12 @@ def _iter(self, with_final=True):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n+    def len(self):\n+        \"\"\"\n+        Returns the length of the Pipeline\n+        \"\"\"\n+        return len(self.steps)\n+\n     def __getitem__(self, ind):\n         \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n \n\nFrom f43b580240e0fef3be0503dd444d998898a01084 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 11:33:48 +0530\nSubject: [PATCH 02/11] modified length function name and added test\n\n---\n sklearn/pipeline.py            |  2 +-\n sklearn/tests/test_pipeline.py | 11 ++++++++++-\n 2 files changed, 11 insertions(+), 2 deletions(-)\n\ndiff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 89cb9a5b95912..d1d03656d2a62 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,7 +199,7 @@ def _iter(self, with_final=True):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n-    def len(self):\n+    def __len__(self):\n         \"\"\"\n         Returns the length of the Pipeline\n         \"\"\"\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex 8d6fe8f70374e..14e8f1c99d786 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -24,13 +24,14 @@\n from sklearn.svm import SVC\n from sklearn.linear_model import LogisticRegression, Lasso\n from sklearn.linear_model import LinearRegression\n+from sklearn.linear_model import SGDClassifier\n from sklearn.cluster import KMeans\n from sklearn.feature_selection import SelectKBest, f_classif\n from sklearn.dummy import DummyRegressor\n from sklearn.decomposition import PCA, TruncatedSVD\n from sklearn.datasets import load_iris\n from sklearn.preprocessing import StandardScaler\n-from sklearn.feature_extraction.text import CountVectorizer\n+from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n from sklearn.utils._joblib import Memory\n from sklearn.utils._joblib import __version__ as joblib_version\n \n@@ -1071,3 +1072,11 @@ def test_make_pipeline_memory():\n     assert pipeline.memory is None\n \n     shutil.rmtree(cachedir)\n+\n+def test__len__():\n+    pipeline = Pipeline([\n+        ('vect', CountVectorizer()),\n+        ('tfidf', TfidfTransformer()),\n+        ('clf', SGDClassifier()),\n+    ])\n+    assert_equal(pipeline.__len__(),3)\n\nFrom c961ae57891ee9cdcd8dbac8fe45a699dff17808 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 11:38:29 +0530\nSubject: [PATCH 03/11] added space in test__len__() function\n\n---\n sklearn/tests/test_pipeline.py | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex 14e8f1c99d786..cba49885d01c4 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -1073,10 +1073,11 @@ def test_make_pipeline_memory():\n \n     shutil.rmtree(cachedir)\n \n+\n def test__len__():\n     pipeline = Pipeline([\n         ('vect', CountVectorizer()),\n         ('tfidf', TfidfTransformer()),\n         ('clf', SGDClassifier()),\n     ])\n-    assert_equal(pipeline.__len__(),3)\n+    assert_equal(pipeline.__len__(), 3)\n\nFrom 86f9cfa74cee94c8fb1a26cc5db49423d38469d0 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 13:10:38 +0530\nSubject: [PATCH 04/11] modified test_pipeline.py\n\n---\n sklearn/tests/test_pipeline.py | 13 +++++++------\n 1 file changed, 7 insertions(+), 6 deletions(-)\n\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex cba49885d01c4..ae25a46a9e5e0 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -24,14 +24,13 @@\n from sklearn.svm import SVC\n from sklearn.linear_model import LogisticRegression, Lasso\n from sklearn.linear_model import LinearRegression\n-from sklearn.linear_model import SGDClassifier\n from sklearn.cluster import KMeans\n from sklearn.feature_selection import SelectKBest, f_classif\n from sklearn.dummy import DummyRegressor\n from sklearn.decomposition import PCA, TruncatedSVD\n from sklearn.datasets import load_iris\n from sklearn.preprocessing import StandardScaler\n-from sklearn.feature_extraction.text import CountVectorizer, TfidfTransformer\n+from sklearn.feature_extraction.text import CountVectorizer\n from sklearn.utils._joblib import Memory\n from sklearn.utils._joblib import __version__ as joblib_version\n \n@@ -1075,9 +1074,11 @@ def test_make_pipeline_memory():\n \n \n def test__len__():\n+    scaler_for_pipeline = StandardScaler()\n+    km_for_pipeline = KMeans(random_state=0)\n+    \n     pipeline = Pipeline([\n-        ('vect', CountVectorizer()),\n-        ('tfidf', TfidfTransformer()),\n-        ('clf', SGDClassifier()),\n+        ('scaler', scaler_for_pipeline),\n+        ('Kmeans', km_for_pipeline)\n     ])\n-    assert_equal(pipeline.__len__(), 3)\n+    assert pipeline.__len__() == 2\n\nFrom 8fd3a432cb9dd45db7c8fe9db31a9c86d4ba4922 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 13:52:19 +0530\nSubject: [PATCH 05/11] removed extra space in test_pipeline.py\n\n---\n sklearn/tests/test_pipeline.py | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex ae25a46a9e5e0..ed01c6a30e888 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -1076,7 +1076,6 @@ def test_make_pipeline_memory():\n def test__len__():\n     scaler_for_pipeline = StandardScaler()\n     km_for_pipeline = KMeans(random_state=0)\n-    \n     pipeline = Pipeline([\n         ('scaler', scaler_for_pipeline),\n         ('Kmeans', km_for_pipeline)\n\nFrom 5ca56662358d7691fa39536e98f577dd17ba4526 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 16:49:16 +0530\nSubject: [PATCH 06/11] modified assert statement\n\n---\n sklearn/tests/test_pipeline.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex ed01c6a30e888..bc2a34e2d5f4f 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -1080,4 +1080,4 @@ def test__len__():\n         ('scaler', scaler_for_pipeline),\n         ('Kmeans', km_for_pipeline)\n     ])\n-    assert pipeline.__len__() == 2\n+    assert len(pipeline) == 2\n\nFrom 6616b508da92738117fe6d7d158a75477768cc5d Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 18:41:12 +0530\nSubject: [PATCH 07/11] added the enhancement label in changelog of v0.21.rst\n\n---\n doc/whats_new/v0.21.rst | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 0525a40467e74..25575a3c38b5f 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -403,6 +403,11 @@ Support for Python 3.4 and below has been officially dropped.\n - |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a\n   transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.\n \n+- |Enhancement| :class:`pipeline.Pipeline` now implements a func\n+  :func:`__len__()`,\n+  that will return the length of the pipeline :issue `13439`\n+  by :user:`Lakshya KD <LakshKD>`\n+\n :mod:`sklearn.preprocessing`\n ............................\n \n\nFrom c6c98285910f2b17653d2daa39883d9ca165323d Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Wed, 13 Mar 2019 18:43:08 +0530\nSubject: [PATCH 08/11] modified the enhancement label in changelog of\n v0.21.rst\n\n---\n doc/whats_new/v0.21.rst | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 25575a3c38b5f..0ddc8e69ad02c 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -405,8 +405,8 @@ Support for Python 3.4 and below has been officially dropped.\n \n - |Enhancement| :class:`pipeline.Pipeline` now implements a func\n   :func:`__len__()`,\n-  that will return the length of the pipeline :issue `13439`\n-  by :user:`Lakshya KD <LakshKD>`\n+  that will return the length of the pipeline :issue:`13439`\n+  by :user:`Lakshya KD <LakshKD>`.\n \n :mod:`sklearn.preprocessing`\n ............................\n\nFrom 65b9a43d71d6146033e6d5b8d7f4dedc4ad0659b Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Fri, 15 Mar 2019 10:47:09 +0530\nSubject: [PATCH 09/11] modified message in changelog file\n\n---\n doc/whats_new/v0.21.rst | 7 +++----\n 1 file changed, 3 insertions(+), 4 deletions(-)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 0ddc8e69ad02c..e0439bcbda513 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -403,10 +403,9 @@ Support for Python 3.4 and below has been officially dropped.\n - |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a\n   transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.\n \n-- |Enhancement| :class:`pipeline.Pipeline` now implements a func\n-  :func:`__len__()`,\n-  that will return the length of the pipeline :issue:`13439`\n-  by :user:`Lakshya KD <LakshKD>`.\n+- |Enhancement| :class:`pipeline.Pipeline` implements a func len,\n+  that will now work and return the length of the pipeline when called with\n+  Pipeline object. :issue:`13439` by :user:`Lakshya KD <LakshKD>`.\n \n :mod:`sklearn.preprocessing`\n ............................\n\nFrom 9fab7cc539b3ddaa3f5022892f353027c6182efb Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Sat, 16 Mar 2019 19:59:32 +0530\nSubject: [PATCH 10/11] modified test and changed enhancement message\n\n---\n doc/whats_new/v0.21.rst        |  6 +++---\n sklearn/tests/test_pipeline.py | 11 +----------\n 2 files changed, 4 insertions(+), 13 deletions(-)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 2c9ccc5607a89..196ab92d0aa4a 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -413,9 +413,9 @@ Support for Python 3.4 and below has been officially dropped.\n - |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a\n   transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.\n \n-- |Enhancement| :class:`pipeline.Pipeline` implements a func len,\n-  that will now work and return the length of the pipeline when called with\n-  Pipeline object. :issue:`13439` by :user:`Lakshya KD <LakshKD>`.\n+- |Enhancement| :class:`pipeline.Pipeline`  implements __len__ and\n+  therefore len(pipeline) returns the number of steps in the pipeline.\n+  :issue:`13439` by :user:`Lakshya KD <LakshKD>`.\n \n :mod:`sklearn.preprocessing`\n ............................\ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex bc2a34e2d5f4f..ed81db747e20c 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -1069,15 +1069,6 @@ def test_make_pipeline_memory():\n     assert pipeline.memory is memory\n     pipeline = make_pipeline(DummyTransf(), SVC())\n     assert pipeline.memory is None\n+    assert len(pipeline) == 2\n \n     shutil.rmtree(cachedir)\n-\n-\n-def test__len__():\n-    scaler_for_pipeline = StandardScaler()\n-    km_for_pipeline = KMeans(random_state=0)\n-    pipeline = Pipeline([\n-        ('scaler', scaler_for_pipeline),\n-        ('Kmeans', km_for_pipeline)\n-    ])\n-    assert len(pipeline) == 2\n\nFrom 959c80501ba32a802ade609d841082511c0b3085 Mon Sep 17 00:00:00 2001\nFrom: Lakshya Daksha <lakshyakri09@gmail.com>\nDate: Sat, 16 Mar 2019 20:42:18 +0530\nSubject: [PATCH 11/11] added backticks in message\n\n---\n doc/whats_new/v0.21.rst | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 196ab92d0aa4a..cd4daebf9632b 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -413,8 +413,8 @@ Support for Python 3.4 and below has been officially dropped.\n - |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a\n   transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.\n \n-- |Enhancement| :class:`pipeline.Pipeline`  implements __len__ and\n-  therefore len(pipeline) returns the number of steps in the pipeline.\n+- |Enhancement| :class:`pipeline.Pipeline`  implements ``__len__`` and\n+  therefore ``len(pipeline)`` returns the number of steps in the pipeline.\n   :issue:`13439` by :user:`Lakshya KD <LakshKD>`.\n \n :mod:`sklearn.preprocessing`\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/13439"}