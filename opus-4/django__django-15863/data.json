{"instance_id": "django__django-15863", "score": "C", "diff": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 7a5b28d159..4b566ff7d1 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -150,14 +150,19 @@ def floatformat(text, arg=-1):\n         elif last_char == \"u\":\n             use_l10n = False\n             arg = arg[:-1] or -1\n-    try:\n-        input_val = repr(text)\n-        d = Decimal(input_val)\n-    except InvalidOperation:\n+    # Handle the case where text is already a Decimal\n+    if isinstance(text, Decimal):\n+        d = text\n+        input_val = str(text)\n+    else:\n         try:\n-            d = Decimal(str(float(text)))\n-        except (ValueError, InvalidOperation, TypeError):\n-            return \"\"\n+            input_val = repr(text)\n+            d = Decimal(input_val)\n+        except InvalidOperation:\n+            try:\n+                d = Decimal(str(float(text)))\n+            except (ValueError, InvalidOperation, TypeError):\n+                return \"\"\n     try:\n         p = int(arg)\n     except ValueError:\ndiff --git a/tests/template_tests/filter_tests/test_floatformat.py b/tests/template_tests/filter_tests/test_floatformat.py\nindex 8dc69b2437..09bd575ff0 100644\n--- a/tests/template_tests/filter_tests/test_floatformat.py\n+++ b/tests/template_tests/filter_tests/test_floatformat.py\n@@ -73,6 +73,15 @@ class FunctionTests(SimpleTestCase):\n         self.assertEqual(floatformat(1.5e-15, 20), \"0.00000000000000150000\")\n         self.assertEqual(floatformat(1.5e-15, -20), \"0.00000000000000150000\")\n         self.assertEqual(floatformat(1.00000000000000015, 16), \"1.0000000000000002\")\n+        # Test high-precision Decimal values are preserved\n+        self.assertEqual(\n+            floatformat(Decimal(\"42.12345678901234567890\"), 20),\n+            \"42.12345678901234567890\",\n+        )\n+        self.assertEqual(\n+            floatformat(Decimal(\"1.123456789012345678901234567890\"), 30),\n+            \"1.123456789012345678901234567890\",\n+        )\n \n     def test_force_grouping(self):\n         with translation.override(\"en\"):\n", "gold_standard_diff": "From 6153e1573cb631c4d419364fbfc169c8a02743b4 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Vlastimil=20Z=C3=ADma?= <vlastimil.zima@nic.cz>\nDate: Wed, 20 Jul 2022 14:46:49 +0200\nSubject: [PATCH] Fixed #34098 -- Keep precision of decimals in floatformat.\n\n---\n django/template/defaultfilters.py                     | 2 +-\n tests/template_tests/filter_tests/test_floatformat.py | 4 ++++\n 2 files changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 46334791c6fa..0ce0eefdc86c 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -149,7 +149,7 @@ def floatformat(text, arg=-1):\n             use_l10n = False\n             arg = arg[:-1] or -1\n     try:\n-        input_val = repr(text)\n+        input_val = str(text)\n         d = Decimal(input_val)\n     except InvalidOperation:\n         try:\ndiff --git a/tests/template_tests/filter_tests/test_floatformat.py b/tests/template_tests/filter_tests/test_floatformat.py\nindex 8dc69b2437c9..361a888ce3de 100644\n--- a/tests/template_tests/filter_tests/test_floatformat.py\n+++ b/tests/template_tests/filter_tests/test_floatformat.py\n@@ -56,6 +56,10 @@ def test_inputs(self):\n         self.assertEqual(floatformat(0.12345, 2), \"0.12\")\n         self.assertEqual(floatformat(Decimal(\"555.555\"), 2), \"555.56\")\n         self.assertEqual(floatformat(Decimal(\"09.000\")), \"9\")\n+        self.assertEqual(\n+            floatformat(Decimal(\"123456.123456789012345678901\"), 21),\n+            \"123456.123456789012345678901\",\n+        )\n         self.assertEqual(floatformat(\"foo\"), \"\")\n         self.assertEqual(floatformat(13.1031, \"bar\"), \"13.1031\")\n         self.assertEqual(floatformat(18.125, 2), \"18.13\")\n", "gold_standard_pr_link": "https://github.com/django/django/pull/15863"}