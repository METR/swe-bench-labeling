{"instance_id": "django__django-13516", "score": "C", "diff": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex e6cbf8c64f..14c0355dd8 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -150,6 +150,10 @@ class OutputWrapper(TextIOBase):\n         style_func = style_func or self.style_func\n         self._out.write(style_func(msg))\n \n+    def flush(self):\n+        if hasattr(self._out, 'flush'):\n+            self._out.flush()\n+\n \n class BaseCommand:\n     \"\"\"\n", "gold_standard_diff": "From f1f24539d8c86f60d1e2951a19eb3178e15d6399 Mon Sep 17 00:00:00 2001\nFrom: Thomas Riccardi <thomas@deepomatic.com>\nDate: Thu, 8 Oct 2020 20:41:22 +0200\nSubject: [PATCH] Fixed #32094 -- Fixed flush() calls on management command\n self.stdout/err proxies.\n\n---\n django/core/management/base.py                           | 4 ++++\n tests/user_commands/management/commands/outputwrapper.py | 8 ++++++++\n tests/user_commands/tests.py                             | 7 +++++++\n 3 files changed, 19 insertions(+)\n create mode 100644 tests/user_commands/management/commands/outputwrapper.py\n\ndiff --git a/django/core/management/base.py b/django/core/management/base.py\nindex e6cbf8c64fcb..463e4e8665ee 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -140,6 +140,10 @@ def __init__(self, out, ending='\\n'):\n     def __getattr__(self, name):\n         return getattr(self._out, name)\n \n+    def flush(self):\n+        if hasattr(self._out, 'flush'):\n+            self._out.flush()\n+\n     def isatty(self):\n         return hasattr(self._out, 'isatty') and self._out.isatty()\n \ndiff --git a/tests/user_commands/management/commands/outputwrapper.py b/tests/user_commands/management/commands/outputwrapper.py\nnew file mode 100644\nindex 000000000000..bafc30d12878\n--- /dev/null\n+++ b/tests/user_commands/management/commands/outputwrapper.py\n@@ -0,0 +1,8 @@\n+from django.core.management.base import BaseCommand\n+\n+\n+class Command(BaseCommand):\n+    def handle(self, **options):\n+        self.stdout.write('Working...')\n+        self.stdout.flush()\n+        self.stdout.write('OK')\ndiff --git a/tests/user_commands/tests.py b/tests/user_commands/tests.py\nindex e4aeca260012..eb2d38fbfbf0 100644\n--- a/tests/user_commands/tests.py\n+++ b/tests/user_commands/tests.py\n@@ -341,6 +341,13 @@ def test_create_parser_kwargs(self):\n         parser = BaseCommand().create_parser('prog_name', 'subcommand', epilog=epilog)\n         self.assertEqual(parser.epilog, epilog)\n \n+    def test_outputwrapper_flush(self):\n+        out = StringIO()\n+        with mock.patch.object(out, 'flush') as mocked_flush:\n+            management.call_command('outputwrapper', stdout=out)\n+        self.assertIn('Working...', out.getvalue())\n+        self.assertIs(mocked_flush.called, True)\n+\n \n class CommandRunTests(AdminScriptTestCase):\n     \"\"\"\n", "gold_standard_pr_link": "https://github.com/django/django/pull/13516"}