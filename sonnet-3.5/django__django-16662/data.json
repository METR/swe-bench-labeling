{"instance_id": "django__django-16662", "score": "C", "diff": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex a59f0c8dcb..17713975ee 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -173,9 +173,23 @@ class MigrationWriter:\n         else:\n             imports.add(\"from django.db import migrations\")\n \n-        # Sort imports by the package / module to be imported (the part after\n-        # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n-        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n+        # Sort imports according to Django coding style:\n+        # 1. Standard library imports\n+        # 2. Django imports\n+        # 3. Third-party imports\n+        # 4. Local imports\n+        # Within each group, place 'import' statements before 'from ... import' statements\n+        def sort_key(import_line):\n+            is_from = import_line.startswith('from')\n+            module = import_line.split()[1]\n+            if module.startswith('django.'):\n+                return (1, is_from, module)\n+            elif '.' not in module:\n+                return (0, is_from, module)\n+            else:\n+                return (2, is_from, module)\n+\n+        sorted_imports = sorted(imports, key=sort_key)\n         items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"\n         if migration_imports:\n             items[\"imports\"] += (\n", "gold_standard_diff": "diff --git a/django/db/migrations/writer.py b/django/db/migrations/writer.py\nindex a59f0c8dcb89..79b89b269dbc 100644\n--- a/django/db/migrations/writer.py\n+++ b/django/db/migrations/writer.py\n@@ -175,7 +175,10 @@ def as_string(self):\n \n         # Sort imports by the package / module to be imported (the part after\n         # \"from\" in \"from ... import ...\" or after \"import\" in \"import ...\").\n-        sorted_imports = sorted(imports, key=lambda i: i.split()[1])\n+        # First group the \"import\" statements, then \"from ... import ...\".\n+        sorted_imports = sorted(\n+            imports, key=lambda i: (i.split()[0] == \"from\", i.split()[1])\n+        )\n         items[\"imports\"] = \"\\n\".join(sorted_imports) + \"\\n\" if imports else \"\"\n         if migration_imports:\n             items[\"imports\"] += (\ndiff --git a/tests/migrations/test_writer.py b/tests/migrations/test_writer.py\nindex 1c11c68e970e..c6638b308318 100644\n--- a/tests/migrations/test_writer.py\n+++ b/tests/migrations/test_writer.py\n@@ -7,6 +7,7 @@\n import pathlib\n import re\n import sys\n+import time\n import uuid\n import zoneinfo\n from types import NoneType\n@@ -912,13 +913,18 @@ def test_sorted_imports(self):\n                             ),\n                         ),\n                     ),\n+                    migrations.AddField(\n+                        \"mymodel\",\n+                        \"myfield2\",\n+                        models.FloatField(default=time.time),\n+                    ),\n                 ]\n             },\n         )\n         writer = MigrationWriter(migration)\n         output = writer.as_string()\n         self.assertIn(\n-            \"import datetime\\nfrom django.db import migrations, models\\n\",\n+            \"import datetime\\nimport time\\nfrom django.db import migrations, models\\n\",\n             output,\n         )\n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/16662"}