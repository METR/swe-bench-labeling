{"instance_id": "pylint-dev__pylint-4661", "score": "I", "diff": "diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e3..02f883598 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -56,14 +56,22 @@ __all__ = [\n ]\n \n USER_HOME = os.path.expanduser(\"~\")\n+\n+# XDG Base Directory Specification support\n if \"PYLINTHOME\" in os.environ:\n     PYLINT_HOME = os.environ[\"PYLINTHOME\"]\n     if USER_HOME == \"~\":\n         USER_HOME = os.path.dirname(PYLINT_HOME)\n-elif USER_HOME == \"~\":\n-    PYLINT_HOME = \".pylint.d\"\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    # Use XDG_DATA_HOME if available, otherwise use default\n+    xdg_data_home = os.environ.get(\"XDG_DATA_HOME\")\n+    if xdg_data_home:\n+        PYLINT_HOME = os.path.join(xdg_data_home, \"pylint\")\n+    elif USER_HOME == \"~\":\n+        PYLINT_HOME = \".pylint.d\"\n+    else:\n+        # Default to XDG standard location\n+        PYLINT_HOME = os.path.join(USER_HOME, \".local\", \"share\", \"pylint\")\n \n \n def _get_pdata_path(base_name, recurs):\n@@ -83,7 +91,7 @@ def load_results(base):\n def save_results(results, base):\n     if not os.path.exists(PYLINT_HOME):\n         try:\n-            os.mkdir(PYLINT_HOME)\n+            os.makedirs(PYLINT_HOME)\n         except OSError:\n             print(\"Unable to create directory %s\" % PYLINT_HOME, file=sys.stderr)\n     data_file = _get_pdata_path(base, 1)\n@@ -94,6 +102,25 @@ def save_results(results, base):\n         print(f\"Unable to create file {data_file}: {ex}\", file=sys.stderr)\n \n \n+def _migrate_old_pylint_home():\n+    \"\"\"Migrate data from old ~/.pylint.d to new XDG location if needed.\"\"\"\n+    # Only migrate if we're using XDG location and old directory exists\n+    if (\"PYLINTHOME\" not in os.environ and \n+        USER_HOME != \"~\" and \n+        PYLINT_HOME != \".pylint.d\"):\n+        \n+        old_home = os.path.join(USER_HOME, \".pylint.d\")\n+        if os.path.exists(old_home) and not os.path.exists(PYLINT_HOME):\n+            try:\n+                import shutil\n+                os.makedirs(os.path.dirname(PYLINT_HOME), exist_ok=True)\n+                shutil.move(old_home, PYLINT_HOME)\n+                print(f\"Migrated pylint data from {old_home} to {PYLINT_HOME}\", \n+                      file=sys.stderr)\n+            except Exception as ex:\n+                print(f\"Failed to migrate pylint data: {ex}\", file=sys.stderr)\n+\n+\n def find_pylintrc():\n     \"\"\"search the pylint rc file and return its path if it find it, else None\"\"\"\n     for config_file in find_default_config_files():\n@@ -105,13 +132,16 @@ def find_pylintrc():\n \n PYLINTRC = find_pylintrc()\n \n+# Attempt to migrate old pylint home if needed\n+_migrate_old_pylint_home()\n+\n ENV_HELP = (\n     \"\"\"\n The following environment variables are used:\n     * PYLINTHOME\n     Path to the directory where persistent data for the run will be stored. If\n-not found, it defaults to ~/.pylint.d/ or .pylint.d (in the current working\n-directory).\n+not found, it defaults to $XDG_DATA_HOME/pylint (usually ~/.local/share/pylint)\n+or .pylint.d (if the home directory cannot be determined).\n     * PYLINTRC\n     Path to the configuration file. See the documentation for the method used\n to search for configuration file.\ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 004c29281..fbd27d89d 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -631,9 +631,11 @@ def test_pylint_home():\n     if uhome == \"~\":\n         expected = \".pylint.d\"\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        # Should use XDG default location if XDG_DATA_HOME is not set\n+        expected = os.path.join(uhome, \".local\", \"share\", \"pylint\")\n     assert config.PYLINT_HOME == expected\n \n+    # Test with custom PYLINTHOME\n     try:\n         pylintd = join(tempfile.gettempdir(), \".pylint.d\")\n         os.environ[\"PYLINTHOME\"] = pylintd\n@@ -647,6 +649,20 @@ def test_pylint_home():\n                 pass\n     finally:\n         del os.environ[\"PYLINTHOME\"]\n+        \n+    # Test with XDG_DATA_HOME set\n+    try:\n+        xdg_data_home = join(tempfile.gettempdir(), \"xdg_data\")\n+        os.environ[\"XDG_DATA_HOME\"] = xdg_data_home\n+        try:\n+            reload(config)\n+            expected_xdg = os.path.join(xdg_data_home, \"pylint\")\n+            assert config.PYLINT_HOME == expected_xdg\n+        finally:\n+            pass\n+    finally:\n+        os.environ.pop(\"XDG_DATA_HOME\", None)\n+        reload(config)\n \n \n @pytest.mark.usefixtures(\"pop_pylintrc\")\n", "gold_standard_diff": "From 8c61b2478a313b8c6e26695d19c8c62b670a752a Mon Sep 17 00:00:00 2001\nFrom: Eisuke Kawashima <e-kwsm@users.noreply.github.com>\nDate: Sat, 3 Jul 2021 08:54:40 +0900\nSubject: [PATCH] Use `XDG_CACHE_HOME` for `PYLINTHOME`\n\nCloses #3878\n---\n CONTRIBUTORS.txt            |  2 ++\n ChangeLog                   |  4 ++++\n doc/faq.rst                 |  9 +++++++--\n pylint/config/__init__.py   | 12 +++++++++++-\n setup.cfg                   |  6 +++++-\n tests/lint/unittest_lint.py |  3 ++-\n 6 files changed, 31 insertions(+), 5 deletions(-)\n\ndiff --git a/CONTRIBUTORS.txt b/CONTRIBUTORS.txt\nindex f1d54dbd5c..a6315f8d93 100644\n--- a/CONTRIBUTORS.txt\n+++ b/CONTRIBUTORS.txt\n@@ -521,3 +521,5 @@ contributors:\n * Yilei Yang: contributor\n \n * Marcin Kurczewski (rr-): contributor\n+\n+* Eisuke Kawashima (e-kwsm): contributor\ndiff --git a/ChangeLog b/ChangeLog\nindex 540f6f372a..0fd7cd8051 100644\n--- a/ChangeLog\n+++ b/ChangeLog\n@@ -9,6 +9,10 @@ Release date: TBA\n ..\n   Put new features here and also in 'doc/whatsnew/2.10.rst'\n \n+* The default for ``PYLINTHOME`` is now the standard ``XDG_CACHE_HOME``, and pylint now uses ``appdirs``.\n+\n+  Closes #3878\n+\n \n What's New in Pylint 2.9.6?\n ===========================\ndiff --git a/doc/faq.rst b/doc/faq.rst\nindex c817855f89..3d020aa210 100644\n--- a/doc/faq.rst\n+++ b/doc/faq.rst\n@@ -93,8 +93,13 @@ localized using the following rules:\n \n * value of the PYLINTHOME environment variable if set\n \n-* \".pylint.d\" subdirectory of the user's home directory if it is found\n-\t(not always findable on Windows platforms)\n+* \"pylint\" subdirectory of the user's XDG_CACHE_HOME if the environment variable is set, otherwise\n+\n+        - Linux: \"~/.cache/pylint\"\n+\n+        - Mac OS X: \"~/Library/Caches/pylint\"\n+\n+        - Windows: \"C:\\Users\\<username>\\AppData\\Local\\pylint\"\n \n * \".pylint.d\" directory in the current directory\n \ndiff --git a/pylint/config/__init__.py b/pylint/config/__init__.py\nindex 84774d0e30..fda95bcd55 100644\n--- a/pylint/config/__init__.py\n+++ b/pylint/config/__init__.py\n@@ -36,6 +36,8 @@\n import pickle\n import sys\n \n+import appdirs\n+\n from pylint.config.configuration_mixin import ConfigurationMixIn\n from pylint.config.find_default_config_files import find_default_config_files\n from pylint.config.man_help_formatter import _ManHelpFormatter\n@@ -63,7 +65,15 @@\n elif USER_HOME == \"~\":\n     PYLINT_HOME = \".pylint.d\"\n else:\n-    PYLINT_HOME = os.path.join(USER_HOME, \".pylint.d\")\n+    PYLINT_HOME = appdirs.user_cache_dir(\"pylint\")\n+\n+    old_home = os.path.join(USER_HOME, \".pylint.d\")\n+    if os.path.exists(old_home):\n+        print(\n+            f\"PYLINTHOME is now '{PYLINT_HOME}' but obsolescent '{old_home}' is found; \"\n+            \"you can safely remove the latter\",\n+            file=sys.stderr,\n+        )\n \n \n def _get_pdata_path(base_name, recurs):\ndiff --git a/setup.cfg b/setup.cfg\nindex 62a3fd7a5f..146f9e69bb 100644\n--- a/setup.cfg\n+++ b/setup.cfg\n@@ -42,6 +42,7 @@ project_urls =\n [options]\n packages = find:\n install_requires =\n+    appdirs>=1.4.0\n     astroid>=2.6.5,<2.7 # (You should also upgrade requirements_test_min.txt)\n     isort>=4.2.5,<6\n     mccabe>=0.6,<0.7\n@@ -74,7 +75,7 @@ markers =\n [isort]\n multi_line_output = 3\n line_length = 88\n-known_third_party = astroid, sphinx, isort, pytest, mccabe, six, toml\n+known_third_party = appdirs, astroid, sphinx, isort, pytest, mccabe, six, toml\n include_trailing_comma = True\n skip_glob = tests/functional/**,tests/input/**,tests/extensions/data/**,tests/regrtest_data/**,tests/data/**,astroid/**,venv/**\n src_paths = pylint\n@@ -82,6 +83,9 @@ src_paths = pylint\n [mypy]\n scripts_are_modules = True\n \n+[mypy-appdirs]\n+ignore_missing_imports = True\n+\n [mypy-astroid.*]\n ignore_missing_imports = True\n \ndiff --git a/tests/lint/unittest_lint.py b/tests/lint/unittest_lint.py\nindex 984e9759dd..5ef502c346 100644\n--- a/tests/lint/unittest_lint.py\n+++ b/tests/lint/unittest_lint.py\n@@ -46,6 +46,7 @@\n from os.path import abspath, basename, dirname, isdir, join, sep\n from shutil import rmtree\n \n+import appdirs\n import pytest\n \n from pylint import checkers, config, exceptions, interfaces, lint, testutils\n@@ -631,7 +632,7 @@ def test_pylint_home():\n     if uhome == \"~\":\n         expected = \".pylint.d\"\n     else:\n-        expected = os.path.join(uhome, \".pylint.d\")\n+        expected = appdirs.user_cache_dir(\"pylint\")\n     assert config.PYLINT_HOME == expected\n \n     try:\n", "gold_standard_pr_link": "https://github.com/pylint-dev/pylint/pull/4661"}