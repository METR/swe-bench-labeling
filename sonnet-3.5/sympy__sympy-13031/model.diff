diff --git a/sympy/matrices/common.py b/sympy/matrices/common.py
index 7ef51bc847..e0be69053c 100644
--- a/sympy/matrices/common.py
+++ b/sympy/matrices/common.py
@@ -378,6 +378,10 @@ def hstack(cls, *args):
             return cls._new()
 
         kls = type(args[0])
+        if all(arg.rows == 0 for arg in args):
+            rows = 0
+            cols = sum(arg.cols for arg in args)
+            return kls._new(rows, cols, [])
         return reduce(kls.row_join, args)
 
     def reshape(self, rows, cols):
diff --git a/test_hstack.py b/test_hstack.py
new file mode 100644
index 0000000000..064b545b94
--- /dev/null
+++ b/test_hstack.py
@@ -0,0 +1,23 @@
+import sympy as sy
+
+def test_hstack():
+    M1 = sy.Matrix.zeros(0, 0)
+    M2 = sy.Matrix.zeros(0, 1)
+    M3 = sy.Matrix.zeros(0, 2)
+    M4 = sy.Matrix.zeros(0, 3)
+    
+    result = sy.Matrix.hstack(M1, M2, M3, M4)
+    print("Result shape:", result.shape)
+    assert result.shape == (0, 6), f"Expected shape (0, 6), but got {result.shape}"
+    
+    M5 = sy.Matrix.zeros(1, 0)
+    M6 = sy.Matrix.zeros(1, 1)
+    M7 = sy.Matrix.zeros(1, 2)
+    M8 = sy.Matrix.zeros(1, 3)
+    
+    result2 = sy.Matrix.hstack(M5, M6, M7, M8)
+    print("Result2 shape:", result2.shape)
+    assert result2.shape == (1, 6), f"Expected shape (1, 6), but got {result2.shape}"
+
+if __name__ == "__main__":
+    test_hstack()
