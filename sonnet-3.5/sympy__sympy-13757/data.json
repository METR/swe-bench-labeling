{"instance_id": "sympy__sympy-13757", "score": "I", "diff": "diff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex d5ac051f63..3976adc7d4 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -4044,6 +4044,11 @@ def __mul__(f, g):\n                 g = f.__class__(g, *f.gens)\n             except PolynomialError:\n                 return f.as_expr()*g\n+        elif not f.is_Poly:\n+            try:\n+                f = g.__class__(f, *g.gens)\n+            except PolynomialError:\n+                return f*g.as_expr()\n \n         return f.mul(g)\n \n", "gold_standard_diff": "From 38a04e95a78c5440b495792247330bdac2ee8c4b Mon Sep 17 00:00:00 2001\nFrom: Nikhil Pappu <nkhlpappu@gmail.com>\nDate: Sun, 17 Dec 2017 16:34:47 -0500\nSubject: [PATCH 1/5] Fixes issue 13079\n\nAdded _op_priority to class Poly\n---\n sympy/polys/polytools.py            | 1 +\n sympy/polys/tests/test_polytools.py | 6 ++++++\n 2 files changed, 7 insertions(+)\n\ndiff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex d5ac051f636a..66fe8329bf8d 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,6 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n+    _op_priority = 11.0\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\ndiff --git a/sympy/polys/tests/test_polytools.py b/sympy/polys/tests/test_polytools.py\nindex 1f889e9f18cc..371cba5844f7 100644\n--- a/sympy/polys/tests/test_polytools.py\n+++ b/sympy/polys/tests/test_polytools.py\n@@ -677,6 +677,12 @@ def test_Poly_mul():\n     assert Poly(x, x) * 2 == Poly(2*x, x)\n     assert 2 * Poly(x, x) == Poly(2*x, x)\n \n+def test_issue_13079():\n+    assert Poly(x)*x == Poly(x**2, x, domain='ZZ')\n+    assert x*Poly(x) == Poly(x**2, x, domain='ZZ')\n+    assert -2*Poly(x) == Poly(-2*x, x, domain='ZZ')\n+    assert S(-2)*Poly(x) == Poly(-2*x, x, domain='ZZ')\n+    assert Poly(x)*S(-2) == Poly(-2*x, x, domain='ZZ')\n \n def test_Poly_sqr():\n     assert Poly(x*y, x, y).sqr() == Poly(x**2*y**2, x, y)\n\nFrom 405859efdfdf0598d6bd33121ff94263cac13027 Mon Sep 17 00:00:00 2001\nFrom: Nikhil Pappu <nkhlpappu@gmail.com>\nDate: Sun, 17 Dec 2017 18:01:57 -0500\nSubject: [PATCH 2/5] Changed _op_priority to 10\n\n---\n sympy/polys/polytools.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 66fe8329bf8d..3d6a22ace449 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,7 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n-    _op_priority = 11.0\n+    _op_priority = 10.0\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\n\nFrom eeba4f29b1d705b2c46eccdbc848465740a7391c Mon Sep 17 00:00:00 2001\nFrom: Nikhil Pappu <nkhlpappu@gmail.com>\nDate: Mon, 18 Dec 2017 00:18:07 -0500\nSubject: [PATCH 3/5] changed op priorities\n\n---\n sympy/polys/polytools.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 3d6a22ace449..930ea0ced13b 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,7 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n-    _op_priority = 10.0\n+    _op_priority = 10.00000001\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\n\nFrom 74762c9e7be5efadeb0a687d05844b8c1b785524 Mon Sep 17 00:00:00 2001\nFrom: Nikhil Pappu <nkhlpappu@gmail.com>\nDate: Mon, 18 Dec 2017 00:19:49 -0500\nSubject: [PATCH 4/5] changed op priorities\n\n---\n sympy/core/numbers.py    | 2 +-\n sympy/polys/polytools.py | 2 +-\n 2 files changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 8c8e2d738cef..7c680a5553fb 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -3739,7 +3739,7 @@ class ImaginaryUnit(with_metaclass(Singleton, AtomicExpr)):\n     is_number = True\n     is_algebraic = True\n     is_transcendental = False\n-\n+    _op_priority = 10.001\n     __slots__ = []\n \n     def _latex(self, printer):\ndiff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 930ea0ced13b..15cbe3fd8dcb 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,7 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n-    _op_priority = 10.00000001\n+    _op_priority = 10.0001\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\n\nFrom cd925ae89e85307c73f3581fd24148d7f47d2b0d Mon Sep 17 00:00:00 2001\nFrom: Nikhil Pappu <nkhlpappu@gmail.com>\nDate: Mon, 18 Dec 2017 18:39:04 -0500\nSubject: [PATCH 5/5] Changed a test in test_match.py\n\n---\n sympy/core/numbers.py          | 2 +-\n sympy/core/tests/test_match.py | 2 +-\n sympy/polys/polytools.py       | 2 +-\n 3 files changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/sympy/core/numbers.py b/sympy/core/numbers.py\nindex 7c680a5553fb..8c8e2d738cef 100644\n--- a/sympy/core/numbers.py\n+++ b/sympy/core/numbers.py\n@@ -3739,7 +3739,7 @@ class ImaginaryUnit(with_metaclass(Singleton, AtomicExpr)):\n     is_number = True\n     is_algebraic = True\n     is_transcendental = False\n-    _op_priority = 10.001\n+\n     __slots__ = []\n \n     def _latex(self, printer):\ndiff --git a/sympy/core/tests/test_match.py b/sympy/core/tests/test_match.py\nindex 60e37094cc3a..324d66aed0b1 100644\n--- a/sympy/core/tests/test_match.py\n+++ b/sympy/core/tests/test_match.py\n@@ -134,7 +134,7 @@ def test_mul():\n     assert e.match(x**p*exp(x*q)) == {p: 0, q: 1}\n \n     e = I*Poly(x, x)\n-    assert e.match(I*p) == {p: Poly(x, x)}\n+    assert e.match(I*p) == {p: x}\n \n \n def test_mul_noncommutative():\ndiff --git a/sympy/polys/polytools.py b/sympy/polys/polytools.py\nindex 15cbe3fd8dcb..32b7027a285d 100644\n--- a/sympy/polys/polytools.py\n+++ b/sympy/polys/polytools.py\n@@ -106,7 +106,7 @@ class Poly(Expr):\n \n     is_commutative = True\n     is_Poly = True\n-    _op_priority = 10.0001\n+    _op_priority = 10.001\n \n     def __new__(cls, rep, *gens, **args):\n         \"\"\"Create a new polynomial instance out of something useful. \"\"\"\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/13757"}