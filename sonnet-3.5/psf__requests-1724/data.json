{"instance_id": "psf__requests-1724", "score": "I", "diff": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex cc72f65d..8c8252cf 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -311,7 +311,7 @@ class Session(SessionRedirectMixin):\n         \"\"\"\n         # Create the Request.\n         req = Request(\n-            method = method.upper(),\n+            method = method.encode('ascii').upper().decode('ascii') if isinstance(method, str) else method.upper(),\n             url = url,\n             headers = headers,\n             files = files,\n", "gold_standard_diff": "From 495f87363b3a8b5856850aea5db15df15d597f77 Mon Sep 17 00:00:00 2001\nFrom: daftshady <daftonshady@gmail.com>\nDate: Mon, 4 Nov 2013 18:32:45 +0900\nSubject: [PATCH 1/2] fixed #1723\n\n---\n requests/api.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/requests/api.py b/requests/api.py\nindex baf43dd613..33b7b2a306 100644\n--- a/requests/api.py\n+++ b/requests/api.py\n@@ -12,7 +12,7 @@\n \"\"\"\n \n from . import sessions\n-\n+from .compat import builtin_str\n \n def request(method, url, **kwargs):\n     \"\"\"Constructs and sends a :class:`Request <Request>`.\n@@ -41,7 +41,7 @@ def request(method, url, **kwargs):\n     \"\"\"\n \n     session = sessions.Session()\n-    return session.request(method=method, url=url, **kwargs)\n+    return session.request(method=builtin_str(method), url=url, **kwargs)\n \n \n def get(url, **kwargs):\n\nFrom 1511dfa637643bae5b6111a20ecb80ec9ae26032 Mon Sep 17 00:00:00 2001\nFrom: daftshady <daftonshady@gmail.com>\nDate: Mon, 4 Nov 2013 22:32:17 +0900\nSubject: [PATCH 2/2] moved logic to Session object and added test case\n\n---\n requests/api.py      | 4 ++--\n requests/sessions.py | 5 ++++-\n test_requests.py     | 5 +++++\n 3 files changed, 11 insertions(+), 3 deletions(-)\n\ndiff --git a/requests/api.py b/requests/api.py\nindex 33b7b2a306..baf43dd613 100644\n--- a/requests/api.py\n+++ b/requests/api.py\n@@ -12,7 +12,7 @@\n \"\"\"\n \n from . import sessions\n-from .compat import builtin_str\n+\n \n def request(method, url, **kwargs):\n     \"\"\"Constructs and sends a :class:`Request <Request>`.\n@@ -41,7 +41,7 @@ def request(method, url, **kwargs):\n     \"\"\"\n \n     session = sessions.Session()\n-    return session.request(method=builtin_str(method), url=url, **kwargs)\n+    return session.request(method=method, url=url, **kwargs)\n \n \n def get(url, **kwargs):\ndiff --git a/requests/sessions.py b/requests/sessions.py\nindex cc72f65d9d..175712f976 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -12,7 +12,7 @@\n from collections import Mapping\n from datetime import datetime\n \n-from .compat import cookielib, OrderedDict, urljoin, urlparse, urlunparse\n+from .compat import cookielib, OrderedDict, urljoin, urlparse, urlunparse, builtin_str\n from .cookies import cookiejar_from_dict, extract_cookies_to_jar, RequestsCookieJar\n from .models import Request, PreparedRequest\n from .hooks import default_hooks, dispatch_hook\n@@ -309,6 +309,9 @@ def request(self, method, url,\n         :param cert: (optional) if String, path to ssl client cert file (.pem).\n             If Tuple, ('cert', 'key') pair.\n         \"\"\"\n+\n+        method = builtin_str(method)\n+\n         # Create the Request.\n         req = Request(\n             method = method.upper(),\ndiff --git a/test_requests.py b/test_requests.py\nindex a593db30a2..754581e1a9 100755\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -433,6 +433,11 @@ def test_unicode_multipart_post_fieldnames(self):\n         prep = r.prepare()\n         assert b'name=\"stuff\"' in prep.body\n         assert b'name=\"b\\'stuff\\'\"' not in prep.body\n+    \n+    def test_unicode_method_name(self):\n+        files = {'file': open('test_requests.py', 'rb')}\n+        r = requests.request(method=u'POST', url=httpbin('post'), files=files)\n+        assert r.status_code == 200\n \n     def test_custom_content_type(self):\n         r = requests.post(httpbin('post'),\n", "gold_standard_pr_link": "https://github.com/psf/requests/pull/1724"}