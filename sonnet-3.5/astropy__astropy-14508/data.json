{"instance_id": "astropy__astropy-14508", "score": "I", "diff": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 118bfced89..27aefd8238 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,6 +1299,13 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n+    value_str = str(value)\n+    if len(value_str) <= 20:\n+        if \".\" not in value_str and \"e\" not in value_str.lower():\n+            value_str += \".0\"\n+        return value_str\n+\n+    # If str(value) is too long, fall back to the original formatting\n     value_str = f\"{value:.16G}\"\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 65df5b1b77..d02c4f9eda 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,5 @@\n [build-system]\n-requires = [\"setuptools\",\n+requires = [\"setuptools==68.0.0\",\n             \"setuptools_scm>=6.2\",\n             \"wheel\",\n             \"cython==0.29.30\",\ndiff --git a/test_card_float_format.py b/test_card_float_format.py\nnew file mode 100644\nindex 0000000000..b1b2e8b144\n--- /dev/null\n+++ b/test_card_float_format.py\n@@ -0,0 +1,26 @@\n+from astropy.io import fits\n+\n+# Test case from the issue\n+value = 0.009125\n+comment = '[m] radius arround actuator to avoid'\n+keyword = 'ESO IFM CL RADIUS'\n+\n+# Create a new Card object\n+new_c = fits.Card(f'HIERARCH {keyword}', value, comment)\n+\n+# Print the card as a string\n+print(str(new_c))\n+\n+# Create a card with a longer float value\n+long_value = 123456789.987654321\n+long_c = fits.Card('LONG_FLOAT', long_value, 'A longer float value')\n+\n+# Print the long float card as a string\n+print(str(long_c))\n+\n+# Test with a very small float\n+small_value = 1.23e-10\n+small_c = fits.Card('SMALL_FLOAT', small_value, 'A very small float value')\n+\n+# Print the small float card as a string\n+print(str(small_c))\n", "gold_standard_diff": "From 3d8a2c6285e366d2b2f961343ef6e439a9d57b4d Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 11:00:06 +0000\nSubject: [PATCH 01/11] Fixed incorrect string representation of floats in\n Cards\n\n---\n astropy/io/fits/card.py              |  2 +-\n astropy/io/fits/tests/test_header.py | 21 +++++++++++++++++++++\n 2 files changed, 22 insertions(+), 1 deletion(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 118bfced89e8..de851737531f 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,7 +1299,7 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = f\"{value:.16G}\"\n+    value_str = str(value_str)\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\n     elif \"E\" in value_str:\ndiff --git a/astropy/io/fits/tests/test_header.py b/astropy/io/fits/tests/test_header.py\nindex a8f4e1160fcd..95ed9a64fde8 100644\n--- a/astropy/io/fits/tests/test_header.py\n+++ b/astropy/io/fits/tests/test_header.py\n@@ -137,6 +137,27 @@ def test_floating_point_value_card(self):\n         ):\n             assert str(c) == _pad(\"FLOATNUM= -4.6737463674763E+32\")\n \n+    def test_floating_point_string_representation_card(self):\n+        \"\"\"\n+        Ensures Card formats float values with the correct precision, avoiding\n+        comment truncation\n+\n+        Regression test for https://github.com/astropy/astropy/issues/14507\n+        \"\"\"\n+        k = \"HIERARCH ABC DEF GH IJKLMN\"\n+        com = \"[m] abcdef ghijklm nopqrstu vw xyzab\"\n+        c = fits.Card(k, 0.009125, com)\n+        expected_str = f\"{k} = 0.009125 / {com}    \"\n+        assert str(c) == expected_str\n+\n+        c = fits.Card(k, 8.95, com)\n+        expected_str = f\"{k} = 8.95 / {com}    \"\n+        assert str(c) == expected_str\n+\n+        c = fits.Card(k, -99.9, com)\n+        expected_str = f\"{k} = -99.9 / {com}    \"\n+        assert str(c) == expected_str\n+\n     def test_complex_value_card(self):\n         \"\"\"Test Card constructor with complex value\"\"\"\n \n\nFrom 7566bc2d0c7876cd0dab79a85ff12003c44747bb Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 11:10:00 +0000\nSubject: [PATCH 02/11] Fixed incorrect variable name\n\n---\n astropy/io/fits/card.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex de851737531f..4fc408711f8a 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1299,7 +1299,7 @@ def _format_value(value):\n \n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = str(value_str)\n+    value_str = str(value)\n     if \".\" not in value_str and \"E\" not in value_str:\n         value_str += \".0\"\n     elif \"E\" in value_str:\n\nFrom a65f074bc1b01973d6115e57687c9821976cb19c Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 11:15:24 +0000\nSubject: [PATCH 03/11] Added changelog entry\n\n---\n docs/changes/io.fits/14508.bugfix.rst | 2 ++\n 1 file changed, 2 insertions(+)\n create mode 100644 docs/changes/io.fits/14508.bugfix.rst\n\ndiff --git a/docs/changes/io.fits/14508.bugfix.rst b/docs/changes/io.fits/14508.bugfix.rst\nnew file mode 100644\nindex 000000000000..4fbca7b77c52\n--- /dev/null\n+++ b/docs/changes/io.fits/14508.bugfix.rst\n@@ -0,0 +1,2 @@\n+`fits.io.Card` float representation now uses the default Python representation\n+for floating point values.\n\nFrom 89d46911c1c313d401956a5c2a1f737719eaf244 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 11:42:02 +0000\nSubject: [PATCH 04/11] Fixed wrong check for exponent symbol\n\n---\n astropy/io/fits/card.py | 9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 4fc408711f8a..78ecc7550235 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1300,19 +1300,20 @@ def _format_value(value):\n def _format_float(value):\n     \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n     value_str = str(value)\n-    if \".\" not in value_str and \"E\" not in value_str:\n-        value_str += \".0\"\n-    elif \"E\" in value_str:\n+\n+    if \"e\" in value_str:\n         # On some Windows builds of Python (and possibly other platforms?) the\n         # exponent is zero-padded out to, it seems, three digits.  Normalize\n         # the format to pad only to two digits.\n-        significand, exponent = value_str.split(\"E\")\n+        significand, exponent = value_str.split(\"e\")\n         if exponent[0] in (\"+\", \"-\"):\n             sign = exponent[0]\n             exponent = exponent[1:]\n         else:\n             sign = \"\"\n         value_str = f\"{significand}E{sign}{int(exponent):02d}\"\n+    elif \".\" not in value_str:\n+        value_str += \".0\"\n \n     # Limit the value string to at most 20 characters.\n     str_len = len(value_str)\n\nFrom 03730f37dff98ec3849f4e0efb3491ad1dfea782 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 13:12:22 +0000\nSubject: [PATCH 05/11] Fix test_floating_point_string_representation_card\n assertion\n\n---\n astropy/io/fits/tests/test_header.py | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a/astropy/io/fits/tests/test_header.py b/astropy/io/fits/tests/test_header.py\nindex 95ed9a64fde8..c573100c91d2 100644\n--- a/astropy/io/fits/tests/test_header.py\n+++ b/astropy/io/fits/tests/test_header.py\n@@ -147,16 +147,16 @@ def test_floating_point_string_representation_card(self):\n         k = \"HIERARCH ABC DEF GH IJKLMN\"\n         com = \"[m] abcdef ghijklm nopqrstu vw xyzab\"\n         c = fits.Card(k, 0.009125, com)\n-        expected_str = f\"{k} = 0.009125 / {com}    \"\n-        assert str(c) == expected_str\n+        expected_str = f\"{k} = 0.009125 / {com}\"\n+        assert str(c)[: len(expected_str)] == expected_str\n \n         c = fits.Card(k, 8.95, com)\n-        expected_str = f\"{k} = 8.95 / {com}    \"\n-        assert str(c) == expected_str\n+        expected_str = f\"{k} = 8.95 / {com}\"\n+        assert str(c)[: len(expected_str)] == expected_str\n \n         c = fits.Card(k, -99.9, com)\n-        expected_str = f\"{k} = -99.9 / {com}    \"\n-        assert str(c) == expected_str\n+        expected_str = f\"{k} = -99.9 / {com}\"\n+        assert str(c)[: len(expected_str)] == expected_str\n \n     def test_complex_value_card(self):\n         \"\"\"Test Card constructor with complex value\"\"\"\n\nFrom 50c51e336a2ed23dc3765fb606a4f9395d4cda18 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 13:29:18 +0000\nSubject: [PATCH 06/11] Fixed incorrect changelog\n\n---\n docs/changes/io.fits/14508.bugfix.rst | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/docs/changes/io.fits/14508.bugfix.rst b/docs/changes/io.fits/14508.bugfix.rst\nindex 4fbca7b77c52..44946ade61c3 100644\n--- a/docs/changes/io.fits/14508.bugfix.rst\n+++ b/docs/changes/io.fits/14508.bugfix.rst\n@@ -1,2 +1,2 @@\n-`fits.io.Card` float representation now uses the default Python representation\n-for floating point values.\n+`io.fits.Card` now uses the default Python representation for floating point\n+values.\n\nFrom 60835aa8b73f64a7a4402a000605d2d0fa1105b9 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 14:03:45 +0000\nSubject: [PATCH 07/11] Fixed incorrect changelog reference\n\n---\n docs/changes/io.fits/14508.bugfix.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/docs/changes/io.fits/14508.bugfix.rst b/docs/changes/io.fits/14508.bugfix.rst\nindex 44946ade61c3..d75dbc26a3c5 100644\n--- a/docs/changes/io.fits/14508.bugfix.rst\n+++ b/docs/changes/io.fits/14508.bugfix.rst\n@@ -1,2 +1,2 @@\n-`io.fits.Card` now uses the default Python representation for floating point\n+`Card` now uses the default Python representation for floating point\n values.\n\nFrom b3cc12c818ebbf4a2dc1b1f25d29e22f7ddcfaaa Mon Sep 17 00:00:00 2001\nFrom: Tiago Gomes <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 15:01:50 +0000\nSubject: [PATCH 08/11] Fix Card reference in changelog\n\nCo-authored-by: P. L. Lim <2090236+pllim@users.noreply.github.com>\n---\n docs/changes/io.fits/14508.bugfix.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/docs/changes/io.fits/14508.bugfix.rst b/docs/changes/io.fits/14508.bugfix.rst\nindex d75dbc26a3c5..b562e2c8b69d 100644\n--- a/docs/changes/io.fits/14508.bugfix.rst\n+++ b/docs/changes/io.fits/14508.bugfix.rst\n@@ -1,2 +1,2 @@\n-`Card` now uses the default Python representation for floating point\n+``Card`` now uses the default Python representation for floating point\n values.\n\nFrom 631b607f64aafed11003b5af722dbc4dd1df8051 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 16:53:16 +0000\nSubject: [PATCH 09/11] Simplify handling of scientific notation in cards\n\n---\n astropy/io/fits/card.py | 32 +++++++++-----------------------\n 1 file changed, 9 insertions(+), 23 deletions(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 78ecc7550235..1a9ce342f9e1 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1298,33 +1298,19 @@ def _format_value(value):\n \n \n def _format_float(value):\n-    \"\"\"Format a floating number to make sure it gets the decimal point.\"\"\"\n-    value_str = str(value)\n-\n-    if \"e\" in value_str:\n-        # On some Windows builds of Python (and possibly other platforms?) the\n-        # exponent is zero-padded out to, it seems, three digits.  Normalize\n-        # the format to pad only to two digits.\n-        significand, exponent = value_str.split(\"e\")\n-        if exponent[0] in (\"+\", \"-\"):\n-            sign = exponent[0]\n-            exponent = exponent[1:]\n-        else:\n-            sign = \"\"\n-        value_str = f\"{significand}E{sign}{int(exponent):02d}\"\n-    elif \".\" not in value_str:\n-        value_str += \".0\"\n+    \"\"\"Format a floating number to make sure it is at most 20 characters.\"\"\"\n+    value_str = str(value).replace(\"e\", \"E\")\n \n     # Limit the value string to at most 20 characters.\n-    str_len = len(value_str)\n-\n-    if str_len > 20:\n+    if str_len := len(value_str) > 20:\n         idx = value_str.find(\"E\")\n-\n-        if idx < 0:\n-            value_str = value_str[:20]\n-        else:\n+        if idx > 0:\n+            # truncate significand (mantissa)\n             value_str = value_str[: 20 - (str_len - idx)] + value_str[idx:]\n+        else:\n+            # Python should never return a float representation larger than 20\n+            # characters unless it is using scientific notation\n+            raise RuntimeError(\"_format_float did not receive a float.\")\n \n     return value_str\n \n\nFrom 13db4049c28d14104e8c8044009b50373f3d8fd4 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 17:01:20 +0000\nSubject: [PATCH 10/11] Fix incorrect assignment\n\n---\n astropy/io/fits/card.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1a9ce342f9e1..12682534df4f 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1302,7 +1302,7 @@ def _format_float(value):\n     value_str = str(value).replace(\"e\", \"E\")\n \n     # Limit the value string to at most 20 characters.\n-    if str_len := len(value_str) > 20:\n+    if (str_len := len(value_str)) > 20:\n         idx = value_str.find(\"E\")\n         if idx > 0:\n             # truncate significand (mantissa)\n\nFrom 7054d58c980f240c81b53e4f4e95c675e19bb521 Mon Sep 17 00:00:00 2001\nFrom: kYwzor <tiago_gomes_76@hotmail.com>\nDate: Thu, 9 Mar 2023 17:50:57 +0000\nSubject: [PATCH 11/11] Revert truncation\n\n---\n astropy/io/fits/card.py | 11 +++++------\n 1 file changed, 5 insertions(+), 6 deletions(-)\n\ndiff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 12682534df4f..1b3285ddce92 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -1304,13 +1304,12 @@ def _format_float(value):\n     # Limit the value string to at most 20 characters.\n     if (str_len := len(value_str)) > 20:\n         idx = value_str.find(\"E\")\n-        if idx > 0:\n-            # truncate significand (mantissa)\n-            value_str = value_str[: 20 - (str_len - idx)] + value_str[idx:]\n+        if idx < 0:\n+            # No scientific notation, truncate decimal places\n+            value_str = value_str[:20]\n         else:\n-            # Python should never return a float representation larger than 20\n-            # characters unless it is using scientific notation\n-            raise RuntimeError(\"_format_float did not receive a float.\")\n+            # Scientific notation, truncate significand (mantissa)\n+            value_str = value_str[: 20 - (str_len - idx)] + value_str[idx:]\n \n     return value_str\n \n", "gold_standard_pr_link": "https://github.com/astropy/astropy/pull/14508"}