From dbcd7b064e7278614f29fc45468d461e263d4da7 Mon Sep 17 00:00:00 2001
From: Carlton Gibson <carlton.gibson@noumenal.es>
Date: Wed, 23 Oct 2019 16:14:06 +0200
Subject: [PATCH] Fixed #30902 -- Added __str__() for model choice enums.

Allows expected behavior when cast to str, also matching behaviour of
created instances with those fetched from the DB.

Thanks to Simon Charette, Nick Pope, and Shai Berger for reviews.
---
 django/db/models/enums.py  | 8 +++++++-
 tests/model_enums/tests.py | 6 ++++++
 2 files changed, 13 insertions(+), 1 deletion(-)

diff --git a/django/db/models/enums.py b/django/db/models/enums.py
index bbe362a6abf5..ae20ef6d937b 100644
--- a/django/db/models/enums.py
+++ b/django/db/models/enums.py
@@ -60,7 +60,13 @@ def values(cls):
 
 class Choices(enum.Enum, metaclass=ChoicesMeta):
     """Class for creating enumerated choices."""
-    pass
+
+    def __str__(self):
+        """
+        Use value when cast to str, so that Choices set as model instance
+        attributes are rendered as expected in templates and similar contexts.
+        """
+        return str(self.value)
 
 
 class IntegerChoices(int, Choices):
diff --git a/tests/model_enums/tests.py b/tests/model_enums/tests.py
index 6b4bd6e7fdd7..e1810e673ab0 100644
--- a/tests/model_enums/tests.py
+++ b/tests/model_enums/tests.py
@@ -143,6 +143,12 @@ class Fruit(models.IntegerChoices):
                 APPLE = 1, 'Apple'
                 PINEAPPLE = 1, 'Pineapple'
 
+    def test_str(self):
+        for test in [Gender, Suit, YearInSchool, Vehicle]:
+            for member in test:
+                with self.subTest(member=member):
+                    self.assertEqual(str(test[member.name]), str(member.value))
+
 
 class Separator(bytes, models.Choices):
     FS = b'\x1c', 'File Separator'
