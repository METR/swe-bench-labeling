{"instance_id": "django__django-16485", "score": "I", "diff": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 23c3a08c67..2577e450e4 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -178,12 +178,14 @@ def floatformat(text, arg=-1):\n             )\n         )\n \n-    exp = Decimal(1).scaleb(-abs(p))\n+    # Ensure p is at least 1 to avoid ValueError\n+    p = max(1, abs(p))\n+    exp = Decimal(1).scaleb(-p)\n     # Set the precision high enough to avoid an exception (#15789).\n     tupl = d.as_tuple()\n     units = len(tupl[1])\n     units += -tupl[2] if m else tupl[2]\n-    prec = abs(p) + units + 1\n+    prec = p + units + 1\n \n     # Avoid conversion to scientific notation by accessing `sign`, `digits`,\n     # and `exponent` from Decimal.as_tuple() directly.\n", "gold_standard_diff": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 23c3a08c6702..78881987fc05 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -168,7 +168,7 @@ def floatformat(text, arg=-1):\n     except (ValueError, OverflowError, InvalidOperation):\n         return input_val\n \n-    if not m and p < 0:\n+    if not m and p <= 0:\n         return mark_safe(\n             formats.number_format(\n                 \"%d\" % (int(d)),\ndiff --git a/tests/template_tests/filter_tests/test_floatformat.py b/tests/template_tests/filter_tests/test_floatformat.py\nindex 361a888ce3de..8f75c2b4ee8d 100644\n--- a/tests/template_tests/filter_tests/test_floatformat.py\n+++ b/tests/template_tests/filter_tests/test_floatformat.py\n@@ -111,6 +111,8 @@ def test_zero_values(self):\n         self.assertEqual(\n             floatformat(0.000000000000000000015, 20), \"0.00000000000000000002\"\n         )\n+        self.assertEqual(floatformat(\"0.00\", 0), \"0\")\n+        self.assertEqual(floatformat(Decimal(\"0.00\"), 0), \"0\")\n \n     def test_negative_zero_values(self):\n         tests = [\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16485"}