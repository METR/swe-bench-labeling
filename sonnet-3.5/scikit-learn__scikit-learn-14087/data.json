{"instance_id": "scikit-learn__scikit-learn-14087", "score": "I", "diff": "diff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\nindex 1999f1dae..0174aa512 100644\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -2170,12 +2170,14 @@ class LogisticRegressionCV(LogisticRegression, BaseEstimator,\n                 # Take the best scores across every fold and the average of\n                 # all coefficients corresponding to the best scores.\n                 best_indices = np.argmax(scores, axis=1)\n-                if self.multi_class == 'ovr':\n+                if coefs_paths.ndim == 3:  # 'ovr' case\n                     w = np.mean([coefs_paths[i, best_indices[i], :]\n                                  for i in range(len(folds))], axis=0)\n-                else:\n+                elif coefs_paths.ndim == 4:  # 'multinomial' case\n                     w = np.mean([coefs_paths[:, i, best_indices[i], :]\n                                  for i in range(len(folds))], axis=0)\n+                else:\n+                    raise ValueError(\"Unexpected shape of coefs_paths\")\n \n                 best_indices_C = best_indices % len(self.Cs_)\n                 self.C_.append(np.mean(self.Cs_[best_indices_C]))\n", "gold_standard_diff": "From debd0970ddefa2d45a38f7892c517267fcce39b9 Mon Sep 17 00:00:00 2001\nFrom: Nicolas Hug <contact@nicolas-hug.com>\nDate: Thu, 13 Jun 2019 16:00:15 -0400\nSubject: [PATCH 1/3] fix refit=False error in logisticresgrerssioncv\n\n---\n sklearn/linear_model/logistic.py            |  9 ++++++---\n sklearn/linear_model/tests/test_logistic.py | 12 ++++++++----\n 2 files changed, 14 insertions(+), 7 deletions(-)\n\ndiff --git a/sklearn/linear_model/logistic.py b/sklearn/linear_model/logistic.py\nindex 1999f1dae7ba3..a8b83759ba75c 100644\n--- a/sklearn/linear_model/logistic.py\n+++ b/sklearn/linear_model/logistic.py\n@@ -2170,7 +2170,7 @@ def fit(self, X, y, sample_weight=None):\n                 # Take the best scores across every fold and the average of\n                 # all coefficients corresponding to the best scores.\n                 best_indices = np.argmax(scores, axis=1)\n-                if self.multi_class == 'ovr':\n+                if multi_class == 'ovr':\n                     w = np.mean([coefs_paths[i, best_indices[i], :]\n                                  for i in range(len(folds))], axis=0)\n                 else:\n@@ -2180,8 +2180,11 @@ def fit(self, X, y, sample_weight=None):\n                 best_indices_C = best_indices % len(self.Cs_)\n                 self.C_.append(np.mean(self.Cs_[best_indices_C]))\n \n-                best_indices_l1 = best_indices // len(self.Cs_)\n-                self.l1_ratio_.append(np.mean(l1_ratios_[best_indices_l1]))\n+                if self.penalty == 'elasticnet':\n+                    best_indices_l1 = best_indices // len(self.Cs_)\n+                    self.l1_ratio_.append(np.mean(l1_ratios_[best_indices_l1]))\n+                else:\n+                    self.l1_ratio_.append(None)\n \n             if multi_class == 'multinomial':\n                 self.C_ = np.tile(self.C_, n_classes)\ndiff --git a/sklearn/linear_model/tests/test_logistic.py b/sklearn/linear_model/tests/test_logistic.py\nindex 6ad9a4ec99d77..c6829e51369e4 100644\n--- a/sklearn/linear_model/tests/test_logistic.py\n+++ b/sklearn/linear_model/tests/test_logistic.py\n@@ -1532,8 +1532,9 @@ def test_LogisticRegressionCV_GridSearchCV_elastic_net_ovr():\n     assert (lrcv.predict(X_test) == gs.predict(X_test)).mean() >= .8\n \n \n-@pytest.mark.parametrize('multi_class', ('ovr', 'multinomial'))\n-def test_LogisticRegressionCV_no_refit(multi_class):\n+@pytest.mark.parametrize('penalty', ('l2', 'elasticnet'))\n+@pytest.mark.parametrize('multi_class', ('ovr', 'multinomial', 'auto'))\n+def test_LogisticRegressionCV_no_refit(penalty, multi_class):\n     # Test LogisticRegressionCV attribute shapes when refit is False\n \n     n_classes = 3\n@@ -1543,9 +1544,12 @@ def test_LogisticRegressionCV_no_refit(multi_class):\n                                random_state=0)\n \n     Cs = np.logspace(-4, 4, 3)\n-    l1_ratios = np.linspace(0, 1, 2)\n+    if penalty == 'elasticnet':\n+        l1_ratios = np.linspace(0, 1, 2)\n+    else:\n+        l1_ratios = None\n \n-    lrcv = LogisticRegressionCV(penalty='elasticnet', Cs=Cs, solver='saga',\n+    lrcv = LogisticRegressionCV(penalty=penalty, Cs=Cs, solver='saga',\n                                 l1_ratios=l1_ratios, random_state=0,\n                                 multi_class=multi_class, refit=False)\n     lrcv.fit(X, y)\n\nFrom 2529bf07ed1b18cbc5d4e08d703af9c80c8c4f08 Mon Sep 17 00:00:00 2001\nFrom: Nicolas Hug <contact@nicolas-hug.com>\nDate: Thu, 13 Jun 2019 16:12:25 -0400\nSubject: [PATCH 2/3] Added whatsnew\n\n---\n doc/whats_new/v0.21.rst | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex e588121b9928c..418596a5125a5 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -12,6 +12,11 @@ Version 0.21.3\n Changelog\n ---------\n \n+:mod:`sklearn.linear_model`\n+...........................\n+- |Fix| Fixed a bug in :class:`linear_model.LogisticRegressionCV` where\n+  ``refit=False`` would fail depending on the ``'multiclass'`` and\n+  ``'penalty'`` parameters. :pr:`14087` by `Nicolas Hug`_.\n \n .. _changes_0_21_2:\n \n\nFrom 64c1caa0abd3ffb1ce8543b204abe90651e9746d Mon Sep 17 00:00:00 2001\nFrom: Nicolas Hug <contact@nicolas-hug.com>\nDate: Thu, 13 Jun 2019 16:14:34 -0400\nSubject: [PATCH 3/3] whats new again\n\n---\n doc/whats_new/v0.21.rst | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 418596a5125a5..b945496953f36 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -16,7 +16,8 @@ Changelog\n ...........................\n - |Fix| Fixed a bug in :class:`linear_model.LogisticRegressionCV` where\n   ``refit=False`` would fail depending on the ``'multiclass'`` and\n-  ``'penalty'`` parameters. :pr:`14087` by `Nicolas Hug`_.\n+  ``'penalty'`` parameters (regression introduced in 0.21). :pr:`14087` by\n+  `Nicolas Hug`_.\n \n .. _changes_0_21_2:\n \n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/14087"}