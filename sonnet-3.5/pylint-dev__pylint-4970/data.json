{"instance_id": "pylint-dev__pylint-4970", "score": "I", "diff": "diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex c65b1c893..7fdc02b3a 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -801,7 +801,10 @@ class SimilarChecker(BaseChecker, Similar, MapReduceMixin):\n         \"\"\"\n         BaseChecker.set_option(self, optname, value, action, optdict)\n         if optname == \"min-similarity-lines\":\n-            self.min_lines = self.config.min_similarity_lines\n+            if self.config.min_similarity_lines == 0:\n+                self.min_lines = sys.maxsize  # Effectively disable the check\n+            else:\n+                self.min_lines = self.config.min_similarity_lines\n         elif optname == \"ignore-comments\":\n             self.ignore_comments = self.config.ignore_comments\n         elif optname == \"ignore-docstrings\":\n", "gold_standard_diff": "diff --git a/ChangeLog b/ChangeLog\nindex 97af302af4..224728f390 100644\n--- a/ChangeLog\n+++ b/ChangeLog\n@@ -65,6 +65,10 @@ Release date: TBA\n \n * Extended ``consider-using-in`` check to work for attribute access.\n \n+* Setting ``min-similarity-lines`` to 0 now makes the similarty checker stop checking for duplicate code\n+\n+  Closes #4901\n+\n \n What's New in Pylint 2.10.3?\n ============================\ndiff --git a/doc/whatsnew/2.11.rst b/doc/whatsnew/2.11.rst\nindex 72dc75e716..6a9ed66862 100644\n--- a/doc/whatsnew/2.11.rst\n+++ b/doc/whatsnew/2.11.rst\n@@ -71,3 +71,7 @@ Other Changes\n   Closes #4907\n \n * Extended ``consider-using-in`` check to work for attribute access.\n+\n+* Setting ``min-similarity-lines`` to 0 now makes the similarty checker stop checking for duplicate code\n+\n+  Closes #4901\ndiff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py\nindex c65b1c8933..88d7eac525 100644\n--- a/pylint/checkers/similar.py\n+++ b/pylint/checkers/similar.py\n@@ -390,6 +390,8 @@ def append_stream(self, streamid: str, stream: TextIO, encoding=None) -> None:\n \n     def run(self) -> None:\n         \"\"\"start looking for similarities and display results on stdout\"\"\"\n+        if self.min_lines == 0:\n+            return\n         self._display_sims(self._compute_sims())\n \n     def _compute_sims(self) -> List[Tuple[int, Set[LinesChunkLimits_T]]]:\ndiff --git a/tests/checkers/unittest_similar.py b/tests/checkers/unittest_similar.py\nindex 4ddf2029a2..c98ea15df5 100644\n--- a/tests/checkers/unittest_similar.py\n+++ b/tests/checkers/unittest_similar.py\n@@ -502,3 +502,11 @@ def test_get_map_data() -> None:\n         # There doesn't seem to be a faster way of doing this, yet.\n         lines = (linespec.text for linespec in lineset_obj.stripped_lines)\n         assert tuple(expected_lines) == tuple(lines)\n+\n+\n+def test_set_duplicate_lines_to_zero() -> None:\n+    output = StringIO()\n+    with redirect_stdout(output), pytest.raises(SystemExit) as ex:\n+        similar.Run([\"--duplicates=0\", SIMILAR1, SIMILAR2])\n+    assert ex.value.code == 0\n+    assert output.getvalue() == \"\"\n", "gold_standard_pr_link": "https://github.com/pylint-dev/pylint/pull/4970"}