{"instance_id": "django__django-13363", "score": "C", "diff": "diff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex b6594b043b..6828980733 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -292,7 +292,7 @@ class TruncDate(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to date rather than truncate to date.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.get_tzname()\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return sql, lhs_params\n \n@@ -305,7 +305,7 @@ class TruncTime(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to time rather than truncate to time.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.get_tzname()\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return sql, lhs_params\n \n", "gold_standard_diff": "From 9d5d865fd6e989abe60fdf02e7f97fd4d98178a4 Mon Sep 17 00:00:00 2001\nFrom: Joe Jackson <cpmhjoe@gmail.com>\nDate: Sat, 29 Aug 2020 14:40:54 -0400\nSubject: [PATCH] Fixed #31948 -- Added tzinfo parameter to TruncDate() and\n TruncTime().\n\n---\n AUTHORS                                           |  1 +\n django/db/models/functions/datetime.py            |  4 ++--\n docs/ref/models/database-functions.txt            | 12 ++++++++++--\n docs/releases/3.2.txt                             |  5 +++++\n tests/db_functions/datetime/test_extract_trunc.py | 10 ++++++++++\n 5 files changed, 28 insertions(+), 4 deletions(-)\n\ndiff --git a/AUTHORS b/AUTHORS\nindex 16272bdf28b6..5c50598ddc95 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -449,6 +449,7 @@ answer newbie questions, and generally made Django that much better:\n     Joao Oliveira <joaoxsouls@gmail.com>\n     Joao Pedro Silva <j.pedro004@gmail.com>\n     Joe Heck <http://www.rhonabwy.com/wp/>\n+    Joe Jackson <joe@joejackson.me>\n     Joel Bohman <mail@jbohman.com>\n     Joel Heenan <joelh-django@planetjoel.com>\n     Joel Watts <joel@joelwatts.com>\ndiff --git a/django/db/models/functions/datetime.py b/django/db/models/functions/datetime.py\nindex b6594b043be6..682898073330 100644\n--- a/django/db/models/functions/datetime.py\n+++ b/django/db/models/functions/datetime.py\n@@ -292,7 +292,7 @@ class TruncDate(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to date rather than truncate to date.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.get_tzname()\n         sql = connection.ops.datetime_cast_date_sql(lhs, tzname)\n         return sql, lhs_params\n \n@@ -305,7 +305,7 @@ class TruncTime(TruncBase):\n     def as_sql(self, compiler, connection):\n         # Cast to time rather than truncate to time.\n         lhs, lhs_params = compiler.compile(self.lhs)\n-        tzname = timezone.get_current_timezone_name() if settings.USE_TZ else None\n+        tzname = self.get_tzname()\n         sql = connection.ops.datetime_cast_time_sql(lhs, tzname)\n         return sql, lhs_params\n \ndiff --git a/docs/ref/models/database-functions.txt b/docs/ref/models/database-functions.txt\nindex f5efdb7e8752..3121a36fa921 100644\n--- a/docs/ref/models/database-functions.txt\n+++ b/docs/ref/models/database-functions.txt\n@@ -623,20 +623,28 @@ that deal with date-parts can be used with ``DateField``::\n ``DateTimeField`` truncation\n ~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n-.. class:: TruncDate(expression, **extra)\n+.. class:: TruncDate(expression, tzinfo=None, **extra)\n \n     .. attribute:: lookup_name = 'date'\n     .. attribute:: output_field = DateField()\n \n+    .. versionchanged:: 3.2\n+\n+        The ``tzinfo`` parameter was added.\n+\n ``TruncDate`` casts ``expression`` to a date rather than using the built-in SQL\n truncate function. It's also registered as a transform on  ``DateTimeField`` as\n ``__date``.\n \n-.. class:: TruncTime(expression, **extra)\n+.. class:: TruncTime(expression, tzinfo=None, **extra)\n \n     .. attribute:: lookup_name = 'time'\n     .. attribute:: output_field = TimeField()\n \n+    .. versionchanged:: 3.2\n+\n+        The ``tzinfo`` parameter was added.\n+\n ``TruncTime`` casts ``expression`` to a time rather than using the built-in SQL\n truncate function. It's also registered as a transform on ``DateTimeField`` as\n ``__time``.\ndiff --git a/docs/releases/3.2.txt b/docs/releases/3.2.txt\nindex d29a582d7493..9017c3313807 100644\n--- a/docs/releases/3.2.txt\n+++ b/docs/releases/3.2.txt\n@@ -290,6 +290,11 @@ Models\n   distinct fields if there's only one field specified in\n   :meth:`.QuerySet.distinct`.\n \n+* The new ``tzinfo`` parameter of the\n+  :class:`~django.db.models.functions.TruncDate` and\n+  :class:`~django.db.models.functions.TruncTime` database functions allows\n+  truncating datetimes in a specific timezone.\n+\n Pagination\n ~~~~~~~~~~\n \ndiff --git a/tests/db_functions/datetime/test_extract_trunc.py b/tests/db_functions/datetime/test_extract_trunc.py\nindex f8ebb81cb597..f898ba5253ba 100644\n--- a/tests/db_functions/datetime/test_extract_trunc.py\n+++ b/tests/db_functions/datetime/test_extract_trunc.py\n@@ -1124,14 +1124,24 @@ def test_trunc_timezone_applied_before_truncation(self):\n         model = DTModel.objects.annotate(\n             melb_year=TruncYear('start_datetime', tzinfo=melb),\n             pacific_year=TruncYear('start_datetime', tzinfo=pacific),\n+            melb_date=TruncDate('start_datetime', tzinfo=melb),\n+            pacific_date=TruncDate('start_datetime', tzinfo=pacific),\n+            melb_time=TruncTime('start_datetime', tzinfo=melb),\n+            pacific_time=TruncTime('start_datetime', tzinfo=pacific),\n         ).order_by('start_datetime').get()\n \n+        melb_start_datetime = start_datetime.astimezone(melb)\n+        pacific_start_datetime = start_datetime.astimezone(pacific)\n         self.assertEqual(model.start_datetime, start_datetime)\n         self.assertEqual(model.melb_year, truncate_to(start_datetime, 'year', melb))\n         self.assertEqual(model.pacific_year, truncate_to(start_datetime, 'year', pacific))\n         self.assertEqual(model.start_datetime.year, 2016)\n         self.assertEqual(model.melb_year.year, 2016)\n         self.assertEqual(model.pacific_year.year, 2015)\n+        self.assertEqual(model.melb_date, melb_start_datetime.date())\n+        self.assertEqual(model.pacific_date, pacific_start_datetime.date())\n+        self.assertEqual(model.melb_time, melb_start_datetime.time())\n+        self.assertEqual(model.pacific_time, pacific_start_datetime.time())\n \n     def test_trunc_ambiguous_and_invalid_times(self):\n         sao = pytz.timezone('America/Sao_Paulo')\n", "gold_standard_pr_link": "https://github.com/django/django/pull/13363"}