{"instance_id": "scikit-learn__scikit-learn-12585", "score": "C", "diff": "diff --git a/sklearn/base.py b/sklearn/base.py\nindex 56ffb18bf..34998270c 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -48,7 +48,7 @@ def clone(estimator, safe=True):\n     # XXX: not handling dictionaries\n     if estimator_type in (list, tuple, set, frozenset):\n         return estimator_type([clone(e, safe=safe) for e in estimator])\n-    elif not hasattr(estimator, 'get_params'):\n+    elif not hasattr(estimator, 'get_params') or isinstance(estimator, type):\n         if not safe:\n             return copy.deepcopy(estimator)\n         else:\n", "gold_standard_diff": "From d058e70bc3d818b03cb15485baa864c9e1a7bcf8 Mon Sep 17 00:00:00 2001\nFrom: phausamann <peter.hausamann@tum.de>\nDate: Wed, 14 Nov 2018 14:05:20 +0100\nSubject: [PATCH 1/2] Fix clone failing for estimator types Fixes #12521\n\n---\n sklearn/base.py            | 2 +-\n sklearn/tests/test_base.py | 8 ++++++++\n 2 files changed, 9 insertions(+), 1 deletion(-)\n\ndiff --git a/sklearn/base.py b/sklearn/base.py\nindex 56ffb18bf8b69..34998270cea88 100644\n--- a/sklearn/base.py\n+++ b/sklearn/base.py\n@@ -48,7 +48,7 @@ def clone(estimator, safe=True):\n     # XXX: not handling dictionaries\n     if estimator_type in (list, tuple, set, frozenset):\n         return estimator_type([clone(e, safe=safe) for e in estimator])\n-    elif not hasattr(estimator, 'get_params'):\n+    elif not hasattr(estimator, 'get_params') or isinstance(estimator, type):\n         if not safe:\n             return copy.deepcopy(estimator)\n         else:\ndiff --git a/sklearn/tests/test_base.py b/sklearn/tests/test_base.py\nindex ebcb389255cd3..435f912acd764 100644\n--- a/sklearn/tests/test_base.py\n+++ b/sklearn/tests/test_base.py\n@@ -167,6 +167,14 @@ def test_clone_sparse_matrices():\n         assert_array_equal(clf.empty.toarray(), clf_cloned.empty.toarray())\n \n \n+def test_clone_estimator_types():\n+    # Check that clone works for parameters that are types rather than instances\n+    clf = MyEstimator(empty=MyEstimator)\n+    clf2 = clone(clf)\n+\n+    assert clf.empty is clf2.empty\n+\n+\n def test_repr():\n     # Smoke test the repr of the base estimator.\n     my_estimator = MyEstimator()\n\nFrom 24865b92cbd1a5c53315a079d5626c57c272735b Mon Sep 17 00:00:00 2001\nFrom: phausamann <peter.hausamann@tum.de>\nDate: Wed, 14 Nov 2018 15:12:11 +0100\nSubject: [PATCH 2/2] PEP8 compliance\n\n---\n sklearn/tests/test_base.py | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/sklearn/tests/test_base.py b/sklearn/tests/test_base.py\nindex 435f912acd764..5fc20ca85f5b7 100644\n--- a/sklearn/tests/test_base.py\n+++ b/sklearn/tests/test_base.py\n@@ -168,7 +168,8 @@ def test_clone_sparse_matrices():\n \n \n def test_clone_estimator_types():\n-    # Check that clone works for parameters that are types rather than instances\n+    # Check that clone works for parameters that are types rather than\n+    # instances\n     clf = MyEstimator(empty=MyEstimator)\n     clf2 = clone(clf)\n \n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/12585"}