diff --git a/astropy/units/quantity.py b/astropy/units/quantity.py
index ded609cbe9..e961940385 100644
--- a/astropy/units/quantity.py
+++ b/astropy/units/quantity.py
@@ -377,8 +377,8 @@ class Quantity(np.ndarray, metaclass=InheritDocstrings):
                             "Numpy numeric type.")
 
         # by default, cast any integer, boolean, etc., to float
-        if dtype is None and (not (np.can_cast(np.float32, value.dtype)
-                                   or value.dtype.fields)
+        if dtype is None and (value.dtype.kind not in 'fc'
+                              and not value.dtype.fields
                               or value.dtype.kind == 'O'):
             value = value.astype(float)
 
diff --git a/astropy/units/tests/test_quantity.py b/astropy/units/tests/test_quantity.py
index be18e65c5b..b54f3c6d6e 100644
--- a/astropy/units/tests/test_quantity.py
+++ b/astropy/units/tests/test_quantity.py
@@ -142,6 +142,14 @@ class TestQuantityCreation:
         a3 = np.array([1., 2.], dtype=np.float32)
         q3 = u.Quantity(a3, u.yr)
         assert q3.dtype == a3.dtype
+        # and we should also preserve float16
+        a3_16 = np.array([1., 2.], dtype=np.float16)
+        q3_16 = u.Quantity(a3_16, u.yr)
+        assert q3_16.dtype == a3_16.dtype
+        # Also test scalar float16 multiplication with unit
+        f16_scalar = np.float16(1.5)
+        q_f16 = f16_scalar * u.km
+        assert q_f16.dtype == np.float16
         # items stored as objects by numpy should be converted to float
         # by default
         q4 = u.Quantity(decimal.Decimal('10.25'), u.m)
