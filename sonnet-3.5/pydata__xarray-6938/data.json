{"instance_id": "pydata__xarray-6938", "score": "I", "diff": "diff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex c775d05c..3c8e6c2f 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3768,26 +3768,24 @@ class Dataset(\n         coord_names.update({dim for dim in dims_dict.values() if dim in self.variables})\n \n         variables: dict[Hashable, Variable] = {}\n-        indexes: dict[Hashable, Index] = {}\n         for k, v in self.variables.items():\n-            dims = tuple(dims_dict.get(dim, dim) for dim in v.dims)\n-            if k in result_dims:\n-                var = v.to_index_variable()\n-                var.dims = dims\n-                if k in self._indexes:\n-                    indexes[k] = self._indexes[k]\n-                    variables[k] = var\n-                else:\n-                    index, index_vars = create_default_index_implicit(var)\n-                    indexes.update({name: index for name in index_vars})\n-                    variables.update(index_vars)\n-                    coord_names.update(index_vars)\n+            new_dims = tuple(dims_dict.get(dim, dim) for dim in v.dims)\n+            variables[k] = v.copy(deep=True).set_dims(new_dims)\n+\n+        indexes: dict[Hashable, Index] = {}\n+        for k, v in self._indexes.items():\n+            new_name = dims_dict.get(k, k)\n+            if isinstance(v, PandasIndex):\n+                indexes[new_name] = PandasIndex(v.index, new_name)\n             else:\n-                var = v.to_base_variable()\n-                var.dims = dims\n-                variables[k] = var\n+                indexes[new_name] = v\n \n-        return self._replace_with_new_dims(variables, coord_names, indexes=indexes)\n+        coord_names = set(self._coord_names)\n+        coord_names.update(dims_dict.values())\n+\n+        return self._replace_vars_and_dims(\n+            variables, coord_names=coord_names, dims=result_dims, indexes=indexes\n+        )\n \n     # change type of self and return to T_Dataset once\n     # https://github.com/python/mypy/issues/12846 is resolved\n", "gold_standard_diff": "From 6f165b5d1edb046d0578bc82dc53abb4ef286bf5 Mon Sep 17 00:00:00 2001\nFrom: Michael Niklas <mick.niklas@gmail.com>\nDate: Sat, 20 Aug 2022 18:42:53 +0200\nSubject: [PATCH 1/4] fix bug where indexes were changed inplace\n\n---\n xarray/core/dataset.py  |  1 +\n xarray/core/variable.py | 23 ++++++++++++-----------\n 2 files changed, 13 insertions(+), 11 deletions(-)\n\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex c775d05c097..c3717190df6 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3771,6 +3771,7 @@ def swap_dims(\n         indexes: dict[Hashable, Index] = {}\n         for k, v in self.variables.items():\n             dims = tuple(dims_dict.get(dim, dim) for dim in v.dims)\n+            var: Variable\n             if k in result_dims:\n                 var = v.to_index_variable()\n                 var.dims = dims\ndiff --git a/xarray/core/variable.py b/xarray/core/variable.py\nindex 5827b90ad75..b41856aeeb2 100644\n--- a/xarray/core/variable.py\n+++ b/xarray/core/variable.py\n@@ -14,6 +14,7 @@\n     Iterable,\n     Literal,\n     Mapping,\n+    NoReturn,\n     Sequence,\n )\n \n@@ -536,23 +537,23 @@ def values(self):\n     def values(self, values):\n         self.data = values\n \n-    def to_base_variable(self):\n+    def to_base_variable(self) -> Variable:\n         \"\"\"Return this variable as a base xarray.Variable\"\"\"\n         return Variable(\n-            self.dims, self._data, self._attrs, encoding=self._encoding, fastpath=True\n+            self._dims, self._data, self._attrs, encoding=self._encoding, fastpath=True\n         )\n \n     to_variable = utils.alias(to_base_variable, \"to_variable\")\n \n-    def to_index_variable(self):\n+    def to_index_variable(self) -> IndexVariable:\n         \"\"\"Return this variable as an xarray.IndexVariable\"\"\"\n         return IndexVariable(\n-            self.dims, self._data, self._attrs, encoding=self._encoding, fastpath=True\n+            self._dims, self._data, self._attrs, encoding=self._encoding, fastpath=True\n         )\n \n     to_coord = utils.alias(to_index_variable, \"to_coord\")\n \n-    def to_index(self):\n+    def to_index(self) -> pd.Index:\n         \"\"\"Convert this variable to a pandas.Index\"\"\"\n         return self.to_index_variable().to_index()\n \n@@ -2879,13 +2880,13 @@ def equals(self, other, equiv=None):\n     def _data_equals(self, other):\n         return self.to_index().equals(other.to_index())\n \n-    def to_index_variable(self):\n+    def to_index_variable(self) -> IndexVariable:\n         \"\"\"Return this variable as an xarray.IndexVariable\"\"\"\n-        return self\n+        return self.copy()\n \n     to_coord = utils.alias(to_index_variable, \"to_coord\")\n \n-    def to_index(self):\n+    def to_index(self) -> pd.Index:\n         \"\"\"Convert this variable to a pandas.Index\"\"\"\n         # n.b. creating a new pandas.Index from an old pandas.Index is\n         # basically free as pandas.Index objects are immutable\n@@ -2904,7 +2905,7 @@ def to_index(self):\n         return index\n \n     @property\n-    def level_names(self):\n+    def level_names(self) -> list[str] | None:\n         \"\"\"Return MultiIndex level names or None if this IndexVariable has no\n         MultiIndex.\n         \"\"\"\n@@ -2922,11 +2923,11 @@ def get_level_variable(self, level):\n         return type(self)(self.dims, index.get_level_values(level))\n \n     @property\n-    def name(self):\n+    def name(self) -> Hashable:\n         return self.dims[0]\n \n     @name.setter\n-    def name(self, value):\n+    def name(self, value) -> NoReturn:\n         raise AttributeError(\"cannot modify name of IndexVariable in-place\")\n \n     def _inplace_binary_op(self, other, f):\n\nFrom 4f55397aa1867f8b84f8b05d05d50b19b4084204 Mon Sep 17 00:00:00 2001\nFrom: Michael Niklas <mick.niklas@gmail.com>\nDate: Sat, 20 Aug 2022 18:46:44 +0200\nSubject: [PATCH 2/4] add bugfix to whats-new\n\n---\n doc/whats-new.rst | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 6d78a47f1ea..c0f226b2409 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -49,6 +49,8 @@ Bug fixes\n - Make FacetGrid.set_titles send kwargs correctly using `handle.udpate(kwargs)`.\n   (:issue:`6839`, :pull:`6843`)\n   By `Oliver Lopez <https://github.com/lopezvoliver>`_.\n+- Fix bug where index variables would be changed inplace (:issue:`6931`, :pull:`6938`)\n+  By `Michael Niklas <https://github.com/headtr1ck>`_.\n \n Documentation\n ~~~~~~~~~~~~~\n\nFrom a1f401a08018d68ac55018c84014ed178bc4da76 Mon Sep 17 00:00:00 2001\nFrom: Michael Niklas <mick.niklas@gmail.com>\nDate: Sat, 20 Aug 2022 18:51:31 +0200\nSubject: [PATCH 3/4] add test\n\n---\n xarray/tests/test_variable.py | 9 +++++++++\n 1 file changed, 9 insertions(+)\n\ndiff --git a/xarray/tests/test_variable.py b/xarray/tests/test_variable.py\nindex 21b8b116af6..f4d2a3e52f6 100644\n--- a/xarray/tests/test_variable.py\n+++ b/xarray/tests/test_variable.py\n@@ -2422,6 +2422,15 @@ def test_rolling_window_errors(self):\n     def test_coarsen_2d(self):\n         super().test_coarsen_2d()\n \n+    def test_to_index_variable_copy(self):\n+        # to_index_variable should return a copy\n+        # https://github.com/pydata/xarray/issues/6931\n+        a = IndexVariable(\"x\", [\"a\"])\n+        b = a.to_index_variable()\n+        assert a is not b\n+        b.dims = \"y\"\n+        assert a.dims == (\"x\",)\n+\n \n class TestAsCompatibleData:\n     def test_unchanged_types(self):\n\nFrom ab9923cbe1e5c4e9c42ec7cf9bed1ba167912bd6 Mon Sep 17 00:00:00 2001\nFrom: Michael Niklas <mick.niklas@gmail.com>\nDate: Sat, 20 Aug 2022 18:57:49 +0200\nSubject: [PATCH 4/4] type test and fix\n https://github.com/python/mypy/issues/3004 issue\n\n---\n xarray/tests/test_variable.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/xarray/tests/test_variable.py b/xarray/tests/test_variable.py\nindex f4d2a3e52f6..6048ebc102f 100644\n--- a/xarray/tests/test_variable.py\n+++ b/xarray/tests/test_variable.py\n@@ -2422,13 +2422,13 @@ def test_rolling_window_errors(self):\n     def test_coarsen_2d(self):\n         super().test_coarsen_2d()\n \n-    def test_to_index_variable_copy(self):\n+    def test_to_index_variable_copy(self) -> None:\n         # to_index_variable should return a copy\n         # https://github.com/pydata/xarray/issues/6931\n         a = IndexVariable(\"x\", [\"a\"])\n         b = a.to_index_variable()\n         assert a is not b\n-        b.dims = \"y\"\n+        b.dims = (\"y\",)\n         assert a.dims == (\"x\",)\n \n \n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/6938"}