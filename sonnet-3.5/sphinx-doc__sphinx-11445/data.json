{"instance_id": "sphinx-doc__sphinx-11445", "score": "I", "diff": "diff --git a/sphinx/parsers.py b/sphinx/parsers.py\nindex 3bcd69f52..eb57b9a08 100644\n--- a/sphinx/parsers.py\n+++ b/sphinx/parsers.py\n@@ -82,7 +82,14 @@ class RSTParser(docutils.parsers.rst.Parser, Parser):\n \n     def decorate(self, content: StringList) -> None:\n         \"\"\"Preprocess reST content before parsing.\"\"\"\n-        prepend_prolog(content, self.config.rst_prolog)\n+        if content and content[0].startswith(':'):\n+            # Preserve the first line if it starts with a domain directive\n+            first_line = content[0]\n+            content.pop(0)\n+            prepend_prolog(content, self.config.rst_prolog)\n+            content.insert(0, first_line)\n+        else:\n+            prepend_prolog(content, self.config.rst_prolog)\n         append_epilog(content, self.config.rst_epilog)\n \n \ndiff --git a/tox.ini b/tox.ini\nindex 512aa5f74..84c8093a3 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -24,7 +24,7 @@ setenv =\n     PYTHONWARNINGS = error\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -X warn_default_encoding -m pytest --durations 25 {posargs}\n+    python -X dev -X warn_default_encoding -m pytest -rA --durations 25 {posargs}\n \n [testenv:docs]\n basepython = python3\n", "gold_standard_diff": "From 593ec07613c33c5b827548c84c7db2cf935bcb2a Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?B=C3=A9n=C3=A9dikt=20Tran?=\n <10796600+picnixz@users.noreply.github.com>\nDate: Sun, 28 May 2023 20:39:41 +0200\nSubject: [PATCH 1/6] RST roles in titles render properly with ``rst_prolog``\n (#11437)\n\n---\n CHANGES                |  5 ++++\n sphinx/util/rst.py     | 14 ++++++++---\n tests/test_util_rst.py | 55 ++++++++++++++++++++++++++++++++++++++++++\n 3 files changed, 71 insertions(+), 3 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex e66f11cbf7e..fe5ac12ce36 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -35,6 +35,11 @@ Features added\n Bugs fixed\n ----------\n \n+* #11437: Top-level headings with RST roles at the beginning of an RST file\n+  render properly when :confval:`rst_prolog` is set. Users are not longer\n+  required to put an empty line at the beginning of the file.\n+  Patch by B\u00e9n\u00e9dikt Tran.\n+\n Testing\n --------\n \ndiff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 7a1538325f1..96750fad283 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -86,9 +86,17 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n                 break\n \n         if pos > 0:\n-            # insert a blank line after docinfo\n-            content.insert(pos, '', '<generated>', 0)\n-            pos += 1\n+            if pos < len(content) and len(content[pos]) >= 6 and len(set(content[pos])) == 1:\n+                # This was actually a title starting with :role:`...` and not a docinfo,\n+                # in which case the prolog will be put at the beginning of the file.\n+                #\n+                # Note that the smallest \"role-like\" title requires at least 6 characters\n+                # and the sectioning characters must be repeated at least 6 times as well.\n+                pos = 0\n+            else:\n+                # insert a blank line after docinfo\n+                content.insert(pos, '', '<generated>', 0)\n+                pos += 1\n \n         # insert prolog (after docinfo if exists)\n         for lineno, line in enumerate(prolog.splitlines()):\ndiff --git a/tests/test_util_rst.py b/tests/test_util_rst.py\nindex 40a2ee68b5a..3088d03d978 100644\n--- a/tests/test_util_rst.py\n+++ b/tests/test_util_rst.py\n@@ -78,6 +78,61 @@ def test_prepend_prolog_without_CR(app):\n                                       ('dummy.rst', 1, 'Sphinx is a document generator')]\n \n \n+def test_prepend_prolog_with_roles_in_sections(app):\n+    prolog = 'this is rst_prolog\\nhello reST!'\n+    content = StringList([':title: test of SphinxFileInput',\n+                          ':author: Sphinx team',\n+                          '',  # this newline is required\n+                          ':mod:`foo`',\n+                          '----------',\n+                          '',\n+                          'hello'],\n+                         'dummy.rst')\n+    prepend_prolog(content, prolog)\n+\n+    assert list(content.xitems()) == [('dummy.rst', 0, ':title: test of SphinxFileInput'),\n+                                      ('dummy.rst', 1, ':author: Sphinx team'),\n+                                      ('<generated>', 0, ''),\n+                                      ('<rst_prolog>', 0, 'this is rst_prolog'),\n+                                      ('<rst_prolog>', 1, 'hello reST!'),\n+                                      ('<generated>', 0, ''),\n+                                      ('dummy.rst', 2, ''),\n+                                      ('dummy.rst', 3, ':mod:`foo`'),\n+                                      ('dummy.rst', 4, '----------'),\n+                                      ('dummy.rst', 5, ''),\n+                                      ('dummy.rst', 6, 'hello')]\n+\n+\n+def test_prepend_prolog_with_roles_in_sections_with_CR(app):\n+    # prolog having CR at tail\n+    prolog = 'this is rst_prolog\\nhello reST!\\n'\n+    content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')\n+    prepend_prolog(content, prolog)\n+\n+    assert list(content.xitems()) == [('<rst_prolog>', 0, 'this is rst_prolog'),\n+                                      ('<rst_prolog>', 1, 'hello reST!'),\n+                                      ('<generated>', 0, ''),\n+                                      ('dummy.rst', 0, ':mod:`foo`'),\n+                                      ('dummy.rst', 1, '----------'),\n+                                      ('dummy.rst', 2, ''),\n+                                      ('dummy.rst', 3, 'hello')]\n+\n+\n+def test_prepend_prolog_with_roles_in_sections_without_CR(app):\n+    # prolog not having CR at tail\n+    prolog = 'this is rst_prolog\\nhello reST!'\n+    content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')\n+    prepend_prolog(content, prolog)\n+\n+    assert list(content.xitems()) == [('<rst_prolog>', 0, 'this is rst_prolog'),\n+                                      ('<rst_prolog>', 1, 'hello reST!'),\n+                                      ('<generated>', 0, ''),\n+                                      ('dummy.rst', 0, ':mod:`foo`'),\n+                                      ('dummy.rst', 1, '----------'),\n+                                      ('dummy.rst', 2, ''),\n+                                      ('dummy.rst', 3, 'hello')]\n+\n+\n def test_textwidth():\n     assert textwidth('Hello') == 5\n     assert textwidth('\u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a') == 12\n\nFrom 3de9aaadcf7e5cc728804b4e2b3fb8f611d469c7 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?B=C3=A9n=C3=A9dikt=20Tran?=\n <10796600+picnixz@users.noreply.github.com>\nDate: Sun, 4 Jun 2023 10:12:04 +0200\nSubject: [PATCH 2/6] update CHANGES\n\n---\n CHANGES | 13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex fe5ac12ce36..34cec11a8c1 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -35,9 +35,16 @@ Features added\n Bugs fixed\n ----------\n \n-* #11437: Top-level headings with RST roles at the beginning of an RST file\n-  render properly when :confval:`rst_prolog` is set. Users are not longer\n-  required to put an empty line at the beginning of the file.\n+* #11437: Top-level headings starting with an RST role reference now render\n+  properly when :confval:`rst_prolog` is set. Users are not longer required\n+  to put an empty line at the beginning of the file, i.e., the following\n+  construction is now properly rendered.\n+\n+  .. code-block:: rst\n+\n+     :mod:`foo` -- The foo module\n+     ============================\n+\n   Patch by B\u00e9n\u00e9dikt Tran.\n \n Testing\n\nFrom fcb4ffffe3090c65b8c6b7baa26b4481e095b936 Mon Sep 17 00:00:00 2001\nFrom: Adam Turner <9087854+aa-turner@users.noreply.github.com>\nDate: Sun, 23 Jul 2023 15:33:46 +0100\nSubject: [PATCH 3/6] Use the correct regular expression\n\n---\n sphinx/util/rst.py | 20 +++++++-------------\n 1 file changed, 7 insertions(+), 13 deletions(-)\n\ndiff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 96750fad283..68ee4773f75 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -10,6 +10,7 @@\n \n from docutils.parsers.rst import roles\n from docutils.parsers.rst.languages import en as english\n+from docutils.parsers.rst.states import Body\n from docutils.statemachine import StringList\n from docutils.utils import Reporter\n from jinja2 import Environment\n@@ -25,7 +26,7 @@\n \n logger = logging.getLogger(__name__)\n \n-docinfo_re = re.compile(':\\\\w+:.*?')\n+FIELD_NAME_RE = re.compile(Body.patterns['field_marker'])\n symbols_re = re.compile(r'([!-\\-/:-@\\[-`{-~])')  # symbols without dot(0x2e)\n SECTIONING_CHARS = ['=', '-', '~']\n \n@@ -80,25 +81,18 @@ def prepend_prolog(content: StringList, prolog: str) -> None:\n     if prolog:\n         pos = 0\n         for line in content:\n-            if docinfo_re.match(line):\n+            if FIELD_NAME_RE.match(line):\n                 pos += 1\n             else:\n                 break\n \n         if pos > 0:\n-            if pos < len(content) and len(content[pos]) >= 6 and len(set(content[pos])) == 1:\n-                # This was actually a title starting with :role:`...` and not a docinfo,\n-                # in which case the prolog will be put at the beginning of the file.\n-                #\n-                # Note that the smallest \"role-like\" title requires at least 6 characters\n-                # and the sectioning characters must be repeated at least 6 times as well.\n-                pos = 0\n-            else:\n-                # insert a blank line after docinfo\n-                content.insert(pos, '', '<generated>', 0)\n-                pos += 1\n+            # insert a blank line after docinfo\n+            content.insert(pos, '', '<generated>', 0)\n+            pos += 1\n \n         # insert prolog (after docinfo if exists)\n+        lineno = 0\n         for lineno, line in enumerate(prolog.splitlines()):\n             content.insert(pos + lineno, line, '<rst_prolog>', lineno)\n \n\nFrom 6484b00ac0d4ce31cdea82451489939dde3ddec3 Mon Sep 17 00:00:00 2001\nFrom: Adam Turner <9087854+aa-turner@users.noreply.github.com>\nDate: Sun, 23 Jul 2023 15:33:58 +0100\nSubject: [PATCH 4/6] Rename tests\n\n---\n tests/test_util_rst.py | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a/tests/test_util_rst.py b/tests/test_util_rst.py\nindex 3088d03d978..d50c90c7b54 100644\n--- a/tests/test_util_rst.py\n+++ b/tests/test_util_rst.py\n@@ -103,8 +103,8 @@ def test_prepend_prolog_with_roles_in_sections(app):\n                                       ('dummy.rst', 6, 'hello')]\n \n \n-def test_prepend_prolog_with_roles_in_sections_with_CR(app):\n-    # prolog having CR at tail\n+def test_prepend_prolog_with_roles_in_sections_with_newline(app):\n+    # prologue with trailing line break\n     prolog = 'this is rst_prolog\\nhello reST!\\n'\n     content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')\n     prepend_prolog(content, prolog)\n@@ -118,8 +118,8 @@ def test_prepend_prolog_with_roles_in_sections_with_CR(app):\n                                       ('dummy.rst', 3, 'hello')]\n \n \n-def test_prepend_prolog_with_roles_in_sections_without_CR(app):\n-    # prolog not having CR at tail\n+def test_prepend_prolog_with_roles_in_sections_without_newline(app):\n+    # prologue with no trailing line break\n     prolog = 'this is rst_prolog\\nhello reST!'\n     content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')\n     prepend_prolog(content, prolog)\n\nFrom 13e86a8fa6f3e07b2b716bc32ab85cada2cdb5dc Mon Sep 17 00:00:00 2001\nFrom: Adam Turner <9087854+aa-turner@users.noreply.github.com>\nDate: Sun, 23 Jul 2023 15:34:06 +0100\nSubject: [PATCH 5/6] Update CHANGES entry\n\n---\n CHANGES | 17 ++++++++++-------\n 1 file changed, 10 insertions(+), 7 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 34cec11a8c1..9d8264873fb 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -35,15 +35,18 @@ Features added\n Bugs fixed\n ----------\n \n-* #11437: Top-level headings starting with an RST role reference now render\n-  properly when :confval:`rst_prolog` is set. Users are not longer required\n-  to put an empty line at the beginning of the file, i.e., the following\n-  construction is now properly rendered.\n+* #11437: Top-level headings starting with a reStructuredText role\n+  now render properly when :confval:`rst_prolog` is set.\n+  Previously, a file starting with the below would have\n+  improperly rendered due to where the prologue text\n+  was inserted into the document.\n \n-  .. code-block:: rst\n+  .. code:: rst\n \n-     :mod:`foo` -- The foo module\n-     ============================\n+     :mod:`lobster` -- The lobster module\n+     ====================================\n+\n+     ...\n \n   Patch by B\u00e9n\u00e9dikt Tran.\n \n\nFrom 8ec7542bb765974a0e9519a87b11b1334cbdb7cf Mon Sep 17 00:00:00 2001\nFrom: Adam Turner <9087854+aa-turner@users.noreply.github.com>\nDate: Sun, 23 Jul 2023 15:36:39 +0100\nSubject: [PATCH 6/6] Collapse Jinja2 block\n\n---\n sphinx/util/rst.py | 8 +-------\n 1 file changed, 1 insertion(+), 7 deletions(-)\n\ndiff --git a/sphinx/util/rst.py b/sphinx/util/rst.py\nindex 68ee4773f75..c875ea5b54e 100644\n--- a/sphinx/util/rst.py\n+++ b/sphinx/util/rst.py\n@@ -13,17 +13,11 @@\n from docutils.parsers.rst.states import Body\n from docutils.statemachine import StringList\n from docutils.utils import Reporter\n-from jinja2 import Environment\n+from jinja2 import Environment, pass_environment\n \n from sphinx.locale import __\n from sphinx.util import docutils, logging\n \n-try:\n-    from jinja2.utils import pass_environment\n-except ImportError:\n-    from jinja2 import environmentfilter as pass_environment\n-\n-\n logger = logging.getLogger(__name__)\n \n FIELD_NAME_RE = re.compile(Body.patterns['field_marker'])\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/11445"}