From b01680bee4e7e8a7ad14e51715bbc3624b12a4c8 Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Mon, 18 Jun 2018 14:00:26 +0200
Subject: [PATCH 1/6] Add refit_time to model selection

In particular to GridSearchCV and RandomizedSearchCV. Implements #8833.
---
 doc/whats_new/v0.20.rst                      |  7 +++++++
 sklearn/model_selection/_search.py           | 14 ++++++++++++++
 sklearn/model_selection/tests/test_search.py |  5 +++++
 3 files changed, 26 insertions(+)

diff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst
index 32b4ef3098263..8f756cd1a8a29 100644
--- a/doc/whats_new/v0.20.rst
+++ b/doc/whats_new/v0.20.rst
@@ -253,6 +253,13 @@ Model evaluation and meta-estimators
   return estimators fitted on each split. :issue:`9686` by :user:`Aur√©lien Bellet
   <bellet>`.
 
+- New ``refit_time_`` attribute will be stored in
+  :class:`model_selection.GridSearchCV` and
+  :class:`model_selection.RandomizedSearchCV` if ``refit`` is set to ``True``.
+  This will allow measuring the complete time it takes to perform
+  hyperparameter optimization and refitting the best model on the whole
+  dataset.
+
 Decomposition and manifold learning
 
 - Speed improvements for both 'exact' and 'barnes_hut' methods in
diff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py
index 99d6096af73db..e85e28e94906b 100644
--- a/sklearn/model_selection/_search.py
+++ b/sklearn/model_selection/_search.py
@@ -17,6 +17,7 @@
 from functools import partial, reduce
 from itertools import product
 import operator
+import time
 import warnings
 
 import numpy as np
@@ -766,10 +767,13 @@ def _store(key_name, array, weights=None, splits=False, rank=False):
         if self.refit:
             self.best_estimator_ = clone(base_estimator).set_params(
                 **self.best_params_)
+            refit_start_time = time.time()
             if y is not None:
                 self.best_estimator_.fit(X, y, **fit_params)
             else:
                 self.best_estimator_.fit(X, **fit_params)
+            refit_end_time = time.time()
+            self.refit_time_ = refit_end_time - refit_start_time
 
         # Store the only scorer not as a dict for single metric evaluation
         self.scorer_ = scorers if self.multimetric_ else scorers['score']
@@ -1076,6 +1080,11 @@ class GridSearchCV(BaseSearchCV):
     n_splits_ : int
         The number of cross-validation splits (folds/iterations).
 
+    refit_time_ : float
+        Seconds used for refitting the best model on the whole dataset.
+
+        This is present only if ``refit`` is set to ``True``.
+
     Notes
     ------
     The parameters selected are those that maximize the score of the left out
@@ -1387,6 +1396,11 @@ class RandomizedSearchCV(BaseSearchCV):
     n_splits_ : int
         The number of cross-validation splits (folds/iterations).
 
+    refit_time_ : float
+        Seconds used for refitting the best model on the whole dataset.
+
+        This is present only if ``refit`` is set to ``True``.
+
     Notes
     -----
     The parameters selected are those that maximize the score of the held-out
diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py
index f436c7b55cf36..767b2d3146d58 100644
--- a/sklearn/model_selection/tests/test_search.py
+++ b/sklearn/model_selection/tests/test_search.py
@@ -26,6 +26,7 @@
 from sklearn.utils.testing import assert_array_equal
 from sklearn.utils.testing import assert_array_almost_equal
 from sklearn.utils.testing import assert_almost_equal
+from sklearn.utils.testing import assert_greater
 from sklearn.utils.testing import ignore_warnings
 from sklearn.utils.mocking import CheckingClassifier, MockDataFrame
 
@@ -1172,6 +1173,10 @@ def test_search_cv_timing():
             assert_true(search.cv_results_[key][0] == 0.0)
             assert_true(np.all(search.cv_results_[key] < 1))
 
+        assert_true(hasattr(search, "refit_time_"))
+        assert_true(isinstance(search.refit_time_, float))
+        assert_greater(search.refit_time_, 0)
+
 
 def test_grid_search_correct_score_results():
     # test that correct scores are used

From 38a158e949b15f137a7f832beab5ad752203d902 Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Mon, 18 Jun 2018 16:10:56 +0200
Subject: [PATCH 2/6] Suggested rewording (by @jnothman)

---
 sklearn/model_selection/_search.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py
index e85e28e94906b..a339b9b167634 100644
--- a/sklearn/model_selection/_search.py
+++ b/sklearn/model_selection/_search.py
@@ -1083,7 +1083,7 @@ class GridSearchCV(BaseSearchCV):
     refit_time_ : float
         Seconds used for refitting the best model on the whole dataset.
 
-        This is present only if ``refit`` is set to ``True``.
+        This is present only if ``refit`` is not False.
 
     Notes
     ------
@@ -1399,7 +1399,7 @@ class RandomizedSearchCV(BaseSearchCV):
     refit_time_ : float
         Seconds used for refitting the best model on the whole dataset.
 
-        This is present only if ``refit`` is set to ``True``.
+        This is present only if ``refit`` is not False.
 
     Notes
     -----

From 34cd551bd6a304a44b675648dabc768bbfe68f58 Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Mon, 18 Jun 2018 16:11:14 +0200
Subject: [PATCH 3/6] Skip test if python==2.X

---
 sklearn/model_selection/tests/test_search.py | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py
index 767b2d3146d58..e2643700ccce1 100644
--- a/sklearn/model_selection/tests/test_search.py
+++ b/sklearn/model_selection/tests/test_search.py
@@ -1175,7 +1175,8 @@ def test_search_cv_timing():
 
         assert_true(hasattr(search, "refit_time_"))
         assert_true(isinstance(search.refit_time_, float))
-        assert_greater(search.refit_time_, 0)
+        if sys.version_info[0] >= 3:
+            assert_greater(search.refit_time_, 0)
 
 
 def test_grid_search_correct_score_results():

From 814ab62fb679c277beda8c49d540fe092c77600d Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Tue, 19 Jun 2018 09:46:58 +0200
Subject: [PATCH 4/6] disable assert for Windows tests

---
 sklearn/model_selection/tests/test_search.py | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py
index e2643700ccce1..5ca3ddbfd47f6 100644
--- a/sklearn/model_selection/tests/test_search.py
+++ b/sklearn/model_selection/tests/test_search.py
@@ -5,6 +5,7 @@
 from sklearn.externals.six.moves import xrange
 from sklearn.externals.joblib._compat import PY3_OR_LATER
 from itertools import chain, product
+import os
 import pickle
 import sys
 from types import GeneratorType
@@ -1175,7 +1176,7 @@ def test_search_cv_timing():
 
         assert_true(hasattr(search, "refit_time_"))
         assert_true(isinstance(search.refit_time_, float))
-        if sys.version_info[0] >= 3:
+        if os.name in ('mac', 'posix'):
             assert_greater(search.refit_time_, 0)
 
 

From a7f27342dee60def2762bdf80fdae2588923daf6 Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Tue, 19 Jun 2018 09:49:48 +0200
Subject: [PATCH 5/6] take into account Andreas' suggestions

---
 doc/whats_new/v0.20.rst                      | 2 +-
 sklearn/model_selection/tests/test_search.py | 5 ++---
 2 files changed, 3 insertions(+), 4 deletions(-)

diff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst
index 8f756cd1a8a29..b5a43b0b8fc3b 100644
--- a/doc/whats_new/v0.20.rst
+++ b/doc/whats_new/v0.20.rst
@@ -258,7 +258,7 @@ Model evaluation and meta-estimators
   :class:`model_selection.RandomizedSearchCV` if ``refit`` is set to ``True``.
   This will allow measuring the complete time it takes to perform
   hyperparameter optimization and refitting the best model on the whole
-  dataset.
+  dataset. :issue:`11310` by :user:`Matthias Feurer <mfeurer>`.
 
 Decomposition and manifold learning
 
diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py
index 5ca3ddbfd47f6..a9e1debc6589d 100644
--- a/sklearn/model_selection/tests/test_search.py
+++ b/sklearn/model_selection/tests/test_search.py
@@ -27,7 +27,7 @@
 from sklearn.utils.testing import assert_array_equal
 from sklearn.utils.testing import assert_array_almost_equal
 from sklearn.utils.testing import assert_almost_equal
-from sklearn.utils.testing import assert_greater
+from sklearn.utils.testing import assert_greater_equal
 from sklearn.utils.testing import ignore_warnings
 from sklearn.utils.mocking import CheckingClassifier, MockDataFrame
 
@@ -1176,8 +1176,7 @@ def test_search_cv_timing():
 
         assert_true(hasattr(search, "refit_time_"))
         assert_true(isinstance(search.refit_time_, float))
-        if os.name in ('mac', 'posix'):
-            assert_greater(search.refit_time_, 0)
+        assert_greater_equal(search.refit_time_, 0)
 
 
 def test_grid_search_correct_score_results():

From 62ac731017b1af6666947af59e25b3fc8d4eca10 Mon Sep 17 00:00:00 2001
From: Matthias Feurer <feurerm@informatik.uni-freiburg.de>
Date: Tue, 19 Jun 2018 09:50:50 +0200
Subject: [PATCH 6/6] remove unused import

---
 sklearn/model_selection/tests/test_search.py | 1 -
 1 file changed, 1 deletion(-)

diff --git a/sklearn/model_selection/tests/test_search.py b/sklearn/model_selection/tests/test_search.py
index a9e1debc6589d..0b7b0338f9ada 100644
--- a/sklearn/model_selection/tests/test_search.py
+++ b/sklearn/model_selection/tests/test_search.py
@@ -5,7 +5,6 @@
 from sklearn.externals.six.moves import xrange
 from sklearn.externals.joblib._compat import PY3_OR_LATER
 from itertools import chain, product
-import os
 import pickle
 import sys
 from types import GeneratorType
