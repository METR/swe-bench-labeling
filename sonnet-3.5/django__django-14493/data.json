{"instance_id": "django__django-14493", "score": "C", "diff": "diff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex f957a667b2..af6cb3a512 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -261,6 +261,7 @@ class HashedFilesMixin:\n \n         paths = {path: paths[path] for path in adjustable_paths}\n \n+        substitutions = False\n         for i in range(self.max_post_process_passes):\n             substitutions = False\n             for name, hashed_name, processed, subst in self._post_process(paths, adjustable_paths, hashed_files):\n@@ -271,7 +272,7 @@ class HashedFilesMixin:\n             if not substitutions:\n                 break\n \n-        if substitutions:\n+        if substitutions and self.max_post_process_passes > 0:\n             yield 'All', None, RuntimeError('Max post-process passes exceeded.')\n \n         # Store the processed paths\n", "gold_standard_diff": "diff --git a/AUTHORS b/AUTHORS\nindex cdb43476cbea..d3cb3a62f783 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -99,6 +99,7 @@ answer newbie questions, and generally made Django that much better:\n     Arthur Koziel <http://arthurkoziel.com>\n     Arthur Rio <arthur.rio44@gmail.com>\n     Arvis Bickovskis <viestards.lists@gmail.com>\n+    Arya Khaligh <bartararya@gmail.com>\n     Aryeh Leib Taurog <http://www.aryehleib.com/>\n     A S Alam <aalam@users.sf.net>\n     Asif Saif Uddin <auvipy@gmail.com>\ndiff --git a/django/contrib/staticfiles/storage.py b/django/contrib/staticfiles/storage.py\nindex f957a667b28a..fe1342374905 100644\n--- a/django/contrib/staticfiles/storage.py\n+++ b/django/contrib/staticfiles/storage.py\n@@ -260,6 +260,7 @@ def post_process(self, paths, dry_run=False, **options):\n                 processed_adjustable_paths[name] = (name, hashed_name, processed)\n \n         paths = {path: paths[path] for path in adjustable_paths}\n+        substitutions = False\n \n         for i in range(self.max_post_process_passes):\n             substitutions = False\ndiff --git a/tests/staticfiles_tests/storage.py b/tests/staticfiles_tests/storage.py\nindex 79f406ca6c09..6a319f934d8b 100644\n--- a/tests/staticfiles_tests/storage.py\n+++ b/tests/staticfiles_tests/storage.py\n@@ -97,3 +97,7 @@ class ExtraPatternsStorage(ManifestStaticFilesStorage):\n class NoneHashStorage(ManifestStaticFilesStorage):\n     def file_hash(self, name, content=None):\n         return None\n+\n+\n+class NoPostProcessReplacedPathStorage(ManifestStaticFilesStorage):\n+    max_post_process_passes = 0\ndiff --git a/tests/staticfiles_tests/test_storage.py b/tests/staticfiles_tests/test_storage.py\nindex db655f2453c3..d5aa1c1c9dc3 100644\n--- a/tests/staticfiles_tests/test_storage.py\n+++ b/tests/staticfiles_tests/test_storage.py\n@@ -463,6 +463,18 @@ def test_hashed_name(self):\n         self.assertEqual(relpath, 'cached/styles.css')\n \n \n+@override_settings(\n+    STATICFILES_STORAGE='staticfiles_tests.storage.NoPostProcessReplacedPathStorage'\n+)\n+class TestCollectionNoPostProcessReplacedPaths(CollectionTestCase):\n+    run_collectstatic_in_setUp = False\n+\n+    def test_collectstatistic_no_post_process_replaced_paths(self):\n+        stdout = StringIO()\n+        self.run_collectstatic(verbosity=1, stdout=stdout)\n+        self.assertIn('post-processed', stdout.getvalue())\n+\n+\n @override_settings(STATICFILES_STORAGE='staticfiles_tests.storage.SimpleStorage')\n class TestCollectionSimpleStorage(CollectionTestCase):\n     hashed_file_path = hashed_file_path\n", "gold_standard_pr_link": "https://github.com/django/django/pull/14493"}