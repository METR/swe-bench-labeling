From 593ec07613c33c5b827548c84c7db2cf935bcb2a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?B=C3=A9n=C3=A9dikt=20Tran?=
 <10796600+picnixz@users.noreply.github.com>
Date: Sun, 28 May 2023 20:39:41 +0200
Subject: [PATCH 1/6] RST roles in titles render properly with ``rst_prolog``
 (#11437)

---
 CHANGES                |  5 ++++
 sphinx/util/rst.py     | 14 ++++++++---
 tests/test_util_rst.py | 55 ++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 71 insertions(+), 3 deletions(-)

diff --git a/CHANGES b/CHANGES
index e66f11cbf7e..fe5ac12ce36 100644
--- a/CHANGES
+++ b/CHANGES
@@ -35,6 +35,11 @@ Features added
 Bugs fixed
 ----------
 
+* #11437: Top-level headings with RST roles at the beginning of an RST file
+  render properly when :confval:`rst_prolog` is set. Users are not longer
+  required to put an empty line at the beginning of the file.
+  Patch by Bénédikt Tran.
+
 Testing
 --------
 
diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py
index 7a1538325f1..96750fad283 100644
--- a/sphinx/util/rst.py
+++ b/sphinx/util/rst.py
@@ -86,9 +86,17 @@ def prepend_prolog(content: StringList, prolog: str) -> None:
                 break
 
         if pos > 0:
-            # insert a blank line after docinfo
-            content.insert(pos, '', '<generated>', 0)
-            pos += 1
+            if pos < len(content) and len(content[pos]) >= 6 and len(set(content[pos])) == 1:
+                # This was actually a title starting with :role:`...` and not a docinfo,
+                # in which case the prolog will be put at the beginning of the file.
+                #
+                # Note that the smallest "role-like" title requires at least 6 characters
+                # and the sectioning characters must be repeated at least 6 times as well.
+                pos = 0
+            else:
+                # insert a blank line after docinfo
+                content.insert(pos, '', '<generated>', 0)
+                pos += 1
 
         # insert prolog (after docinfo if exists)
         for lineno, line in enumerate(prolog.splitlines()):
diff --git a/tests/test_util_rst.py b/tests/test_util_rst.py
index 40a2ee68b5a..3088d03d978 100644
--- a/tests/test_util_rst.py
+++ b/tests/test_util_rst.py
@@ -78,6 +78,61 @@ def test_prepend_prolog_without_CR(app):
                                       ('dummy.rst', 1, 'Sphinx is a document generator')]
 
 
+def test_prepend_prolog_with_roles_in_sections(app):
+    prolog = 'this is rst_prolog\nhello reST!'
+    content = StringList([':title: test of SphinxFileInput',
+                          ':author: Sphinx team',
+                          '',  # this newline is required
+                          ':mod:`foo`',
+                          '----------',
+                          '',
+                          'hello'],
+                         'dummy.rst')
+    prepend_prolog(content, prolog)
+
+    assert list(content.xitems()) == [('dummy.rst', 0, ':title: test of SphinxFileInput'),
+                                      ('dummy.rst', 1, ':author: Sphinx team'),
+                                      ('<generated>', 0, ''),
+                                      ('<rst_prolog>', 0, 'this is rst_prolog'),
+                                      ('<rst_prolog>', 1, 'hello reST!'),
+                                      ('<generated>', 0, ''),
+                                      ('dummy.rst', 2, ''),
+                                      ('dummy.rst', 3, ':mod:`foo`'),
+                                      ('dummy.rst', 4, '----------'),
+                                      ('dummy.rst', 5, ''),
+                                      ('dummy.rst', 6, 'hello')]
+
+
+def test_prepend_prolog_with_roles_in_sections_with_CR(app):
+    # prolog having CR at tail
+    prolog = 'this is rst_prolog\nhello reST!\n'
+    content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')
+    prepend_prolog(content, prolog)
+
+    assert list(content.xitems()) == [('<rst_prolog>', 0, 'this is rst_prolog'),
+                                      ('<rst_prolog>', 1, 'hello reST!'),
+                                      ('<generated>', 0, ''),
+                                      ('dummy.rst', 0, ':mod:`foo`'),
+                                      ('dummy.rst', 1, '----------'),
+                                      ('dummy.rst', 2, ''),
+                                      ('dummy.rst', 3, 'hello')]
+
+
+def test_prepend_prolog_with_roles_in_sections_without_CR(app):
+    # prolog not having CR at tail
+    prolog = 'this is rst_prolog\nhello reST!'
+    content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')
+    prepend_prolog(content, prolog)
+
+    assert list(content.xitems()) == [('<rst_prolog>', 0, 'this is rst_prolog'),
+                                      ('<rst_prolog>', 1, 'hello reST!'),
+                                      ('<generated>', 0, ''),
+                                      ('dummy.rst', 0, ':mod:`foo`'),
+                                      ('dummy.rst', 1, '----------'),
+                                      ('dummy.rst', 2, ''),
+                                      ('dummy.rst', 3, 'hello')]
+
+
 def test_textwidth():
     assert textwidth('Hello') == 5
     assert textwidth('русский язык') == 12

From 3de9aaadcf7e5cc728804b4e2b3fb8f611d469c7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?B=C3=A9n=C3=A9dikt=20Tran?=
 <10796600+picnixz@users.noreply.github.com>
Date: Sun, 4 Jun 2023 10:12:04 +0200
Subject: [PATCH 2/6] update CHANGES

---
 CHANGES | 13 ++++++++++---
 1 file changed, 10 insertions(+), 3 deletions(-)

diff --git a/CHANGES b/CHANGES
index fe5ac12ce36..34cec11a8c1 100644
--- a/CHANGES
+++ b/CHANGES
@@ -35,9 +35,16 @@ Features added
 Bugs fixed
 ----------
 
-* #11437: Top-level headings with RST roles at the beginning of an RST file
-  render properly when :confval:`rst_prolog` is set. Users are not longer
-  required to put an empty line at the beginning of the file.
+* #11437: Top-level headings starting with an RST role reference now render
+  properly when :confval:`rst_prolog` is set. Users are not longer required
+  to put an empty line at the beginning of the file, i.e., the following
+  construction is now properly rendered.
+
+  .. code-block:: rst
+
+     :mod:`foo` -- The foo module
+     ============================
+
   Patch by Bénédikt Tran.
 
 Testing

From fcb4ffffe3090c65b8c6b7baa26b4481e095b936 Mon Sep 17 00:00:00 2001
From: Adam Turner <9087854+aa-turner@users.noreply.github.com>
Date: Sun, 23 Jul 2023 15:33:46 +0100
Subject: [PATCH 3/6] Use the correct regular expression

---
 sphinx/util/rst.py | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py
index 96750fad283..68ee4773f75 100644
--- a/sphinx/util/rst.py
+++ b/sphinx/util/rst.py
@@ -10,6 +10,7 @@
 
 from docutils.parsers.rst import roles
 from docutils.parsers.rst.languages import en as english
+from docutils.parsers.rst.states import Body
 from docutils.statemachine import StringList
 from docutils.utils import Reporter
 from jinja2 import Environment
@@ -25,7 +26,7 @@
 
 logger = logging.getLogger(__name__)
 
-docinfo_re = re.compile(':\\w+:.*?')
+FIELD_NAME_RE = re.compile(Body.patterns['field_marker'])
 symbols_re = re.compile(r'([!-\-/:-@\[-`{-~])')  # symbols without dot(0x2e)
 SECTIONING_CHARS = ['=', '-', '~']
 
@@ -80,25 +81,18 @@ def prepend_prolog(content: StringList, prolog: str) -> None:
     if prolog:
         pos = 0
         for line in content:
-            if docinfo_re.match(line):
+            if FIELD_NAME_RE.match(line):
                 pos += 1
             else:
                 break
 
         if pos > 0:
-            if pos < len(content) and len(content[pos]) >= 6 and len(set(content[pos])) == 1:
-                # This was actually a title starting with :role:`...` and not a docinfo,
-                # in which case the prolog will be put at the beginning of the file.
-                #
-                # Note that the smallest "role-like" title requires at least 6 characters
-                # and the sectioning characters must be repeated at least 6 times as well.
-                pos = 0
-            else:
-                # insert a blank line after docinfo
-                content.insert(pos, '', '<generated>', 0)
-                pos += 1
+            # insert a blank line after docinfo
+            content.insert(pos, '', '<generated>', 0)
+            pos += 1
 
         # insert prolog (after docinfo if exists)
+        lineno = 0
         for lineno, line in enumerate(prolog.splitlines()):
             content.insert(pos + lineno, line, '<rst_prolog>', lineno)
 

From 6484b00ac0d4ce31cdea82451489939dde3ddec3 Mon Sep 17 00:00:00 2001
From: Adam Turner <9087854+aa-turner@users.noreply.github.com>
Date: Sun, 23 Jul 2023 15:33:58 +0100
Subject: [PATCH 4/6] Rename tests

---
 tests/test_util_rst.py | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/tests/test_util_rst.py b/tests/test_util_rst.py
index 3088d03d978..d50c90c7b54 100644
--- a/tests/test_util_rst.py
+++ b/tests/test_util_rst.py
@@ -103,8 +103,8 @@ def test_prepend_prolog_with_roles_in_sections(app):
                                       ('dummy.rst', 6, 'hello')]
 
 
-def test_prepend_prolog_with_roles_in_sections_with_CR(app):
-    # prolog having CR at tail
+def test_prepend_prolog_with_roles_in_sections_with_newline(app):
+    # prologue with trailing line break
     prolog = 'this is rst_prolog\nhello reST!\n'
     content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')
     prepend_prolog(content, prolog)
@@ -118,8 +118,8 @@ def test_prepend_prolog_with_roles_in_sections_with_CR(app):
                                       ('dummy.rst', 3, 'hello')]
 
 
-def test_prepend_prolog_with_roles_in_sections_without_CR(app):
-    # prolog not having CR at tail
+def test_prepend_prolog_with_roles_in_sections_without_newline(app):
+    # prologue with no trailing line break
     prolog = 'this is rst_prolog\nhello reST!'
     content = StringList([':mod:`foo`', '-' * 10, '', 'hello'], 'dummy.rst')
     prepend_prolog(content, prolog)

From 13e86a8fa6f3e07b2b716bc32ab85cada2cdb5dc Mon Sep 17 00:00:00 2001
From: Adam Turner <9087854+aa-turner@users.noreply.github.com>
Date: Sun, 23 Jul 2023 15:34:06 +0100
Subject: [PATCH 5/6] Update CHANGES entry

---
 CHANGES | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/CHANGES b/CHANGES
index 34cec11a8c1..9d8264873fb 100644
--- a/CHANGES
+++ b/CHANGES
@@ -35,15 +35,18 @@ Features added
 Bugs fixed
 ----------
 
-* #11437: Top-level headings starting with an RST role reference now render
-  properly when :confval:`rst_prolog` is set. Users are not longer required
-  to put an empty line at the beginning of the file, i.e., the following
-  construction is now properly rendered.
+* #11437: Top-level headings starting with a reStructuredText role
+  now render properly when :confval:`rst_prolog` is set.
+  Previously, a file starting with the below would have
+  improperly rendered due to where the prologue text
+  was inserted into the document.
 
-  .. code-block:: rst
+  .. code:: rst
 
-     :mod:`foo` -- The foo module
-     ============================
+     :mod:`lobster` -- The lobster module
+     ====================================
+
+     ...
 
   Patch by Bénédikt Tran.
 

From 8ec7542bb765974a0e9519a87b11b1334cbdb7cf Mon Sep 17 00:00:00 2001
From: Adam Turner <9087854+aa-turner@users.noreply.github.com>
Date: Sun, 23 Jul 2023 15:36:39 +0100
Subject: [PATCH 6/6] Collapse Jinja2 block

---
 sphinx/util/rst.py | 8 +-------
 1 file changed, 1 insertion(+), 7 deletions(-)

diff --git a/sphinx/util/rst.py b/sphinx/util/rst.py
index 68ee4773f75..c875ea5b54e 100644
--- a/sphinx/util/rst.py
+++ b/sphinx/util/rst.py
@@ -13,17 +13,11 @@
 from docutils.parsers.rst.states import Body
 from docutils.statemachine import StringList
 from docutils.utils import Reporter
-from jinja2 import Environment
+from jinja2 import Environment, pass_environment
 
 from sphinx.locale import __
 from sphinx.util import docutils, logging
 
-try:
-    from jinja2.utils import pass_environment
-except ImportError:
-    from jinja2 import environmentfilter as pass_environment
-
-
 logger = logging.getLogger(__name__)
 
 FIELD_NAME_RE = re.compile(Body.patterns['field_marker'])
