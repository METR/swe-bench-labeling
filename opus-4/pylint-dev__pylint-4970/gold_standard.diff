diff --git a/ChangeLog b/ChangeLog
index 97af302af4..224728f390 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -65,6 +65,10 @@ Release date: TBA
 
 * Extended ``consider-using-in`` check to work for attribute access.
 
+* Setting ``min-similarity-lines`` to 0 now makes the similarty checker stop checking for duplicate code
+
+  Closes #4901
+
 
 What's New in Pylint 2.10.3?
 ============================
diff --git a/doc/whatsnew/2.11.rst b/doc/whatsnew/2.11.rst
index 72dc75e716..6a9ed66862 100644
--- a/doc/whatsnew/2.11.rst
+++ b/doc/whatsnew/2.11.rst
@@ -71,3 +71,7 @@ Other Changes
   Closes #4907
 
 * Extended ``consider-using-in`` check to work for attribute access.
+
+* Setting ``min-similarity-lines`` to 0 now makes the similarty checker stop checking for duplicate code
+
+  Closes #4901
diff --git a/pylint/checkers/similar.py b/pylint/checkers/similar.py
index c65b1c8933..88d7eac525 100644
--- a/pylint/checkers/similar.py
+++ b/pylint/checkers/similar.py
@@ -390,6 +390,8 @@ def append_stream(self, streamid: str, stream: TextIO, encoding=None) -> None:
 
     def run(self) -> None:
         """start looking for similarities and display results on stdout"""
+        if self.min_lines == 0:
+            return
         self._display_sims(self._compute_sims())
 
     def _compute_sims(self) -> List[Tuple[int, Set[LinesChunkLimits_T]]]:
diff --git a/tests/checkers/unittest_similar.py b/tests/checkers/unittest_similar.py
index 4ddf2029a2..c98ea15df5 100644
--- a/tests/checkers/unittest_similar.py
+++ b/tests/checkers/unittest_similar.py
@@ -502,3 +502,11 @@ def test_get_map_data() -> None:
         # There doesn't seem to be a faster way of doing this, yet.
         lines = (linespec.text for linespec in lineset_obj.stripped_lines)
         assert tuple(expected_lines) == tuple(lines)
+
+
+def test_set_duplicate_lines_to_zero() -> None:
+    output = StringIO()
+    with redirect_stdout(output), pytest.raises(SystemExit) as ex:
+        similar.Run(["--duplicates=0", SIMILAR1, SIMILAR2])
+    assert ex.value.code == 0
+    assert output.getvalue() == ""
