diff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py
index 99d6096af..e123620af 100644
--- a/sklearn/model_selection/_search.py
+++ b/sklearn/model_selection/_search.py
@@ -5,6 +5,8 @@ parameters of an estimator.
 from __future__ import print_function
 from __future__ import division
 
+import time
+
 # Author: Alexandre Gramfort <alexandre.gramfort@inria.fr>,
 #         Gael Varoquaux <gael.varoquaux@normalesup.org>
 #         Andreas Mueller <amueller@ais.uni-bonn.de>
@@ -405,7 +407,14 @@ class _CVScoreTuple (namedtuple('_CVScoreTuple',
 
 class BaseSearchCV(six.with_metaclass(ABCMeta, BaseEstimator,
                                       MetaEstimatorMixin)):
-    """Base class for hyper parameter search with cross-validation."""
+    """Base class for hyper parameter search with cross-validation.
+
+    Attributes
+    ----------
+    refit_time_ : float
+        Seconds used for refitting the best model on the whole dataset.
+        This is present only if ``refit`` is not False.
+    """
 
     @abstractmethod
     def __init__(self, estimator, scoring=None,
@@ -766,10 +775,13 @@ class BaseSearchCV(six.with_metaclass(ABCMeta, BaseEstimator,
         if self.refit:
             self.best_estimator_ = clone(base_estimator).set_params(
                 **self.best_params_)
+            refit_start_time = time.time()
             if y is not None:
                 self.best_estimator_.fit(X, y, **fit_params)
             else:
                 self.best_estimator_.fit(X, **fit_params)
+            refit_end_time = time.time()
+            self.refit_time_ = refit_end_time - refit_start_time
 
         # Store the only scorer not as a dict for single metric evaluation
         self.scorer_ = scorers if self.multimetric_ else scorers['score']
@@ -821,6 +833,12 @@ class GridSearchCV(BaseSearchCV):
 
     Read more in the :ref:`User Guide <grid_search>`.
 
+    Attributes
+    ----------
+    refit_time_ : float
+        Seconds used for refitting the best model on the whole dataset.
+        This is present only if ``refit`` is not False.
+
     Parameters
     ----------
     estimator : estimator object.
@@ -1151,6 +1169,12 @@ class RandomizedSearchCV(BaseSearchCV):
 
     Read more in the :ref:`User Guide <randomized_parameter_search>`.
 
+    Attributes
+    ----------
+    refit_time_ : float
+        Seconds used for refitting the best model on the whole dataset.
+        This is present only if ``refit`` is not False.
+
     Parameters
     ----------
     estimator : estimator object.
