{"instance_id": "sphinx-doc__sphinx-7462", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex a427d5493..978e3d8e0 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 3ca730e30..2e2bedcf7 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -100,7 +100,8 @@ def _parse_annotation(annotation: str) -> List[Node]:\n             for elem in node.elts:\n                 result.extend(unparse(elem))\n                 result.append(addnodes.desc_sig_punctuation('', ', '))\n-            result.pop()\n+            if node.elts:\n+                result.pop()\n             result.append(addnodes.desc_sig_punctuation('', ']'))\n             return result\n         elif isinstance(node, ast.Module):\n@@ -114,11 +115,13 @@ def _parse_annotation(annotation: str) -> List[Node]:\n             result.append(addnodes.desc_sig_punctuation('', ']'))\n             return result\n         elif isinstance(node, ast.Tuple):\n-            result = []\n+            result = [addnodes.desc_sig_punctuation('', '(')]\n             for elem in node.elts:\n                 result.extend(unparse(elem))\n                 result.append(addnodes.desc_sig_punctuation('', ', '))\n-            result.pop()\n+            if node.elts:\n+                result.pop()\n+            result.append(addnodes.desc_sig_punctuation('', ')'))\n             return result\n         else:\n             raise SyntaxError  # unsupported syntax\ndiff --git a/tox.ini b/tox.ini\nindex d9f040544..bf39854b6 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ extras =\n setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From 2e219366c433deb56fd3311a9245cdbabac05ca6 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Sun, 12 Apr 2020 12:29:54 +0900\nSubject: [PATCH 1/2] Fix #7461: py domain: fails with IndexError for empty\n tuple in type annotation\n\n---\n CHANGES                  |  2 ++\n sphinx/domains/python.py | 15 ++++++++++-----\n tests/test_domain_py.py  |  7 +++++++\n 3 files changed, 19 insertions(+), 5 deletions(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 84d3c266944..31bc95082b7 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -16,6 +16,8 @@ Features added\n Bugs fixed\n ----------\n \n+* #7461: py domain: fails with IndexError for empty tuple in type annotation\n+\n Testing\n --------\n \ndiff --git a/sphinx/domains/python.py b/sphinx/domains/python.py\nindex 07a66fe22a7..19da49ac644 100644\n--- a/sphinx/domains/python.py\n+++ b/sphinx/domains/python.py\n@@ -105,11 +105,16 @@ def unparse(node: ast.AST) -> List[Node]:\n             result.append(addnodes.desc_sig_punctuation('', ']'))\n             return result\n         elif isinstance(node, ast.Tuple):\n-            result = []\n-            for elem in node.elts:\n-                result.extend(unparse(elem))\n-                result.append(addnodes.desc_sig_punctuation('', ', '))\n-            result.pop()\n+            if node.elts:\n+                result = []\n+                for elem in node.elts:\n+                    result.extend(unparse(elem))\n+                    result.append(addnodes.desc_sig_punctuation('', ', '))\n+                result.pop()\n+            else:\n+                result = [addnodes.desc_sig_punctuation('', '('),\n+                          addnodes.desc_sig_punctuation('', ')')]\n+\n             return result\n         else:\n             raise SyntaxError  # unsupported syntax\ndiff --git a/tests/test_domain_py.py b/tests/test_domain_py.py\nindex cc3d3cf5364..e330ba6349c 100644\n--- a/tests/test_domain_py.py\n+++ b/tests/test_domain_py.py\n@@ -255,6 +255,13 @@ def test_parse_annotation():\n                           [pending_xref, \"int\"],\n                           [desc_sig_punctuation, \"]\"]))\n \n+    doctree = _parse_annotation(\"Tuple[()]\")\n+    assert_node(doctree, ([pending_xref, \"Tuple\"],\n+                          [desc_sig_punctuation, \"[\"],\n+                          [desc_sig_punctuation, \"(\"],\n+                          [desc_sig_punctuation, \")\"],\n+                          [desc_sig_punctuation, \"]\"]))\n+\n     doctree = _parse_annotation(\"Callable[[int, int], int]\")\n     assert_node(doctree, ([pending_xref, \"Callable\"],\n                           [desc_sig_punctuation, \"[\"],\n\nFrom c8355234ebc63258004ad06da6bcf9dd7b98fac3 Mon Sep 17 00:00:00 2001\nFrom: Takeshi KOMIYA <i.tkomiya@gmail.com>\nDate: Sun, 12 Apr 2020 13:00:04 +0900\nSubject: [PATCH 2/2] Fix #7461: autodoc: empty tuple in type annotation is not\n shown correctly\n\n---\n CHANGES                  | 1 +\n sphinx/pycode/ast.py     | 5 ++++-\n tests/test_pycode_ast.py | 1 +\n 3 files changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a/CHANGES b/CHANGES\nindex 31bc95082b7..7a813f802d9 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -17,6 +17,7 @@ Bugs fixed\n ----------\n \n * #7461: py domain: fails with IndexError for empty tuple in type annotation\n+* #7461: autodoc: empty tuple in type annotation is not shown correctly\n \n Testing\n --------\ndiff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py\nindex 4d8aa8955ac..fb2a7152ddc 100644\n--- a/sphinx/pycode/ast.py\n+++ b/sphinx/pycode/ast.py\n@@ -114,7 +114,10 @@ def unparse(node: ast.AST) -> str:\n     elif isinstance(node, ast.UnaryOp):\n         return \"%s %s\" % (unparse(node.op), unparse(node.operand))\n     elif isinstance(node, ast.Tuple):\n-        return \", \".join(unparse(e) for e in node.elts)\n+        if node.elts:\n+            return \", \".join(unparse(e) for e in node.elts)\n+        else:\n+            return \"()\"\n     elif sys.version_info > (3, 6) and isinstance(node, ast.Constant):\n         # this branch should be placed at last\n         return repr(node.value)\ndiff --git a/tests/test_pycode_ast.py b/tests/test_pycode_ast.py\nindex 117feb8f752..9b12d24d5f6 100644\n--- a/tests/test_pycode_ast.py\n+++ b/tests/test_pycode_ast.py\n@@ -54,6 +54,7 @@\n     (\"- 1\", \"- 1\"),                             # UnaryOp\n     (\"- a\", \"- a\"),                             # USub\n     (\"(1, 2, 3)\", \"1, 2, 3\"),                   # Tuple\n+    (\"()\", \"()\"),                               # Tuple (empty)\n ])\n def test_unparse(source, expected):\n     module = ast.parse(source)\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/7462"}