{"instance_id": "django__django-12858", "score": "I", "diff": "diff --git a/tests/lookup/models.py b/tests/lookup/models.py\nindex 6a0afaacde..899d7e4d43 100644\n--- a/tests/lookup/models.py\n+++ b/tests/lookup/models.py\n@@ -95,6 +95,18 @@ class Product(models.Model):\n class Stock(models.Model):\n     product = models.ForeignKey(Product, models.CASCADE)\n     qty_available = models.DecimalField(max_digits=6, decimal_places=2)\n+    supply = models.ForeignKey('Supply', models.CASCADE, related_name='stocks')\n+\n+    class Meta:\n+        ordering = ['supply__product__parent__isnull']\n+\n+class Supply(models.Model):\n+    product = models.ForeignKey(Product, models.CASCADE)\n+\n+class Product(models.Model):\n+    name = models.CharField(max_length=80)\n+    qty_target = models.DecimalField(max_digits=6, decimal_places=2)\n+    parent = models.ForeignKey('self', models.CASCADE, null=True, blank=True)\n \n \n class Freebie(models.Model):\n", "gold_standard_diff": "From 20c0892f432f75ed4b3b0de442e44266b87ae6b1 Mon Sep 17 00:00:00 2001\nFrom: Mariusz Felisiak <felisiak.mariusz@gmail.com>\nDate: Tue, 5 May 2020 06:19:55 +0200\nSubject: [PATCH] Fixed #31538 -- Fixed Meta.ordering validation lookups that\n are not transforms.\n\nRegression in 440505cb2cadbe1a5b9fba246bcde6c04f51d07e.\n\nThanks Simon Meers for the report.\n---\n django/db/models/base.py                  | 4 +++-\n docs/releases/3.0.7.txt                   | 3 ++-\n tests/invalid_models_tests/test_models.py | 9 +++++++++\n 3 files changed, 14 insertions(+), 2 deletions(-)\n\ndiff --git a/django/db/models/base.py b/django/db/models/base.py\nindex 6c9e9d37074a..bc6f7d283e2d 100644\n--- a/django/db/models/base.py\n+++ b/django/db/models/base.py\n@@ -1747,7 +1747,9 @@ def _check_ordering(cls):\n                     else:\n                         _cls = None\n                 except (FieldDoesNotExist, AttributeError):\n-                    if fld is None or fld.get_transform(part) is None:\n+                    if fld is None or (\n+                        fld.get_transform(part) is None and fld.get_lookup(part) is None\n+                    ):\n                         errors.append(\n                             checks.Error(\n                                 \"'ordering' refers to the nonexistent field, \"\ndiff --git a/docs/releases/3.0.7.txt b/docs/releases/3.0.7.txt\nindex 6b204973bea0..9fc71d9aa28b 100644\n--- a/docs/releases/3.0.7.txt\n+++ b/docs/releases/3.0.7.txt\n@@ -9,4 +9,5 @@ Django 3.0.7 fixes several bugs in 3.0.6.\n Bugfixes\n ========\n \n-* ...\n+* Fixed a regression in Django 3.0 by restoring the ability to use field\n+  lookups in ``Meta.ordering`` (:ticket:`31538`).\ndiff --git a/tests/invalid_models_tests/test_models.py b/tests/invalid_models_tests/test_models.py\nindex 6bfdf2e73658..5a1bb4cc7a6b 100644\n--- a/tests/invalid_models_tests/test_models.py\n+++ b/tests/invalid_models_tests/test_models.py\n@@ -893,6 +893,15 @@ class Meta:\n         with register_lookup(models.CharField, Lower):\n             self.assertEqual(Model.check(), [])\n \n+    def test_ordering_pointing_to_lookup_not_transform(self):\n+        class Model(models.Model):\n+            test = models.CharField(max_length=100)\n+\n+            class Meta:\n+                ordering = ('test__isnull',)\n+\n+        self.assertEqual(Model.check(), [])\n+\n     def test_ordering_pointing_to_related_model_pk(self):\n         class Parent(models.Model):\n             pass\n", "gold_standard_pr_link": "https://github.com/django/django/pull/12858"}