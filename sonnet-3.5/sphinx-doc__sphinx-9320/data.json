{"instance_id": "sphinx-doc__sphinx-9320", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex 206ff4ad4..4bb5faeb1 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.14,<0.18',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex a40a21073..09512c0a5 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -89,6 +89,8 @@ class ValidationError(Exception):\n \n \n def is_path(x: str) -> str:\n+    if not x:  # Allow empty input\n+        return x\n     x = path.expanduser(x)\n     if not path.isdir(x):\n         raise ValidationError(__(\"Please enter a valid path name.\"))\n@@ -225,7 +227,8 @@ def ask_user(d: Dict) -> None:\n         d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n                               '', is_path)\n         if not d['path']:\n-            sys.exit(1)\n+            print(__('Exiting.'))\n+            return\n \n     if 'sep' not in d:\n         print()\ndiff --git a/tox.ini b/tox.ini\nindex a363e187f..3b8bc12d0 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -27,7 +27,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "From 864a0b377d3ef6526837dfb721c260587ccb64f9 Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Fri, 11 Jun 2021 23:06:03 +1000\nSubject: [PATCH 1/6] Add test\n\n---\n tests/test_quickstart.py | 16 +++++++++++++++-\n 1 file changed, 15 insertions(+), 1 deletion(-)\n\ndiff --git a/tests/test_quickstart.py b/tests/test_quickstart.py\nindex 94144ef2210..96b11daec7f 100644\n--- a/tests/test_quickstart.py\n+++ b/tests/test_quickstart.py\n@@ -10,6 +10,7 @@\n \n import time\n from io import StringIO\n+from os import path\n \n import pytest\n \n@@ -122,7 +123,6 @@ def test_quickstart_defaults(tempdir):\n     assert (tempdir / 'Makefile').isfile()\n     assert (tempdir / 'make.bat').isfile()\n \n-\n def test_quickstart_all_answers(tempdir):\n     answers = {\n         'Root path': tempdir,\n@@ -250,3 +250,17 @@ def test_extensions(tempdir):\n     ns = {}\n     exec(conffile.read_text(), ns)\n     assert ns['extensions'] == ['foo', 'bar', 'baz']\n+\n+def test_easy_exit_when_existing_confpy(monkeypatch):\n+    # The code detects existing conf.py with isfile() so we mock it\n+    def mock_isfile(path):\n+        return True\n+    monkeypatch.setattr(path, 'isfile', mock_isfile)\n+    \n+    answers = {\n+        'Please enter a new root path': '',\n+    }\n+    qs.term_input = mock_input(answers)\n+    d = {}\n+    with pytest.raises(SystemExit):\n+        qs.ask_user(d)\n\\ No newline at end of file\n\nFrom 025db046580c400ad9a6d7eb04434bfc46ce3300 Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Fri, 11 Jun 2021 23:06:29 +1000\nSubject: [PATCH 2/6] Add fix\n\n---\n sphinx/cmd/quickstart.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex a40a2107310..29f1c50a63a 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -223,7 +223,7 @@ def ask_user(d: Dict) -> None:\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n         d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n-                              '', is_path)\n+                              '', ok)\n         if not d['path']:\n             sys.exit(1)\n \n\nFrom 81049deed6a9daaa887abd3cbf217237e225302d Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Sat, 12 Jun 2021 00:07:34 +1000\nSubject: [PATCH 3/6] Make quickstart just exit without reprompting\n\n---\n sphinx/cmd/quickstart.py | 7 ++-----\n tests/test_quickstart.py | 9 +++------\n 2 files changed, 5 insertions(+), 11 deletions(-)\n\ndiff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 29f1c50a63a..1b2eacc95e9 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -220,12 +220,9 @@ def ask_user(d: Dict) -> None:\n         print()\n         print(bold(__('Error: an existing conf.py has been found in the '\n                       'selected root path.')))\n-        print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n+        print(__('sphinx-quickstart will not overwrite existing Sphinx projects. Try another directory?'))\n         print()\n-        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n-                              '', ok)\n-        if not d['path']:\n-            sys.exit(1)\n+        sys.exit(1)\n \n     if 'sep' not in d:\n         print()\ndiff --git a/tests/test_quickstart.py b/tests/test_quickstart.py\nindex 96b11daec7f..4ee5535cb65 100644\n--- a/tests/test_quickstart.py\n+++ b/tests/test_quickstart.py\n@@ -251,16 +251,13 @@ def test_extensions(tempdir):\n     exec(conffile.read_text(), ns)\n     assert ns['extensions'] == ['foo', 'bar', 'baz']\n \n-def test_easy_exit_when_existing_confpy(monkeypatch):\n+def test_exits_upon_existing_confpy(monkeypatch):\n     # The code detects existing conf.py with isfile() so we mock it\n     def mock_isfile(path):\n         return True\n     monkeypatch.setattr(path, 'isfile', mock_isfile)\n     \n-    answers = {\n-        'Please enter a new root path': '',\n-    }\n-    qs.term_input = mock_input(answers)\n+    qs.term_input = mock_input({})\n     d = {}\n     with pytest.raises(SystemExit):\n-        qs.ask_user(d)\n\\ No newline at end of file\n+        qs.ask_user(d)\n\nFrom 17114d7741e8f2c32d477c09f2bae7affd95bba8 Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Sat, 12 Jun 2021 00:19:12 +1000\nSubject: [PATCH 4/6] Edit message\n\n---\n sphinx/cmd/quickstart.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 1b2eacc95e9..359355ad11b 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -220,7 +220,7 @@ def ask_user(d: Dict) -> None:\n         print()\n         print(bold(__('Error: an existing conf.py has been found in the '\n                       'selected root path.')))\n-        print(__('sphinx-quickstart will not overwrite existing Sphinx projects. Try another directory?'))\n+        print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n         sys.exit(1)\n \n\nFrom 6a9cc9e5ea9a8baca2e289ed1f2c925e6e610ea3 Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Mon, 14 Jun 2021 15:57:50 +1000\nSubject: [PATCH 5/6] Fix flake8 errors\n\n---\n sphinx/cmd/quickstart.py | 11 ++++++++++-\n tests/test_quickstart.py |  4 +++-\n 2 files changed, 13 insertions(+), 2 deletions(-)\n\ndiff --git a/sphinx/cmd/quickstart.py b/sphinx/cmd/quickstart.py\nindex 359355ad11b..7dfc29e192f 100644\n--- a/sphinx/cmd/quickstart.py\n+++ b/sphinx/cmd/quickstart.py\n@@ -95,6 +95,12 @@ def is_path(x: str) -> str:\n     return x\n \n \n+def is_path_or_empty(x: str) -> str:\n+    if x == '':\n+        return x\n+    return is_path(x)\n+\n+\n def allow_empty(x: str) -> str:\n     return x\n \n@@ -222,7 +228,10 @@ def ask_user(d: Dict) -> None:\n                       'selected root path.')))\n         print(__('sphinx-quickstart will not overwrite existing Sphinx projects.'))\n         print()\n-        sys.exit(1)\n+        d['path'] = do_prompt(__('Please enter a new root path (or just Enter to exit)'),\n+                              '', is_path_or_empty)\n+        if not d['path']:\n+            sys.exit(1)\n \n     if 'sep' not in d:\n         print()\ndiff --git a/tests/test_quickstart.py b/tests/test_quickstart.py\nindex 4ee5535cb65..86c9cc6da52 100644\n--- a/tests/test_quickstart.py\n+++ b/tests/test_quickstart.py\n@@ -123,6 +123,7 @@ def test_quickstart_defaults(tempdir):\n     assert (tempdir / 'Makefile').isfile()\n     assert (tempdir / 'make.bat').isfile()\n \n+\n def test_quickstart_all_answers(tempdir):\n     answers = {\n         'Root path': tempdir,\n@@ -251,12 +252,13 @@ def test_extensions(tempdir):\n     exec(conffile.read_text(), ns)\n     assert ns['extensions'] == ['foo', 'bar', 'baz']\n \n+\n def test_exits_upon_existing_confpy(monkeypatch):\n     # The code detects existing conf.py with isfile() so we mock it\n     def mock_isfile(path):\n         return True\n     monkeypatch.setattr(path, 'isfile', mock_isfile)\n-    \n+\n     qs.term_input = mock_input({})\n     d = {}\n     with pytest.raises(SystemExit):\n\nFrom 9ff16979390a789aefd1585a7c97d80c51c17207 Mon Sep 17 00:00:00 2001\nFrom: Raymond Sun <raymondsun33@gmail.com>\nDate: Mon, 14 Jun 2021 16:02:28 +1000\nSubject: [PATCH 6/6] Make test more readable\n\n---\n tests/test_quickstart.py | 9 ++++++---\n 1 file changed, 6 insertions(+), 3 deletions(-)\n\ndiff --git a/tests/test_quickstart.py b/tests/test_quickstart.py\nindex 86c9cc6da52..02140cf0223 100644\n--- a/tests/test_quickstart.py\n+++ b/tests/test_quickstart.py\n@@ -253,13 +253,16 @@ def test_extensions(tempdir):\n     assert ns['extensions'] == ['foo', 'bar', 'baz']\n \n \n-def test_exits_upon_existing_confpy(monkeypatch):\n-    # The code detects existing conf.py with isfile() so we mock it\n+def test_exits_when_existing_confpy(monkeypatch):\n+    # The code detects existing conf.py with path.isfile() \n+    # so we mock it as True with pytest's monkeypatch\n     def mock_isfile(path):\n         return True\n     monkeypatch.setattr(path, 'isfile', mock_isfile)\n \n-    qs.term_input = mock_input({})\n+    qs.term_input = mock_input({\n+        'Please enter a new root path (or just Enter to exit)': ''\n+    })\n     d = {}\n     with pytest.raises(SystemExit):\n         qs.ask_user(d)\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/9320"}