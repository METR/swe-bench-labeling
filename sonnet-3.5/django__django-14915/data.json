{"instance_id": "django__django-14915", "score": "C", "diff": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 5dcf923c12..bc7e6959e7 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1171,6 +1171,9 @@ class ModelChoiceIteratorValue:\n             other = other.value\n         return self.value == other\n \n+    def __hash__(self):\n+        return hash(self.value)\n+\n \n class ModelChoiceIterator:\n     def __init__(self, field):\n", "gold_standard_diff": "From 2f47e634d884cbe8d285ff3b5467abbfdff017f2 Mon Sep 17 00:00:00 2001\nFrom: Aljaz Kosir <aljazkosir5@gmail.com>\nDate: Thu, 30 Sep 2021 10:27:46 +0200\nSubject: [PATCH] Fixed #33155 -- Make ModelChoiceIteratorValue hashable\n\n---\n AUTHORS                                    | 1 +\n django/forms/models.py                     | 3 +++\n tests/model_forms/test_modelchoicefield.py | 8 +++++++-\n 3 files changed, 11 insertions(+), 1 deletion(-)\n\ndiff --git a/AUTHORS b/AUTHORS\nindex 214aca248070..146b0be3a317 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -54,6 +54,7 @@ answer newbie questions, and generally made Django that much better:\n     Alexey Boriskin <alex@boriskin.me>\n     Alexey Tsivunin <most-208@yandex.ru>\n     Ali Vakilzade <ali@vakilzade.com>\n+    Alja\u017e Ko\u0161ir <aljazkosir5@gmail.com>\n     Aljosa Mohorovic <aljosa.mohorovic@gmail.com>\n     Amit Chakradeo <https://amit.chakradeo.net/>\n     Amit Ramon <amit.ramon@gmail.com>\ndiff --git a/django/forms/models.py b/django/forms/models.py\nindex 5dcf923c1244..7effb202e3db 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1166,6 +1166,9 @@ def __init__(self, value, instance):\n     def __str__(self):\n         return str(self.value)\n \n+    def __hash__(self):\n+        return hash(self.value)\n+\n     def __eq__(self, other):\n         if isinstance(other, ModelChoiceIteratorValue):\n             other = other.value\ndiff --git a/tests/model_forms/test_modelchoicefield.py b/tests/model_forms/test_modelchoicefield.py\nindex 2a0c05d80394..30d1a058219d 100644\n--- a/tests/model_forms/test_modelchoicefield.py\n+++ b/tests/model_forms/test_modelchoicefield.py\n@@ -2,7 +2,7 @@\n \n from django import forms\n from django.core.exceptions import ValidationError\n-from django.forms.models import ModelChoiceIterator\n+from django.forms.models import ModelChoiceIterator, ModelChoiceIteratorValue\n from django.forms.widgets import CheckboxSelectMultiple\n from django.template import Context, Template\n from django.test import TestCase\n@@ -341,6 +341,12 @@ class CustomModelMultipleChoiceField(forms.ModelMultipleChoiceField):\n </div>\"\"\" % (self.c1.pk, self.c2.pk, self.c3.pk),\n         )\n \n+    def test_choice_value_hash(self):\n+        value_1 = ModelChoiceIteratorValue(self.c1.pk, self.c1)\n+        value_2 = ModelChoiceIteratorValue(self.c2.pk, self.c2)\n+        self.assertEqual(hash(value_1), hash(ModelChoiceIteratorValue(self.c1.pk, None)))\n+        self.assertNotEqual(hash(value_1), hash(value_2))\n+\n     def test_choices_not_fetched_when_not_rendering(self):\n         with self.assertNumQueries(1):\n             field = forms.ModelChoiceField(Category.objects.order_by('-name'))\n", "gold_standard_pr_link": "https://github.com/django/django/pull/14915"}