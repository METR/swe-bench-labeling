{"instance_id": "scikit-learn__scikit-learn-25747", "score": "I", "diff": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 94d9465d7..ce313be7c 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -1280,6 +1280,12 @@ class FeatureUnion(TransformerMixin, _BaseComposition):\n         config = _get_output_config(\"transform\", self)\n         if config[\"dense\"] == \"pandas\" and all(hasattr(X, \"iloc\") for X in Xs):\n             pd = check_pandas_support(\"transform\")\n+            # Handle case where transformers return Series or DataFrames with different indices\n+            if all(isinstance(X, (pd.Series, pd.DataFrame)) for X in Xs):\n+                # Find the index with the most elements\n+                max_index = max(X.index for X in Xs)\n+                # Reindex all DataFrames to the max_index\n+                Xs = [X.reindex(max_index) for X in Xs]\n             return pd.concat(Xs, axis=1)\n \n         if any(sparse.issparse(f) for f in Xs):\n", "gold_standard_diff": "From f0efeff9f35cf820ac6d0741a0881809ef250417 Mon Sep 17 00:00:00 2001\nFrom: \"Thomas J. Fan\" <thomasjpfan@gmail.com>\nDate: Thu, 2 Mar 2023 15:34:42 -0500\nSubject: [PATCH 1/2] FIX TransformerMixin does not override index if\n transform=pandas\n\n---\n doc/whats_new/v1.2.rst                 |  7 ++++++\n sklearn/utils/_set_output.py           |  4 +--\n sklearn/utils/tests/test_set_output.py | 34 +++++++++++++++++++++++++-\n 3 files changed, 41 insertions(+), 4 deletions(-)\n\ndiff --git a/doc/whats_new/v1.2.rst b/doc/whats_new/v1.2.rst\nindex c252a7c18f5c9..e4b49dbec10c4 100644\n--- a/doc/whats_new/v1.2.rst\n+++ b/doc/whats_new/v1.2.rst\n@@ -27,6 +27,13 @@ Changes impacting all modules\n Changelog\n ---------\n \n+:mod:`sklearn.base`\n+...................\n+\n+- |Fix| When `set_output(transform=\"pandas\")`, :class:`base.TransformerMixin` maintains\n+  the index if the :term:`transform` output is already a DataFrame. :pr:`xxxxx` by\n+  `Thomas Fan`_.\n+\n :mod:`sklearn.calibration`\n ..........................\n \ndiff --git a/sklearn/utils/_set_output.py b/sklearn/utils/_set_output.py\nindex 335773c6af96c..0a07ee77b9fc1 100644\n--- a/sklearn/utils/_set_output.py\n+++ b/sklearn/utils/_set_output.py\n@@ -34,7 +34,7 @@ def _wrap_in_pandas_container(\n         `range(n_features)`.\n \n     index : array-like, default=None\n-        Index for data.\n+        Index for data. `index` is ignored if `data_to_wrap` is already a DataFrame.\n \n     Returns\n     -------\n@@ -55,8 +55,6 @@ def _wrap_in_pandas_container(\n     if isinstance(data_to_wrap, pd.DataFrame):\n         if columns is not None:\n             data_to_wrap.columns = columns\n-        if index is not None:\n-            data_to_wrap.index = index\n         return data_to_wrap\n \n     return pd.DataFrame(data_to_wrap, index=index, columns=columns)\ndiff --git a/sklearn/utils/tests/test_set_output.py b/sklearn/utils/tests/test_set_output.py\nindex ac73ca09439ff..52213d771ee44 100644\n--- a/sklearn/utils/tests/test_set_output.py\n+++ b/sklearn/utils/tests/test_set_output.py\n@@ -33,7 +33,9 @@ def test__wrap_in_pandas_container_dense_update_columns_and_index():\n \n     new_df = _wrap_in_pandas_container(X_df, columns=new_columns, index=new_index)\n     assert_array_equal(new_df.columns, new_columns)\n-    assert_array_equal(new_df.index, new_index)\n+\n+    # Index does not change when the input is a DataFrame\n+    assert_array_equal(new_df.index, X_df.index)\n \n \n def test__wrap_in_pandas_container_error_validation():\n@@ -260,3 +262,33 @@ class C(A, B):\n         pass\n \n     assert C().transform(None) == \"B\"\n+\n+\n+class EstimatorWithSetOutputIndex(_SetOutputMixin):\n+    def fit(self, X, y=None):\n+        self.n_features_in_ = X.shape[1]\n+        return self\n+\n+    def transform(self, X, y=None):\n+        import pandas as pd\n+\n+        # transform by giving output a new index.\n+        return pd.DataFrame(X.to_numpy(), index=[f\"s{i}\" for i in range(X.shape[0])])\n+\n+    def get_feature_names_out(self, input_features=None):\n+        return np.asarray([f\"X{i}\" for i in range(self.n_features_in_)], dtype=object)\n+\n+\n+def test_set_output_pandas_keep_index():\n+    \"\"\"Check that set_output does not override index.\n+\n+    Non-regression test for gh-25730.\n+    \"\"\"\n+    pd = pytest.importorskip(\"pandas\")\n+\n+    X = pd.DataFrame([[1, 2, 3], [4, 5, 6]], index=[0, 1])\n+    est = EstimatorWithSetOutputIndex().set_output(transform=\"pandas\")\n+    est.fit(X)\n+\n+    X_trans = est.transform(X)\n+    assert_array_equal(X_trans.index, [\"s0\", \"s1\"])\n\nFrom dffff1a97b56fc0bd1d3fc49a05460be2c8afdf3 Mon Sep 17 00:00:00 2001\nFrom: \"Thomas J. Fan\" <thomasjpfan@gmail.com>\nDate: Thu, 2 Mar 2023 15:39:28 -0500\nSubject: [PATCH 2/2] DOC Adds PR number\n\n---\n doc/whats_new/v1.2.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/doc/whats_new/v1.2.rst b/doc/whats_new/v1.2.rst\nindex e4b49dbec10c4..2e378d478c100 100644\n--- a/doc/whats_new/v1.2.rst\n+++ b/doc/whats_new/v1.2.rst\n@@ -31,7 +31,7 @@ Changelog\n ...................\n \n - |Fix| When `set_output(transform=\"pandas\")`, :class:`base.TransformerMixin` maintains\n-  the index if the :term:`transform` output is already a DataFrame. :pr:`xxxxx` by\n+  the index if the :term:`transform` output is already a DataFrame. :pr:`25747` by\n   `Thomas Fan`_.\n \n :mod:`sklearn.calibration`\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/25747"}