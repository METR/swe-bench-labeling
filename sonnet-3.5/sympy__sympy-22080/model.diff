diff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py
index 0ed6ce2eb1..bf1ba52e85 100644
--- a/sympy/utilities/lambdify.py
+++ b/sympy/utilities/lambdify.py
@@ -173,9 +173,22 @@ def _import(module, reload=False):
 # linecache.
 _lambdify_generated_counter = 1
 
+def handle_mod_for_empty_modules(expr):
+    """
+    Special handling for Mod function when modules=[]
+    """
+    from sympy import Mod
+    def custom_mod(a, b):
+        return a - b * (a // b)
+    return expr.replace(Mod, custom_mod)
+
 @doctest_depends_on(modules=('numpy', 'scipy', 'tensorflow',), python_version=(3,))
 def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True,
              dummify=False, cse=False):
+    # Special handling for Mod when modules=[]
+    if modules == []:
+        expr = handle_mod_for_empty_modules(expr)
+
     """Convert a SymPy expression into a function that allows for fast
     numeric evaluation.
 
@@ -187,6 +200,9 @@ def lambdify(args: Iterable, expr, modules=None, printer=None, use_imps=True,
        Passing a set for the *args* parameter is deprecated as sets are
        unordered. Use an ordered iterable such as a list or tuple.
 
+    .. versionchanged:: 1.x.x
+       Special handling for Mod function when modules=[] is specified.
+
     Explanation
     ===========
 
