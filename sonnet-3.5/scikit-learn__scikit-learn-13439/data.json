{"instance_id": "scikit-learn__scikit-learn-13439", "score": "C", "diff": "diff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 7eaf9a46f..5f0d6dac2 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,6 +199,10 @@ class Pipeline(_BaseComposition):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n+    def __len__(self):\n+        \"\"\"Returns the number of steps in the pipeline.\"\"\"\n+        return len(self.steps)\n+\n     def __getitem__(self, ind):\n         \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n \n", "gold_standard_diff": "diff --git a/doc/whats_new/v0.21.rst b/doc/whats_new/v0.21.rst\nindex 8787b07d5347e..cd4daebf9632b 100644\n--- a/doc/whats_new/v0.21.rst\n+++ b/doc/whats_new/v0.21.rst\n@@ -413,6 +413,10 @@ Support for Python 3.4 and below has been officially dropped.\n - |API| :class:`pipeline.Pipeline` now supports using ``'passthrough'`` as a\n   transformer. :issue:`11144` by :user:`Thomas Fan <thomasjpfan>`.\n \n+- |Enhancement| :class:`pipeline.Pipeline`  implements ``__len__`` and\n+  therefore ``len(pipeline)`` returns the number of steps in the pipeline.\n+  :issue:`13439` by :user:`Lakshya KD <LakshKD>`.\n+\n :mod:`sklearn.preprocessing`\n ............................\n \ndiff --git a/sklearn/pipeline.py b/sklearn/pipeline.py\nindex 7eaf9a46f09e9..d1d03656d2a62 100644\n--- a/sklearn/pipeline.py\n+++ b/sklearn/pipeline.py\n@@ -199,6 +199,12 @@ def _iter(self, with_final=True):\n             if trans is not None and trans != 'passthrough':\n                 yield idx, name, trans\n \n+    def __len__(self):\n+        \"\"\"\n+        Returns the length of the Pipeline\n+        \"\"\"\n+        return len(self.steps)\n+\n     def __getitem__(self, ind):\n         \"\"\"Returns a sub-pipeline or a single esimtator in the pipeline\n \ndiff --git a/sklearn/tests/test_pipeline.py b/sklearn/tests/test_pipeline.py\nindex 8d6fe8f70374e..ed81db747e20c 100644\n--- a/sklearn/tests/test_pipeline.py\n+++ b/sklearn/tests/test_pipeline.py\n@@ -1069,5 +1069,6 @@ def test_make_pipeline_memory():\n     assert pipeline.memory is memory\n     pipeline = make_pipeline(DummyTransf(), SVC())\n     assert pipeline.memory is None\n+    assert len(pipeline) == 2\n \n     shutil.rmtree(cachedir)\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/13439"}