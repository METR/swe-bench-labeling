{"instance_id": "sympy__sympy-18199", "score": "I", "diff": "diff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 9a3052d4c3..4cd9177099 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -765,9 +765,15 @@ def nthroot_mod(a, n, p, all_roots=False):\n     [8, 11]\n     >>> nthroot_mod(68, 3, 109)\n     23\n+    >>> nthroot_mod(0, 5, 17)\n+    0\n+    >>> nthroot_mod(0, 5, 17, True)\n+    [0]\n     \"\"\"\n     from sympy.core.numbers import igcdex\n     a, n, p = as_int(a), as_int(n), as_int(p)\n+    if a % p == 0:\n+        return [0] if all_roots else 0\n     if n == 2:\n         return sqrt_mod(a, p, all_roots)\n     # see Hackman \"Elementary Number Theory\" (2009), page 76\ndiff --git a/sympy/ntheory/tests/test_residue.py b/sympy/ntheory/tests/test_residue.py\nindex d4854547be..34f8573582 100644\n--- a/sympy/ntheory/tests/test_residue.py\n+++ b/sympy/ntheory/tests/test_residue.py\n@@ -244,3 +244,11 @@ def test_residue():\n     args = 5779, 3528, 6215\n     assert discrete_log(*args) == 687\n     assert discrete_log(*Tuple(*args)) == 687\n+# Test for the new functionality in nthroot_mod\n+from sympy.ntheory.residue_ntheory import nthroot_mod\n+assert nthroot_mod(0, 5, 17) == 0\n+assert nthroot_mod(0, 5, 17, all_roots=True) == [0]\n+assert nthroot_mod(17*17, 5, 17) == 0\n+assert nthroot_mod(17*17, 5, 17, all_roots=True) == [0]\n+\n+print(\"All tests passed successfully!\")\n\\ No newline at end of file\n", "gold_standard_diff": "From 9e58be336c838a1daac7e23a834636418de09d25 Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Sun, 5 Jan 2020 03:14:58 +0530\nSubject: [PATCH 1/8] composite number for nthroot_mod\n\n---\n sympy/ntheory/residue_ntheory.py     | 50 ++++++++++++++++++++++++++--\n sympy/ntheory/tests/test_residue.py  | 12 +++++--\n sympy/solvers/tests/test_solveset.py |  7 ++--\n 3 files changed, 60 insertions(+), 9 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 9a3052d4c3b7..715c89297305 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -2,6 +2,7 @@\n \n from sympy.core.compatibility import as_int, range\n from sympy.core.function import Function\n+from sympy.utilities.iterables import cartes\n from sympy.core.numbers import igcd, igcdex, mod_inverse\n from sympy.core.power import isqrt\n from sympy.core.singleton import S\n@@ -742,6 +743,48 @@ def _nthroot_mod1(s, q, p, all_roots):\n         return res\n     return min(res)\n \n+def _nthroot_mod_composite(a, n, m):\n+    \"\"\"\n+    Find the solutions to ``x**n = a mod m`` when m is not prime.\n+    \"\"\"\n+    from sympy.ntheory.modular import crt\n+    f = factorint(m)\n+    dd = {}\n+    for p, e in f.items():\n+        tot_roots = set()\n+        if e == 1:\n+            root = nthroot_mod(a, n, p, True) or []\n+            for num in root:\n+                tot_roots.add(num)\n+        else:\n+            roots = nthroot_mod(a, n, p, True) or []\n+            for root in roots:\n+                diff = (n * pow(root, n-1)) % p\n+                if diff != 0:\n+                    for j in range(1, e):\n+                        root = (root - (pow(root, n) - a)* mod_inverse(diff, p)) % pow(p, j + 1)\n+                    tot_roots.add(root)\n+                else:\n+                    new_base = p\n+                    roots_in_base = {root}\n+                    while new_base < pow(p, e):\n+                        new_base *= p\n+                        new_roots = set()\n+                        for k in roots_in_base:\n+                            if (pow(k, n) - a) % (new_base) != 0:\n+                                continue\n+                            while(k not in new_roots):\n+                                new_roots.add(k)\n+                                k = (k + (new_base // p)) % new_base\n+                        roots_in_base = new_roots\n+                    tot_roots = tot_roots | roots_in_base\n+        dd[pow(p, e)] = tot_roots\n+    a = []\n+    m = []\n+    for x, y in dd.items():\n+        m.append(x)\n+        a.append(list(y))\n+    return sorted(set(crt(m, list(i))[0] for i in cartes(*a)))\n \n def nthroot_mod(a, n, p, all_roots=False):\n     \"\"\"\n@@ -771,11 +814,12 @@ def nthroot_mod(a, n, p, all_roots=False):\n     if n == 2:\n         return sqrt_mod(a, p, all_roots)\n     # see Hackman \"Elementary Number Theory\" (2009), page 76\n+    if not isprime(p):\n+        return _nthroot_mod_composite(a, n, p)\n+    if a % p == 0:\n+        return [0]\n     if not is_nthpow_residue(a, n, p):\n         return None\n-    if not isprime(p):\n-        raise NotImplementedError(\"Not implemented for composite p\")\n-\n     if (p - 1) % n == 0:\n         return _nthroot_mod1(a, n, p, all_roots)\n     # The roots of ``x**n - a = 0 (mod p)`` are roots of\ndiff --git a/sympy/ntheory/tests/test_residue.py b/sympy/ntheory/tests/test_residue.py\nindex d4854547bee3..091539becd2c 100644\n--- a/sympy/ntheory/tests/test_residue.py\n+++ b/sympy/ntheory/tests/test_residue.py\n@@ -162,7 +162,9 @@ def test_residue():\n     assert is_nthpow_residue(31, 4, 41)\n     assert not is_nthpow_residue(2, 2, 5)\n     assert is_nthpow_residue(8547, 12, 10007)\n-    raises(NotImplementedError, lambda: nthroot_mod(29, 31, 74))\n+\n+    assert nthroot_mod(29, 31, 74) == [45]\n+\n     assert nthroot_mod(1801, 11, 2663) == 44\n     for a, q, p in [(51922, 2, 203017), (43, 3, 109), (1801, 11, 2663),\n           (26118163, 1303, 33333347), (1499, 7, 2663), (595, 6, 2663),\n@@ -170,8 +172,12 @@ def test_residue():\n         r = nthroot_mod(a, q, p)\n         assert pow(r, q, p) == a\n     assert nthroot_mod(11, 3, 109) is None\n-    raises(NotImplementedError, lambda: nthroot_mod(16, 5, 36))\n-    raises(NotImplementedError, lambda: nthroot_mod(9, 16, 36))\n+    assert nthroot_mod(16, 5, 36, True) == [4, 22]\n+    assert nthroot_mod(9, 16, 36, True) == [3, 9, 15, 21, 27, 33]\n+    assert nthroot_mod(4, 3, 3249000) == []\n+    assert nthroot_mod(36010, 8, 87382, True) == [40208, 47174]\n+    assert nthroot_mod(0, 12, 37, True) == [0]\n+    assert nthroot_mod(0, 7, 100, True) == [0, 10, 20, 30, 40, 50, 60, 70, 80, 90]\n \n     for p in primerange(5, 100):\n         qv = range(3, p, 4)\ndiff --git a/sympy/solvers/tests/test_solveset.py b/sympy/solvers/tests/test_solveset.py\nindex 47eeebabd815..9cec0839aaef 100644\n--- a/sympy/solvers/tests/test_solveset.py\n+++ b/sympy/solvers/tests/test_solveset.py\n@@ -2242,11 +2242,12 @@ def test_solve_modular():\n     assert solveset(Mod(3**(3**x), 4) - 3, x, S.Integers) == \\\n             Intersection(ImageSet(Lambda(n, Intersection({log(2*n + 1)/log(3)},\n             S.Integers)), S.Naturals0), S.Integers)\n-    # Not Implemented for m without primitive root\n+    # Implemented for m without primitive root\n     assert solveset(Mod(x**3, 8) - 1, x, S.Integers) == \\\n-            ConditionSet(x, Eq(Mod(x**3, 8) - 1, 0), S.Integers)\n+            ImageSet(Lambda(n, 8*n + 1), S.Integers)\n     assert solveset(Mod(x**4, 9) - 4, x, S.Integers) == \\\n-            ConditionSet(x, Eq(Mod(x**4, 9) - 4, 0), S.Integers)\n+            Union(ImageSet(Lambda(n, 9*n + 4), S.Integers),\n+            ImageSet(Lambda(n, 9*n + 5), S.Integers))\n     # domain intersection\n     assert solveset(3 - Mod(5*x - 8, 7), x, S.Naturals0) == \\\n             Intersection(ImageSet(Lambda(n, 7*n + 5), S.Integers), S.Naturals0)\n\nFrom c2b998030f3875d99a28998f0c797b3d64321cbf Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Sun, 5 Jan 2020 20:01:14 +0530\nSubject: [PATCH 2/8] made suggested changes\n\n---\n sympy/ntheory/residue_ntheory.py | 11 ++++-------\n 1 file changed, 4 insertions(+), 7 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 715c89297305..a6f1cf1442e9 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -753,13 +753,10 @@ def _nthroot_mod_composite(a, n, m):\n     for p, e in f.items():\n         tot_roots = set()\n         if e == 1:\n-            root = nthroot_mod(a, n, p, True) or []\n-            for num in root:\n-                tot_roots.add(num)\n+            tot_roots.update(nthroot_mod(a, n, p, True) or [])\n         else:\n-            roots = nthroot_mod(a, n, p, True) or []\n-            for root in roots:\n-                diff = (n * pow(root, n-1)) % p\n+            for root in nthroot_mod(a, n, p, True) or []:\n+                diff = (n * pow(root, n - 1)) % p\n                 if diff != 0:\n                     for j in range(1, e):\n                         root = (root - (pow(root, n) - a)* mod_inverse(diff, p)) % pow(p, j + 1)\n@@ -773,7 +770,7 @@ def _nthroot_mod_composite(a, n, m):\n                         for k in roots_in_base:\n                             if (pow(k, n) - a) % (new_base) != 0:\n                                 continue\n-                            while(k not in new_roots):\n+                            while k not in new_roots:\n                                 new_roots.add(k)\n                                 k = (k + (new_base // p)) % new_base\n                         roots_in_base = new_roots\n\nFrom 7ba05033e48f45f360257cea69b9f8a0520a1ace Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Tue, 7 Jan 2020 02:59:40 +0530\nSubject: [PATCH 3/8] minor change\n\n---\n sympy/ntheory/tests/test_residue.py | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a/sympy/ntheory/tests/test_residue.py b/sympy/ntheory/tests/test_residue.py\nindex 091539becd2c..fdc09e3e715a 100644\n--- a/sympy/ntheory/tests/test_residue.py\n+++ b/sympy/ntheory/tests/test_residue.py\n@@ -164,7 +164,6 @@ def test_residue():\n     assert is_nthpow_residue(8547, 12, 10007)\n \n     assert nthroot_mod(29, 31, 74) == [45]\n-\n     assert nthroot_mod(1801, 11, 2663) == 44\n     for a, q, p in [(51922, 2, 203017), (43, 3, 109), (1801, 11, 2663),\n           (26118163, 1303, 33333347), (1499, 7, 2663), (595, 6, 2663),\n\nFrom f5d6e8b23f5dd002a9f6579c6448000e07b3c050 Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Wed, 8 Jan 2020 22:54:51 +0530\nSubject: [PATCH 4/8] made suggested changes\n\n---\n sympy/ntheory/residue_ntheory.py | 7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex a6f1cf1442e9..32210a44fdb2 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -756,10 +756,13 @@ def _nthroot_mod_composite(a, n, m):\n             tot_roots.update(nthroot_mod(a, n, p, True) or [])\n         else:\n             for root in nthroot_mod(a, n, p, True) or []:\n-                diff = (n * pow(root, n - 1)) % p\n+                rootn = pow(root, n)\n+                diff = (rootn//root*n) % p\n                 if diff != 0:\n+                    ppow = p\n                     for j in range(1, e):\n-                        root = (root - (pow(root, n) - a)* mod_inverse(diff, p)) % pow(p, j + 1)\n+                        ppow *= p\n+                        root = (root - (rootn - a)* mod_inverse(diff, p)) % ppow\n                     tot_roots.add(root)\n                 else:\n                     new_base = p\n\nFrom 9fcb418fa957705f557062cf034b2d52bfcf30a4 Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Wed, 8 Jan 2020 23:31:44 +0530\nSubject: [PATCH 5/8] Root can be 0 , corrected the code\n\n---\n sympy/ntheory/residue_ntheory.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 32210a44fdb2..224995a2669b 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -756,13 +756,13 @@ def _nthroot_mod_composite(a, n, m):\n             tot_roots.update(nthroot_mod(a, n, p, True) or [])\n         else:\n             for root in nthroot_mod(a, n, p, True) or []:\n-                rootn = pow(root, n)\n-                diff = (rootn//root*n) % p\n+                rootn = pow(root, n - 1)\n+                diff = (rootn * n) % p\n                 if diff != 0:\n                     ppow = p\n                     for j in range(1, e):\n                         ppow *= p\n-                        root = (root - (rootn - a)* mod_inverse(diff, p)) % ppow\n+                        root = (root - (rootn * root - a)* mod_inverse(diff, p)) % ppow\n                     tot_roots.add(root)\n                 else:\n                     new_base = p\n\nFrom 6ed39e4248e5ad424232689b79ee0fe9ed9ff9b6 Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Thu, 9 Jan 2020 09:01:17 +0530\nSubject: [PATCH 6/8] Made suggested changes\n\n---\n sympy/ntheory/residue_ntheory.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 224995a2669b..12682b7e8efe 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -756,13 +756,13 @@ def _nthroot_mod_composite(a, n, m):\n             tot_roots.update(nthroot_mod(a, n, p, True) or [])\n         else:\n             for root in nthroot_mod(a, n, p, True) or []:\n-                rootn = pow(root, n - 1)\n-                diff = (rootn * n) % p\n+                rootn = pow(root, n)\n+                diff = (rootn * // (root or 1)) % p\n                 if diff != 0:\n                     ppow = p\n                     for j in range(1, e):\n                         ppow *= p\n-                        root = (root - (rootn * root - a)* mod_inverse(diff, p)) % ppow\n+                        root = (root - (rootn - a)* mod_inverse(diff, p)) % ppow\n                     tot_roots.add(root)\n                 else:\n                     new_base = p\n\nFrom 52fd2e6f8b23763fc517265bd58d2dae36defbc7 Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Thu, 9 Jan 2020 10:36:09 +0530\nSubject: [PATCH 7/8] fixed syntax error\n\n---\n sympy/ntheory/residue_ntheory.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex 12682b7e8efe..c346970827f2 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -757,7 +757,7 @@ def _nthroot_mod_composite(a, n, m):\n         else:\n             for root in nthroot_mod(a, n, p, True) or []:\n                 rootn = pow(root, n)\n-                diff = (rootn * // (root or 1)) % p\n+                diff = (rootn // (root or 1)) % p\n                 if diff != 0:\n                     ppow = p\n                     for j in range(1, e):\n\nFrom c885a6283eaf08c37487f17e9305b8c04dcd18af Mon Sep 17 00:00:00 2001\nFrom: abhinav28071999 <41710346+abhinav28071999@users.noreply.github.com>\nDate: Thu, 9 Jan 2020 11:17:00 +0530\nSubject: [PATCH 8/8] made changes to diff\n\n---\n sympy/ntheory/residue_ntheory.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/ntheory/residue_ntheory.py b/sympy/ntheory/residue_ntheory.py\nindex c346970827f2..fd0acecd59ca 100644\n--- a/sympy/ntheory/residue_ntheory.py\n+++ b/sympy/ntheory/residue_ntheory.py\n@@ -757,12 +757,12 @@ def _nthroot_mod_composite(a, n, m):\n         else:\n             for root in nthroot_mod(a, n, p, True) or []:\n                 rootn = pow(root, n)\n-                diff = (rootn // (root or 1)) % p\n+                diff = (rootn // (root or 1) * n) % p\n                 if diff != 0:\n                     ppow = p\n                     for j in range(1, e):\n                         ppow *= p\n-                        root = (root - (rootn - a)* mod_inverse(diff, p)) % ppow\n+                        root = (root - (rootn - a) * mod_inverse(diff, p)) % ppow\n                     tot_roots.add(root)\n                 else:\n                     new_base = p\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/18199"}