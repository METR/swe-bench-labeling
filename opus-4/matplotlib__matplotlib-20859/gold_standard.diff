From b5701e1ceed4efd15eae1b40770a84e3f02772e6 Mon Sep 17 00:00:00 2001
From: Tom Neep <tom.neep@cern.ch>
Date: Thu, 19 Aug 2021 10:35:46 +0200
Subject: [PATCH 1/2] Allow SubFigure legends

---
 lib/matplotlib/legend.py | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py
index 44ab0246981f..1d85ba1a3f27 100644
--- a/lib/matplotlib/legend.py
+++ b/lib/matplotlib/legend.py
@@ -360,7 +360,7 @@ def __init__(
         """
         # local import only to avoid circularity
         from matplotlib.axes import Axes
-        from matplotlib.figure import Figure
+        from matplotlib.figure import FigureBase
 
         super().__init__()
 
@@ -434,11 +434,13 @@ def __init__(
             self.isaxes = True
             self.axes = parent
             self.set_figure(parent.figure)
-        elif isinstance(parent, Figure):
+        elif isinstance(parent, FigureBase):
             self.isaxes = False
             self.set_figure(parent)
         else:
-            raise TypeError("Legend needs either Axes or Figure as parent")
+            raise TypeError(
+                "Legend needs either Axes or FigureBase as parent"
+            )
         self.parent = parent
 
         self._loc_used_default = loc is None

From 7da779573ebaaff2e1439d88953cc4d35ac5804e Mon Sep 17 00:00:00 2001
From: Tom Neep <tom.neep@cern.ch>
Date: Fri, 20 Aug 2021 12:46:39 +0200
Subject: [PATCH 2/2] Add test adding legend to subfigure

---
 lib/matplotlib/tests/test_legend.py | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py
index c49ea996d056..21c8ab748d9b 100644
--- a/lib/matplotlib/tests/test_legend.py
+++ b/lib/matplotlib/tests/test_legend.py
@@ -871,3 +871,12 @@ def test_handlerline2d():
     handles = [mlines.Line2D([0], [0], marker="v")]
     leg = ax.legend(handles, ["Aardvark"], numpoints=1)
     assert handles[0].get_marker() == leg.legendHandles[0].get_marker()
+
+
+def test_subfigure_legend():
+    # Test that legend can be added to subfigure (#20723)
+    subfig = plt.figure().subfigures()
+    ax = subfig.subplots()
+    ax.plot([0, 1], [0, 1], label="line")
+    leg = subfig.legend()
+    assert leg.figure is subfig
