{"instance_id": "scikit-learn__scikit-learn-26323", "score": "C", "diff": "diff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 4eddd12b1..b698b42e6 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -275,8 +275,8 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n     def set_output(self, *, transform=None):\n         \"\"\"Set the output container when `\"transform\"` and `\"fit_transform\"` are called.\n \n-        Calling `set_output` will set the output of all estimators in `transformers`\n-        and `transformers_`.\n+        Calling `set_output` will set the output of all estimators in `transformers`,\n+        `transformers_`, and `remainder` if it's an estimator.\n \n         Parameters\n         ----------\n@@ -293,12 +293,10 @@ class ColumnTransformer(TransformerMixin, _BaseComposition):\n             Estimator instance.\n         \"\"\"\n         super().set_output(transform=transform)\n-        transformers = (\n-            trans\n-            for _, trans, _ in chain(\n-                self.transformers, getattr(self, \"transformers_\", [])\n-            )\n-            if trans not in {\"passthrough\", \"drop\"}\n+        transformers = chain(\n+            (trans for _, trans, _ in chain(self.transformers, getattr(self, \"transformers_\", []))\n+             if trans not in {\"passthrough\", \"drop\"}),\n+            [self.remainder] if hasattr(self.remainder, \"set_output\") else []\n         )\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\ndiff --git a/sklearn/compose/tests/test_column_transformer.py b/sklearn/compose/tests/test_column_transformer.py\nindex b9c8f5831..d7f2c189b 100644\n--- a/sklearn/compose/tests/test_column_transformer.py\n+++ b/sklearn/compose/tests/test_column_transformer.py\n@@ -2185,3 +2185,21 @@ def test_raise_error_if_index_not_aligned():\n     )\n     with pytest.raises(ValueError, match=msg):\n         ct.fit_transform(X)\n+\n+def test_column_transformer_set_output():\n+    pd = pytest.importorskip(\"pandas\")\n+    X = pd.DataFrame({\"a\": [1, 2, 3], \"b\": [4, 5, 6], \"c\": [7, 8, 9]})\n+    \n+    ct = ColumnTransformer(\n+        [(\"trans1\", StandardScaler(), [\"a\", \"b\"])],\n+        remainder=StandardScaler()\n+    )\n+    ct.set_output(transform=\"pandas\")\n+    \n+    result = ct.fit_transform(X)\n+    assert isinstance(result, pd.DataFrame)\n+    assert list(result.columns) == [\"a\", \"b\", \"c\"]\n+    \n+    # Test that the remainder transformer is also set to output pandas\n+    remainder_output = ct.named_transformers_[\"remainder\"].transform(X[[\"c\"]])\n+    assert isinstance(remainder_output, pd.DataFrame)\n\\ No newline at end of file\n", "gold_standard_diff": "From dea64fa9a5c93739e09ed3da49821c64519c103c Mon Sep 17 00:00:00 2001\nFrom: \"Thomas J. Fan\" <thomasjpfan@gmail.com>\nDate: Thu, 4 May 2023 07:54:58 -0400\nSubject: [PATCH 1/2] FIX Sets remainder's output in ColumnTransformer\n\n---\n doc/whats_new/v1.3.rst                        |  6 +++++\n sklearn/compose/_column_transformer.py        |  4 +++\n .../compose/tests/test_column_transformer.py  | 25 +++++++++++++++++++\n 3 files changed, 35 insertions(+)\n\ndiff --git a/doc/whats_new/v1.3.rst b/doc/whats_new/v1.3.rst\nindex 41d5d1fdeeabd..e7a6dee789f4f 100644\n--- a/doc/whats_new/v1.3.rst\n+++ b/doc/whats_new/v1.3.rst\n@@ -184,6 +184,12 @@ Changelog\n   :user:`J\u00e9r\u00e9mie du Boisberranger <jeremiedbb>`,\n   :user:`Guillaume Lemaitre <glemaitre>`.\n \n+:mod:`sklearn.compose`\n+......................\n+\n+- |Fix| :class:`compose.ColumnTransformer` correctly sets the output of the\n+  remainder when `set_output` is called. :pr:`xxxxx` by `Thomas Fan`_.\n+\n :mod:`sklearn.covariance`\n .........................\n \ndiff --git a/sklearn/compose/_column_transformer.py b/sklearn/compose/_column_transformer.py\nindex 90718d86d2d89..fc8618aa71301 100644\n--- a/sklearn/compose/_column_transformer.py\n+++ b/sklearn/compose/_column_transformer.py\n@@ -292,6 +292,7 @@ def set_output(self, *, transform=None):\n             Estimator instance.\n         \"\"\"\n         super().set_output(transform=transform)\n+\n         transformers = (\n             trans\n             for _, trans, _ in chain(\n@@ -302,6 +303,9 @@ def set_output(self, *, transform=None):\n         for trans in transformers:\n             _safe_set_output(trans, transform=transform)\n \n+        if self.remainder not in {\"passthrough\", \"drop\"}:\n+            _safe_set_output(self.remainder, transform=transform)\n+\n         return self\n \n     def get_params(self, deep=True):\ndiff --git a/sklearn/compose/tests/test_column_transformer.py b/sklearn/compose/tests/test_column_transformer.py\nindex a2d1cef0412ba..7c19d214f77f3 100644\n--- a/sklearn/compose/tests/test_column_transformer.py\n+++ b/sklearn/compose/tests/test_column_transformer.py\n@@ -22,6 +22,7 @@\n from sklearn.exceptions import NotFittedError\n from sklearn.preprocessing import FunctionTransformer\n from sklearn.preprocessing import StandardScaler, Normalizer, OneHotEncoder\n+from sklearn.feature_selection import VarianceThreshold\n \n \n class Trans(TransformerMixin, BaseEstimator):\n@@ -2157,3 +2158,27 @@ def test_empty_selection_pandas_output(empty_selection):\n     ct.set_params(verbose_feature_names_out=False)\n     X_out = ct.fit_transform(X)\n     assert_array_equal(X_out.columns, [\"a\", \"b\"])\n+\n+\n+def test_remainder_set_output():\n+    \"\"\"Check that the output is set for the remainder.\n+\n+    Non-regression test for #26306.\n+    \"\"\"\n+\n+    pd = pytest.importorskip(\"pandas\")\n+    df = pd.DataFrame({\"a\": [True, False, True], \"b\": [1, 2, 3]})\n+\n+    ct = make_column_transformer(\n+        (VarianceThreshold(), make_column_selector(dtype_include=bool)),\n+        remainder=VarianceThreshold(),\n+        verbose_feature_names_out=False,\n+    )\n+    ct.set_output(transform=\"pandas\")\n+\n+    out = ct.fit_transform(df)\n+    pd.testing.assert_frame_equal(out, df)\n+\n+    ct.set_output(transform=\"default\")\n+    out = ct.fit_transform(df)\n+    assert isinstance(out, np.ndarray)\n\nFrom 06ecbd4a1c08ca374cf2cab512707edf8ade4d25 Mon Sep 17 00:00:00 2001\nFrom: \"Thomas J. Fan\" <thomasjpfan@gmail.com>\nDate: Thu, 4 May 2023 07:56:17 -0400\nSubject: [PATCH 2/2] DOC Adds PR number\n\n---\n doc/whats_new/v1.3.rst | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/doc/whats_new/v1.3.rst b/doc/whats_new/v1.3.rst\nindex e7a6dee789f4f..f0cc0f0802d77 100644\n--- a/doc/whats_new/v1.3.rst\n+++ b/doc/whats_new/v1.3.rst\n@@ -188,7 +188,7 @@ Changelog\n ......................\n \n - |Fix| :class:`compose.ColumnTransformer` correctly sets the output of the\n-  remainder when `set_output` is called. :pr:`xxxxx` by `Thomas Fan`_.\n+  remainder when `set_output` is called. :pr:`26323` by `Thomas Fan`_.\n \n :mod:`sklearn.covariance`\n .........................\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/26323"}