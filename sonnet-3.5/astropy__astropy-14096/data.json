{"instance_id": "astropy__astropy-14096", "score": "C", "diff": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex ab475f7d0d..e8fdfbe292 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -894,6 +894,14 @@ class SkyCoord(ShapedLikeNDArray):\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n \n+        # If the attribute is defined in the class but raises an AttributeError,\n+        # re-raise the original exception to provide a more accurate error message\n+        if hasattr(self.__class__, attr):\n+            try:\n+                return getattr(self.__class__, attr).__get__(self)\n+            except AttributeError as e:\n+                raise e from None\n+\n         # Fail\n         raise AttributeError(\n             f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 486d6b9b3b..1c5f74f3a1 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,5 @@\n [build-system]\n-requires = [\"setuptools\",\n+requires = [\"setuptools==68.0.0\",\n             \"setuptools_scm>=6.2\",\n             \"wheel\",\n             \"cython==0.29.30\",\n", "gold_standard_diff": "diff --git a/astropy/coordinates/sky_coordinate.py b/astropy/coordinates/sky_coordinate.py\nindex ab475f7d0d29..a4257c302ae0 100644\n--- a/astropy/coordinates/sky_coordinate.py\n+++ b/astropy/coordinates/sky_coordinate.py\n@@ -894,10 +894,8 @@ def __getattr__(self, attr):\n             if frame_cls is not None and self.frame.is_transformable_to(frame_cls):\n                 return self.transform_to(attr)\n \n-        # Fail\n-        raise AttributeError(\n-            f\"'{self.__class__.__name__}' object has no attribute '{attr}'\"\n-        )\n+        # Call __getattribute__; this will give correct exception.\n+        return self.__getattribute__(attr)\n \n     def __setattr__(self, attr, val):\n         # This is to make anything available through __getattr__ immutable\ndiff --git a/astropy/coordinates/tests/test_sky_coord.py b/astropy/coordinates/tests/test_sky_coord.py\nindex 4dcfba0d4d3c..8aad97adf4c0 100644\n--- a/astropy/coordinates/tests/test_sky_coord.py\n+++ b/astropy/coordinates/tests/test_sky_coord.py\n@@ -2165,3 +2165,21 @@ def test_match_to_catalog_3d_and_sky():\n     npt.assert_array_equal(idx, [0, 1, 2, 3])\n     assert_allclose(angle, 0 * u.deg, atol=1e-14 * u.deg, rtol=0)\n     assert_allclose(distance, 0 * u.kpc, atol=1e-14 * u.kpc, rtol=0)\n+\n+\n+def test_subclass_property_exception_error():\n+    \"\"\"Regression test for gh-8340.\n+\n+    Non-existing attribute access inside a property should give attribute\n+    error for the attribute, not for the property.\n+    \"\"\"\n+\n+    class custom_coord(SkyCoord):\n+        @property\n+        def prop(self):\n+            return self.random_attr\n+\n+    c = custom_coord(\"00h42m30s\", \"+41d12m00s\", frame=\"icrs\")\n+    with pytest.raises(AttributeError, match=\"random_attr\"):\n+        # Before this matched \"prop\" rather than \"random_attr\"\n+        c.prop\n", "gold_standard_pr_link": "https://github.com/astropy/astropy/pull/14096"}