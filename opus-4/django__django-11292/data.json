{"instance_id": "django__django-11292", "score": "C", "diff": "diff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 0c3a981290..dc646cb781 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -95,7 +95,7 @@ class DjangoHelpFormatter(HelpFormatter):\n     \"\"\"\n     show_last = {\n         '--version', '--verbosity', '--traceback', '--settings', '--pythonpath',\n-        '--no-color', '--force-color',\n+        '--no-color', '--force-color', '--skip-checks',\n     }\n \n     def _reordered_actions(self, actions):\n@@ -286,6 +286,10 @@ class BaseCommand:\n             '--force-color', action='store_true',\n             help='Force colorization of the command output.',\n         )\n+        parser.add_argument(\n+            '--skip-checks', action='store_true',\n+            help='Skip system checks.',\n+        )\n         self.add_arguments(parser)\n         return parser\n \ndiff --git a/simple_test.py b/simple_test.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/test_cmdline_skip_checks.py b/test_cmdline_skip_checks.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/test_project/test_settings.py b/test_project/test_settings.py\nnew file mode 100644\nindex 0000000000..2f3c29f33a\n--- /dev/null\n+++ b/test_project/test_settings.py\n@@ -0,0 +1,4 @@\n+\n+SECRET_KEY = 'test'\n+INSTALLED_APPS = []\n+    \n\\ No newline at end of file\ndiff --git a/test_skip_checks.py b/test_skip_checks.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\ndiff --git a/test_skip_checks_feature.py b/test_skip_checks_feature.py\nnew file mode 100644\nindex 0000000000..8b13789179\n--- /dev/null\n+++ b/test_skip_checks_feature.py\n@@ -0,0 +1 @@\n+\ndiff --git a/test_skip_checks_final.py b/test_skip_checks_final.py\nnew file mode 100644\nindex 0000000000..e69de29bb2\n", "gold_standard_diff": "From 6866c91b638de5368c18713fa851bfe56253ea55 Mon Sep 17 00:00:00 2001\nFrom: Jon Dufresne <jon.dufresne@gmail.com>\nDate: Fri, 26 Apr 2019 16:37:57 -0700\nSubject: [PATCH] Fixed #30418 -- Added --skip-checks management command\n option.\n\n---\n django/core/management/base.py | 11 ++++++++---\n docs/ref/django-admin.txt      | 13 +++++++++++++\n docs/releases/3.0.txt          |  3 +++\n tests/user_commands/tests.py   | 10 ++++++++++\n 4 files changed, 34 insertions(+), 3 deletions(-)\n\ndiff --git a/django/core/management/base.py b/django/core/management/base.py\nindex 0c3a981290df..c725e5b75eff 100644\n--- a/django/core/management/base.py\n+++ b/django/core/management/base.py\n@@ -95,7 +95,7 @@ class DjangoHelpFormatter(HelpFormatter):\n     \"\"\"\n     show_last = {\n         '--version', '--verbosity', '--traceback', '--settings', '--pythonpath',\n-        '--no-color', '--force-color',\n+        '--no-color', '--force-color', '--skip-checks',\n     }\n \n     def _reordered_actions(self, actions):\n@@ -223,7 +223,7 @@ class BaseCommand:\n     requires_system_checks = True\n     # Arguments, common to all commands, which aren't defined by the argument\n     # parser.\n-    base_stealth_options = ('skip_checks', 'stderr', 'stdout')\n+    base_stealth_options = ('stderr', 'stdout')\n     # Command-specific options not defined by the argument parser.\n     stealth_options = ()\n \n@@ -286,6 +286,11 @@ def create_parser(self, prog_name, subcommand, **kwargs):\n             '--force-color', action='store_true',\n             help='Force colorization of the command output.',\n         )\n+        if self.requires_system_checks:\n+            parser.add_argument(\n+                '--skip-checks', action='store_true',\n+                help='Skip system checks.',\n+            )\n         self.add_arguments(parser)\n         return parser\n \n@@ -357,7 +362,7 @@ def execute(self, *args, **options):\n         if options.get('stderr'):\n             self.stderr = OutputWrapper(options['stderr'])\n \n-        if self.requires_system_checks and not options.get('skip_checks'):\n+        if self.requires_system_checks and not options['skip_checks']:\n             self.check()\n         if self.requires_migrations_checks:\n             self.check_migrations()\ndiff --git a/docs/ref/django-admin.txt b/docs/ref/django-admin.txt\nindex b531978dd692..a269f6f8c662 100644\n--- a/docs/ref/django-admin.txt\n+++ b/docs/ref/django-admin.txt\n@@ -1724,6 +1724,19 @@ Forces colorization of the command output if it would otherwise be disabled\n as discussed in :ref:`syntax-coloring`. For example, you may want to pipe\n colored output to another command.\n \n+.. django-admin-option:: --skip-checks\n+\n+.. versionadded:: 3.0\n+\n+Skips running system checks prior to running the command. This option is only\n+available if the\n+:attr:`~django.core.management.BaseCommand.requires_system_checks` command\n+attribute is set to ``True``.\n+\n+Example usage::\n+\n+    django-admin migrate --skip-checks\n+\n Extra niceties\n ==============\n \ndiff --git a/docs/releases/3.0.txt b/docs/releases/3.0.txt\nindex e4a9789efbdb..66dfde0b5de9 100644\n--- a/docs/releases/3.0.txt\n+++ b/docs/releases/3.0.txt\n@@ -180,6 +180,9 @@ Management Commands\n * :djadmin:`inspectdb` now introspects :class:`~django.db.models.OneToOneField`\n   when a foreign key has a unique or primary key constraint.\n \n+* The new :option:`--skip-checks` option skips running system checks prior to\n+  running the command.\n+\n Migrations\n ~~~~~~~~~~\n \ndiff --git a/tests/user_commands/tests.py b/tests/user_commands/tests.py\nindex 2d1f8f834d2f..76991b1122ea 100644\n--- a/tests/user_commands/tests.py\n+++ b/tests/user_commands/tests.py\n@@ -253,6 +253,16 @@ def test_disallowed_abbreviated_options(self):\n         self.assertNoOutput(err)\n         self.assertEqual(out.strip(), 'Set foo')\n \n+    def test_skip_checks(self):\n+        self.write_settings('settings.py', apps=['django.contrib.staticfiles', 'user_commands'], sdict={\n+            # (staticfiles.E001) The STATICFILES_DIRS setting is not a tuple or\n+            # list.\n+            'STATICFILES_DIRS': '\"foo\"',\n+        })\n+        out, err = self.run_manage(['set_option', '--skip-checks', '--set', 'foo'])\n+        self.assertNoOutput(err)\n+        self.assertEqual(out.strip(), 'Set foo')\n+\n \n class UtilsTests(SimpleTestCase):\n \n", "gold_standard_pr_link": "https://github.com/django/django/pull/11292"}