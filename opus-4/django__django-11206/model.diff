diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..178165ff8e
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,37 @@
+from decimal import Decimal
+from django.conf import settings
+
+# Configure minimal settings
+settings.configure(
+    USE_L10N=False,
+    USE_THOUSAND_SEPARATOR=False,
+)
+
+from django.utils.numberformat import format as nformat
+
+def test_small_decimals():
+    """Test that small decimals are formatted as 0.00... when decimal_pos is specified"""
+    test_cases = [
+        # (number, decimal_pos, expected)
+        (Decimal('1e-199'), 2, '0.00'),
+        (Decimal('1e-200'), 2, '0.00'),  # This currently returns '1.00e-200'
+        (Decimal('1e-201'), 2, '0.00'),  # This currently returns '1.00e-201'
+        (Decimal('1e-250'), 2, '0.00'),  # This currently returns '1.00e-250'
+        (Decimal('1e-200'), 0, '0'),     # This currently returns '1e-200'
+        (Decimal('1e-200'), 5, '0.00000'),  # This currently returns '1.00000e-200'
+        (Decimal('5e-200'), 2, '0.00'),  # This currently returns '5.00e-200'
+        (Decimal('-1e-200'), 2, '0.00'), # Test negative number
+        # Test edge case where the value can be represented
+        (Decimal('0.01'), 2, '0.01'),
+        (Decimal('0.001'), 2, '0.00'),
+        (Decimal('0.001'), 3, '0.001'),
+    ]
+    
+    print("Testing small decimal formatting:")
+    for number, decimal_pos, expected in test_cases:
+        result = nformat(number, '.', decimal_pos=decimal_pos)
+        status = "OK" if result == expected else "FAIL"
+        print(f"{status} nformat({number}, '.', decimal_pos={decimal_pos}) = {repr(result)} (expected {repr(expected)})")
+
+if __name__ == "__main__":
+    test_small_decimals()
diff --git a/test_issue.py b/test_issue.py
new file mode 100644
index 0000000000..ab2b1e5f1a
--- /dev/null
+++ b/test_issue.py
@@ -0,0 +1,30 @@
+from decimal import Decimal
+from django.conf import settings
+
+# Configure minimal settings
+settings.configure(
+    USE_L10N=False,
+    USE_THOUSAND_SEPARATOR=False,
+)
+
+from django.utils.numberformat import format as nformat
+
+# Test the issue
+print('Testing the issue:')
+print('1e-199 with decimal_pos=2:', repr(nformat(Decimal('1e-199'), '.', decimal_pos=2)))
+print('1e-200 with decimal_pos=2:', repr(nformat(Decimal('1e-200'), '.', decimal_pos=2)))
+print('1e-201 with decimal_pos=2:', repr(nformat(Decimal('1e-201'), '.', decimal_pos=2)))
+print()
+
+# Also test some edge cases
+print('Edge cases:')
+print('1e-100 with decimal_pos=2:', repr(nformat(Decimal('1e-100'), '.', decimal_pos=2)))
+print('1e-150 with decimal_pos=2:', repr(nformat(Decimal('1e-150'), '.', decimal_pos=2)))
+print('1e-198 with decimal_pos=2:', repr(nformat(Decimal('1e-198'), '.', decimal_pos=2)))
+print('1e-250 with decimal_pos=2:', repr(nformat(Decimal('1e-250'), '.', decimal_pos=2)))
+
+# Test with different decimal positions
+print('\nWith different decimal_pos:')
+print('1e-200 with decimal_pos=0:', repr(nformat(Decimal('1e-200'), '.', decimal_pos=0)))
+print('1e-200 with decimal_pos=5:', repr(nformat(Decimal('1e-200'), '.', decimal_pos=5)))
+print('1e-200 with decimal_pos=10:', repr(nformat(Decimal('1e-200'), '.', decimal_pos=10)))
diff --git a/test_negative.py b/test_negative.py
new file mode 100644
index 0000000000..d29c9fed67
--- /dev/null
+++ b/test_negative.py
@@ -0,0 +1,17 @@
+from decimal import Decimal
+from django.conf import settings
+
+# Configure minimal settings
+settings.configure(
+    USE_L10N=False,
+    USE_THOUSAND_SEPARATOR=False,
+)
+
+from django.utils.numberformat import format as nformat
+
+# Test negative small decimals
+print("Testing negative small decimals:")
+print("nformat(Decimal('-1e-200'), '.', decimal_pos=2):", repr(nformat(Decimal('-1e-200'), '.', decimal_pos=2)))
+print("nformat(Decimal('-5e-201'), '.', decimal_pos=3):", repr(nformat(Decimal('-5e-201'), '.', decimal_pos=3)))
+print("nformat(Decimal('-0.001'), '.', decimal_pos=2):", repr(nformat(Decimal('-0.001'), '.', decimal_pos=2)))
+print("nformat(Decimal('-0.001'), '.', decimal_pos=3):", repr(nformat(Decimal('-0.001'), '.', decimal_pos=3)))
