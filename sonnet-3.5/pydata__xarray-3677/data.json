{"instance_id": "pydata__xarray-3677", "score": "C", "diff": "diff --git a/xarray/core/merge.py b/xarray/core/merge.py\nindex 10c7804d..4058ff36 100644\n--- a/xarray/core/merge.py\n+++ b/xarray/core/merge.py\n@@ -809,6 +809,11 @@ def dataset_merge_method(\n     # method due for backwards compatibility\n     # TODO: consider deprecating it?\n \n+    from .dataarray import DataArray\n+\n+    if isinstance(other, DataArray):\n+        other = other.to_dataset()\n+\n     if isinstance(overwrite_vars, Iterable) and not isinstance(overwrite_vars, str):\n         overwrite_vars = set(overwrite_vars)\n     else:\n", "gold_standard_diff": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 5a9f2497ed6..e69fbadea34 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -70,6 +70,8 @@ Bug fixes\n   By `Justus Magin <https://github.com/keewis>`_.\n - :py:meth:`Dataset.rename`, :py:meth:`DataArray.rename` now check for conflicts with\n   MultiIndex level names.\n+- :py:meth:`Dataset.merge` no longer fails when passed a `DataArray` instead of a `Dataset` object.\n+  By `Tom Nicholas <https://github.com/TomNicholas>`_.\n \n Documentation\n ~~~~~~~~~~~~~\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex ac0a923db78..d597ec8cfb0 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -3604,6 +3604,7 @@ def merge(\n             If any variables conflict (see ``compat``).\n         \"\"\"\n         _check_inplace(inplace)\n+        other = other.to_dataset() if isinstance(other, xr.DataArray) else other\n         merge_result = dataset_merge_method(\n             self,\n             other,\ndiff --git a/xarray/tests/test_merge.py b/xarray/tests/test_merge.py\nindex c1e6c7a5ce8..6c8f3f65657 100644\n--- a/xarray/tests/test_merge.py\n+++ b/xarray/tests/test_merge.py\n@@ -3,6 +3,7 @@\n \n import xarray as xr\n from xarray.core import dtypes, merge\n+from xarray.testing import assert_identical\n \n from . import raises_regex\n from .test_dataset import create_test_data\n@@ -253,3 +254,9 @@ def test_merge_no_conflicts(self):\n         with pytest.raises(xr.MergeError):\n             ds3 = xr.Dataset({\"a\": (\"y\", [2, 3]), \"y\": [1, 2]})\n             ds1.merge(ds3, compat=\"no_conflicts\")\n+\n+    def test_merge_dataarray(self):\n+        ds = xr.Dataset({\"a\": 0})\n+        da = xr.DataArray(data=1, name=\"b\")\n+\n+        assert_identical(ds.merge(da), xr.merge([ds, da]))\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/3677"}