{"instance_id": "sympy__sympy-17630", "score": "I", "diff": "diff --git a/sympy/matrices/expressions/blockmatrix.py b/sympy/matrices/expressions/blockmatrix.py\nindex 95302a05ca..e4946ece74 100644\n--- a/sympy/matrices/expressions/blockmatrix.py\n+++ b/sympy/matrices/expressions/blockmatrix.py\n@@ -148,11 +148,11 @@ def blocks(self):\n \n     @property\n     def rowblocksizes(self):\n-        return [self.blocks[i, 0].rows for i in range(self.blockshape[0])]\n+        return [getattr(self.blocks[i, 0], 'rows', 0) for i in range(self.blockshape[0])]\n \n     @property\n     def colblocksizes(self):\n-        return [self.blocks[0, i].cols for i in range(self.blockshape[1])]\n+        return [getattr(self.blocks[0, i], 'cols', 0) for i in range(self.blockshape[1])]\n \n     def structurally_equal(self, other):\n         return (isinstance(other, BlockMatrix)\n", "gold_standard_diff": "From a35bcc4559c87532526c7002c34ed8350d98c7b8 Mon Sep 17 00:00:00 2001\nFrom: \"S.Y. Lee\" <sylee957@gmail.com>\nDate: Thu, 19 Sep 2019 07:44:05 +0900\nSubject: [PATCH 1/2] Fix block collapse with zero block matrix\n\n---\n sympy/matrices/expressions/matexpr.py                | 2 ++\n sympy/matrices/expressions/tests/test_blockmatrix.py | 9 ++++++++-\n 2 files changed, 10 insertions(+), 1 deletion(-)\n\ndiff --git a/sympy/matrices/expressions/matexpr.py b/sympy/matrices/expressions/matexpr.py\nindex fd1e6d970afa..48e15cd4910b 100644\n--- a/sympy/matrices/expressions/matexpr.py\n+++ b/sympy/matrices/expressions/matexpr.py\n@@ -627,6 +627,8 @@ def _postprocessor(expr):\n                 # manipulate them like non-commutative scalars.\n                 return cls._from_args(nonmatrices + [mat_class(*matrices).doit(deep=False)])\n \n+        if mat_class == MatAdd:\n+            return mat_class(*matrices).doit(deep=False)\n         return mat_class(cls._from_args(nonmatrices), *matrices).doit(deep=False)\n     return _postprocessor\n \ndiff --git a/sympy/matrices/expressions/tests/test_blockmatrix.py b/sympy/matrices/expressions/tests/test_blockmatrix.py\nindex 1e1033affce0..908acfc702a3 100644\n--- a/sympy/matrices/expressions/tests/test_blockmatrix.py\n+++ b/sympy/matrices/expressions/tests/test_blockmatrix.py\n@@ -3,7 +3,7 @@\n     BlockMatrix, bc_dist, bc_matadd, bc_transpose, bc_inverse,\n     blockcut, reblock_2x2, deblock)\n from sympy.matrices.expressions import (MatrixSymbol, Identity,\n-        Inverse, trace, Transpose, det)\n+        Inverse, trace, Transpose, det, ZeroMatrix)\n from sympy.matrices import (\n     Matrix, ImmutableMatrix, ImmutableSparseMatrix)\n from sympy.core import Tuple, symbols, Expr\n@@ -104,6 +104,13 @@ def test_block_collapse_explicit_matrices():\n     A = ImmutableSparseMatrix([[1, 2], [3, 4]])\n     assert block_collapse(BlockMatrix([[A]])) == A\n \n+def test_issue_17624():\n+    a = MatrixSymbol(\"a\", 2, 2)\n+    z = ZeroMatrix(2, 2)\n+    b = BlockMatrix([[a, z], [z, z]])\n+    assert block_collapse(b * b) == BlockMatrix([[a**2, z], [z, z]])\n+    assert block_collapse(b * b * b) == BlockMatrix([[a**3, z], [z, z]])\n+\n def test_BlockMatrix_trace():\n     A, B, C, D = [MatrixSymbol(s, 3, 3) for s in 'ABCD']\n     X = BlockMatrix([[A, B], [C, D]])\n\nFrom 5a7d6d78bc7206e4c96cdebdcb5ba4a1f10f6c72 Mon Sep 17 00:00:00 2001\nFrom: \"S.Y. Lee\" <sylee957@gmail.com>\nDate: Thu, 19 Sep 2019 07:48:23 +0900\nSubject: [PATCH 2/2] Add tests for matrix addition\n\n---\n sympy/matrices/expressions/tests/test_matadd.py | 13 +++++++++++--\n 1 file changed, 11 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/matrices/expressions/tests/test_matadd.py b/sympy/matrices/expressions/tests/test_matadd.py\nindex 2cd19ba9bbbf..9e7f4d24c7fb 100644\n--- a/sympy/matrices/expressions/tests/test_matadd.py\n+++ b/sympy/matrices/expressions/tests/test_matadd.py\n@@ -1,7 +1,8 @@\n from sympy.matrices.expressions import MatrixSymbol, MatAdd, MatPow, MatMul\n-from sympy.matrices.expressions.matexpr import GenericZeroMatrix\n+from sympy.matrices.expressions.matexpr import GenericZeroMatrix, ZeroMatrix\n from sympy.matrices import eye, ImmutableMatrix\n-from sympy.core import Basic, S\n+from sympy.core import Add, Basic, S\n+from sympy.utilities.pytest import XFAIL, raises\n \n X = MatrixSymbol('X', 2, 2)\n Y = MatrixSymbol('Y', 2, 2)\n@@ -30,3 +31,11 @@ def test_doit_args():\n def test_generic_identity():\n     assert MatAdd.identity == GenericZeroMatrix()\n     assert MatAdd.identity != S.Zero\n+\n+\n+def test_zero_matrix_add():\n+    assert Add(ZeroMatrix(2, 2), ZeroMatrix(2, 2)) == ZeroMatrix(2, 2)\n+\n+@XFAIL\n+def test_matrix_add_with_scalar():\n+    raises(TypeError, lambda: Add(0, ZeroMatrix(2, 2)))\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/17630"}