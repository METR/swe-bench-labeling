diff --git a/django/db/migrations/operations/models.py b/django/db/migrations/operations/models.py
index c120f5d32d..0180685eb6 100644
--- a/django/db/migrations/operations/models.py
+++ b/django/db/migrations/operations/models.py
@@ -539,6 +539,19 @@ class AlterUniqueTogether(AlterTogetherOptionOperation):
     def __init__(self, name, unique_together):
         super().__init__(name, unique_together)
 
+    def reduce(self, operation, app_label):
+        if isinstance(operation, AlterUniqueTogether) and self.name == operation.name:
+            # If the first operation sets unique_together to an empty set and the second one sets it to a non-empty set,
+            # we can combine them into a single operation with the non-empty set
+            if not self.unique_together and operation.unique_together:
+                return [
+                    AlterUniqueTogether(
+                        name=self.name,
+                        unique_together=operation.unique_together,
+                    ),
+                ]
+        return super().reduce(operation, app_label)
+
 
 class AlterIndexTogether(AlterTogetherOptionOperation):
     """
@@ -550,6 +563,19 @@ class AlterIndexTogether(AlterTogetherOptionOperation):
     def __init__(self, name, index_together):
         super().__init__(name, index_together)
 
+    def reduce(self, operation, app_label):
+        if isinstance(operation, AlterIndexTogether) and self.name == operation.name:
+            # If the first operation sets index_together to an empty set and the second one sets it to a non-empty set,
+            # we can combine them into a single operation with the non-empty set
+            if not self.index_together and operation.index_together:
+                return [
+                    AlterIndexTogether(
+                        name=self.name,
+                        index_together=operation.index_together,
+                    ),
+                ]
+        return super().reduce(operation, app_label)
+
 
 class AlterOrderWithRespectTo(ModelOptionOperation):
     """Represent a change with the order_with_respect_to option."""
