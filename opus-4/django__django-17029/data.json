{"instance_id": "django__django-17029", "score": "C", "diff": "diff --git a/django/apps/registry.py b/django/apps/registry.py\nindex 0683f3ad3c..a5a4b85f92 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -376,6 +376,8 @@ class Apps:\n         # Call expire cache on each model. This will purge\n         # the relation tree and the fields cache.\n         self.get_models.cache_clear()\n+        # Clear the cache for get_swappable_settings_name\n+        self.get_swappable_settings_name.cache_clear()\n         if self.ready:\n             # Circumvent self.get_models() to prevent that the cache is refilled.\n             # This particularly prevents that an empty value is cached while cloning.\ndiff --git a/tests/apps/tests.py b/tests/apps/tests.py\nindex 9f989c5d9a..7896f3eebb 100644\n--- a/tests/apps/tests.py\n+++ b/tests/apps/tests.py\n@@ -373,6 +373,24 @@ class AppsTests(SimpleTestCase):\n         # Everything should be loaded - make sure the callback was executed properly.\n         self.assertEqual(model_classes, [LazyA, LazyB, LazyB, LazyC, LazyA])\n \n+    def test_clear_cache_clears_get_swappable_settings_name_cache(self):\n+        \"\"\"\n+        apps.clear_cache() should clear the cache of get_swappable_settings_name.\n+        \"\"\"\n+        # First, call get_swappable_settings_name to populate the cache\n+        apps.get_swappable_settings_name(\"auth.User\")\n+        \n+        # Check that the cache has been populated\n+        cache_info_before = apps.get_swappable_settings_name.cache_info()\n+        self.assertGreater(cache_info_before.currsize, 0)\n+        \n+        # Clear the cache\n+        apps.clear_cache()\n+        \n+        # Check that the cache has been cleared\n+        cache_info_after = apps.get_swappable_settings_name.cache_info()\n+        self.assertEqual(cache_info_after.currsize, 0)\n+\n \n class Stub:\n     def __init__(self, **kwargs):\n", "gold_standard_diff": "diff --git a/AUTHORS b/AUTHORS\nindex 2148c64322a4..40df3589c024 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -747,6 +747,7 @@ answer newbie questions, and generally made Django that much better:\n     Nicolas Lara <nicolaslara@gmail.com>\n     Nicolas No\u00e9 <nicolas@niconoe.eu>\n     Nikita Marchant <nikita.marchant@gmail.com>\n+    Nikita Sobolev <mail@sobolevn.me>\n     Niran Babalola <niran@niran.org>\n     Nis J\u00f8rgensen <nis@superlativ.dk>\n     Nowell Strite <https://nowell.strite.org/>\ndiff --git a/django/apps/registry.py b/django/apps/registry.py\nindex 0683f3ad3ccb..92de6075fc90 100644\n--- a/django/apps/registry.py\n+++ b/django/apps/registry.py\n@@ -373,6 +373,7 @@ def clear_cache(self):\n \n         This is mostly used in tests.\n         \"\"\"\n+        self.get_swappable_settings_name.cache_clear()\n         # Call expire cache on each model. This will purge\n         # the relation tree and the fields cache.\n         self.get_models.cache_clear()\ndiff --git a/tests/apps/tests.py b/tests/apps/tests.py\nindex 9f989c5d9a85..ecfb70162ff2 100644\n--- a/tests/apps/tests.py\n+++ b/tests/apps/tests.py\n@@ -197,6 +197,17 @@ def test_get_model(self):\n         with self.assertRaises(ValueError):\n             apps.get_model(\"admin_LogEntry\")\n \n+    @override_settings(INSTALLED_APPS=SOME_INSTALLED_APPS)\n+    def test_clear_cache(self):\n+        # Set cache.\n+        self.assertIsNone(apps.get_swappable_settings_name(\"admin.LogEntry\"))\n+        apps.get_models()\n+\n+        apps.clear_cache()\n+\n+        self.assertEqual(apps.get_swappable_settings_name.cache_info().currsize, 0)\n+        self.assertEqual(apps.get_models.cache_info().currsize, 0)\n+\n     @override_settings(INSTALLED_APPS=[\"apps.apps.RelabeledAppsConfig\"])\n     def test_relabeling(self):\n         self.assertEqual(apps.get_app_config(\"relabeled\").name, \"apps\")\n", "gold_standard_pr_link": "https://github.com/django/django/pull/17029"}