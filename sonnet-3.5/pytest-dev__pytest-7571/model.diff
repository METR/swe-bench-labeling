diff --git a/src/_pytest/logging.py b/src/_pytest/logging.py
index 11031f2f2..5291660f3 100644
--- a/src/_pytest/logging.py
+++ b/src/_pytest/logging.py
@@ -346,6 +346,7 @@ class LogCaptureFixture:
         self._item = item
         # dict of log name -> log level
         self._initial_logger_levels = {}  # type: Dict[Optional[str], int]
+        self._initial_handler_level = self.handler.level  # Store initial handler level
 
     def _finalize(self) -> None:
         """Finalizes the fixture.
@@ -356,6 +357,9 @@ class LogCaptureFixture:
         for logger_name, level in self._initial_logger_levels.items():
             logger = logging.getLogger(logger_name)
             logger.setLevel(level)
+        
+        # restore handler level
+        self.handler.setLevel(self._initial_handler_level)
 
     @property
     def handler(self) -> LogCaptureHandler:
@@ -435,6 +439,9 @@ class LogCaptureFixture:
         self._initial_logger_levels.setdefault(logger, logger_obj.level)
         logger_obj.setLevel(level)
         self.handler.setLevel(level)
+        # Update the initial handler level if it's the first time set_level is called
+        if len(self._initial_logger_levels) == 1:
+            self._initial_handler_level = self.handler.level
 
     @contextmanager
     def at_level(
