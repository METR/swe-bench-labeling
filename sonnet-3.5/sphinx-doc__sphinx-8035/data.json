{"instance_id": "sphinx-doc__sphinx-8035", "score": "C", "diff": "diff --git a/CHANGES b/CHANGES\nindex eadace6dc..f62b8f66e 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -204,6 +204,8 @@ Deprecated\n Features added\n --------------\n \n+* #8009: autodoc: Allow specifying specific private members to document with the\n+  :private-members: option\n * LaTeX: Make the ``toplevel_sectioning`` setting optional in LaTeX theme\n * LaTeX: Allow to override papersize and pointsize from LaTeX themes\n * LaTeX: Add :confval:`latex_theme_options` to override theme options\ndiff --git a/doc/usage/extensions/autodoc.rst b/doc/usage/extensions/autodoc.rst\nindex 150b62c4d..701d2bdb3 100644\n--- a/doc/usage/extensions/autodoc.rst\n+++ b/doc/usage/extensions/autodoc.rst\n@@ -184,6 +184,13 @@ inserting them into the page source under a suitable :rst:dir:`py:module`,\n      .. versionchanged:: 1.2\n         The option can now take arguments, i.e. the special members to document.\n \n+     .. versionchanged:: {NEXT_VERSION}\n+        The :private-members: option can now take arguments to specify which private\n+        members to document. It can be used in three ways:\n+        1. :private-members: (boolean) - document all private members if True\n+        2. :private-members: member1,member2,... - document only the specified private members\n+        3. :private-members: * - document all private members (same as True)\n+\n    * For classes and exceptions, members inherited from base classes will be\n      left out when documenting all members, unless you give the\n      ``inherited-members`` option, in addition to ``members``::\ndiff --git a/setup.py b/setup.py\nindex a404f1fa5..2c6848797 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 8c3509c3b..0da733e79 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -655,9 +655,15 @@ class Documenter:\n                     keep = True\n                 isattr = True\n             elif want_all and isprivate:\n-                # ignore members whose name starts with _ by default\n-                keep = self.options.private_members and \\\n-                    (has_doc or self.options.undoc_members)\n+                # include private members if :private-members: is set\n+                if self.options.private_members is ALL:\n+                    keep = has_doc or self.options.undoc_members\n+                elif isinstance(self.options.private_members, set):\n+                    keep = membername in self.options.private_members and \\\n+                        (has_doc or self.options.undoc_members)\n+                else:\n+                    keep = self.options.private_members and \\\n+                        (has_doc or self.options.undoc_members)\n             else:\n                 if self.options.members is ALL and is_filtered_inherited_member(membername):\n                     keep = False\n@@ -859,7 +865,7 @@ class ModuleDocumenter(Documenter):\n         'show-inheritance': bool_option, 'synopsis': identity,\n         'platform': identity, 'deprecated': bool_option,\n         'member-order': member_order_option, 'exclude-members': members_set_option,\n-        'private-members': bool_option, 'special-members': members_option,\n+        'private-members': members_set_option, 'special-members': members_option,\n         'imported-members': bool_option, 'ignore-module-all': bool_option\n     }  # type: Dict[str, Callable]\n \n@@ -1279,7 +1285,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         'noindex': bool_option, 'inherited-members': inherited_members_option,\n         'show-inheritance': bool_option, 'member-order': member_order_option,\n         'exclude-members': members_set_option,\n-        'private-members': bool_option, 'special-members': members_option,\n+        'private-members': members_set_option, 'special-members': members_option,\n     }  # type: Dict[str, Callable]\n \n     _signature_class = None  # type: Any\ndiff --git a/tox.ini b/tox.ini\nindex bddd822a6..34baee205 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -27,7 +27,7 @@ extras =\n setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils\n commands=\n-    pytest --durations 25 {posargs}\n+    pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "diff --git a/CHANGES b/CHANGES\nindex eadace6dcd4..79efd2c8df0 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -10,6 +10,7 @@ Incompatible changes\n Deprecated\n ----------\n \n+* ``sphinx.ext.autodoc.merge_special_members_option()``\n * ``sphinx.writers.texinfo.TexinfoWriter.desc``\n * C, parsing of pre-v3 style type directives and roles, along with the options\n   :confval:`c_allow_pre_v3` and :confval:`c_warn_on_allowed_pre_v3`.\n@@ -18,6 +19,8 @@ Features added\n --------------\n \n * #2076: autodoc: Allow overriding of exclude-members in skip-member function\n+* #8034: autodoc: ``:private-member:`` can take an explicit list of member names\n+  to be documented\n * #2024: autosummary: Add :confval:`autosummary_filename_map` to avoid conflict\n   of filenames between two object with different case\n * #7849: html: Add :confval:`html_codeblock_linenos_style` to change the style\ndiff --git a/doc/extdev/deprecated.rst b/doc/extdev/deprecated.rst\nindex ceb88d45f74..d6e87b45923 100644\n--- a/doc/extdev/deprecated.rst\n+++ b/doc/extdev/deprecated.rst\n@@ -26,6 +26,11 @@ The following is a list of deprecated interfaces.\n      - (will\u00a0be) Removed\n      - Alternatives\n \n+   * - ``sphinx.ext.autodoc.merge_special_members_option()``\n+     - 3.2\n+     - 5.0\n+     - ``sphinx.ext.autodoc.merge_members_option()``\n+\n    * - ``sphinx.writers.texinfo.TexinfoWriter.desc``\n      - 3.2\n      - 5.0\ndiff --git a/doc/usage/extensions/autodoc.rst b/doc/usage/extensions/autodoc.rst\nindex 150b62c4d93..71f49c24044 100644\n--- a/doc/usage/extensions/autodoc.rst\n+++ b/doc/usage/extensions/autodoc.rst\n@@ -136,9 +136,22 @@ inserting them into the page source under a suitable :rst:dir:`py:module`,\n            :undoc-members:\n \n    * \"Private\" members (that is, those named like ``_private`` or ``__private``)\n-     will be included if the ``private-members`` flag option is given.\n+     will be included if the ``private-members`` flag option is given::\n+\n+        .. automodule:: noodle\n+           :members:\n+           :private-members:\n+\n+     It can also take an explicit list of member names to be documented as\n+     arguments::\n+\n+        .. automodule:: noodle\n+           :members:\n+           :private-members: _spicy, _garlickly\n \n      .. versionadded:: 1.1\n+     .. versionchanged:: 3.2\n+        The option can now take arguments.\n \n    * autodoc considers a member private if its docstring contains\n      ``:meta private:`` in its :ref:`info-field-lists`.\ndiff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py\nindex 8c3509c3bbb..9f8820fdc06 100644\n--- a/sphinx/ext/autodoc/__init__.py\n+++ b/sphinx/ext/autodoc/__init__.py\n@@ -125,6 +125,8 @@ def bool_option(arg: Any) -> bool:\n \n def merge_special_members_option(options: Dict) -> None:\n     \"\"\"Merge :special-members: option to :members: option.\"\"\"\n+    warnings.warn(\"merge_special_members_option() is deprecated.\",\n+                  RemovedInSphinx50Warning, stacklevel=2)\n     if 'special-members' in options and options['special-members'] is not ALL:\n         if options.get('members') is ALL:\n             pass\n@@ -136,6 +138,20 @@ def merge_special_members_option(options: Dict) -> None:\n             options['members'] = options['special-members']\n \n \n+def merge_members_option(options: Dict) -> None:\n+    \"\"\"Merge :*-members: option to the :members: option.\"\"\"\n+    if options.get('members') is ALL:\n+        # merging is not needed when members: ALL\n+        return\n+\n+    members = options.setdefault('members', [])\n+    for key in {'private-members', 'special-members'}:\n+        if key in options and options[key] is not ALL:\n+            for member in options[key]:\n+                if member not in members:\n+                    members.append(member)\n+\n+\n # Some useful event listener factories for autodoc-process-docstring.\n \n def cut_lines(pre: int, post: int = 0, what: str = None) -> Callable:\n@@ -648,16 +664,28 @@ def is_filtered_inherited_member(name: str) -> bool:\n                         keep = has_doc or self.options.undoc_members\n             elif (namespace, membername) in attr_docs:\n                 if want_all and isprivate:\n-                    # ignore members whose name starts with _ by default\n-                    keep = self.options.private_members\n+                    if self.options.private_members is None:\n+                        keep = False\n+                    elif self.options.private_members is ALL:\n+                        keep = True\n+                    else:\n+                        keep = membername in self.options.private_members\n                 else:\n                     # keep documented attributes\n                     keep = True\n                 isattr = True\n             elif want_all and isprivate:\n-                # ignore members whose name starts with _ by default\n-                keep = self.options.private_members and \\\n-                    (has_doc or self.options.undoc_members)\n+                if has_doc or self.options.undoc_members:\n+                    if self.options.private_members is None:\n+                        keep = False\n+                    elif self.options.private_members is ALL:\n+                        keep = True\n+                    elif is_filtered_inherited_member(membername):\n+                        keep = False\n+                    else:\n+                        keep = membername in self.options.private_members\n+                else:\n+                    keep = False\n             else:\n                 if self.options.members is ALL and is_filtered_inherited_member(membername):\n                     keep = False\n@@ -859,13 +887,13 @@ class ModuleDocumenter(Documenter):\n         'show-inheritance': bool_option, 'synopsis': identity,\n         'platform': identity, 'deprecated': bool_option,\n         'member-order': member_order_option, 'exclude-members': members_set_option,\n-        'private-members': bool_option, 'special-members': members_option,\n+        'private-members': members_option, 'special-members': members_option,\n         'imported-members': bool_option, 'ignore-module-all': bool_option\n     }  # type: Dict[str, Callable]\n \n     def __init__(self, *args: Any) -> None:\n         super().__init__(*args)\n-        merge_special_members_option(self.options)\n+        merge_members_option(self.options)\n         self.__all__ = None\n \n     @classmethod\n@@ -1279,7 +1307,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n         'noindex': bool_option, 'inherited-members': inherited_members_option,\n         'show-inheritance': bool_option, 'member-order': member_order_option,\n         'exclude-members': members_set_option,\n-        'private-members': bool_option, 'special-members': members_option,\n+        'private-members': members_option, 'special-members': members_option,\n     }  # type: Dict[str, Callable]\n \n     _signature_class = None  # type: Any\n@@ -1287,7 +1315,7 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:\n \n     def __init__(self, *args: Any) -> None:\n         super().__init__(*args)\n-        merge_special_members_option(self.options)\n+        merge_members_option(self.options)\n \n     @classmethod\n     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any\ndiff --git a/tests/test_ext_autodoc_private_members.py b/tests/test_ext_autodoc_private_members.py\nindex f4cadd3a543..9d7ff487a03 100644\n--- a/tests/test_ext_autodoc_private_members.py\n+++ b/tests/test_ext_autodoc_private_members.py\n@@ -60,3 +60,24 @@ def test_private_field_and_private_members(app):\n         '   :meta private:',\n         '',\n     ]\n+\n+\n+@pytest.mark.sphinx('html', testroot='ext-autodoc')\n+def test_private_members(app):\n+    app.config.autoclass_content = 'class'\n+    options = {\"members\": None,\n+               \"private-members\": \"_public_function\"}\n+    actual = do_autodoc(app, 'module', 'target.private', options)\n+    assert list(actual) == [\n+        '',\n+        '.. py:module:: target.private',\n+        '',\n+        '',\n+        '.. py:function:: _public_function(name)',\n+        '   :module: target.private',\n+        '',\n+        '   public_function is a docstring().',\n+        '',\n+        '   :meta public:',\n+        '',\n+    ]\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/8035"}