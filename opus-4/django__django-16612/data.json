{"instance_id": "django__django-16612", "score": "C", "diff": "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py\nindex 61be31d890..96c54e44ad 100644\n--- a/django/contrib/admin/sites.py\n+++ b/django/contrib/admin/sites.py\n@@ -453,7 +453,7 @@ class AdminSite:\n                 pass\n             else:\n                 if getattr(match.func, \"should_append_slash\", True):\n-                    return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n+                    return HttpResponsePermanentRedirect(request.get_full_path(force_append_slash=True))\n         raise Http404\n \n     def _build_app_dict(self, request, label=None):\ndiff --git a/test_catch_all_query_string.py b/test_catch_all_query_string.py\nnew file mode 100644\nindex 0000000000..7e2a1c7bfc\n--- /dev/null\n+++ b/test_catch_all_query_string.py\n@@ -0,0 +1,61 @@\n+#!/usr/bin/env python\n+import os\n+import sys\n+\n+# Configure Django settings\n+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'tests.admin_views.test_settings')\n+sys.path.insert(0, '/testbed')\n+sys.path.insert(0, '/testbed/tests')\n+\n+import django\n+django.setup()\n+\n+from django.test import TestCase, override_settings\n+from django.contrib.auth.models import User\n+\n+@override_settings(ROOT_URLCONF=\"admin_views.urls\", APPEND_SLASH=True)\n+class TestCatchAllQueryString(TestCase):\n+    def test_catch_all_view_preserves_query_string(self):\n+        \"\"\"Test that catch_all_view preserves query strings when redirecting.\"\"\"\n+        # Create a staff user\n+        superuser = User.objects.create_user(\n+            username=\"staff\",\n+            password=\"secret\",\n+            email=\"staff@example.com\",\n+            is_staff=True,\n+        )\n+        self.client.force_login(superuser)\n+        \n+        # Test URL without trailing slash but with query string\n+        # This should redirect to the same URL with a trailing slash AND preserve the query string\n+        url_without_slash = \"/test_admin/admin/auth/user\"\n+        query_string = \"?id=123&filter=active\"\n+        full_url = url_without_slash + query_string\n+        \n+        response = self.client.get(full_url)\n+        \n+        # Should redirect to the URL with trailing slash and preserve query string\n+        expected_redirect = url_without_slash + \"/\" + query_string\n+        self.assertRedirects(\n+            response, \n+            expected_redirect, \n+            status_code=301,\n+            fetch_redirect_response=False\n+        )\n+\n+if __name__ == \"__main__\":\n+    from django.test.utils import setup_test_environment, teardown_test_environment\n+    setup_test_environment()\n+    \n+    test = TestCatchAllQueryString()\n+    test._pre_setup()\n+    \n+    print(\"Running test to demonstrate the bug...\")\n+    try:\n+        test.test_catch_all_view_preserves_query_string()\n+        print(\"Test passed! (This should fail before the fix)\")\n+    except AssertionError as e:\n+        print(f\"Test failed as expected: {e}\")\n+    finally:\n+        test._post_teardown()\n+        teardown_test_environment()\ndiff --git a/test_debug.py b/test_debug.py\nnew file mode 100644\nindex 0000000000..d6bbee773c\n--- /dev/null\n+++ b/test_debug.py\n@@ -0,0 +1,47 @@\n+import os\n+import sys\n+sys.path.insert(0, '/testbed')\n+sys.path.insert(0, '/testbed/tests')\n+os.environ['DJANGO_SETTINGS_MODULE'] = 'admin_views.test_settings'\n+\n+from django.test import RequestFactory\n+from django.contrib.admin.sites import AdminSite\n+from django.contrib.auth.models import User\n+from django.conf import settings\n+\n+# Configure Django\n+import django\n+django.setup()\n+\n+# Create a test request with query string\n+factory = RequestFactory()\n+request = factory.get('/test_admin/admin/admin_views/article?id=123&filter=active')\n+\n+# Set required attributes\n+request.path = '/test_admin/admin/admin_views/article'\n+request.path_info = '/admin/admin_views/article'\n+request.user = User.objects.create_user(\n+    username='staff',\n+    password='secret',\n+    email='staff@example.com',\n+    is_staff=True,\n+)\n+\n+# Create an admin site instance\n+admin = AdminSite()\n+\n+# Call catch_all_view - enable APPEND_SLASH\n+settings.APPEND_SLASH = True\n+\n+print(\"Request path:\", request.path)\n+print(\"Request path_info:\", request.path_info)\n+print(\"Request META['QUERY_STRING']:\", request.META.get('QUERY_STRING'))\n+print(\"Request get_full_path():\", request.get_full_path())\n+\n+# Call the method\n+try:\n+    response = admin.catch_all_view(request, 'admin_views/article')\n+    print(\"Response status:\", response.status_code)\n+    print(\"Response location:\", response['Location'])\n+except Exception as e:\n+    print(\"Exception:\", e)\ndiff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py\nindex 5f7aafe430..d77fff6d1f 100644\n--- a/tests/admin_views/tests.py\n+++ b/tests/admin_views/tests.py\n@@ -8528,6 +8528,33 @@ class AdminSiteFinalCatchAllPatternTests(TestCase):\n         response = self.client.get(known_url[:-1])\n         self.assertEqual(response.status_code, 404)\n \n+    @override_settings(APPEND_SLASH=True)\n+    def test_missing_slash_append_slash_true_preserves_query_string(self):\n+        \"\"\"Test that catch_all_view preserves query strings when redirecting.\"\"\"\n+        superuser = User.objects.create_user(\n+            username=\"staff\",\n+            password=\"secret\",\n+            email=\"staff@example.com\",\n+            is_staff=True,\n+        )\n+        self.client.force_login(superuser)\n+        \n+        known_url = reverse(\"admin:admin_views_article_changelist\")\n+        # Remove trailing slash and add query string\n+        url_without_slash = known_url[:-1]\n+        query_string = \"?id=123&filter=active\"\n+        full_url = url_without_slash + query_string\n+        \n+        response = self.client.get(full_url)\n+        # Should redirect to the URL with trailing slash AND preserve the query string\n+        expected_redirect = known_url + query_string\n+        self.assertRedirects(\n+            response,\n+            expected_redirect,\n+            status_code=301,\n+            target_status_code=403\n+        )\n+\n     @override_settings(APPEND_SLASH=True)\n     def test_single_model_no_append_slash(self):\n         superuser = User.objects.create_user(\n", "gold_standard_diff": "diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py\nindex 61be31d890dd..3ff7088506ce 100644\n--- a/django/contrib/admin/sites.py\n+++ b/django/contrib/admin/sites.py\n@@ -453,7 +453,9 @@ def catch_all_view(self, request, url):\n                 pass\n             else:\n                 if getattr(match.func, \"should_append_slash\", True):\n-                    return HttpResponsePermanentRedirect(\"%s/\" % request.path)\n+                    return HttpResponsePermanentRedirect(\n+                        request.get_full_path(force_append_slash=True)\n+                    )\n         raise Http404\n \n     def _build_app_dict(self, request, label=None):\ndiff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py\nindex 5f7aafe4301f..f440b85b6ede 100644\n--- a/tests/admin_views/tests.py\n+++ b/tests/admin_views/tests.py\n@@ -8463,6 +8463,24 @@ def test_missing_slash_append_slash_true(self):\n             response, known_url, status_code=301, target_status_code=403\n         )\n \n+    @override_settings(APPEND_SLASH=True)\n+    def test_missing_slash_append_slash_true_query_string(self):\n+        superuser = User.objects.create_user(\n+            username=\"staff\",\n+            password=\"secret\",\n+            email=\"staff@example.com\",\n+            is_staff=True,\n+        )\n+        self.client.force_login(superuser)\n+        known_url = reverse(\"admin:admin_views_article_changelist\")\n+        response = self.client.get(\"%s?id=1\" % known_url[:-1])\n+        self.assertRedirects(\n+            response,\n+            f\"{known_url}?id=1\",\n+            status_code=301,\n+            fetch_redirect_response=False,\n+        )\n+\n     @override_settings(APPEND_SLASH=True)\n     def test_missing_slash_append_slash_true_script_name(self):\n         superuser = User.objects.create_user(\n@@ -8481,6 +8499,24 @@ def test_missing_slash_append_slash_true_script_name(self):\n             fetch_redirect_response=False,\n         )\n \n+    @override_settings(APPEND_SLASH=True)\n+    def test_missing_slash_append_slash_true_script_name_query_string(self):\n+        superuser = User.objects.create_user(\n+            username=\"staff\",\n+            password=\"secret\",\n+            email=\"staff@example.com\",\n+            is_staff=True,\n+        )\n+        self.client.force_login(superuser)\n+        known_url = reverse(\"admin:admin_views_article_changelist\")\n+        response = self.client.get(\"%s?id=1\" % known_url[:-1], SCRIPT_NAME=\"/prefix/\")\n+        self.assertRedirects(\n+            response,\n+            f\"/prefix{known_url}?id=1\",\n+            status_code=301,\n+            fetch_redirect_response=False,\n+        )\n+\n     @override_settings(APPEND_SLASH=True, FORCE_SCRIPT_NAME=\"/prefix/\")\n     def test_missing_slash_append_slash_true_force_script_name(self):\n         superuser = User.objects.create_user(\n@@ -8515,6 +8551,23 @@ def test_missing_slash_append_slash_true_non_staff_user(self):\n             \"/test_admin/admin/login/?next=/test_admin/admin/admin_views/article\",\n         )\n \n+    @override_settings(APPEND_SLASH=True)\n+    def test_missing_slash_append_slash_true_non_staff_user_query_string(self):\n+        user = User.objects.create_user(\n+            username=\"user\",\n+            password=\"secret\",\n+            email=\"user@example.com\",\n+            is_staff=False,\n+        )\n+        self.client.force_login(user)\n+        known_url = reverse(\"admin:admin_views_article_changelist\")\n+        response = self.client.get(\"%s?id=1\" % known_url[:-1])\n+        self.assertRedirects(\n+            response,\n+            \"/test_admin/admin/login/?next=/test_admin/admin/admin_views/article\"\n+            \"%3Fid%3D1\",\n+        )\n+\n     @override_settings(APPEND_SLASH=False)\n     def test_missing_slash_append_slash_false(self):\n         superuser = User.objects.create_user(\n@@ -8629,6 +8682,24 @@ def test_missing_slash_append_slash_true_without_final_catch_all_view(self):\n             response, known_url, status_code=301, target_status_code=403\n         )\n \n+    @override_settings(APPEND_SLASH=True)\n+    def test_missing_slash_append_slash_true_query_without_final_catch_all_view(self):\n+        superuser = User.objects.create_user(\n+            username=\"staff\",\n+            password=\"secret\",\n+            email=\"staff@example.com\",\n+            is_staff=True,\n+        )\n+        self.client.force_login(superuser)\n+        known_url = reverse(\"admin10:admin_views_article_changelist\")\n+        response = self.client.get(\"%s?id=1\" % known_url[:-1])\n+        self.assertRedirects(\n+            response,\n+            f\"{known_url}?id=1\",\n+            status_code=301,\n+            fetch_redirect_response=False,\n+        )\n+\n     @override_settings(APPEND_SLASH=False)\n     def test_missing_slash_append_slash_false_without_final_catch_all_view(self):\n         superuser = User.objects.create_user(\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16612"}