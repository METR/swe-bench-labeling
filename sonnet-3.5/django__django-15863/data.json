{"instance_id": "django__django-15863", "score": "C", "diff": "diff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 7a5b28d159..8c66f97695 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -95,9 +95,9 @@ def json_script(value, element_id=None):\n @register.filter(is_safe=True)\n def floatformat(text, arg=-1):\n     \"\"\"\n-    Display a float to a specified number of decimal places.\n+    Display a float or Decimal to a specified number of decimal places.\n \n-    If called without an argument, display the floating point number with one\n+    If called without an argument, display the number with one\n     decimal place -- but only if there's a decimal place to be displayed:\n \n     * num1 = 34.23234\n@@ -133,6 +133,10 @@ def floatformat(text, arg=-1):\n     * {{ 66666.6666|floatformat:\"2\" }} displays \"66666,67\"\n     * {{ 66666.6666|floatformat:\"2u\" }} displays \"66666.67\"\n \n+    If the input is a Decimal, the full precision is preserved:\n+\n+    * {{ Decimal('42.12345678901234567890')|floatformat:20 }} displays \"42.12345678901234567890\"\n+\n     If the input float is infinity or NaN, display the string representation\n     of that value.\n     \"\"\"\n@@ -151,8 +155,11 @@ def floatformat(text, arg=-1):\n             use_l10n = False\n             arg = arg[:-1] or -1\n     try:\n-        input_val = repr(text)\n-        d = Decimal(input_val)\n+        if isinstance(text, Decimal):\n+            d = text\n+        else:\n+            input_val = repr(text)\n+            d = Decimal(input_val)\n     except InvalidOperation:\n         try:\n             d = Decimal(str(float(text)))\n", "gold_standard_diff": "From 6153e1573cb631c4d419364fbfc169c8a02743b4 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Vlastimil=20Z=C3=ADma?= <vlastimil.zima@nic.cz>\nDate: Wed, 20 Jul 2022 14:46:49 +0200\nSubject: [PATCH] Fixed #34098 -- Keep precision of decimals in floatformat.\n\n---\n django/template/defaultfilters.py                     | 2 +-\n tests/template_tests/filter_tests/test_floatformat.py | 4 ++++\n 2 files changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a/django/template/defaultfilters.py b/django/template/defaultfilters.py\nindex 46334791c6fa..0ce0eefdc86c 100644\n--- a/django/template/defaultfilters.py\n+++ b/django/template/defaultfilters.py\n@@ -149,7 +149,7 @@ def floatformat(text, arg=-1):\n             use_l10n = False\n             arg = arg[:-1] or -1\n     try:\n-        input_val = repr(text)\n+        input_val = str(text)\n         d = Decimal(input_val)\n     except InvalidOperation:\n         try:\ndiff --git a/tests/template_tests/filter_tests/test_floatformat.py b/tests/template_tests/filter_tests/test_floatformat.py\nindex 8dc69b2437c9..361a888ce3de 100644\n--- a/tests/template_tests/filter_tests/test_floatformat.py\n+++ b/tests/template_tests/filter_tests/test_floatformat.py\n@@ -56,6 +56,10 @@ def test_inputs(self):\n         self.assertEqual(floatformat(0.12345, 2), \"0.12\")\n         self.assertEqual(floatformat(Decimal(\"555.555\"), 2), \"555.56\")\n         self.assertEqual(floatformat(Decimal(\"09.000\")), \"9\")\n+        self.assertEqual(\n+            floatformat(Decimal(\"123456.123456789012345678901\"), 21),\n+            \"123456.123456789012345678901\",\n+        )\n         self.assertEqual(floatformat(\"foo\"), \"\")\n         self.assertEqual(floatformat(13.1031, \"bar\"), \"13.1031\")\n         self.assertEqual(floatformat(18.125, 2), \"18.13\")\n", "gold_standard_pr_link": "https://github.com/django/django/pull/15863"}