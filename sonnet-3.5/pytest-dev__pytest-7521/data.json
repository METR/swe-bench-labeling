{"instance_id": "pytest-dev__pytest-7521", "score": "I", "diff": "diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 3f9c60fb9..6f28adc99 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -559,11 +559,11 @@ class MultiCapture:\n \n     def readouterr(self) -> CaptureResult:\n         if self.out:\n-            out = self.out.snap()\n+            out = self.out.snap().replace('\\n', '\\r\\n')\n         else:\n             out = \"\"\n         if self.err:\n-            err = self.err.snap()\n+            err = self.err.snap().replace('\\n', '\\r\\n')\n         else:\n             err = \"\"\n         return CaptureResult(out, err)\n@@ -797,7 +797,7 @@ class CaptureFixture:\n             captured_err += err\n         self._captured_out = self.captureclass.EMPTY_BUFFER\n         self._captured_err = self.captureclass.EMPTY_BUFFER\n-        return CaptureResult(captured_out, captured_err)\n+        return CaptureResult(captured_out.replace('\\n', '\\r\\n'), captured_err.replace('\\n', '\\r\\n'))\n \n     def _suspend(self) -> None:\n         \"\"\"Suspends this fixture's own capturing temporarily.\"\"\"\n", "gold_standard_diff": "From 8616a5f1d989eec5e2c5f2129040149fe4cf4347 Mon Sep 17 00:00:00 2001\nFrom: Anthony Sottile <asottile@umich.edu>\nDate: Mon, 20 Jul 2020 08:54:20 -0700\nSubject: [PATCH] Preserve newlines when captured with capfd\n\n---\n changelog/7517.bugfix.rst | 1 +\n src/_pytest/capture.py    | 1 +\n testing/test_capture.py   | 6 ++++++\n 3 files changed, 8 insertions(+)\n create mode 100644 changelog/7517.bugfix.rst\n\ndiff --git a/changelog/7517.bugfix.rst b/changelog/7517.bugfix.rst\nnew file mode 100644\nindex 00000000000..2d062dc1e29\n--- /dev/null\n+++ b/changelog/7517.bugfix.rst\n@@ -0,0 +1 @@\n+Preserve line endings when captured via ``capfd``.\ndiff --git a/src/_pytest/capture.py b/src/_pytest/capture.py\nindex 3f9c60fb9a0..f538b67eceb 100644\n--- a/src/_pytest/capture.py\n+++ b/src/_pytest/capture.py\n@@ -388,6 +388,7 @@ def __init__(self, targetfd: int) -> None:\n                 TemporaryFile(buffering=0),  # type: ignore[arg-type]\n                 encoding=\"utf-8\",\n                 errors=\"replace\",\n+                newline=\"\",\n                 write_through=True,\n             )\n             if targetfd in patchsysdict:\ndiff --git a/testing/test_capture.py b/testing/test_capture.py\nindex a3bd4b62327..bc89501c73b 100644\n--- a/testing/test_capture.py\n+++ b/testing/test_capture.py\n@@ -514,6 +514,12 @@ def test_hello(capfd):\n         )\n         reprec.assertoutcome(passed=1)\n \n+    @pytest.mark.parametrize(\"nl\", (\"\\n\", \"\\r\\n\", \"\\r\"))\n+    def test_cafd_preserves_newlines(self, capfd, nl):\n+        print(\"test\", end=nl)\n+        out, err = capfd.readouterr()\n+        assert out.endswith(nl)\n+\n     def test_capfdbinary(self, testdir):\n         reprec = testdir.inline_runsource(\n             \"\"\"\\\n", "gold_standard_pr_link": "https://github.com/pytest-dev/pytest/pull/7521"}