From e79efef63a7e748cc96c95a592a59a2a16704bf1 Mon Sep 17 00:00:00 2001
From: Takeshi KOMIYA <i.tkomiya@gmail.com>
Date: Tue, 21 Sep 2021 02:03:31 +0900
Subject: [PATCH] Fix #9657: autodoc: basecls for a subclass of mocked object
 is incorrect

---
 CHANGES                    |  1 +
 sphinx/ext/autodoc/mock.py |  4 +++-
 tests/test_util_typing.py  | 13 +++++++++++++
 3 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/CHANGES b/CHANGES
index 1f33b88a890..f6a551bb702 100644
--- a/CHANGES
+++ b/CHANGES
@@ -21,6 +21,7 @@ Bugs fixed
 * #9630: autodoc: Failed to build cross references if :confval:`primary_domain`
   is not 'py'
 * #9644: autodoc: Crashed on getting source info from problematic object
+* #9657: autodoc: The base class for a subclass of mocked object is incorrect
 * #9630: autosummary: Failed to build summary table if :confval:`primary_domain`
   is not 'py'
 
diff --git a/sphinx/ext/autodoc/mock.py b/sphinx/ext/autodoc/mock.py
index b562f47fd71..62f36da7956 100644
--- a/sphinx/ext/autodoc/mock.py
+++ b/sphinx/ext/autodoc/mock.py
@@ -26,6 +26,7 @@ class _MockObject:
     """Used by autodoc_mock_imports."""
 
     __display_name__ = '_MockObject'
+    __name__ = ''
     __sphinx_mock__ = True
     __sphinx_decorator_args__: Tuple[Any, ...] = ()
 
@@ -40,7 +41,7 @@ def __new__(cls, *args: Any, **kwargs: Any) -> Any:
         return super().__new__(cls)
 
     def __init__(self, *args: Any, **kwargs: Any) -> None:
-        self.__qualname__ = ''
+        self.__qualname__ = self.__name__
 
     def __len__(self) -> int:
         return 0
@@ -73,6 +74,7 @@ def _make_subclass(name: str, module: str, superclass: Any = _MockObject,
                    attributes: Any = None, decorator_args: Tuple = ()) -> Any:
     attrs = {'__module__': module,
              '__display_name__': module + '.' + name,
+             '__name__': name,
              '__sphinx_decorator_args__': decorator_args}
     attrs.update(attributes or {})
 
diff --git a/tests/test_util_typing.py b/tests/test_util_typing.py
index ad57a347e5e..d65b9cdc553 100644
--- a/tests/test_util_typing.py
+++ b/tests/test_util_typing.py
@@ -17,6 +17,7 @@
 
 import pytest
 
+from sphinx.ext.autodoc import mock
 from sphinx.util.typing import restify, stringify
 
 
@@ -169,6 +170,12 @@ def test_restify_broken_type_hints():
     assert restify(BrokenType) == ':py:class:`tests.test_util_typing.BrokenType`'
 
 
+def test_restify_mock():
+    with mock(['unknown']):
+        import unknown
+        assert restify(unknown.secret.Class) == ':py:class:`unknown.secret.Class`'
+
+
 def test_stringify():
     assert stringify(int) == "int"
     assert stringify(str) == "str"
@@ -293,3 +300,9 @@ def test_stringify_type_union_operator():
 
 def test_stringify_broken_type_hints():
     assert stringify(BrokenType) == 'tests.test_util_typing.BrokenType'
+
+
+def test_stringify_mock():
+    with mock(['unknown']):
+        import unknown
+        assert stringify(unknown.secret.Class) == 'unknown.secret.Class'
