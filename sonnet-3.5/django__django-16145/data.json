{"instance_id": "django__django-16145", "score": "I", "diff": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 3c39f57e4d..0e69ef2cc9 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -105,8 +105,8 @@ class Command(BaseCommand):\n                     self._raw_ipv6 = True\n                 elif self.use_ipv6 and not _fqdn:\n                     raise CommandError('\"%s\" is not a valid IPv6 address.' % self.addr)\n-        if not self.addr:\n-            self.addr = self.default_addr_ipv6 if self.use_ipv6 else self.default_addr\n+        if not self.addr or self.addr == \"0\":\n+            self.addr = self.default_addr_ipv6 if self.use_ipv6 else \"0.0.0.0\"\n             self._raw_ipv6 = self.use_ipv6\n         self.run(**options)\n \n", "gold_standard_diff": "diff --git a/django/core/management/commands/runserver.py b/django/core/management/commands/runserver.py\nindex 3c39f57e4dda..2b91feb3753b 100644\n--- a/django/core/management/commands/runserver.py\n+++ b/django/core/management/commands/runserver.py\n@@ -129,6 +129,13 @@ def inner_run(self, *args, **options):\n         shutdown_message = options.get(\"shutdown_message\", \"\")\n         quit_command = \"CTRL-BREAK\" if sys.platform == \"win32\" else \"CONTROL-C\"\n \n+        if self._raw_ipv6:\n+            addr = f\"[{self.addr}]\"\n+        elif self.addr == \"0\":\n+            addr = \"0.0.0.0\"\n+        else:\n+            addr = self.addr\n+\n         if not options[\"skip_checks\"]:\n             self.stdout.write(\"Performing system checks...\\n\\n\")\n             self.check(display_num_errors=True)\n@@ -147,7 +154,7 @@ def inner_run(self, *args, **options):\n                 \"version\": self.get_version(),\n                 \"settings\": settings.SETTINGS_MODULE,\n                 \"protocol\": self.protocol,\n-                \"addr\": \"[%s]\" % self.addr if self._raw_ipv6 else self.addr,\n+                \"addr\": addr,\n                 \"port\": self.port,\n                 \"quit_command\": quit_command,\n             }\ndiff --git a/tests/admin_scripts/tests.py b/tests/admin_scripts/tests.py\nindex 9d2ca839d54b..0a44e8a53884 100644\n--- a/tests/admin_scripts/tests.py\n+++ b/tests/admin_scripts/tests.py\n@@ -1587,6 +1587,21 @@ def test_runserver_addrport(self):\n         call_command(self.cmd, addrport=\"7000\")\n         self.assertServerSettings(\"127.0.0.1\", \"7000\")\n \n+    @mock.patch(\"django.core.management.commands.runserver.run\")\n+    @mock.patch(\"django.core.management.base.BaseCommand.check_migrations\")\n+    def test_zero_ip_addr(self, *mocked_objects):\n+        call_command(\n+            \"runserver\",\n+            addrport=\"0:8000\",\n+            use_reloader=False,\n+            skip_checks=True,\n+            stdout=self.output,\n+        )\n+        self.assertIn(\n+            \"Starting development server at http://0.0.0.0:8000/\",\n+            self.output.getvalue(),\n+        )\n+\n     @unittest.skipUnless(socket.has_ipv6, \"platform doesn't support IPv6\")\n     def test_runner_addrport_ipv6(self):\n         call_command(self.cmd, addrport=\"\", use_ipv6=True)\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16145"}