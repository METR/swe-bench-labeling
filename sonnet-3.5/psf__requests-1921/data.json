{"instance_id": "psf__requests-1921", "score": "I", "diff": "diff --git a/requests/sessions.py b/requests/sessions.py\nindex a023e4ec..7c0ca22f 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -257,6 +257,10 @@ class Session(SessionRedirectMixin):\n     def __exit__(self, *args):\n         self.close()\n \n+    def filter_none_values(self, data):\n+        \"\"\"Remove None values from a dictionary.\"\"\"\n+        return {k: v for k, v in data.items() if v is not None}\n+\n     def prepare_request(self, request):\n         \"\"\"Constructs a :class:`PreparedRequest <PreparedRequest>` for\n         transmission and returns it. The :class:`PreparedRequest` has settings\n@@ -276,19 +280,23 @@ class Session(SessionRedirectMixin):\n         merged_cookies = merge_cookies(\n             merge_cookies(RequestsCookieJar(), self.cookies), cookies)\n \n-\n         # Set environment's basic authentication if not explicitly set.\n         auth = request.auth\n         if self.trust_env and not auth and not self.auth:\n             auth = get_netrc_auth(request.url)\n \n+        # Filter out None values from headers\n+        filtered_headers = self.filter_none_values(merge_setting(\n+            request.headers, self.headers, dict_class=CaseInsensitiveDict\n+        ))\n+\n         p = PreparedRequest()\n         p.prepare(\n             method=request.method.upper(),\n             url=request.url,\n             files=request.files,\n             data=request.data,\n-            headers=merge_setting(request.headers, self.headers, dict_class=CaseInsensitiveDict),\n+            headers=filtered_headers,\n             params=merge_setting(request.params, self.params),\n             auth=merge_setting(auth, self.auth),\n             cookies=merged_cookies,\n", "gold_standard_diff": "From d2f647cee45fd05cc1977cc3faf4b095b5047b29 Mon Sep 17 00:00:00 2001\nFrom: Ian Cordasco <graffatcolmingov@gmail.com>\nDate: Fri, 14 Feb 2014 16:15:21 -0600\nSubject: [PATCH] Do not set headers with None value\n\n- Regardless of whether they are on the session or not\n- Fixes #1920\n---\n requests/sessions.py | 2 ++\n test_requests.py     | 8 ++++++++\n 2 files changed, 10 insertions(+)\n\ndiff --git a/requests/sessions.py b/requests/sessions.py\nindex a023e4eca6..c06fbcbe25 100644\n--- a/requests/sessions.py\n+++ b/requests/sessions.py\n@@ -59,6 +59,8 @@ def merge_setting(request_setting, session_setting, dict_class=OrderedDict):\n         if v is None:\n             del merged_setting[k]\n \n+    merged_setting = dict((k, v) for (k, v) in merged_setting.items() if v is not None)\n+\n     return merged_setting\n \n \ndiff --git a/test_requests.py b/test_requests.py\nindex 3d7cdaaf78..998f17f3b8 100755\n--- a/test_requests.py\n+++ b/test_requests.py\n@@ -211,6 +211,14 @@ def test_requests_in_history_are_not_overridden(self):\n         req_urls = [r.request.url for r in resp.history]\n         assert urls == req_urls\n \n+    def test_headers_on_session_with_None_are_not_sent(self):\n+        \"\"\"Do not send headers in Session.headers with None values.\"\"\"\n+        ses = requests.Session()\n+        ses.headers['Accept-Encoding'] = None\n+        req = requests.Request('GET', 'http://httpbin.org/get')\n+        prep = ses.prepare_request(req)\n+        assert 'Accept-Encoding' not in prep.headers\n+\n     def test_user_agent_transfers(self):\n \n         heads = {\n", "gold_standard_pr_link": "https://github.com/psf/requests/pull/1921"}