{"instance_id": "django__django-14238", "score": "C", "diff": "diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 0f53d9c30b..772612ec2c 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2524,7 +2524,11 @@ class AutoFieldMeta(type):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n \n     def __subclasscheck__(self, subclass):\n-        return subclass in self._subclasses or super().__subclasscheck__(subclass)\n+        return (\n+            subclass in self._subclasses or\n+            issubclass(subclass, self._subclasses) or\n+            super().__subclasscheck__(subclass)\n+        )\n \n \n class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta):\n", "gold_standard_diff": "From 45a58c31e64dbfdecab1178b1d00a3803a90ea2d Mon Sep 17 00:00:00 2001\nFrom: Adam Johnson <me@adamj.eu>\nDate: Thu, 8 Apr 2021 11:40:16 +0100\nSubject: [PATCH] Fixed #32620 -- Allowed subclasses of Big/SmallAutoField for\n DEFAULT_AUTO_FIELD.\n\n---\n django/db/models/fields/__init__.py    |  2 +-\n docs/releases/3.2.1.txt                |  4 ++++\n tests/model_fields/test_autofield.py   | 14 +++++++++++++-\n tests/model_options/test_default_pk.py | 13 +++++++++++++\n 4 files changed, 31 insertions(+), 2 deletions(-)\n\ndiff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py\nindex 0f53d9c30bf9..0ce7de02c638 100644\n--- a/django/db/models/fields/__init__.py\n+++ b/django/db/models/fields/__init__.py\n@@ -2524,7 +2524,7 @@ def __instancecheck__(self, instance):\n         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)\n \n     def __subclasscheck__(self, subclass):\n-        return subclass in self._subclasses or super().__subclasscheck__(subclass)\n+        return issubclass(subclass, self._subclasses) or super().__subclasscheck__(subclass)\n \n \n class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta):\ndiff --git a/docs/releases/3.2.1.txt b/docs/releases/3.2.1.txt\nindex d303b46d4daa..e8361e737026 100644\n--- a/docs/releases/3.2.1.txt\n+++ b/docs/releases/3.2.1.txt\n@@ -10,3 +10,7 @@ Bugfixes\n ========\n \n * Corrected detection of GDAL 3.2 on Windows (:ticket:`32544`).\n+\n+* Fixed a bug in Django 3.2 where subclasses of ``BigAutoField`` and\n+  ``SmallAutoField`` were not allowed for the :setting:`DEFAULT_AUTO_FIELD`\n+  setting (:ticket:`32620`).\ndiff --git a/tests/model_fields/test_autofield.py b/tests/model_fields/test_autofield.py\nindex 646cd2ab0a52..0ae981c3d97d 100644\n--- a/tests/model_fields/test_autofield.py\n+++ b/tests/model_fields/test_autofield.py\n@@ -30,6 +30,18 @@ def test_isinstance_of_autofield(self):\n                 self.assertIsInstance(field(), models.AutoField)\n \n     def test_issubclass_of_autofield(self):\n-        for field in (models.BigAutoField, models.SmallAutoField):\n+        class MyBigAutoField(models.BigAutoField):\n+            pass\n+\n+        class MySmallAutoField(models.SmallAutoField):\n+            pass\n+\n+        tests = [\n+            MyBigAutoField,\n+            MySmallAutoField,\n+            models.BigAutoField,\n+            models.SmallAutoField,\n+        ]\n+        for field in tests:\n             with self.subTest(field.__name__):\n                 self.assertTrue(issubclass(field, models.AutoField))\ndiff --git a/tests/model_options/test_default_pk.py b/tests/model_options/test_default_pk.py\nindex b6788489160f..a3beaba7c3a5 100644\n--- a/tests/model_options/test_default_pk.py\n+++ b/tests/model_options/test_default_pk.py\n@@ -4,6 +4,10 @@\n from django.test.utils import isolate_apps\n \n \n+class MyBigAutoField(models.BigAutoField):\n+    pass\n+\n+\n @isolate_apps('model_options')\n class TestDefaultPK(SimpleTestCase):\n     @override_settings(DEFAULT_AUTO_FIELD='django.db.models.NonexistentAutoField')\n@@ -74,6 +78,15 @@ class Model(models.Model):\n \n         self.assertIsInstance(Model._meta.pk, models.SmallAutoField)\n \n+    @override_settings(\n+        DEFAULT_AUTO_FIELD='model_options.test_default_pk.MyBigAutoField'\n+    )\n+    def test_default_auto_field_setting_bigautofield_subclass(self):\n+        class Model(models.Model):\n+            pass\n+\n+        self.assertIsInstance(Model._meta.pk, MyBigAutoField)\n+\n     @isolate_apps('model_options.apps.ModelPKConfig')\n     @override_settings(DEFAULT_AUTO_FIELD='django.db.models.AutoField')\n     def test_app_default_auto_field(self):\n", "gold_standard_pr_link": "https://github.com/django/django/pull/14238"}