{"instance_id": "sympy__sympy-23262", "score": "I", "diff": "", "gold_standard_diff": "From 10eafdac16c9d71761ab718aca45e5853440af65 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Bj=C3=B6rn=20Ingvar=20Dahlgren?= <bjodah@gmail.com>\nDate: Mon, 21 Mar 2022 08:16:13 +0100\nSubject: [PATCH] Fix lambdify for Tuple of length 1\n\n---\n sympy/utilities/lambdify.py            | 4 ++--\n sympy/utilities/tests/test_lambdify.py | 2 ++\n 2 files changed, 4 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/utilities/lambdify.py b/sympy/utilities/lambdify.py\nindex da67263b19d5..9634c5ecbd9b 100644\n--- a/sympy/utilities/lambdify.py\n+++ b/sympy/utilities/lambdify.py\n@@ -956,9 +956,9 @@ def _recursive_to_string(doprint, arg):\n         return doprint(arg)\n     elif iterable(arg):\n         if isinstance(arg, list):\n-            left, right = \"[]\"\n+            left, right = \"[\", \"]\"\n         elif isinstance(arg, tuple):\n-            left, right = \"()\"\n+            left, right = \"(\", \",)\"\n         else:\n             raise NotImplementedError(\"unhandled type: %s, %s\" % (type(arg), arg))\n         return left +', '.join(_recursive_to_string(doprint, e) for e in arg) + right\ndiff --git a/sympy/utilities/tests/test_lambdify.py b/sympy/utilities/tests/test_lambdify.py\nindex 023c2fb55ab9..0e12d9d43c22 100644\n--- a/sympy/utilities/tests/test_lambdify.py\n+++ b/sympy/utilities/tests/test_lambdify.py\n@@ -1192,6 +1192,8 @@ def test_issue_14941():\n     # test tuple\n     f2 = lambdify([x, y], (y, x), 'sympy')\n     assert f2(2, 3) == (3, 2)\n+    f2b = lambdify([], (1,))  # gh-23224\n+    assert f2b() == (1,)\n \n     # test list\n     f3 = lambdify([x, y], [y, x], 'sympy')\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/23262"}