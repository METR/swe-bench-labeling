{"instance_id": "django__django-16950", "score": "I", "diff": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex 3fa04b821f..03f667958e 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -10,6 +10,7 @@ from django.core.exceptions import (\n     ImproperlyConfigured,\n     ValidationError,\n )\n+from django.db import models\n from django.db.models.utils import AltersData\n from django.forms.fields import ChoiceField, Field\n from django.forms.forms import BaseForm, DeclarativeFieldsMetaclass\n@@ -1136,6 +1137,13 @@ class BaseInlineFormSet(BaseModelFormSet):\n             fk_value = getattr(self.instance, self.fk.remote_field.field_name)\n             fk_value = getattr(fk_value, \"pk\", fk_value)\n         setattr(form.instance, self.fk.get_attname(), fk_value)\n+\n+        # Set default values for UUIDFields\n+        for field_name, field in form.fields.items():\n+            if isinstance(field, models.UUIDField) and field.default:\n+                if not form.data.get(form.add_prefix(field_name)):\n+                    form.data[form.add_prefix(field_name)] = field.default()\n+\n         return form\n \n     @classmethod\n", "gold_standard_diff": "From b91d62cca07638741f5902713983f71478589b0e Mon Sep 17 00:00:00 2001\nFrom: Neeraj Kumar <sainineeraj1234@gmail.com>\nDate: Fri, 7 Jul 2023 08:12:25 +0200\nSubject: [PATCH 1/2] Refs #24377 -- Added assertions for model inlines with\n primary key that has a default.\n\nThis ensures that a model field default is ignored.\n---\n tests/model_formsets/test_uuid.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/tests/model_formsets/test_uuid.py b/tests/model_formsets/test_uuid.py\nindex 2097bde82b58..2084fc2987b0 100644\n--- a/tests/model_formsets/test_uuid.py\n+++ b/tests/model_formsets/test_uuid.py\n@@ -43,6 +43,8 @@ def test_inlineformset_factory_ignores_default_pks_on_submit(self):\n             }\n         )\n         self.assertTrue(formset.is_valid())\n+        self.assertIsNone(formset.instance.uuid)\n+        self.assertIsNone(formset.forms[0].instance.parent_id)\n \n     def test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child(self):\n         \"\"\"\n\nFrom eed096574fea5c9d82d0dc5952ad439dfde13718 Mon Sep 17 00:00:00 2001\nFrom: Neeraj Kumar <sainineeraj1234@gmail.com>\nDate: Wed, 7 Jun 2023 01:27:32 +0530\nSubject: [PATCH 2/2] Fixed #32210 -- Fixed model inlines with to_field that\n has a default.\n\n---\n django/forms/models.py            |  8 +++++++-\n tests/model_formsets/test_uuid.py | 22 ++++++++++++++++++++++\n 2 files changed, 29 insertions(+), 1 deletion(-)\n\ndiff --git a/django/forms/models.py b/django/forms/models.py\nindex 3fa04b821fb1..dc30d79b5d3d 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -1177,7 +1177,13 @@ def add_fields(self, form, index):\n                 to_field = self.instance._meta.get_field(kwargs[\"to_field\"])\n             else:\n                 to_field = self.instance._meta.pk\n-            if to_field.has_default():\n+\n+            if to_field.has_default() and (\n+                # Don't ignore a parent's auto-generated key if it's not the\n+                # parent model's pk and form data is provided.\n+                to_field.attname == self.fk.remote_field.model._meta.pk.name\n+                or not form.data\n+            ):\n                 setattr(self.instance, to_field.attname, None)\n \n         form.fields[name] = InlineForeignKeyField(self.instance, **kwargs)\ndiff --git a/tests/model_formsets/test_uuid.py b/tests/model_formsets/test_uuid.py\nindex 2084fc2987b0..0a2d504c8401 100644\n--- a/tests/model_formsets/test_uuid.py\n+++ b/tests/model_formsets/test_uuid.py\n@@ -93,3 +93,25 @@ def test_inlineformset_factory_nulls_default_pks_alternate_key_relation(self):\n         )\n         formset = FormSet()\n         self.assertIsNone(formset.forms[0].fields[\"parent\"].initial)\n+\n+    def test_inlineformset_factory_nulls_default_pks_alternate_key_relation_data(self):\n+        \"\"\"\n+        If form data is provided, a parent's auto-generated alternate key is\n+        set.\n+        \"\"\"\n+        FormSet = inlineformset_factory(\n+            ParentWithUUIDAlternateKey, ChildRelatedViaAK, fields=\"__all__\"\n+        )\n+        formset = FormSet(\n+            {\n+                \"childrelatedviaak_set-TOTAL_FORMS\": 3,\n+                \"childrelatedviaak_set-INITIAL_FORMS\": 0,\n+                \"childrelatedviaak_set-MAX_NUM_FORMS\": \"\",\n+                \"childrelatedviaak_set-0-name\": \"Test\",\n+                \"childrelatedviaak_set-1-name\": \"\",\n+                \"childrelatedviaak_set-2-name\": \"\",\n+            }\n+        )\n+        self.assertIs(formset.is_valid(), True)\n+        self.assertIsNotNone(formset.instance.uuid)\n+        self.assertEqual(formset.forms[0].instance.parent_id, formset.instance.uuid)\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16950"}