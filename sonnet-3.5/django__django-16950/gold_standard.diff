From b91d62cca07638741f5902713983f71478589b0e Mon Sep 17 00:00:00 2001
From: Neeraj Kumar <sainineeraj1234@gmail.com>
Date: Fri, 7 Jul 2023 08:12:25 +0200
Subject: [PATCH 1/2] Refs #24377 -- Added assertions for model inlines with
 primary key that has a default.

This ensures that a model field default is ignored.
---
 tests/model_formsets/test_uuid.py | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/tests/model_formsets/test_uuid.py b/tests/model_formsets/test_uuid.py
index 2097bde82b58..2084fc2987b0 100644
--- a/tests/model_formsets/test_uuid.py
+++ b/tests/model_formsets/test_uuid.py
@@ -43,6 +43,8 @@ def test_inlineformset_factory_ignores_default_pks_on_submit(self):
             }
         )
         self.assertTrue(formset.is_valid())
+        self.assertIsNone(formset.instance.uuid)
+        self.assertIsNone(formset.forms[0].instance.parent_id)
 
     def test_inlineformset_factory_nulls_default_pks_uuid_parent_auto_child(self):
         """

From eed096574fea5c9d82d0dc5952ad439dfde13718 Mon Sep 17 00:00:00 2001
From: Neeraj Kumar <sainineeraj1234@gmail.com>
Date: Wed, 7 Jun 2023 01:27:32 +0530
Subject: [PATCH 2/2] Fixed #32210 -- Fixed model inlines with to_field that
 has a default.

---
 django/forms/models.py            |  8 +++++++-
 tests/model_formsets/test_uuid.py | 22 ++++++++++++++++++++++
 2 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/django/forms/models.py b/django/forms/models.py
index 3fa04b821fb1..dc30d79b5d3d 100644
--- a/django/forms/models.py
+++ b/django/forms/models.py
@@ -1177,7 +1177,13 @@ def add_fields(self, form, index):
                 to_field = self.instance._meta.get_field(kwargs["to_field"])
             else:
                 to_field = self.instance._meta.pk
-            if to_field.has_default():
+
+            if to_field.has_default() and (
+                # Don't ignore a parent's auto-generated key if it's not the
+                # parent model's pk and form data is provided.
+                to_field.attname == self.fk.remote_field.model._meta.pk.name
+                or not form.data
+            ):
                 setattr(self.instance, to_field.attname, None)
 
         form.fields[name] = InlineForeignKeyField(self.instance, **kwargs)
diff --git a/tests/model_formsets/test_uuid.py b/tests/model_formsets/test_uuid.py
index 2084fc2987b0..0a2d504c8401 100644
--- a/tests/model_formsets/test_uuid.py
+++ b/tests/model_formsets/test_uuid.py
@@ -93,3 +93,25 @@ def test_inlineformset_factory_nulls_default_pks_alternate_key_relation(self):
         )
         formset = FormSet()
         self.assertIsNone(formset.forms[0].fields["parent"].initial)
+
+    def test_inlineformset_factory_nulls_default_pks_alternate_key_relation_data(self):
+        """
+        If form data is provided, a parent's auto-generated alternate key is
+        set.
+        """
+        FormSet = inlineformset_factory(
+            ParentWithUUIDAlternateKey, ChildRelatedViaAK, fields="__all__"
+        )
+        formset = FormSet(
+            {
+                "childrelatedviaak_set-TOTAL_FORMS": 3,
+                "childrelatedviaak_set-INITIAL_FORMS": 0,
+                "childrelatedviaak_set-MAX_NUM_FORMS": "",
+                "childrelatedviaak_set-0-name": "Test",
+                "childrelatedviaak_set-1-name": "",
+                "childrelatedviaak_set-2-name": "",
+            }
+        )
+        self.assertIs(formset.is_valid(), True)
+        self.assertIsNotNone(formset.instance.uuid)
+        self.assertEqual(formset.forms[0].instance.parent_id, formset.instance.uuid)
