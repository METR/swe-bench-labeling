{"instance_id": "matplotlib__matplotlib-20859", "score": "C", "diff": "diff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 44ab024698..9069f996bd 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -360,7 +360,7 @@ class Legend(Artist):\n         \"\"\"\n         # local import only to avoid circularity\n         from matplotlib.axes import Axes\n-        from matplotlib.figure import Figure\n+        from matplotlib.figure import Figure, FigureBase\n \n         super().__init__()\n \n@@ -434,11 +434,11 @@ class Legend(Artist):\n             self.isaxes = True\n             self.axes = parent\n             self.set_figure(parent.figure)\n-        elif isinstance(parent, Figure):\n+        elif isinstance(parent, FigureBase):\n             self.isaxes = False\n             self.set_figure(parent)\n         else:\n-            raise TypeError(\"Legend needs either Axes or Figure as parent\")\n+            raise TypeError(\"Legend needs either Axes or FigureBase (Figure or SubFigure) as parent\")\n         self.parent = parent\n \n         self._loc_used_default = loc is None\n", "gold_standard_diff": "From b5701e1ceed4efd15eae1b40770a84e3f02772e6 Mon Sep 17 00:00:00 2001\nFrom: Tom Neep <tom.neep@cern.ch>\nDate: Thu, 19 Aug 2021 10:35:46 +0200\nSubject: [PATCH 1/2] Allow SubFigure legends\n\n---\n lib/matplotlib/legend.py | 8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ndiff --git a/lib/matplotlib/legend.py b/lib/matplotlib/legend.py\nindex 44ab0246981f..1d85ba1a3f27 100644\n--- a/lib/matplotlib/legend.py\n+++ b/lib/matplotlib/legend.py\n@@ -360,7 +360,7 @@ def __init__(\n         \"\"\"\n         # local import only to avoid circularity\n         from matplotlib.axes import Axes\n-        from matplotlib.figure import Figure\n+        from matplotlib.figure import FigureBase\n \n         super().__init__()\n \n@@ -434,11 +434,13 @@ def __init__(\n             self.isaxes = True\n             self.axes = parent\n             self.set_figure(parent.figure)\n-        elif isinstance(parent, Figure):\n+        elif isinstance(parent, FigureBase):\n             self.isaxes = False\n             self.set_figure(parent)\n         else:\n-            raise TypeError(\"Legend needs either Axes or Figure as parent\")\n+            raise TypeError(\n+                \"Legend needs either Axes or FigureBase as parent\"\n+            )\n         self.parent = parent\n \n         self._loc_used_default = loc is None\n\nFrom 7da779573ebaaff2e1439d88953cc4d35ac5804e Mon Sep 17 00:00:00 2001\nFrom: Tom Neep <tom.neep@cern.ch>\nDate: Fri, 20 Aug 2021 12:46:39 +0200\nSubject: [PATCH 2/2] Add test adding legend to subfigure\n\n---\n lib/matplotlib/tests/test_legend.py | 9 +++++++++\n 1 file changed, 9 insertions(+)\n\ndiff --git a/lib/matplotlib/tests/test_legend.py b/lib/matplotlib/tests/test_legend.py\nindex c49ea996d056..21c8ab748d9b 100644\n--- a/lib/matplotlib/tests/test_legend.py\n+++ b/lib/matplotlib/tests/test_legend.py\n@@ -871,3 +871,12 @@ def test_handlerline2d():\n     handles = [mlines.Line2D([0], [0], marker=\"v\")]\n     leg = ax.legend(handles, [\"Aardvark\"], numpoints=1)\n     assert handles[0].get_marker() == leg.legendHandles[0].get_marker()\n+\n+\n+def test_subfigure_legend():\n+    # Test that legend can be added to subfigure (#20723)\n+    subfig = plt.figure().subfigures()\n+    ax = subfig.subplots()\n+    ax.plot([0, 1], [0, 1], label=\"line\")\n+    leg = subfig.legend()\n+    assert leg.figure is subfig\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/20859"}