{"instance_id": "django__django-16667", "score": "I", "diff": "diff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 842b73e95c..2fc59c5e5b 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -1157,11 +1157,11 @@ class SelectDateWidget(Widget):\n             input_format = formats.sanitize_strftime_format(input_format)\n             try:\n                 date_value = datetime.date(int(y), int(m), int(d))\n-            except ValueError:\n+                return date_value.strftime(input_format)\n+            except (ValueError, OverflowError):\n                 # Return pseudo-ISO dates with zeros for any unselected values,\n-                # e.g. '2017-0-23'.\n+                # or if the date is invalid or causes an overflow\n                 return \"%s-%s-%s\" % (y or 0, m or 0, d or 0)\n-            return date_value.strftime(input_format)\n         return data.get(name)\n \n     def value_omitted_from_data(self, data, files, name):\n", "gold_standard_diff": "From b4870e71966db208e1dd3ab74c8a7beb7388f725 Mon Sep 17 00:00:00 2001\nFrom: Jure Slak <jure.slak@gmail.com>\nDate: Wed, 22 Mar 2023 07:48:15 +0100\nSubject: [PATCH 1/2] Refs #34434 -- Added assertion for cleaning 0-0-0 for\n forms.DateField.\n\n---\n tests/forms_tests/field_tests/test_datefield.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/tests/forms_tests/field_tests/test_datefield.py b/tests/forms_tests/field_tests/test_datefield.py\nindex a9f93f40ed20..60c8043be39e 100644\n--- a/tests/forms_tests/field_tests/test_datefield.py\n+++ b/tests/forms_tests/field_tests/test_datefield.py\n@@ -149,6 +149,8 @@ def test_datefield_1(self):\n             f.clean(\"200a-10-25\")\n         with self.assertRaisesMessage(ValidationError, \"'Enter a valid date.'\"):\n             f.clean(\"25/10/06\")\n+        with self.assertRaisesMessage(ValidationError, \"'Enter a valid date.'\"):\n+            f.clean(\"0-0-0\")\n         with self.assertRaisesMessage(ValidationError, \"'This field is required.'\"):\n             f.clean(None)\n \n\nFrom d22209cb428ecb083548fd21cae714a60c7fd5f7 Mon Sep 17 00:00:00 2001\nFrom: Jure Slak <jure.slak@gmail.com>\nDate: Mon, 20 Mar 2023 22:42:18 +0100\nSubject: [PATCH 2/2] Fixed #34424 -- Fixed SelectDateWidget crash for inputs\n raising OverflowError.\n\n---\n django/forms/widgets.py                              |  2 ++\n tests/forms_tests/field_tests/test_datefield.py      | 12 ++++++++++++\n .../widget_tests/test_selectdatewidget.py            |  2 ++\n 3 files changed, 16 insertions(+)\n\ndiff --git a/django/forms/widgets.py b/django/forms/widgets.py\nindex 842b73e95c4a..3d6091c25052 100644\n--- a/django/forms/widgets.py\n+++ b/django/forms/widgets.py\n@@ -1161,6 +1161,8 @@ def value_from_datadict(self, data, files, name):\n                 # Return pseudo-ISO dates with zeros for any unselected values,\n                 # e.g. '2017-0-23'.\n                 return \"%s-%s-%s\" % (y or 0, m or 0, d or 0)\n+            except OverflowError:\n+                return \"0-0-0\"\n             return date_value.strftime(input_format)\n         return data.get(name)\n \ndiff --git a/tests/forms_tests/field_tests/test_datefield.py b/tests/forms_tests/field_tests/test_datefield.py\nindex 60c8043be39e..65ac76319d1f 100644\n--- a/tests/forms_tests/field_tests/test_datefield.py\n+++ b/tests/forms_tests/field_tests/test_datefield.py\n@@ -1,3 +1,4 @@\n+import sys\n from datetime import date, datetime\n \n from django.core.exceptions import ValidationError\n@@ -36,6 +37,17 @@ def test_form_field(self):\n         d = GetDate({\"mydate_month\": \"1\", \"mydate_day\": \"1\", \"mydate_year\": \"2010\"})\n         self.assertIn('<label for=\"id_mydate_month\">', d.as_p())\n \n+        # Inputs raising an OverflowError.\n+        e = GetDate(\n+            {\n+                \"mydate_month\": str(sys.maxsize + 1),\n+                \"mydate_day\": \"31\",\n+                \"mydate_year\": \"2010\",\n+            }\n+        )\n+        self.assertIs(e.is_valid(), False)\n+        self.assertEqual(e.errors, {\"mydate\": [\"Enter a valid date.\"]})\n+\n     @translation.override(\"nl\")\n     def test_l10n_date_changed(self):\n         \"\"\"\ndiff --git a/tests/forms_tests/widget_tests/test_selectdatewidget.py b/tests/forms_tests/widget_tests/test_selectdatewidget.py\nindex cfcd03798768..215c41a809c0 100644\n--- a/tests/forms_tests/widget_tests/test_selectdatewidget.py\n+++ b/tests/forms_tests/widget_tests/test_selectdatewidget.py\n@@ -1,3 +1,4 @@\n+import sys\n from datetime import date\n \n from django.forms import DateField, Form, SelectDateWidget\n@@ -610,6 +611,7 @@ def test_value_from_datadict(self):\n             ((None, \"12\", \"1\"), None),\n             ((\"2000\", None, \"1\"), None),\n             ((\"2000\", \"12\", None), None),\n+            ((str(sys.maxsize + 1), \"12\", \"1\"), \"0-0-0\"),\n         ]\n         for values, expected in tests:\n             with self.subTest(values=values):\n", "gold_standard_pr_link": "https://github.com/django/django/pull/16667"}