{"instance_id": "pytest-dev__pytest-8399", "score": "C", "diff": "diff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 719eb4e88..3f88d7a9e 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -144,7 +144,7 @@ def _make_xunit_fixture(\n         scope=scope,\n         autouse=True,\n         # Use a unique name to speed up lookup.\n-        name=f\"unittest_{setup_name}_fixture_{obj.__qualname__}\",\n+        name=f\"_unittest_{setup_name}_fixture_{obj.__qualname__}\",\n     )\n     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\n         if _is_skipped(self):\n", "gold_standard_diff": "From f762ebc8cb0d8108162e1489aa2b46499c4a2281 Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 10:10:51 -0500\nSubject: [PATCH 1/8] issue8394: test generated fixtures start with _\n\nTests that expose the bug for unittest setUpClass and xunit setup_class\nmethods.\n---\n testing/test_nose.py     | 90 ++++++++++++++++++++++++++++++++++++++++\n testing/test_unittest.py | 45 ++++++++++++++++++++\n 2 files changed, 135 insertions(+)\n\ndiff --git a/testing/test_nose.py b/testing/test_nose.py\nindex 13429afafd4..48f4e2b801c 100644\n--- a/testing/test_nose.py\n+++ b/testing/test_nose.py\n@@ -211,6 +211,96 @@ def test_world():\n     result.stdout.fnmatch_lines([\"*2 passed*\"])\n \n \n+def test_fixtures_nose_setup_module_issue8394(pytester: Pytester) -> None:\n+    pytester.makepyfile(\n+        \"\"\"\n+        def setup_module():\n+            pass\n+\n+        def teardown_module():\n+            pass\n+\n+        def test_world():\n+            pass\n+        \"\"\"        \n+    )\n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+\n+\n+def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:\n+    pytester.makepyfile(\n+        \"\"\"\n+        class Test(object):\n+            def setup_method(self, meth): \n+                pass\n+\n+            def teardown_method(self, meth):\n+                pass\n+\n+            def test_method_1(self): pass\n+        \"\"\"        \n+    )\n+    \n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+\n+\n+def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:\n+    pytester.makepyfile(\n+        \"\"\"\n+        class Test(object):\n+            def setup_class(cls): \n+                pass\n+\n+            def teardown_class(cls):\n+                pass\n+\n+            def test_method_1(self): pass\n+        \"\"\"        \n+    )\n+    \n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+\n+\n+def test_fixtures_nose_setup_function_issue8394(pytester: Pytester) -> None:\n+    pytester.makepyfile(\n+        \"\"\"\n+        def setup_function(func):\n+            pass\n+\n+        def teardown_function(func):\n+            pass\n+\n+        def test_world():\n+            pass\n+        \"\"\"        \n+    )\n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+\n+\n def test_nose_setup_ordering(pytester: Pytester) -> None:\n     pytester.makepyfile(\n         \"\"\"\ndiff --git a/testing/test_unittest.py b/testing/test_unittest.py\nindex 69bafc26d61..4caccc668a1 100644\n--- a/testing/test_unittest.py\n+++ b/testing/test_unittest.py\n@@ -301,6 +301,29 @@ def test_teareddown():\n     reprec = pytester.inline_run(testpath)\n     reprec.assertoutcome(passed=3)\n \n+def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:\n+    testpath = pytester.makepyfile(\n+        \"\"\"\n+        import unittest\n+        class MyTestCase(unittest.TestCase):\n+            @classmethod\n+            def setUpClass(cls):\n+                pass\n+            def test_func1(self):\n+                pass\n+            @classmethod\n+            def tearDownClass(cls):\n+                pass\n+    \"\"\"\n+    )\n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+\n \n def test_setup_class(pytester: Pytester) -> None:\n     testpath = pytester.makepyfile(\n@@ -325,6 +348,28 @@ def test_teareddown():\n     reprec.assertoutcome(passed=3)\n \n \n+def test_fixtures_setup(pytester: Pytester) -> None:\n+    testpath = pytester.makepyfile(\n+        \"\"\"\n+        import unittest\n+        class MyTestCase(unittest.TestCase):\n+            def setup_method(self, method):\n+                pass\n+            def test_func1(self):\n+                pass\n+            def teardown_method(self, method):\n+                assert 0, \"42\"\n+    \"\"\"\n+    )\n+    result = pytester.runpytest(\"--fixtures\")\n+    assert result.ret == 0\n+    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+\n+    result = pytester.runpytest(\"--fixtures\", \"-v\")\n+    assert result.ret == 0\n+    result.stdout.fnmatch_lines([\"*no docstring available*\", \"*no docstring available*\"])\n+\n+\n @pytest.mark.parametrize(\"type\", [\"Error\", \"Failure\"])\n def test_testcase_adderrorandfailure_defers(pytester: Pytester, type: str) -> None:\n     pytester.makepyfile(\n\nFrom d228bedb606910723864a18c3188f725b4ada94e Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 10:11:16 -0500\nSubject: [PATCH 2/8] closes #8394: generated fixture names start with _\n\n---\n src/_pytest/python.py   | 8 ++++----\n src/_pytest/unittest.py | 2 +-\n 2 files changed, 5 insertions(+), 5 deletions(-)\n\ndiff --git a/src/_pytest/python.py b/src/_pytest/python.py\nindex 40116ab9c5a..c19d2ed4fb4 100644\n--- a/src/_pytest/python.py\n+++ b/src/_pytest/python.py\n@@ -528,7 +528,7 @@ def _inject_setup_module_fixture(self) -> None:\n             autouse=True,\n             scope=\"module\",\n             # Use a unique name to speed up lookup.\n-            name=f\"xunit_setup_module_fixture_{self.obj.__name__}\",\n+            name=f\"_xunit_setup_module_fixture_{self.obj.__name__}\",\n         )\n         def xunit_setup_module_fixture(request) -> Generator[None, None, None]:\n             if setup_module is not None:\n@@ -557,7 +557,7 @@ def _inject_setup_function_fixture(self) -> None:\n             autouse=True,\n             scope=\"function\",\n             # Use a unique name to speed up lookup.\n-            name=f\"xunit_setup_function_fixture_{self.obj.__name__}\",\n+            name=f\"_xunit_setup_function_fixture_{self.obj.__name__}\",\n         )\n         def xunit_setup_function_fixture(request) -> Generator[None, None, None]:\n             if request.instance is not None:\n@@ -809,7 +809,7 @@ def _inject_setup_class_fixture(self) -> None:\n             autouse=True,\n             scope=\"class\",\n             # Use a unique name to speed up lookup.\n-            name=f\"xunit_setup_class_fixture_{self.obj.__qualname__}\",\n+            name=f\"_xunit_setup_class_fixture_{self.obj.__qualname__}\",\n         )\n         def xunit_setup_class_fixture(cls) -> Generator[None, None, None]:\n             if setup_class is not None:\n@@ -838,7 +838,7 @@ def _inject_setup_method_fixture(self) -> None:\n             autouse=True,\n             scope=\"function\",\n             # Use a unique name to speed up lookup.\n-            name=f\"xunit_setup_method_fixture_{self.obj.__qualname__}\",\n+            name=f\"_xunit_setup_method_fixture_{self.obj.__qualname__}\",\n         )\n         def xunit_setup_method_fixture(self, request) -> Generator[None, None, None]:\n             method = request.function\ndiff --git a/src/_pytest/unittest.py b/src/_pytest/unittest.py\nindex 719eb4e8823..3f88d7a9e2c 100644\n--- a/src/_pytest/unittest.py\n+++ b/src/_pytest/unittest.py\n@@ -144,7 +144,7 @@ def cleanup(*args):\n         scope=scope,\n         autouse=True,\n         # Use a unique name to speed up lookup.\n-        name=f\"unittest_{setup_name}_fixture_{obj.__qualname__}\",\n+        name=f\"_unittest_{setup_name}_fixture_{obj.__qualname__}\",\n     )\n     def fixture(self, request: FixtureRequest) -> Generator[None, None, None]:\n         if _is_skipped(self):\n\nFrom 49449c65b7932c17dfd815619d039a158ac12701 Mon Sep 17 00:00:00 2001\nFrom: \"pre-commit-ci[bot]\"\n <66853113+pre-commit-ci[bot]@users.noreply.github.com>\nDate: Thu, 4 Mar 2021 17:53:36 +0000\nSubject: [PATCH 3/8] [pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci\n---\n testing/test_nose.py     | 16 ++++++++--------\n testing/test_unittest.py |  5 ++++-\n 2 files changed, 12 insertions(+), 9 deletions(-)\n\ndiff --git a/testing/test_nose.py b/testing/test_nose.py\nindex 48f4e2b801c..e5676f5007d 100644\n--- a/testing/test_nose.py\n+++ b/testing/test_nose.py\n@@ -222,7 +222,7 @@ def teardown_module():\n \n         def test_world():\n             pass\n-        \"\"\"        \n+        \"\"\"\n     )\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\n@@ -237,16 +237,16 @@ def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:\n     pytester.makepyfile(\n         \"\"\"\n         class Test(object):\n-            def setup_method(self, meth): \n+            def setup_method(self, meth):\n                 pass\n \n             def teardown_method(self, meth):\n                 pass\n \n             def test_method_1(self): pass\n-        \"\"\"        \n+        \"\"\"\n     )\n-    \n+\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\n     result.stdout.no_fnmatch_line(\"*no docstring available*\")\n@@ -260,16 +260,16 @@ def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:\n     pytester.makepyfile(\n         \"\"\"\n         class Test(object):\n-            def setup_class(cls): \n+            def setup_class(cls):\n                 pass\n \n             def teardown_class(cls):\n                 pass\n \n             def test_method_1(self): pass\n-        \"\"\"        \n+        \"\"\"\n     )\n-    \n+\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\n     result.stdout.no_fnmatch_line(\"*no docstring available*\")\n@@ -290,7 +290,7 @@ def teardown_function(func):\n \n         def test_world():\n             pass\n-        \"\"\"        \n+        \"\"\"\n     )\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\ndiff --git a/testing/test_unittest.py b/testing/test_unittest.py\nindex 4caccc668a1..abb531edd49 100644\n--- a/testing/test_unittest.py\n+++ b/testing/test_unittest.py\n@@ -301,6 +301,7 @@ def test_teareddown():\n     reprec = pytester.inline_run(testpath)\n     reprec.assertoutcome(passed=3)\n \n+\n def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:\n     testpath = pytester.makepyfile(\n         \"\"\"\n@@ -367,7 +368,9 @@ def teardown_method(self, method):\n \n     result = pytester.runpytest(\"--fixtures\", \"-v\")\n     assert result.ret == 0\n-    result.stdout.fnmatch_lines([\"*no docstring available*\", \"*no docstring available*\"])\n+    result.stdout.fnmatch_lines(\n+        [\"*no docstring available*\", \"*no docstring available*\"]\n+    )\n \n \n @pytest.mark.parametrize(\"type\", [\"Error\", \"Failure\"])\n\nFrom 8f97d504921777f443d84450510f4f868020fe5e Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 14:35:54 -0500\nSubject: [PATCH 4/8] issue 8394: combined unit-tests & lint\n\n---\n testing/test_nose.py     | 76 ++++++++--------------------------------\n testing/test_unittest.py | 26 +-------------\n 2 files changed, 16 insertions(+), 86 deletions(-)\n\ndiff --git a/testing/test_nose.py b/testing/test_nose.py\nindex e5676f5007d..a24a66a4133 100644\n--- a/testing/test_nose.py\n+++ b/testing/test_nose.py\n@@ -211,7 +211,7 @@ def test_world():\n     result.stdout.fnmatch_lines([\"*2 passed*\"])\n \n \n-def test_fixtures_nose_setup_module_issue8394(pytester: Pytester) -> None:\n+def test_fixtures_nose_setup_issue8394(pytester: Pytester) -> None:\n     pytester.makepyfile(\n         \"\"\"\n         def setup_module():\n@@ -220,45 +220,15 @@ def setup_module():\n         def teardown_module():\n             pass\n \n-        def test_world():\n+        def setup_function(func):\n             pass\n-        \"\"\"\n-    )\n-    result = pytester.runpytest(\"--fixtures\")\n-    assert result.ret == 0\n-    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n-\n-    result = pytester.runpytest(\"--fixtures\", \"-v\")\n-    assert result.ret == 0\n-    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n-\n-\n-def test_fixtures_nose_setup_method_issue8394(pytester: Pytester) -> None:\n-    pytester.makepyfile(\n-        \"\"\"\n-        class Test(object):\n-            def setup_method(self, meth):\n-                pass\n-\n-            def teardown_method(self, meth):\n-                pass\n-\n-            def test_method_1(self): pass\n-        \"\"\"\n-    )\n-\n-    result = pytester.runpytest(\"--fixtures\")\n-    assert result.ret == 0\n-    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n \n-    result = pytester.runpytest(\"--fixtures\", \"-v\")\n-    assert result.ret == 0\n-    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+        def teardown_function(func):\n+            pass\n \n+        def test_world():\n+            pass\n \n-def test_fixtures_nose_setup_class_issue8394(pytester: Pytester) -> None:\n-    pytester.makepyfile(\n-        \"\"\"\n         class Test(object):\n             def setup_class(cls):\n                 pass\n@@ -266,39 +236,23 @@ def setup_class(cls):\n             def teardown_class(cls):\n                 pass\n \n-            def test_method_1(self): pass\n-        \"\"\"\n-    )\n-\n-    result = pytester.runpytest(\"--fixtures\")\n-    assert result.ret == 0\n-    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n-\n-    result = pytester.runpytest(\"--fixtures\", \"-v\")\n-    assert result.ret == 0\n-    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n-\n-\n-def test_fixtures_nose_setup_function_issue8394(pytester: Pytester) -> None:\n-    pytester.makepyfile(\n-        \"\"\"\n-        def setup_function(func):\n-            pass\n+            def setup_method(self, meth):\n+                pass\n \n-        def teardown_function(func):\n-            pass\n+            def teardown_method(self, meth):\n+                pass\n \n-        def test_world():\n-            pass\n-        \"\"\"\n+            def test_method(self): pass\n+        \"\"\"        \n     )\n+    regex = \"*no docstring available*\"\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\n-    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n+    result.stdout.no_fnmatch_line(regex)\n \n     result = pytester.runpytest(\"--fixtures\", \"-v\")\n     assert result.ret == 0\n-    result.stdout.fnmatch_lines([\"*no docstring available*\"])\n+    result.stdout.fnmatch_lines([regex, regex, regex, regex])\n \n \n def test_nose_setup_ordering(pytester: Pytester) -> None:\ndiff --git a/testing/test_unittest.py b/testing/test_unittest.py\nindex abb531edd49..d26e5c42c0b 100644\n--- a/testing/test_unittest.py\n+++ b/testing/test_unittest.py\n@@ -327,7 +327,7 @@ def tearDownClass(cls):\n \n \n def test_setup_class(pytester: Pytester) -> None:\n-    testpath = pytester.makepyfile(\n+    pytester.makepyfile(\n         \"\"\"\n         import unittest\n         import pytest\n@@ -349,30 +349,6 @@ def test_teareddown():\n     reprec.assertoutcome(passed=3)\n \n \n-def test_fixtures_setup(pytester: Pytester) -> None:\n-    testpath = pytester.makepyfile(\n-        \"\"\"\n-        import unittest\n-        class MyTestCase(unittest.TestCase):\n-            def setup_method(self, method):\n-                pass\n-            def test_func1(self):\n-                pass\n-            def teardown_method(self, method):\n-                assert 0, \"42\"\n-    \"\"\"\n-    )\n-    result = pytester.runpytest(\"--fixtures\")\n-    assert result.ret == 0\n-    result.stdout.no_fnmatch_line(\"*no docstring available*\")\n-\n-    result = pytester.runpytest(\"--fixtures\", \"-v\")\n-    assert result.ret == 0\n-    result.stdout.fnmatch_lines(\n-        [\"*no docstring available*\", \"*no docstring available*\"]\n-    )\n-\n-\n @pytest.mark.parametrize(\"type\", [\"Error\", \"Failure\"])\n def test_testcase_adderrorandfailure_defers(pytester: Pytester, type: str) -> None:\n     pytester.makepyfile(\n\nFrom b00789018b886fbd4e77c4aa64908ba9b74d4b1e Mon Sep 17 00:00:00 2001\nFrom: \"pre-commit-ci[bot]\"\n <66853113+pre-commit-ci[bot]@users.noreply.github.com>\nDate: Thu, 4 Mar 2021 19:37:36 +0000\nSubject: [PATCH 5/8] [pre-commit.ci] auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci\n---\n testing/test_nose.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/testing/test_nose.py b/testing/test_nose.py\nindex a24a66a4133..a3e935e612d 100644\n--- a/testing/test_nose.py\n+++ b/testing/test_nose.py\n@@ -243,7 +243,7 @@ def teardown_method(self, meth):\n                 pass\n \n             def test_method(self): pass\n-        \"\"\"        \n+        \"\"\"\n     )\n     regex = \"*no docstring available*\"\n     result = pytester.runpytest(\"--fixtures\")\n\nFrom 9fe69cb845da55b03b04c675ac84d0928db1a887 Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 14:45:01 -0500\nSubject: [PATCH 6/8] fixup (the effects of sleep deprivation)\n\n---\n testing/test_unittest.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/testing/test_unittest.py b/testing/test_unittest.py\nindex d26e5c42c0b..d7f7737153d 100644\n--- a/testing/test_unittest.py\n+++ b/testing/test_unittest.py\n@@ -303,7 +303,7 @@ def test_teareddown():\n \n \n def test_fixtures_setup_setUpClass_issue8394(pytester: Pytester) -> None:\n-    testpath = pytester.makepyfile(\n+    pytester.makepyfile(\n         \"\"\"\n         import unittest\n         class MyTestCase(unittest.TestCase):\n@@ -327,7 +327,7 @@ def tearDownClass(cls):\n \n \n def test_setup_class(pytester: Pytester) -> None:\n-    pytester.makepyfile(\n+    testpath = pytester.makepyfile(\n         \"\"\"\n         import unittest\n         import pytest\n\nFrom ba05d88f05380e765f0ddca89aa317682996d8f1 Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 15:27:21 -0500\nSubject: [PATCH 7/8] issue8394: add changelog\n\n---\n changelog/8394.bugfix.rst | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 changelog/8394.bugfix.rst\n\ndiff --git a/changelog/8394.bugfix.rst b/changelog/8394.bugfix.rst\nnew file mode 100644\nindex 00000000000..a0fb5bb71fd\n--- /dev/null\n+++ b/changelog/8394.bugfix.rst\n@@ -0,0 +1 @@\n+Use private names for internal fixtures that handle classic setup/teardown so that they don't show up with the default ``--fixtures`` invocation (but they still show up with ``--fixtures -v``).\n\nFrom 43ce0ac4a8a39031b2220e27feae445eb0ef5b88 Mon Sep 17 00:00:00 2001\nFrom: atzannes <atzannes@gmail.com>\nDate: Thu, 4 Mar 2021 15:29:22 -0500\nSubject: [PATCH 8/8] fixup: var-rename\n\n---\n testing/test_nose.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/testing/test_nose.py b/testing/test_nose.py\nindex a3e935e612d..77f79b53b3c 100644\n--- a/testing/test_nose.py\n+++ b/testing/test_nose.py\n@@ -245,14 +245,14 @@ def teardown_method(self, meth):\n             def test_method(self): pass\n         \"\"\"\n     )\n-    regex = \"*no docstring available*\"\n+    match = \"*no docstring available*\"\n     result = pytester.runpytest(\"--fixtures\")\n     assert result.ret == 0\n-    result.stdout.no_fnmatch_line(regex)\n+    result.stdout.no_fnmatch_line(match)\n \n     result = pytester.runpytest(\"--fixtures\", \"-v\")\n     assert result.ret == 0\n-    result.stdout.fnmatch_lines([regex, regex, regex, regex])\n+    result.stdout.fnmatch_lines([match, match, match, match])\n \n \n def test_nose_setup_ordering(pytester: Pytester) -> None:\n", "gold_standard_pr_link": "https://github.com/pytest-dev/pytest/pull/8399"}