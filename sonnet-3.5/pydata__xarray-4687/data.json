{"instance_id": "pydata__xarray-4687", "score": "I", "diff": "diff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 9fe93c88..66c238fb 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1727,7 +1727,7 @@ def dot(*arrays, dims=None, **kwargs):\n     return result.transpose(*all_dims, missing_dims=\"ignore\")\n \n \n-def where(cond, x, y):\n+def where(cond, x, y, keep_attrs=None):\n     \"\"\"Return elements from `x` or `y` depending on `cond`.\n \n     Performs xarray-like broadcasting across input arguments.\n@@ -1743,6 +1743,10 @@ def where(cond, x, y):\n         values to choose from where `cond` is True\n     y : scalar, array, Variable, DataArray or Dataset\n         values to choose from where `cond` is False\n+    keep_attrs : bool, optional\n+        If True, the attributes (attrs) will be copied from the first\n+        argument that has them. By default, this is None, in which case\n+        the global default is used.\n \n     Returns\n     -------\n@@ -1817,6 +1821,7 @@ def where(cond, x, y):\n         join=\"exact\",\n         dataset_join=\"exact\",\n         dask=\"allowed\",\n+        keep_attrs=keep_attrs,\n     )\n \n \n", "gold_standard_diff": "From acda14ea6255f16bb660fb4a9cc16b94f3a6904b Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Sun, 13 Dec 2020 21:24:03 +0100\nSubject: [PATCH 01/14] allow controlling xarray.where using the keep_attrs\n option\n\n---\n xarray/core/computation.py       |  5 ++++-\n xarray/tests/test_computation.py | 14 ++++++++++++++\n 2 files changed, 18 insertions(+), 1 deletion(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex c332ecb0d00..62fed32746a 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -28,7 +28,7 @@\n from . import dtypes, duck_array_ops, utils\n from .alignment import align, deep_align\n from .merge import merge_coordinates_without_align\n-from .options import OPTIONS\n+from .options import OPTIONS, _get_keep_attrs\n from .pycompat import is_duck_dask_array\n from .utils import is_dict_like\n from .variable import Variable\n@@ -1571,6 +1571,8 @@ def where(cond, x, y):\n     numpy.where : corresponding numpy function\n     Dataset.where, DataArray.where : equivalent methods\n     \"\"\"\n+    keep_attrs = _get_keep_attrs(default=False)\n+\n     # alignment for three arguments is complicated, so don't support it yet\n     return apply_ufunc(\n         duck_array_ops.where,\n@@ -1580,6 +1582,7 @@ def where(cond, x, y):\n         join=\"exact\",\n         dataset_join=\"exact\",\n         dask=\"allowed\",\n+        keep_attrs=keep_attrs,\n     )\n \n \ndiff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\nindex 1922977fdeb..8421291111c 100644\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1468,6 +1468,20 @@ def test_where():\n     assert_identical(expected, actual)\n \n \n+def test_where_attrs():\n+    cond = xr.DataArray([True, False], dims=\"x\", attrs={\"attr\": \"value\"})\n+\n+    with xr.set_options(keep_attrs=False):\n+        actual = xr.where(cond, 1, 0)\n+        expected = xr.DataArray([1, 0], dims=\"x\")\n+        assert_identical(expected, actual)\n+\n+    with xr.set_options(keep_attrs=True):\n+        actual = xr.where(cond, 1, 0)\n+        expected = xr.DataArray([1, 0], dims=\"x\", attrs={\"attr\": \"value\"})\n+        assert_identical(expected, actual)\n+\n+\n @pytest.mark.parametrize(\"use_dask\", [True, False])\n @pytest.mark.parametrize(\"use_datetime\", [True, False])\n def test_polyval(use_dask, use_datetime):\n\nFrom 386bcd3c38346ad6b24133390bea455547e8dda6 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Mon, 14 Dec 2020 20:08:00 +0100\nSubject: [PATCH 02/14] black\n\n---\n xarray/tests/test_units.py | 5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ndiff --git a/xarray/tests/test_units.py b/xarray/tests/test_units.py\nindex bb3127e90b5..8afe83f7af9 100644\n--- a/xarray/tests/test_units.py\n+++ b/xarray/tests/test_units.py\n@@ -2417,10 +2417,7 @@ def test_binary_operations(self, func, dtype):\n         (\n             pytest.param(operator.lt, id=\"less_than\"),\n             pytest.param(operator.ge, id=\"greater_equal\"),\n-            pytest.param(\n-                operator.eq,\n-                id=\"equal\",\n-            ),\n+            pytest.param(operator.eq, id=\"equal\"),\n         ),\n     )\n     @pytest.mark.parametrize(\n\nFrom b60447a2710e344f46c40dcaec5f579e0b5a0b5e Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Mon, 14 Dec 2020 20:09:35 +0100\nSubject: [PATCH 03/14] document that the attributes of x and y will be ignored\n\n---\n xarray/core/computation.py | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 62fed32746a..4b71e834ea2 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1512,6 +1512,10 @@ def where(cond, x, y):\n         In priority order: Dataset, DataArray, Variable or array, whichever\n         type appears as an input argument.\n \n+    Notes\n+    -----\n+    Only the attrs on `cond` will be kept.\n+\n     Examples\n     --------\n     >>> import xarray as xr\n\nFrom 1db163b455c71f57b8dab9b56283ba74815fd0f8 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Mon, 14 Dec 2020 20:10:50 +0100\nSubject: [PATCH 04/14] always keep the attrs\n\n---\n xarray/core/computation.py | 6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 4b71e834ea2..f6c36c8e70e 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -28,7 +28,7 @@\n from . import dtypes, duck_array_ops, utils\n from .alignment import align, deep_align\n from .merge import merge_coordinates_without_align\n-from .options import OPTIONS, _get_keep_attrs\n+from .options import OPTIONS\n from .pycompat import is_duck_dask_array\n from .utils import is_dict_like\n from .variable import Variable\n@@ -1575,8 +1575,6 @@ def where(cond, x, y):\n     numpy.where : corresponding numpy function\n     Dataset.where, DataArray.where : equivalent methods\n     \"\"\"\n-    keep_attrs = _get_keep_attrs(default=False)\n-\n     # alignment for three arguments is complicated, so don't support it yet\n     return apply_ufunc(\n         duck_array_ops.where,\n@@ -1586,7 +1584,7 @@ def where(cond, x, y):\n         join=\"exact\",\n         dataset_join=\"exact\",\n         dask=\"allowed\",\n-        keep_attrs=keep_attrs,\n+        keep_attrs=True,\n     )\n \n \n\nFrom e62eb6daa23485d522fb667a50c22fdab81209a9 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Mon, 14 Dec 2020 20:12:50 +0100\nSubject: [PATCH 05/14] add a entry to whats-new.rst\n\n---\n doc/whats-new.rst | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 94a38757851..ee2b99cd55e 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -22,7 +22,8 @@ v0.16.3 (unreleased)\n \n Breaking changes\n ~~~~~~~~~~~~~~~~\n-\n+- keep attrs for :py:func:`where` (:issue:`4141`, :issue:`4682`, :pull:`4687`).\n+  By `Justus Magin <https://github.com/keewis>`_.\n \n New Features\n ~~~~~~~~~~~~\n\nFrom 667adc896ff7b4dd6a41d732c45fbebe24584d11 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Mon, 14 Dec 2020 20:19:55 +0100\nSubject: [PATCH 06/14] update the tests\n\n---\n xarray/tests/test_computation.py | 13 +++----------\n 1 file changed, 3 insertions(+), 10 deletions(-)\n\ndiff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\nindex 8421291111c..6a0dd5c4908 100644\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1470,16 +1470,9 @@ def test_where():\n \n def test_where_attrs():\n     cond = xr.DataArray([True, False], dims=\"x\", attrs={\"attr\": \"value\"})\n-\n-    with xr.set_options(keep_attrs=False):\n-        actual = xr.where(cond, 1, 0)\n-        expected = xr.DataArray([1, 0], dims=\"x\")\n-        assert_identical(expected, actual)\n-\n-    with xr.set_options(keep_attrs=True):\n-        actual = xr.where(cond, 1, 0)\n-        expected = xr.DataArray([1, 0], dims=\"x\", attrs={\"attr\": \"value\"})\n-        assert_identical(expected, actual)\n+    actual = xr.where(cond, 1, 0)\n+    expected = xr.DataArray([1, 0], dims=\"x\", attrs={\"attr\": \"value\"})\n+    assert_identical(expected, actual)\n \n \n @pytest.mark.parametrize(\"use_dask\", [True, False])\n\nFrom 259bf82743d5b0ada4c418b2f11ae98679fc3f0f Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Sat, 1 Jan 2022 12:03:05 +0100\nSubject: [PATCH 07/14] add a keep_attrs parameter to xr.where\n\n---\n xarray/core/computation.py | 17 +++++++++++------\n 1 file changed, 11 insertions(+), 6 deletions(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 6c84aa1ae0b..18927f74f21 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1727,7 +1727,7 @@ def dot(*arrays, dims=None, **kwargs):\n     return result.transpose(*all_dims, missing_dims=\"ignore\")\n \n \n-def where(cond, x, y):\n+def where(cond, x, y, keep_attrs=None):\n     \"\"\"Return elements from `x` or `y` depending on `cond`.\n \n     Performs xarray-like broadcasting across input arguments.\n@@ -1743,6 +1743,8 @@ def where(cond, x, y):\n         values to choose from where `cond` is True\n     y : scalar, array, Variable, DataArray or Dataset\n         values to choose from where `cond` is False\n+    keep_attrs : bool or str or callable, optional\n+        How to treat attrs. If True, keep the attrs of `x`.\n \n     Returns\n     -------\n@@ -1750,10 +1752,6 @@ def where(cond, x, y):\n         In priority order: Dataset, DataArray, Variable or array, whichever\n         type appears as an input argument.\n \n-    Notes\n-    -----\n-    Only the attrs on `cond` will be kept.\n-\n     Examples\n     --------\n     >>> x = xr.DataArray(\n@@ -1812,6 +1810,13 @@ def where(cond, x, y):\n     Dataset.where, DataArray.where :\n         equivalent methods\n     \"\"\"\n+    if keep_attrs is None:\n+        keep_attrs = _get_keep_attrs(default=False)\n+\n+    if isinstance(keep_attrs, bool) and keep_attrs:\n+        # keep the attributes of x by default\n+        keep_attrs = lambda attrs: attrs[1]\n+\n     # alignment for three arguments is complicated, so don't support it yet\n     return apply_ufunc(\n         duck_array_ops.where,\n@@ -1821,7 +1826,7 @@ def where(cond, x, y):\n         join=\"exact\",\n         dataset_join=\"exact\",\n         dask=\"allowed\",\n-        keep_attrs=True,\n+        keep_attrs=keep_attrs,\n     )\n \n \n\nFrom 83907200af6bfb72568ca962e2332b8c9066da41 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Sat, 1 Jan 2022 12:07:55 +0100\nSubject: [PATCH 08/14] rewrite the test to demonstrate keep_attrs\n\n---\n xarray/core/computation.py       | 2 +-\n xarray/tests/test_computation.py | 8 +++++---\n 2 files changed, 6 insertions(+), 4 deletions(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 18927f74f21..8d45ae3507e 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1815,7 +1815,7 @@ def where(cond, x, y, keep_attrs=None):\n \n     if isinstance(keep_attrs, bool) and keep_attrs:\n         # keep the attributes of x by default\n-        keep_attrs = lambda attrs: attrs[1]\n+        keep_attrs = lambda attrs, context: attrs[1]\n \n     # alignment for three arguments is complicated, so don't support it yet\n     return apply_ufunc(\ndiff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\nindex bcf065a93b8..b5efb48fc20 100644\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1923,9 +1923,11 @@ def test_where() -> None:\n \n \n def test_where_attrs():\n-    cond = xr.DataArray([True, False], dims=\"x\", attrs={\"attr\": \"value\"})\n-    actual = xr.where(cond, 1, 0)\n-    expected = xr.DataArray([1, 0], dims=\"x\", attrs={\"attr\": \"value\"})\n+    cond = xr.DataArray([True, False], dims=\"x\", attrs={\"attr\": \"cond\"})\n+    x = xr.DataArray([1, 1], dims=\"x\", attrs={\"attr\": \"x\"})\n+    y = xr.DataArray([0, 0], dims=\"x\", attrs={\"attr\": \"y\"})\n+    actual = xr.where(cond, x, y, keep_attrs=True)\n+    expected = xr.DataArray([1, 0], dims=\"x\", attrs={\"attr\": \"x\"})\n     assert_identical(expected, actual)\n \n \n\nFrom edf99275c55625dda856ee9094f961271eabfff5 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Sat, 1 Jan 2022 12:10:00 +0100\nSubject: [PATCH 09/14] make mypy check the test\n\n---\n xarray/tests/test_computation.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/xarray/tests/test_computation.py b/xarray/tests/test_computation.py\nindex b5efb48fc20..be1e93a1506 100644\n--- a/xarray/tests/test_computation.py\n+++ b/xarray/tests/test_computation.py\n@@ -1922,7 +1922,7 @@ def test_where() -> None:\n     assert_identical(expected, actual)\n \n \n-def test_where_attrs():\n+def test_where_attrs() -> None:\n     cond = xr.DataArray([True, False], dims=\"x\", attrs={\"attr\": \"cond\"})\n     x = xr.DataArray([1, 1], dims=\"x\", attrs={\"attr\": \"x\"})\n     y = xr.DataArray([0, 0], dims=\"x\", attrs={\"attr\": \"y\"})\n\nFrom 883af0612bc1c6ef1039e1ba44aad08d67113fd8 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Tue, 4 Jan 2022 12:02:53 +0100\nSubject: [PATCH 10/14] fix whats-new.rst\n\n---\n doc/whats-new.rst | 8 ++------\n 1 file changed, 2 insertions(+), 6 deletions(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 255018194d0..296718fdf71 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -23,7 +23,8 @@ New Features\n ~~~~~~~~~~~~\n - New top-level function :py:func:`cross`. (:issue:`3279`, :pull:`5365`).\n   By `Jimmy Westling <https://github.com/illviljan>`_.\n-\n+- ``keep_attrs`` support for :py:func:`where` (:issue:`4141`, :issue:`4682`, :pull:`4687`).\n+  By `Justus Magin <https://github.com/keewis>`_.\n \n Breaking changes\n ~~~~~~~~~~~~~~~~\n@@ -764,11 +765,6 @@ Deprecations\n New Features\n ~~~~~~~~~~~~\n \n-- ``keep_attrs`` support for :py:func:`where` (:issue:`4141`, :issue:`4682`, :pull:`4687`).\n-  By `Justus Magin <https://github.com/keewis>`_.\n-- Xarray now leverages updates as of cftime version 1.4.1, which enable exact I/O\n-  roundtripping of ``cftime.datetime`` objects (:pull:`4758`).\n-  By `Spencer Clark <https://github.com/spencerkclark>`_.\n - Deprecated ``autoclose`` kwargs from :py:func:`open_dataset` are removed (:pull:`4725`).\n   By `Aureliana Barghini <https://github.com/aurghs>`_.\n - the return value of :py:meth:`Dataset.update` is being deprecated to make it work more\n\nFrom 72addb3ea300fb0798a464571672cadf670a52a7 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Tue, 4 Jan 2022 12:06:38 +0100\nSubject: [PATCH 11/14] remove a merge artifact\n\n---\n doc/whats-new.rst | 4 ----\n 1 file changed, 4 deletions(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 296718fdf71..f89d0b04055 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -761,10 +761,6 @@ Deprecations\n   For now using ``dim`` issues a ``FutureWarning``. It will be removed in\n   version 0.19.0 (:pull:`3993`).\n   By `Tom Nicholas <https://github.com/TomNicholas>`_.\n-\n-New Features\n-~~~~~~~~~~~~\n-\n - Deprecated ``autoclose`` kwargs from :py:func:`open_dataset` are removed (:pull:`4725`).\n   By `Aureliana Barghini <https://github.com/aurghs>`_.\n - the return value of :py:meth:`Dataset.update` is being deprecated to make it work more\n\nFrom a03a82e86154c24f2a1c2afec5eb26585e968c9b Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Tue, 4 Jan 2022 12:07:17 +0100\nSubject: [PATCH 12/14] more merge artifacts\n\n---\n doc/whats-new.rst | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex f89d0b04055..c9a42044434 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -710,7 +710,6 @@ alexamici, aurghs, crusaderky, dcherian, ghislainp, keewis, rhkleijn\n \n Breaking changes\n ~~~~~~~~~~~~~~~~\n-\n - xarray no longer supports python 3.6\n \n   The minimum version policy was changed to also apply to projects with irregular\n\nFrom 6ae1339751b3c6a753d484f4eb22f4611eab2627 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Tue, 4 Jan 2022 12:24:05 +0100\nSubject: [PATCH 13/14] just make sure the value is exactly True\n\n---\n xarray/core/computation.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 8d45ae3507e..6efdf196ee0 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1813,7 +1813,7 @@ def where(cond, x, y, keep_attrs=None):\n     if keep_attrs is None:\n         keep_attrs = _get_keep_attrs(default=False)\n \n-    if isinstance(keep_attrs, bool) and keep_attrs:\n+    if keep_attrs is True:\n         # keep the attributes of x by default\n         keep_attrs = lambda attrs, context: attrs[1]\n \n\nFrom 39275b5bae546d2b74083641d7932c20ea38c341 Mon Sep 17 00:00:00 2001\nFrom: Keewis <keewis@posteo.de>\nDate: Wed, 19 Jan 2022 19:05:27 +0100\nSubject: [PATCH 14/14] extend the comment\n\n---\n xarray/core/computation.py | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a/xarray/core/computation.py b/xarray/core/computation.py\nindex 6efdf196ee0..5e6340feed2 100644\n--- a/xarray/core/computation.py\n+++ b/xarray/core/computation.py\n@@ -1814,7 +1814,8 @@ def where(cond, x, y, keep_attrs=None):\n         keep_attrs = _get_keep_attrs(default=False)\n \n     if keep_attrs is True:\n-        # keep the attributes of x by default\n+        # keep the attributes of x, the second parameter, by default to\n+        # be consistent with the `where` method of `DataArray` and `Dataset`\n         keep_attrs = lambda attrs, context: attrs[1]\n \n     # alignment for three arguments is complicated, so don't support it yet\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/4687"}