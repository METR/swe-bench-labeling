{"instance_id": "sympy__sympy-19346", "score": "C", "diff": "diff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex c936a692c0..c4707627a5 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -38,6 +38,10 @@ def emptyPrinter(self, expr):\n             return expr\n         elif hasattr(expr, \"__srepr__\"):\n             return expr.__srepr__()\n+        elif isinstance(expr, dict):\n+            return \"{%s}\" % \", \".join(f\"{self._print(k)}: {self._print(v)}\" for k, v in expr.items())\n+        elif isinstance(expr, set):\n+            return \"{%s}\" % \", \".join(self._print(item) for item in expr)\n         elif hasattr(expr, \"args\") and hasattr(expr.args, \"__iter__\"):\n             l = []\n             for o in expr.args:\ndiff --git a/test_srepr.py b/test_srepr.py\nnew file mode 100644\nindex 0000000000..a5ec2af417\n--- /dev/null\n+++ b/test_srepr.py\n@@ -0,0 +1,13 @@\n+from sympy import srepr\n+from sympy.abc import x, y\n+\n+# Test list and tuple\n+print(srepr([x, y]))\n+print(srepr((x, y)))\n+\n+# Test dict and set\n+print(srepr({x, y}))\n+print(srepr({x: y}))\n+\n+# Test mixed types\n+print(srepr({x: [y, {x}], (x, y): {x, y}}))\n", "gold_standard_diff": "From b8b80cf44b9fdcb7198911784aba8b707309d99f Mon Sep 17 00:00:00 2001\nFrom: kunal <kunalgk1999@gmail.com>\nDate: Sun, 17 May 2020 17:38:23 +0530\nSubject: [PATCH 1/4] fixed: srepr not printing dict and set properly\n\n---\n sympy/printing/repr.py            |  8 ++++++++\n sympy/printing/tests/test_repr.py | 20 ++++++++++++++++++++\n 2 files changed, 28 insertions(+)\n\ndiff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex c936a692c0cd..3c6aa1264f6b 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -144,6 +144,14 @@ def _print_EmptySequence(self, expr):\n     def _print_list(self, expr):\n         return \"[%s]\" % self.reprify(expr, \", \")\n \n+    def _print_dict(self, expr):\n+        sep = \", \"\n+        dict_kvs = [\"%s: %s\" % (self.doprint(key), self.doprint(value)) for key, value in expr.items()]\n+        return \"{%s}\" % sep.join(dict_kvs)\n+\n+    def _print_set(self, expr):\n+        return \"{%s}\" % self.reprify(expr, \", \")\n+\n     def _print_MatrixBase(self, expr):\n         # special case for some empty matrices\n         if (expr.rows == 0) ^ (expr.cols == 0):\ndiff --git a/sympy/printing/tests/test_repr.py b/sympy/printing/tests/test_repr.py\nindex f749683ff743..54dbb100e2aa 100644\n--- a/sympy/printing/tests/test_repr.py\n+++ b/sympy/printing/tests/test_repr.py\n@@ -318,3 +318,23 @@ def test_diffgeom():\n     assert srepr(rect) == \"CoordSystem('rect', Patch('P', Manifold('M', 2)), ('rect_0', 'rect_1'))\"\n     b = BaseScalarField(rect, 0)\n     assert srepr(b) == \"BaseScalarField(CoordSystem('rect', Patch('P', Manifold('M', 2)), ('rect_0', 'rect_1')), Integer(0))\"\n+\n+def test_dict():\n+    from sympy import srepr\n+    from sympy.abc import x, y, z\n+    d = {}\n+    assert srepr(d) == \"{}\"\n+    d = {x: y}\n+    assert srepr(d) == \"{Symbol('x'): Symbol('y')}\"\n+    d = {x: y, y: z}\n+    assert srepr(d) == \"{Symbol('x'): Symbol('y'), Symbol('y'): Symbol('z')}\"\n+    d = {x: {y: z}}\n+    assert srepr(d) == \"{Symbol('x'): {Symbol('y'): Symbol('z')}}\"\n+\n+def test_set():\n+    from sympy import srepr\n+    from sympy.abc import x, y\n+    s = {x}\n+    assert srepr(s) == \"{Symbol('x')}\"\n+    s = {x, y}\n+    assert srepr(s) == \"{Symbol('x'), Symbol('y')}\"\n\nFrom 398751d63715489c3d8030faab2ff4995cdce0cd Mon Sep 17 00:00:00 2001\nFrom: kunal <kunalgk1999@gmail.com>\nDate: Sun, 17 May 2020 19:12:16 +0530\nSubject: [PATCH 2/4] handled printing empty set with srepr\n\n---\n sympy/printing/repr.py            | 2 ++\n sympy/printing/tests/test_repr.py | 4 ++--\n 2 files changed, 4 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/printing/repr.py b/sympy/printing/repr.py\nindex 3c6aa1264f6b..04cfee5c3e61 100644\n--- a/sympy/printing/repr.py\n+++ b/sympy/printing/repr.py\n@@ -150,6 +150,8 @@ def _print_dict(self, expr):\n         return \"{%s}\" % sep.join(dict_kvs)\n \n     def _print_set(self, expr):\n+        if not expr:\n+            return \"set()\"\n         return \"{%s}\" % self.reprify(expr, \", \")\n \n     def _print_MatrixBase(self, expr):\ndiff --git a/sympy/printing/tests/test_repr.py b/sympy/printing/tests/test_repr.py\nindex 54dbb100e2aa..7405943d86c1 100644\n--- a/sympy/printing/tests/test_repr.py\n+++ b/sympy/printing/tests/test_repr.py\n@@ -334,7 +334,7 @@ def test_dict():\n def test_set():\n     from sympy import srepr\n     from sympy.abc import x, y\n-    s = {x}\n-    assert srepr(s) == \"{Symbol('x')}\"\n+    s = set()\n+    assert srepr(s) == \"set()\"\n     s = {x, y}\n     assert srepr(s) == \"{Symbol('x'), Symbol('y')}\"\n\nFrom 90e549c25dab804240a33e772dc9157d7d19ff84 Mon Sep 17 00:00:00 2001\nFrom: kunal <kunalgk1999@gmail.com>\nDate: Sun, 17 May 2020 19:20:57 +0530\nSubject: [PATCH 3/4] fixed issue with printing sets\n\n---\n sympy/printing/tests/test_repr.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/printing/tests/test_repr.py b/sympy/printing/tests/test_repr.py\nindex 7405943d86c1..0fb4a05987a8 100644\n--- a/sympy/printing/tests/test_repr.py\n+++ b/sympy/printing/tests/test_repr.py\n@@ -337,4 +337,4 @@ def test_set():\n     s = set()\n     assert srepr(s) == \"set()\"\n     s = {x, y}\n-    assert srepr(s) == \"{Symbol('x'), Symbol('y')}\"\n+    assert srepr(s) in (\"{Symbol('x'), Symbol('y')}\", \"{Symbol('y'), Symbol('x')}\")\n\nFrom 2a7b8a475b4a9883d6821bb3412518381d4fa797 Mon Sep 17 00:00:00 2001\nFrom: kunal <kunalgk1999@gmail.com>\nDate: Sun, 17 May 2020 21:29:10 +0530\nSubject: [PATCH 4/4] fixed arbitary test fail due to dictionary\n\n---\n sympy/printing/tests/test_repr.py | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a/sympy/printing/tests/test_repr.py b/sympy/printing/tests/test_repr.py\nindex 0fb4a05987a8..d3298da71dfd 100644\n--- a/sympy/printing/tests/test_repr.py\n+++ b/sympy/printing/tests/test_repr.py\n@@ -327,7 +327,10 @@ def test_dict():\n     d = {x: y}\n     assert srepr(d) == \"{Symbol('x'): Symbol('y')}\"\n     d = {x: y, y: z}\n-    assert srepr(d) == \"{Symbol('x'): Symbol('y'), Symbol('y'): Symbol('z')}\"\n+    assert srepr(d) in (\n+        \"{Symbol('x'): Symbol('y'), Symbol('y'): Symbol('z')}\",\n+        \"{Symbol('y'): Symbol('z'), Symbol('x'): Symbol('y')}\",\n+    )\n     d = {x: {y: z}}\n     assert srepr(d) == \"{Symbol('x'): {Symbol('y'): Symbol('z')}}\"\n \n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/19346"}