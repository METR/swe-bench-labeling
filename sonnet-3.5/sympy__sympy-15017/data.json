{"instance_id": "sympy__sympy-15017", "score": "I", "diff": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex 099b291167..eba295179a 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -164,6 +164,8 @@ def _handle_ndarray_creation_inputs(cls, iterable=None, shape=None, **kwargs):\n     def __len__(self):\n         \"\"\"Overload common function len(). Returns number of elements in array.\n \n+        For rank-0 arrays (scalars), returns 1.\n+\n         Examples\n         ========\n \n@@ -173,8 +175,13 @@ def __len__(self):\n         [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n         >>> len(a)\n         9\n+        >>> b = MutableDenseNDimArray(5)  # Rank-0 array (scalar)\n+        >>> len(b)\n+        1\n \n         \"\"\"\n+        if self._rank == 0:\n+            return 1\n         return self._loop_size\n \n     @property\n", "gold_standard_diff": "diff --git a/sympy/tensor/array/dense_ndim_array.py b/sympy/tensor/array/dense_ndim_array.py\nindex 9be94a8631ca..3e04e75891cf 100644\n--- a/sympy/tensor/array/dense_ndim_array.py\n+++ b/sympy/tensor/array/dense_ndim_array.py\n@@ -149,7 +149,7 @@ def _new(cls, iterable, shape, **kwargs):\n         self._shape = shape\n         self._array = list(flat_list)\n         self._rank = len(shape)\n-        self._loop_size = functools.reduce(lambda x,y: x*y, shape) if shape else 0\n+        self._loop_size = functools.reduce(lambda x,y: x*y, shape, 1)\n         return self\n \n     def __setitem__(self, index, value):\ndiff --git a/sympy/tensor/array/tests/test_immutable_ndim_array.py b/sympy/tensor/array/tests/test_immutable_ndim_array.py\nindex 5a576c44f068..326ffd2266b5 100644\n--- a/sympy/tensor/array/tests/test_immutable_ndim_array.py\n+++ b/sympy/tensor/array/tests/test_immutable_ndim_array.py\n@@ -9,6 +9,10 @@\n \n \n def test_ndim_array_initiation():\n+    arr_with_no_elements = ImmutableDenseNDimArray([], shape=(0,))\n+    assert len(arr_with_no_elements) == 0\n+    assert arr_with_no_elements.rank() == 1\n+\n     arr_with_one_element = ImmutableDenseNDimArray([23])\n     assert len(arr_with_one_element) == 1\n     assert arr_with_one_element[0] == 23\n@@ -73,11 +77,11 @@ def test_ndim_array_initiation():\n \n     from sympy.abc import x\n     rank_zero_array = ImmutableDenseNDimArray(x)\n-    assert len(rank_zero_array) == 0\n+    assert len(rank_zero_array) == 1\n     assert rank_zero_array.shape == ()\n     assert rank_zero_array.rank() == 0\n     assert rank_zero_array[()] == x\n-    raises(ValueError, lambda: rank_zero_array[0])\n+    assert rank_zero_array[0] == x\n \n \n def test_reshape():\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/15017"}