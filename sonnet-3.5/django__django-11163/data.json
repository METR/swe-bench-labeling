{"instance_id": "django__django-11163", "score": "C", "diff": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex d157c291ef..5edbbd376f 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -83,7 +83,7 @@ def model_to_dict(instance, fields=None, exclude=None):\n     for f in chain(opts.concrete_fields, opts.private_fields, opts.many_to_many):\n         if not getattr(f, 'editable', False):\n             continue\n-        if fields and f.name not in fields:\n+        if fields is not None and f.name not in fields:\n             continue\n         if exclude and f.name in exclude:\n             continue\n", "gold_standard_diff": "diff --git a/django/forms/models.py b/django/forms/models.py\nindex d157c291efa8..5edbbd376f34 100644\n--- a/django/forms/models.py\n+++ b/django/forms/models.py\n@@ -83,7 +83,7 @@ def model_to_dict(instance, fields=None, exclude=None):\n     for f in chain(opts.concrete_fields, opts.private_fields, opts.many_to_many):\n         if not getattr(f, 'editable', False):\n             continue\n-        if fields and f.name not in fields:\n+        if fields is not None and f.name not in fields:\n             continue\n         if exclude and f.name in exclude:\n             continue\ndiff --git a/tests/model_forms/tests.py b/tests/model_forms/tests.py\nindex f4f3169bc120..e4f24c31eed6 100644\n--- a/tests/model_forms/tests.py\n+++ b/tests/model_forms/tests.py\n@@ -1814,6 +1814,10 @@ class Meta:\n \n         bw = BetterWriter.objects.create(name='Joe Better', score=10)\n         self.assertEqual(sorted(model_to_dict(bw)), ['id', 'name', 'score', 'writer_ptr'])\n+        self.assertEqual(sorted(model_to_dict(bw, fields=[])), [])\n+        self.assertEqual(sorted(model_to_dict(bw, fields=['id', 'name'])), ['id', 'name'])\n+        self.assertEqual(sorted(model_to_dict(bw, exclude=[])), ['id', 'name', 'score', 'writer_ptr'])\n+        self.assertEqual(sorted(model_to_dict(bw, exclude=['id', 'name'])), ['score', 'writer_ptr'])\n \n         form = BetterWriterForm({'name': 'Some Name', 'score': 12})\n         self.assertTrue(form.is_valid())\n", "gold_standard_pr_link": "https://github.com/django/django/pull/11163"}