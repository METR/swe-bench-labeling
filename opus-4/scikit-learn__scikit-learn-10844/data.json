{"instance_id": "scikit-learn__scikit-learn-10844", "score": "C", "diff": "diff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py\nindex a987778ae..9bcca75a2 100644\n--- a/sklearn/metrics/cluster/supervised.py\n+++ b/sklearn/metrics/cluster/supervised.py\n@@ -856,7 +856,7 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):\n     tk = np.dot(c.data, c.data) - n_samples\n     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples\n     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples\n-    return tk / np.sqrt(pk * qk) if tk != 0. else 0.\n+    return np.sqrt(tk / pk) * np.sqrt(tk / qk) if tk != 0. else 0.\n \n \n def entropy(labels):\n", "gold_standard_diff": "From 7a70c646fc3dfd8d17dd82d02d69668c34467451 Mon Sep 17 00:00:00 2001\nFrom: Alan Liddell <alan.c.liddell@gmail.com>\nDate: Tue, 20 Mar 2018 16:34:39 -0400\nSubject: [PATCH 1/4] FIX Solves integer overlow in fowlkes_mallow_score\n\n---\n sklearn/metrics/cluster/supervised.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py\nindex a987778ae5d2e..43934d72434ac 100644\n--- a/sklearn/metrics/cluster/supervised.py\n+++ b/sklearn/metrics/cluster/supervised.py\n@@ -856,7 +856,7 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):\n     tk = np.dot(c.data, c.data) - n_samples\n     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples\n     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples\n-    return tk / np.sqrt(pk * qk) if tk != 0. else 0.\n+    return tk / np.sqrt(pk.astype(np.int64) * qk.astype(np.int64)) if tk != 0. else 0.\n \n \n def entropy(labels):\n\nFrom 1c25e33e8a0cb335528faadcd99054884bab7a8d Mon Sep 17 00:00:00 2001\nFrom: Alan Liddell <alan.c.liddell@gmail.com>\nDate: Fri, 23 Mar 2018 11:35:37 -0400\nSubject: [PATCH 2/4] adds non-regression test for FM score, avoids overflow in\n large int64 product by multiplying as float\n\n---\n sklearn/metrics/cluster/supervised.py            |  5 +++--\n sklearn/metrics/cluster/tests/test_supervised.py | 11 +++++++++++\n 2 files changed, 14 insertions(+), 2 deletions(-)\n\ndiff --git a/sklearn/metrics/cluster/supervised.py b/sklearn/metrics/cluster/supervised.py\nindex 43934d72434ac..a33d0cb25acb0 100644\n--- a/sklearn/metrics/cluster/supervised.py\n+++ b/sklearn/metrics/cluster/supervised.py\n@@ -852,11 +852,12 @@ def fowlkes_mallows_score(labels_true, labels_pred, sparse=False):\n     labels_true, labels_pred = check_clusterings(labels_true, labels_pred)\n     n_samples, = labels_true.shape\n \n-    c = contingency_matrix(labels_true, labels_pred, sparse=True)\n+    c = contingency_matrix(labels_true, labels_pred,\n+                           sparse=True).astype(np.int64)\n     tk = np.dot(c.data, c.data) - n_samples\n     pk = np.sum(np.asarray(c.sum(axis=0)).ravel() ** 2) - n_samples\n     qk = np.sum(np.asarray(c.sum(axis=1)).ravel() ** 2) - n_samples\n-    return tk / np.sqrt(pk.astype(np.int64) * qk.astype(np.int64)) if tk != 0. else 0.\n+    return np.sqrt(tk / pk) * np.sqrt(tk / qk) if tk != 0. else 0.\n \n \n def entropy(labels):\ndiff --git a/sklearn/metrics/cluster/tests/test_supervised.py b/sklearn/metrics/cluster/tests/test_supervised.py\nindex 8da03d1e17457..c843c4a4371dc 100644\n--- a/sklearn/metrics/cluster/tests/test_supervised.py\n+++ b/sklearn/metrics/cluster/tests/test_supervised.py\n@@ -184,6 +184,17 @@ def test_int_overflow_mutual_info_score():\n     assert_all_finite(mutual_info_score(x.ravel(), y.ravel()))\n \n \n+def test_int_overflow_fowlkes_mallows_score():\n+    # cribbed directly from test_int_overflow_mutual_info_score\n+    x = np.array([1] * (52632 + 2529) + [2] * (14660 + 793) + [3] * (3271 +\n+                                                                     204) + [4] * (814 + 39) + [5] * (316 + 20))\n+    y = np.array([0] * 52632 + [1] * 2529 + [0] * 14660 + [1] * 793 +\n+                 [0] * 3271 + [1] * 204 + [0] * 814 + [1] * 39 + [0] * 316 +\n+                 [1] * 20)\n+\n+    assert_all_finite(fowlkes_mallows_score(x.ravel(), y.ravel()))\n+\n+\n def test_entropy():\n     ent = entropy([0, 0, 42.])\n     assert_almost_equal(ent, 0.6365141, 5)\n\nFrom d059eb12b3d9b05cd6beeb4d05e942032b411035 Mon Sep 17 00:00:00 2001\nFrom: Alan Liddell <alan.c.liddell@gmail.com>\nDate: Mon, 26 Mar 2018 17:01:32 -0400\nSubject: [PATCH 3/4] consolidates non-regression tests for overflow in\n metrics, adds note in whats_new\n\n---\n doc/whats_new/v0.20.rst                       |  6 ++++++\n .../metrics/cluster/tests/test_supervised.py  | 20 +++++--------------\n 2 files changed, 11 insertions(+), 15 deletions(-)\n\ndiff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst\nindex e71a8af0d78db..79d4487b90b10 100644\n--- a/doc/whats_new/v0.20.rst\n+++ b/doc/whats_new/v0.20.rst\n@@ -354,6 +354,12 @@ Metrics\n   :func:`mutual_info_score`.\n   :issue:`9772` by :user:`Kumar Ashutosh <thechargedneutron>`.\n \n+- Fixed a bug in :func:`metrics.cluster.fowlkes_mallows_score` to avoid integer\n+  overflow. Casted return value of `contingency_matrix` to `int64` and computed\n+  product of square roots rather than square root of product.\n+  :issue:`9515` by :user:`Alan Liddell <aliddell>` and\n+  :user:`Kumar Ashutosh <thechargedneutron>` and :user:`Manh Dao <manhdao>`.\n+\n Neighbors\n \n - Fixed a bug so ``predict`` in :class:`neighbors.RadiusNeighborsRegressor` can\ndiff --git a/sklearn/metrics/cluster/tests/test_supervised.py b/sklearn/metrics/cluster/tests/test_supervised.py\nindex c843c4a4371dc..3cd22a893da35 100644\n--- a/sklearn/metrics/cluster/tests/test_supervised.py\n+++ b/sklearn/metrics/cluster/tests/test_supervised.py\n@@ -173,26 +173,16 @@ def test_expected_mutual_info_overflow():\n     assert expected_mutual_information(np.array([[70000]]), 70000) <= 1\n \n \n-def test_int_overflow_mutual_info_score():\n+def test_int_overflow_mutual_info_fowlkes_mallows_score():\n     # Test overflow in mutual_info_classif\n     x = np.array([1] * (52632 + 2529) + [2] * (14660 + 793) + [3] * (3271 +\n-                 204) + [4] * (814 + 39) + [5] * (316 + 20))\n+                 204) + [4] * (814 + 39) + [5] * (316 + 20)).ravel()\n     y = np.array([0] * 52632 + [1] * 2529 + [0] * 14660 + [1] * 793 +\n                  [0] * 3271 + [1] * 204 + [0] * 814 + [1] * 39 + [0] * 316 +\n-                 [1] * 20)\n+                 [1] * 20).ravel()\n \n-    assert_all_finite(mutual_info_score(x.ravel(), y.ravel()))\n-\n-\n-def test_int_overflow_fowlkes_mallows_score():\n-    # cribbed directly from test_int_overflow_mutual_info_score\n-    x = np.array([1] * (52632 + 2529) + [2] * (14660 + 793) + [3] * (3271 +\n-                                                                     204) + [4] * (814 + 39) + [5] * (316 + 20))\n-    y = np.array([0] * 52632 + [1] * 2529 + [0] * 14660 + [1] * 793 +\n-                 [0] * 3271 + [1] * 204 + [0] * 814 + [1] * 39 + [0] * 316 +\n-                 [1] * 20)\n-\n-    assert_all_finite(fowlkes_mallows_score(x.ravel(), y.ravel()))\n+    assert_all_finite(mutual_info_score(x, y))\n+    assert_all_finite(fowlkes_mallows_score(x, y))\n \n \n def test_entropy():\n\nFrom c4177c52638eba7deb5dc4e42fe44eb8c0a7c2ba Mon Sep 17 00:00:00 2001\nFrom: Alan Liddell <alan.c.liddell@gmail.com>\nDate: Mon, 26 Mar 2018 21:53:04 -0400\nSubject: [PATCH 4/4] removes ravel and previously-credited contributor\n\n---\n doc/whats_new/v0.20.rst                          | 2 +-\n sklearn/metrics/cluster/tests/test_supervised.py | 6 +++---\n 2 files changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a/doc/whats_new/v0.20.rst b/doc/whats_new/v0.20.rst\nindex 79d4487b90b10..45009ef249a6f 100644\n--- a/doc/whats_new/v0.20.rst\n+++ b/doc/whats_new/v0.20.rst\n@@ -358,7 +358,7 @@ Metrics\n   overflow. Casted return value of `contingency_matrix` to `int64` and computed\n   product of square roots rather than square root of product.\n   :issue:`9515` by :user:`Alan Liddell <aliddell>` and\n-  :user:`Kumar Ashutosh <thechargedneutron>` and :user:`Manh Dao <manhdao>`.\n+  :user:`Manh Dao <manhdao>`.\n \n Neighbors\n \ndiff --git a/sklearn/metrics/cluster/tests/test_supervised.py b/sklearn/metrics/cluster/tests/test_supervised.py\nindex 3cd22a893da35..8be39cd220d2a 100644\n--- a/sklearn/metrics/cluster/tests/test_supervised.py\n+++ b/sklearn/metrics/cluster/tests/test_supervised.py\n@@ -174,12 +174,12 @@ def test_expected_mutual_info_overflow():\n \n \n def test_int_overflow_mutual_info_fowlkes_mallows_score():\n-    # Test overflow in mutual_info_classif\n+    # Test overflow in mutual_info_classif and fowlkes_mallows_score\n     x = np.array([1] * (52632 + 2529) + [2] * (14660 + 793) + [3] * (3271 +\n-                 204) + [4] * (814 + 39) + [5] * (316 + 20)).ravel()\n+                 204) + [4] * (814 + 39) + [5] * (316 + 20))\n     y = np.array([0] * 52632 + [1] * 2529 + [0] * 14660 + [1] * 793 +\n                  [0] * 3271 + [1] * 204 + [0] * 814 + [1] * 39 + [0] * 316 +\n-                 [1] * 20).ravel()\n+                 [1] * 20)\n \n     assert_all_finite(mutual_info_score(x, y))\n     assert_all_finite(fowlkes_mallows_score(x, y))\n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/10844"}