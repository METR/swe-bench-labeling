diff --git a/django/utils/dateformat.py b/django/utils/dateformat.py
index afd36d79e0..526414363b 100644
--- a/django/utils/dateformat.py
+++ b/django/utils/dateformat.py
@@ -326,7 +326,7 @@ class DateFormat(TimeFormat):
 
     def y(self):
         "Year, 2 digits; e.g. '99'"
-        return str(self.data.year)[2:]
+        return '%02d' % (self.data.year % 100)
 
     def Y(self):
         "Year, 4 digits; e.g. '1999'"
diff --git a/tests/utils_tests/test_dateformat.py b/tests/utils_tests/test_dateformat.py
index d050ac4352..098ba32588 100644
--- a/tests/utils_tests/test_dateformat.py
+++ b/tests/utils_tests/test_dateformat.py
@@ -105,6 +105,22 @@ class DateFormatTests(SimpleTestCase):
         self.assertEqual(dateformat.format(my_birthday, 'Y'), '1979')
         self.assertEqual(dateformat.format(my_birthday, 'z'), '189')
 
+    def test_year_before_1000(self):
+        # Test years < 1000 to ensure 'y' format returns the last two digits with leading zeros
+        tests = [
+            (1, '01'),
+            (9, '09'),
+            (10, '10'),
+            (99, '99'),
+            (100, '00'),
+            (123, '23'),
+            (999, '99'),
+            (1000, '00'),
+            (1001, '01'),
+        ]
+        for year, expected in tests:
+            self.assertEqual(dateformat.format(datetime(year, 1, 1), 'y'), expected)
+
     def test_dateformat(self):
         my_birthday = datetime(1979, 7, 8, 22, 00)
 
