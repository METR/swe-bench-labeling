diff --git a/sphinx/ext/napoleon/__init__.py b/sphinx/ext/napoleon/__init__.py
index 10b1ff3a37e..2b1818425db 100644
--- a/sphinx/ext/napoleon/__init__.py
+++ b/sphinx/ext/napoleon/__init__.py
@@ -13,6 +13,7 @@
 from sphinx import __display_version__ as __version__
 from sphinx.application import Sphinx
 from sphinx.ext.napoleon.docstring import GoogleDocstring, NumpyDocstring
+from sphinx.util import inspect
 
 
 class Config:
@@ -438,7 +439,7 @@ def _skip_member(app: Sphinx, what: str, name: str, obj: Any,
                         mod_path = cls_path.split('.')
                         cls = functools.reduce(getattr, mod_path, mod)
                     else:
-                        cls = obj.__globals__[cls_path]
+                        cls = inspect.unwrap(obj).__globals__[cls_path]
                 except Exception:
                     cls_is_owner = False
                 else:
diff --git a/sphinx/testing/util.py b/sphinx/testing/util.py
index 450241f5513..5ac334068c5 100644
--- a/sphinx/testing/util.py
+++ b/sphinx/testing/util.py
@@ -7,6 +7,7 @@
     :copyright: Copyright 2007-2020 by the Sphinx team, see AUTHORS.
     :license: BSD, see LICENSE for details.
 """
+import functools
 import os
 import re
 import sys
@@ -195,3 +196,13 @@ def find_files(root: str, suffix: bool = None) -> Generator[str, None, None]:
 
 def strip_escseq(text: str) -> str:
     return re.sub('\x1b.*?m', '', text)
+
+
+def simple_decorator(f):
+    """
+    A simple decorator that does nothing, for tests to use.
+    """
+    @functools.wraps(f)
+    def wrapper(*args, **kwargs):
+        return f(*args, **kwargs)
+    return wrapper
diff --git a/tests/test_ext_napoleon.py b/tests/test_ext_napoleon.py
index 7c337975796..9f356ce9e7c 100644
--- a/tests/test_ext_napoleon.py
+++ b/tests/test_ext_napoleon.py
@@ -14,6 +14,7 @@
 from unittest import TestCase, mock
 
 from sphinx.application import Sphinx
+from sphinx.testing.util import simple_decorator
 from sphinx.ext.napoleon import _process_docstring, _skip_member, Config, setup
 
 
@@ -50,6 +51,11 @@ def __special_doc__(self):
     def __special_undoc__(self):
         pass
 
+    @simple_decorator
+    def __decorated_func__(self):
+        """doc"""
+        pass
+
 
 class SampleError(Exception):
     def _private_doc(self):
@@ -130,8 +136,8 @@ def assertSkip(self, what, member, obj, expect_default_skip, config_name):
             self.assertEqual(None, _skip_member(app, what, member, obj, skip,
                                                 mock.Mock()))
         else:
-            self.assertFalse(_skip_member(app, what, member, obj, skip,
-                                          mock.Mock()))
+            self.assertIs(_skip_member(app, what, member, obj, skip,
+                                       mock.Mock()), False)
         setattr(app.config, config_name, False)
         self.assertEqual(None, _skip_member(app, what, member, obj, skip,
                                             mock.Mock()))
@@ -170,6 +176,11 @@ def test_class_special_undoc(self):
                         SampleClass.__special_undoc__, True,
                         'napoleon_include_special_with_doc')
 
+    def test_class_decorated_doc(self):
+        self.assertSkip('class', '__decorated_func__',
+                        SampleClass.__decorated_func__, False,
+                        'napoleon_include_special_with_doc')
+
     def test_exception_private_doc(self):
         self.assertSkip('exception', '_private_doc',
                         SampleError._private_doc, False,
