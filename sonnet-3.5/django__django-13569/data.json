{"instance_id": "django__django-13569", "score": "C", "diff": "diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py\nindex 04e430a42e..7d08971cfa 100644\n--- a/django/db/models/sql/compiler.py\n+++ b/django/db/models/sql/compiler.py\n@@ -129,7 +129,10 @@ class SQLCompiler:\n             # Skip References to the select clause, as all expressions in the\n             # select clause are already part of the group by.\n             if not is_ref:\n-                expressions.extend(expr.get_group_by_cols())\n+                expressions.extend([\n+                    col for col in expr.get_group_by_cols()\n+                    if not isinstance(col, Random)\n+                ])\n         having_group_by = self.having.get_group_by_cols() if self.having else ()\n         for expr in having_group_by:\n             expressions.append(expr)\n", "gold_standard_diff": "diff --git a/AUTHORS b/AUTHORS\nindex f1a4315c8d5f..5f1ca7ccebee 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -293,6 +293,7 @@ answer newbie questions, and generally made Django that much better:\n     Erwin Junge <erwin@junge.nl>\n     Esdras Beleza <linux@esdrasbeleza.com>\n     Espen Grindhaug <http://grindhaug.org/>\n+    \u00c9tienne Beaul\u00e9 <beauleetienne0@gmail.com>\n     Eugene Lazutkin <http://lazutkin.com/blog/>\n     Evan Grim <https://github.com/egrim>\n     Fabrice Aneche <akh@nobugware.com>\ndiff --git a/django/db/models/functions/math.py b/django/db/models/functions/math.py\nindex 304e11222531..15915f4b7cdd 100644\n--- a/django/db/models/functions/math.py\n+++ b/django/db/models/functions/math.py\n@@ -154,6 +154,9 @@ def as_oracle(self, compiler, connection, **extra_context):\n     def as_sqlite(self, compiler, connection, **extra_context):\n         return super().as_sql(compiler, connection, function='RAND', **extra_context)\n \n+    def get_group_by_cols(self, alias=None):\n+        return []\n+\n \n class Round(Transform):\n     function = 'ROUND'\ndiff --git a/tests/aggregation/tests.py b/tests/aggregation/tests.py\nindex f8aeceb2d07e..a759fd4d3659 100644\n--- a/tests/aggregation/tests.py\n+++ b/tests/aggregation/tests.py\n@@ -1315,3 +1315,18 @@ def test_aggregation_subquery_annotation_related_field(self):\n         # with self.assertNumQueries(1) as ctx:\n         #     self.assertSequenceEqual(books_qs, [book])\n         # self.assertEqual(ctx[0]['sql'].count('SELECT'), 2)\n+\n+    def test_aggregation_random_ordering(self):\n+        \"\"\"Random() is not included in the GROUP BY when used for ordering.\"\"\"\n+        authors = Author.objects.annotate(contact_count=Count('book')).order_by('?')\n+        self.assertQuerysetEqual(authors, [\n+            ('Adrian Holovaty', 1),\n+            ('Jacob Kaplan-Moss', 1),\n+            ('Brad Dayley', 1),\n+            ('James Bennett', 1),\n+            ('Jeffrey Forcier', 1),\n+            ('Paul Bissex', 1),\n+            ('Wesley J. Chun', 1),\n+            ('Stuart Russell', 1),\n+            ('Peter Norvig', 2),\n+        ], lambda a: (a.name, a.contact_count), ordered=False)\n", "gold_standard_pr_link": "https://github.com/django/django/pull/13569"}