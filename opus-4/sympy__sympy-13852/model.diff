diff --git a/sympy/functions/special/tests/test_zeta_functions.py b/sympy/functions/special/tests/test_zeta_functions.py
index 3911dadd10..85c432ae53 100644
--- a/sympy/functions/special/tests/test_zeta_functions.py
+++ b/sympy/functions/special/tests/test_zeta_functions.py
@@ -128,10 +128,13 @@ def test_polylog_expansion():
     assert polylog(s, 1) == zeta(s)
     assert polylog(s, -1) == -dirichlet_eta(s)
 
-    assert myexpand(polylog(1, z), -log(1 + exp_polar(-I*pi)*z))
+    assert myexpand(polylog(1, z), -log(1 - z))
     assert myexpand(polylog(0, z), z/(1 - z))
     assert myexpand(polylog(-1, z), z**2/(1 - z)**2 + z/(1 - z))
     assert myexpand(polylog(-5, z), None)
+    
+    # Test special value polylog(2, 1/2)
+    assert polylog(2, S.Half) == -log(2)**2/2 + pi**2/12
 
 
 def test_lerchphi_expansion():
diff --git a/sympy/functions/special/zeta_functions.py b/sympy/functions/special/zeta_functions.py
index b8e2b66195..1181d10232 100644
--- a/sympy/functions/special/zeta_functions.py
+++ b/sympy/functions/special/zeta_functions.py
@@ -253,7 +253,7 @@ class polylog(Function):
     >>> from sympy import expand_func
     >>> from sympy.abc import z
     >>> expand_func(polylog(1, z))
-    -log(z*exp_polar(-I*pi) + 1)
+    -log(1 - z)
     >>> expand_func(polylog(0, z))
     z/(-z + 1)
 
@@ -277,6 +277,10 @@ def eval(cls, s, z):
             return -dirichlet_eta(s)
         elif z == 0:
             return 0
+        # Special case: polylog(2, 1/2) = -log(2)**2/2 + pi**2/12
+        elif s == 2 and z == S.Half:
+            from sympy import log
+            return -log(2)**2/2 + pi**2/12
 
     def fdiff(self, argindex=1):
         s, z = self.args
@@ -288,10 +292,10 @@ def _eval_rewrite_as_lerchphi(self, s, z):
         return z*lerchphi(z, s, 1)
 
     def _eval_expand_func(self, **hints):
-        from sympy import log, expand_mul, Dummy, exp_polar, I
+        from sympy import log, expand_mul, Dummy
         s, z = self.args
         if s == 1:
-            return -log(1 + exp_polar(-I*pi)*z)
+            return -log(1 - z)
         if s.is_Integer and s <= 0:
             u = Dummy('u')
             start = u/(1 - u)
diff --git a/test_final_verification.py b/test_final_verification.py
new file mode 100644
index 0000000000..4881e833a2
--- /dev/null
+++ b/test_final_verification.py
@@ -0,0 +1,45 @@
+from sympy import *
+from sympy.abc import z, s
+
+print("=== Testing polylog(2, 1/2) evaluation ===")
+result = polylog(2, Rational(1,2))
+expected = -log(2)**2/2 + pi**2/12
+print(f"polylog(2, 1/2) = {result}")
+print(f"Expected: {expected}")
+print(f"Are they equal? {result == expected}")
+
+print("\n=== Testing polylog(1, z) expansion ===")
+expanded = expand_func(polylog(1, z))
+print(f"expand_func(polylog(1, z)) = {expanded}")
+print(f"Expected: -log(1 - z)")
+print(f"Are they equal? {expanded == -log(1 - z)}")
+
+print("\n=== Testing derivative consistency ===")
+# According to the issue, polylog(1, z) and -log(1-z) should be the same function
+# so their derivatives should be equal
+deriv1 = diff(polylog(1, z), z)
+deriv2 = diff(-log(1 - z), z)
+print(f"diff(polylog(1, z), z) = {deriv1}")
+print(f"diff(-log(1 - z), z) = {deriv2}")
+
+# After expansion, the derivative should still be consistent
+deriv3 = diff(expand_func(polylog(1, z)), z)
+print(f"diff(expand_func(polylog(1, z)), z) = {deriv3}")
+print(f"Simplified difference: {simplify(deriv3 - deriv2)}")
+
+print("\n=== Testing numerical values ===")
+# Test at z = 0.5
+z_val = 0.5
+poly_val = polylog(1, z_val).evalf()
+log_val = (-log(1 - z_val)).evalf()
+print(f"polylog(1, 0.5).evalf() = {poly_val}")
+print(f"(-log(1 - 0.5)).evalf() = {log_val}")
+print(f"Difference: {abs(poly_val - log_val)}")
+
+print("\n=== Testing expand_func no longer uses exp_polar ===")
+expanded_str = str(expand_func(polylog(1, z)))
+has_exp_polar = "exp_polar" in expanded_str
+print(f"expand_func(polylog(1, z)) = {expanded_str}")
+print(f"Contains exp_polar? {has_exp_polar}")
+
+print("\n=== All tests completed ===")
diff --git a/test_issue_scenarios.py b/test_issue_scenarios.py
new file mode 100644
index 0000000000..0806837103
--- /dev/null
+++ b/test_issue_scenarios.py
@@ -0,0 +1,36 @@
+from sympy import *
+from sympy.functions.special.zeta_functions import polylog
+
+print("Testing the exact scenarios from the issue:")
+print()
+
+# Test 1: polylog(2, Rational(1,2))
+print("In [1]: polylog(2, Rational(1,2))")
+result = polylog(2, Rational(1,2))
+print(f"Out[1]: {result}")
+print()
+
+# Test 2: polylog(2, Rational(1,2)).expand(func=True)
+print("In [2]: polylog(2, Rational(1,2)).expand(func=True)")
+result2 = polylog(2, Rational(1,2)).expand(func=True)
+print(f"Out[2]: {result2}")
+print()
+
+print("The answer should be -log(2)**2/2 + pi**2/12")
+expected = -log(2)**2/2 + pi**2/12
+print(f"Expected: {expected}")
+print()
+
+# Test expand_func on polylog(1, z)
+print("Testing expand_func(polylog(1, z)):")
+from sympy.abc import z
+result3 = expand_func(polylog(1, z))
+print(f"Result: {result3}")
+print("No longer contains exp_polar(-I*pi)!")
+print()
+
+# Verify derivative consistency
+print("Verifying derivative consistency:")
+print(f"expand_func(diff(polylog(1, z) + log(1 - z), z)) = {expand_func(diff(polylog(1, z) + log(1 - z), z))}")
+print("Should simplify to 0")
+print(f"simplify(...) = {simplify(diff(polylog(1, z) + log(1 - z), z))}")
diff --git a/test_polylog_issue.py b/test_polylog_issue.py
new file mode 100644
index 0000000000..0513b89dbc
--- /dev/null
+++ b/test_polylog_issue.py
@@ -0,0 +1,26 @@
+from sympy import *
+from sympy.abc import z, s
+
+# Test current behavior
+print("Testing polylog(2, 1/2):")
+print(f"polylog(2, Rational(1,2)) = {polylog(2, Rational(1,2))}")
+print(f"expand_func(polylog(2, Rational(1,2))) = {expand_func(polylog(2, Rational(1,2)))}")
+
+# The expected value
+expected = -log(2)**2/2 + pi**2/12
+print(f"Expected value: {expected}")
+print(f"Expected value (numerical): {expected.evalf()}")
+print(f"polylog(2, 1/2) numerical: {polylog(2, Rational(1,2)).evalf()}")
+
+print("\nTesting polylog(1, z) expansion:")
+print(f"expand_func(polylog(1, z)) = {expand_func(polylog(1, z))}")
+print(f"Expected: -log(1 - z)")
+
+# Check derivative consistency
+print("\nDerivative check:")
+print(f"diff(polylog(1, z), z) = {diff(polylog(1, z), z)}")
+print(f"diff(expand_func(polylog(1, z)), z) = {diff(expand_func(polylog(1, z)), z)}")
+print(f"diff(-log(1-z), z) = {diff(-log(1-z), z)}")
+
+# Verify they should be the same
+print(f"\nSimplify diff(polylog(1, z) + log(1 - z), z) = {simplify(diff(polylog(1, z) + log(1 - z), z))}")
