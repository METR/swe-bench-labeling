{"instance_id": "matplotlib__matplotlib-24149", "score": "I", "diff": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560..48cd6a7545 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2204,6 +2204,10 @@ class Axes(_AxesBase):\n     @_preprocess_data()\n     @_docstring.dedent_interpd\n     def bar(self, x, height, width=0.8, bottom=None, *, align=\"center\",\n+\n+        Notes\n+        -----\n+        If all x-values are NaN, an empty BarContainer will be returned.\n             **kwargs):\n         r\"\"\"\n         Make a bar plot.\n@@ -2252,6 +2256,11 @@ class Axes(_AxesBase):\n         edgecolor : color or list of color, optional\n             The colors of the bar edges.\n \n+        # Handle the case where all x-values are NaN\n+        if np.isnan(x).all():\n+            return BarContainer([], None, None)\n+\n+\n         linewidth : float or array-like, optional\n             Width of the bar edge(s). If 0, don't draw edges.\n \n", "gold_standard_diff": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex fdac0f3560f4..de4a99f71d24 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -2182,11 +2182,19 @@ def _convert_dx(dx, x0, xconv, convert):\n                 x0 = cbook._safe_first_finite(x0)\n             except (TypeError, IndexError, KeyError):\n                 pass\n+            except StopIteration:\n+                # this means we found no finite element, fall back to first\n+                # element unconditionally\n+                x0 = cbook.safe_first_element(x0)\n \n             try:\n                 x = cbook._safe_first_finite(xconv)\n             except (TypeError, IndexError, KeyError):\n                 x = xconv\n+            except StopIteration:\n+                # this means we found no finite element, fall back to first\n+                # element unconditionally\n+                x = cbook.safe_first_element(xconv)\n \n             delist = False\n             if not np.iterable(dx):\ndiff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py\nindex 9fb95cbd6869..bd7940a59673 100644\n--- a/lib/matplotlib/tests/test_axes.py\n+++ b/lib/matplotlib/tests/test_axes.py\n@@ -8195,3 +8195,16 @@ def test_bar_leading_nan():\n         for b in rest:\n             assert np.isfinite(b.xy).all()\n             assert np.isfinite(b.get_width())\n+\n+\n+@check_figures_equal(extensions=[\"png\"])\n+def test_bar_all_nan(fig_test, fig_ref):\n+    mpl.style.use(\"mpl20\")\n+    ax_test = fig_test.subplots()\n+    ax_ref = fig_ref.subplots()\n+\n+    ax_test.bar([np.nan], [np.nan])\n+    ax_test.bar([1], [1])\n+\n+    ax_ref.bar([1], [1]).remove()\n+    ax_ref.bar([1], [1])\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/24149"}