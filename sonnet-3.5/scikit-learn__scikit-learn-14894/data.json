{"instance_id": "scikit-learn__scikit-learn-14894", "score": "C", "diff": "diff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\nindex 64cebe837..54c036ef8 100644\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -287,11 +287,15 @@ class BaseLibSVM(BaseEstimator, metaclass=ABCMeta):\n         n_SV = self.support_vectors_.shape[0]\n \n         dual_coef_indices = np.tile(np.arange(n_SV), n_class)\n-        dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\n-                                     dual_coef_indices.size / n_class)\n-        self.dual_coef_ = sp.csr_matrix(\n-            (dual_coef_data, dual_coef_indices, dual_coef_indptr),\n-            (n_class, n_SV))\n+        if n_SV == 0:\n+            # Handle the case when there are no support vectors\n+            self.dual_coef_ = sp.csr_matrix((n_class, 0))\n+        else:\n+            dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\n+                                         dual_coef_indices.size / n_class)\n+            self.dual_coef_ = sp.csr_matrix(\n+                (dual_coef_data, dual_coef_indices, dual_coef_indptr),\n+                (n_class, n_SV))\n \n     def predict(self, X):\n         \"\"\"Perform regression on samples in X.\n", "gold_standard_diff": "From 060a639a37a34cfeb28451e329c818e742efb8fb Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Tue, 3 Sep 2019 12:41:18 -0400\nSubject: [PATCH 01/10] add logic\n\n---\n sklearn/svm/base.py           | 13 ++++++++-----\n sklearn/svm/tests/test_svm.py | 14 ++++++++++++++\n 2 files changed, 22 insertions(+), 5 deletions(-)\n\ndiff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\nindex 64cebe837514a..a2f31ac7340fd 100644\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -287,11 +287,14 @@ def _sparse_fit(self, X, y, sample_weight, solver_type, kernel,\n         n_SV = self.support_vectors_.shape[0]\n \n         dual_coef_indices = np.tile(np.arange(n_SV), n_class)\n-        dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\n-                                     dual_coef_indices.size / n_class)\n-        self.dual_coef_ = sp.csr_matrix(\n-            (dual_coef_data, dual_coef_indices, dual_coef_indptr),\n-            (n_class, n_SV))\n+        if dual_coef_indices.size == 0:\n+            self.dual_coef_ = sp.csr_matrix([])\n+        else:\n+            dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\n+                                         dual_coef_indices.size / n_class)\n+            self.dual_coef_ = sp.csr_matrix(\n+                (dual_coef_data, dual_coef_indices, dual_coef_indptr),\n+                (n_class, n_SV))\n \n     def predict(self, X):\n         \"\"\"Perform regression on samples in X.\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex 6ba141811e39d..d2f584514912c 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -690,6 +690,20 @@ def test_sparse_precomputed():\n         assert \"Sparse precomputed\" in str(e)\n \n \n+def test_sparse_fit_no_support_vectors():\n+    x_train = sparse.csr_matrix([[0, 1, 0, 0],\n+                                 [0, 0, 0, 1],\n+                                 [0, 0, 1, 0],\n+                                 [0, 0, 0, 1]])\n+    y_train = np.array([0.04, 0.04, 0.10, 0.16])\n+    model = svm.SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,\n+                    gamma=1.0, kernel='linear', max_iter=15000,\n+                    shrinking=True, tol=0.001, verbose=False)\n+    model.fit(x_train, y_train)\n+    assert not model.support_vectors_\n+    assert model.dual_coef_ == sparse.csr_matrix([])\n+\n+\n def test_linearsvc_parameters():\n     # Test possible parameter combinations in LinearSVC\n     # Generate list of possible parameter combinations\n\nFrom c44a9ae4cd310f0737d092aa5262a7ec4fd6d8d7 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Thu, 5 Sep 2019 13:14:40 -0400\nSubject: [PATCH 02/10] fix test\n\n---\n sklearn/svm/tests/test_svm.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex d2f584514912c..c0141e5be3d03 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -700,8 +700,8 @@ def test_sparse_fit_no_support_vectors():\n                     gamma=1.0, kernel='linear', max_iter=15000,\n                     shrinking=True, tol=0.001, verbose=False)\n     model.fit(x_train, y_train)\n-    assert not model.support_vectors_\n-    assert model.dual_coef_ == sparse.csr_matrix([])\n+    assert not model.support_vectors_.data\n+    assert not model.dual_coef_.data\n \n \n def test_linearsvc_parameters():\n\nFrom 1b5735e551d25700e6222a700b2bc9929ff5d9c3 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Thu, 5 Sep 2019 13:17:41 -0400\nSubject: [PATCH 03/10] rename test\n\n---\n sklearn/svm/tests/test_svm.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex c0141e5be3d03..95f7be1d9992d 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -690,7 +690,7 @@ def test_sparse_precomputed():\n         assert \"Sparse precomputed\" in str(e)\n \n \n-def test_sparse_fit_no_support_vectors():\n+def test_sparse_fit_support_vectors_empty():\n     x_train = sparse.csr_matrix([[0, 1, 0, 0],\n                                  [0, 0, 0, 1],\n                                  [0, 0, 1, 0],\n\nFrom 35d1f1ef4dc50d5374b00a416f1823c04631c99c Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Thu, 5 Sep 2019 13:46:37 -0400\nSubject: [PATCH 04/10] test\n\n---\n sklearn/svm/tests/test_svm.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex 95f7be1d9992d..fe357379d591f 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -700,8 +700,8 @@ def test_sparse_fit_support_vectors_empty():\n                     gamma=1.0, kernel='linear', max_iter=15000,\n                     shrinking=True, tol=0.001, verbose=False)\n     model.fit(x_train, y_train)\n-    assert not model.support_vectors_.data\n-    assert not model.dual_coef_.data\n+    assert model.support_vectors_.data.size == 0\n+    assert model.dual_coef_.data.size == 0\n \n \n def test_linearsvc_parameters():\n\nFrom 3cfe4bde38a7d9436ebd7a7d4918364ed5eda275 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Thu, 5 Sep 2019 13:53:45 -0400\nSubject: [PATCH 05/10] linting\n\n---\n sklearn/svm/tests/test_svm.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex fe357379d591f..cf611d482f184 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -696,8 +696,8 @@ def test_sparse_fit_support_vectors_empty():\n                                  [0, 0, 1, 0],\n                                  [0, 0, 0, 1]])\n     y_train = np.array([0.04, 0.04, 0.10, 0.16])\n-    model = svm.SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,\n-                    gamma=1.0, kernel='linear', max_iter=15000,\n+    model = svm.SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3,\n+\t\t    epsilon=0.1, gamma=1.0, kernel='linear', max_iter=15000,\n                     shrinking=True, tol=0.001, verbose=False)\n     model.fit(x_train, y_train)\n     assert model.support_vectors_.data.size == 0\n\nFrom 3f3977bf29ae54604cb4ef443789f4fede1173f9 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Thu, 5 Sep 2019 14:05:49 -0400\nSubject: [PATCH 06/10] linting again\n\n---\n sklearn/svm/tests/test_svm.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex cf611d482f184..18c9c50070177 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -697,7 +697,7 @@ def test_sparse_fit_support_vectors_empty():\n                                  [0, 0, 0, 1]])\n     y_train = np.array([0.04, 0.04, 0.10, 0.16])\n     model = svm.SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3,\n-\t\t    epsilon=0.1, gamma=1.0, kernel='linear', max_iter=15000,\n+                    epsilon=0.1, gamma=1.0, kernel='linear', max_iter=15000,\n                     shrinking=True, tol=0.001, verbose=False)\n     model.fit(x_train, y_train)\n     assert model.support_vectors_.data.size == 0\n\nFrom 85e6d41ee5031225cf6c189a931e3a0351452e61 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Wed, 2 Oct 2019 15:48:24 -0400\nSubject: [PATCH 07/10] make test simpler:\n\n---\n sklearn/svm/tests/test_svm.py | 8 +++-----\n 1 file changed, 3 insertions(+), 5 deletions(-)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex 18c9c50070177..dff420dadf861 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -691,15 +691,13 @@ def test_sparse_precomputed():\n \n \n def test_sparse_fit_support_vectors_empty():\n-    x_train = sparse.csr_matrix([[0, 1, 0, 0],\n+    X_train = sparse.csr_matrix([[0, 1, 0, 0],\n                                  [0, 0, 0, 1],\n                                  [0, 0, 1, 0],\n                                  [0, 0, 0, 1]])\n     y_train = np.array([0.04, 0.04, 0.10, 0.16])\n-    model = svm.SVR(C=316.227766017, cache_size=200, coef0=0.0, degree=3,\n-                    epsilon=0.1, gamma=1.0, kernel='linear', max_iter=15000,\n-                    shrinking=True, tol=0.001, verbose=False)\n-    model.fit(x_train, y_train)\n+    model = svm.SVR(kernel='linear')\n+    model.fit(X_train, y_train)\n     assert model.support_vectors_.data.size == 0\n     assert model.dual_coef_.data.size == 0\n \n\nFrom e1d04937e5d929d769dfc398fb5b7edc3042273b Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Fri, 4 Oct 2019 09:15:15 -0400\nSubject: [PATCH 08/10] comment about test\n\n---\n sklearn/svm/tests/test_svm.py | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex dff420dadf861..23720333102fc 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -691,6 +691,7 @@ def test_sparse_precomputed():\n \n \n def test_sparse_fit_support_vectors_empty():\n+    # Regression test for #14893\n     X_train = sparse.csr_matrix([[0, 1, 0, 0],\n                                  [0, 0, 0, 1],\n                                  [0, 0, 1, 0],\n\nFrom 76a40d86d2abcfe4ad51d179f19a70c8eb56190c Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Mon, 7 Oct 2019 15:21:04 -0400\nSubject: [PATCH 09/10] fixed based on suggestions\n\n---\n sklearn/svm/base.py           | 2 +-\n sklearn/svm/tests/test_svm.py | 4 ++--\n 2 files changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/sklearn/svm/base.py b/sklearn/svm/base.py\nindex a2f31ac7340fd..fb2b734c0f7f2 100644\n--- a/sklearn/svm/base.py\n+++ b/sklearn/svm/base.py\n@@ -287,7 +287,7 @@ def _sparse_fit(self, X, y, sample_weight, solver_type, kernel,\n         n_SV = self.support_vectors_.shape[0]\n \n         dual_coef_indices = np.tile(np.arange(n_SV), n_class)\n-        if dual_coef_indices.size == 0:\n+        if not n_SV:\n             self.dual_coef_ = sp.csr_matrix([])\n         else:\n             dual_coef_indptr = np.arange(0, dual_coef_indices.size + 1,\ndiff --git a/sklearn/svm/tests/test_svm.py b/sklearn/svm/tests/test_svm.py\nindex 23720333102fc..c82092dd93e1d 100644\n--- a/sklearn/svm/tests/test_svm.py\n+++ b/sklearn/svm/tests/test_svm.py\n@@ -699,8 +699,8 @@ def test_sparse_fit_support_vectors_empty():\n     y_train = np.array([0.04, 0.04, 0.10, 0.16])\n     model = svm.SVR(kernel='linear')\n     model.fit(X_train, y_train)\n-    assert model.support_vectors_.data.size == 0\n-    assert model.dual_coef_.data.size == 0\n+    assert not model.support_vectors_.data.size\n+    assert not model.dual_coef_.data.size\n \n \n def test_linearsvc_parameters():\n\nFrom 0e58862cac308583b0376116e72d032b765eda33 Mon Sep 17 00:00:00 2001\nFrom: Danna Naser <danna.naser@datarobot.com>\nDate: Mon, 7 Oct 2019 15:29:08 -0400\nSubject: [PATCH 10/10] change log rebase\n\n---\n doc/whats_new/v0.22.rst | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a/doc/whats_new/v0.22.rst b/doc/whats_new/v0.22.rst\nindex 0b60f1a05dcc2..5a6f7d2663e61 100644\n--- a/doc/whats_new/v0.22.rst\n+++ b/doc/whats_new/v0.22.rst\n@@ -572,6 +572,9 @@ Changelog\n   :class:`svm.OneClassSVM` was previously non-initialized, and had size 2. It\n   has now size 1 with the correct value. :pr:`15099` by `Nicolas Hug`_.\n \n+- |Fix| fixed a bug in :class:`BaseLibSVM._sparse_fit` where n_SV=0 raised a\n+  ZeroDivisionError. :pr:`14894` by :user:`Danna Naser <danna-naser>`.\n+\n :mod:`sklearn.tree`\n ...................\n \n", "gold_standard_pr_link": "https://github.com/scikit-learn/scikit-learn/pull/14894"}