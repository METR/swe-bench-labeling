{"instance_id": "matplotlib__matplotlib-13989", "score": "C", "diff": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 4b73d52293..2531fa4e0c 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6686,7 +6686,7 @@ optional.\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs = dict(density=density, range=bin_range)\n \n         # List to store all the top coordinates of the histograms\n         tops = []\n", "gold_standard_diff": "diff --git a/lib/matplotlib/axes/_axes.py b/lib/matplotlib/axes/_axes.py\nindex 4b73d5229384..bc5461ad9f22 100644\n--- a/lib/matplotlib/axes/_axes.py\n+++ b/lib/matplotlib/axes/_axes.py\n@@ -6686,7 +6686,7 @@ def hist(self, x, bins=None, range=None, density=None, weights=None,\n \n         density = bool(density) or bool(normed)\n         if density and not stacked:\n-            hist_kwargs = dict(density=density)\n+            hist_kwargs['density'] = density\n \n         # List to store all the top coordinates of the histograms\n         tops = []\ndiff --git a/lib/matplotlib/tests/test_axes.py b/lib/matplotlib/tests/test_axes.py\nindex cff4325f1936..b72c47839856 100644\n--- a/lib/matplotlib/tests/test_axes.py\n+++ b/lib/matplotlib/tests/test_axes.py\n@@ -6369,3 +6369,10 @@ def test_hist_nan_data():\n \n     assert np.allclose(bins, nanbins)\n     assert np.allclose(edges, nanedges)\n+\n+\n+def test_hist_range_and_density():\n+    _, bins, _ = plt.hist(np.random.rand(10), \"auto\",\n+                          range=(0, 1), density=True)\n+    assert bins[0] == 0\n+    assert bins[-1] == 1\n", "gold_standard_pr_link": "https://github.com/matplotlib/matplotlib/pull/13989"}