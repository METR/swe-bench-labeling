{"instance_id": "pydata__xarray-4094", "score": "I", "diff": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex b0df8749..b4f02150 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -1961,7 +1961,12 @@ class DataArray(AbstractArray, DataWithCoords):\n         # pull variables out of datarray\n         data_dict = {}\n         for k in variables:\n-            data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)\n+            selected = self.sel({variable_dim: k})\n+            if selected.ndim == 0:\n+                # Handle single-dimension variables\n+                data_dict[k] = selected.item()\n+            else:\n+                data_dict[k] = selected.squeeze(drop=True)\n \n         # unstacked dataset\n         return Dataset(data_dict)\ndiff --git a/xarray/tests/test_dataarray.py b/xarray/tests/test_dataarray.py\nindex d942667a..52acaf3d 100644\n--- a/xarray/tests/test_dataarray.py\n+++ b/xarray/tests/test_dataarray.py\n@@ -2133,6 +2133,19 @@ class TestDataArray:\n         data = DataArray([0, 1], dims=\"x\", coords={\"x\": [0, 1]})\n         with pytest.raises(ValueError, match=\"'x' is not a stacked coordinate\"):\n             data.to_unstacked_dataset(\"x\", 0)\n+    def test_to_unstacked_dataset_single_dim(self):\n+        arr = DataArray(np.arange(3), coords=[(\"x\", [0, 1, 2])])\n+        data = Dataset({\"a\": arr, \"b\": arr})\n+        stacked = data.to_stacked_array('y', sample_dims=['x'])\n+        unstacked = stacked.to_unstacked_dataset('y')\n+        assert_identical(data, unstacked)\n+\n+        # Test with a single-dimension variable\n+        arr_single = DataArray([42], coords=[(\"x\", [0])])\n+        data_mixed = Dataset({\"a\": arr, \"b\": arr_single})\n+        stacked_mixed = data_mixed.to_stacked_array('y', sample_dims=['x'])\n+        unstacked_mixed = stacked_mixed.to_unstacked_dataset('y')\n+        assert_identical(data_mixed, unstacked_mixed)\n \n     def test_transpose(self):\n         da = DataArray(\n", "gold_standard_diff": "diff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex c1440ec1108..126ea28d416 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -160,6 +160,8 @@ Bug fixes\n   By `Mathias Hauser <https://github.com/mathause>`_.\n - Fix html repr in untrusted notebooks: fallback to plain text repr. (:pull:`4053`)\n   By `Benoit Bovy <https://github.com/benbovy>`_.\n+- Fix :py:meth:`DataArray.to_unstacked_dataset` for single-dimension variables. (:issue:`4049`)\n+  By `Deepak Cherian <https://github.com/dcherian>`_\n - Fix :py:func:`open_rasterio` for ``WarpedVRT`` with specified ``src_crs``. (:pull:`4104`)\n   By `Dave Cole <https://github.com/dtpc>`_.\n \ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex b0df874953b..3be9bb79c60 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -1961,7 +1961,7 @@ def to_unstacked_dataset(self, dim, level=0):\n         # pull variables out of datarray\n         data_dict = {}\n         for k in variables:\n-            data_dict[k] = self.sel({variable_dim: k}).squeeze(drop=True)\n+            data_dict[k] = self.sel({variable_dim: k}, drop=True).squeeze(drop=True)\n \n         # unstacked dataset\n         return Dataset(data_dict)\ndiff --git a/xarray/tests/test_dataset.py b/xarray/tests/test_dataset.py\nindex 9c8d40724da..9d2623d99e8 100644\n--- a/xarray/tests/test_dataset.py\n+++ b/xarray/tests/test_dataset.py\n@@ -3031,6 +3031,14 @@ def test_to_stacked_array_dtype_dims(self):\n         assert y.dims == (\"x\", \"features\")\n \n     def test_to_stacked_array_to_unstacked_dataset(self):\n+\n+        # single dimension: regression test for GH4049\n+        arr = xr.DataArray(np.arange(3), coords=[(\"x\", [0, 1, 2])])\n+        data = xr.Dataset({\"a\": arr, \"b\": arr})\n+        stacked = data.to_stacked_array(\"y\", sample_dims=[\"x\"])\n+        unstacked = stacked.to_unstacked_dataset(\"y\")\n+        assert_identical(unstacked, data)\n+\n         # make a two dimensional dataset\n         a, b = create_test_stacked_array()\n         D = xr.Dataset({\"a\": a, \"b\": b})\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/4094"}