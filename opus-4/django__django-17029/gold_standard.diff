From 5820fc44854e421e4ebaaddb34d7109ff15e1148 Mon Sep 17 00:00:00 2001
From: sobolevn <mail@sobolevn.me>
Date: Thu, 29 Jun 2023 16:13:14 +0300
Subject: [PATCH] Fixed #34687 -- Made Apps.clear_cache() clear
 get_swappable_settings_name() cache.

---
 AUTHORS                 |  1 +
 django/apps/registry.py |  1 +
 tests/apps/tests.py     | 11 +++++++++++
 3 files changed, 13 insertions(+)

diff --git a/AUTHORS b/AUTHORS
index 2148c64322a4..40df3589c024 100644
--- a/AUTHORS
+++ b/AUTHORS
@@ -747,6 +747,7 @@ answer newbie questions, and generally made Django that much better:
     Nicolas Lara <nicolaslara@gmail.com>
     Nicolas Noé <nicolas@niconoe.eu>
     Nikita Marchant <nikita.marchant@gmail.com>
+    Nikita Sobolev <mail@sobolevn.me>
     Niran Babalola <niran@niran.org>
     Nis Jørgensen <nis@superlativ.dk>
     Nowell Strite <https://nowell.strite.org/>
diff --git a/django/apps/registry.py b/django/apps/registry.py
index 0683f3ad3ccb..92de6075fc90 100644
--- a/django/apps/registry.py
+++ b/django/apps/registry.py
@@ -373,6 +373,7 @@ def clear_cache(self):
 
         This is mostly used in tests.
         """
+        self.get_swappable_settings_name.cache_clear()
         # Call expire cache on each model. This will purge
         # the relation tree and the fields cache.
         self.get_models.cache_clear()
diff --git a/tests/apps/tests.py b/tests/apps/tests.py
index 9f989c5d9a85..ecfb70162ff2 100644
--- a/tests/apps/tests.py
+++ b/tests/apps/tests.py
@@ -197,6 +197,17 @@ def test_get_model(self):
         with self.assertRaises(ValueError):
             apps.get_model("admin_LogEntry")
 
+    @override_settings(INSTALLED_APPS=SOME_INSTALLED_APPS)
+    def test_clear_cache(self):
+        # Set cache.
+        self.assertIsNone(apps.get_swappable_settings_name("admin.LogEntry"))
+        apps.get_models()
+
+        apps.clear_cache()
+
+        self.assertEqual(apps.get_swappable_settings_name.cache_info().currsize, 0)
+        self.assertEqual(apps.get_models.cache_info().currsize, 0)
+
     @override_settings(INSTALLED_APPS=["apps.apps.RelabeledAppsConfig"])
     def test_relabeling(self):
         self.assertEqual(apps.get_app_config("relabeled").name, "apps")
