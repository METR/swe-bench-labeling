{"instance_id": "astropy__astropy-14598", "score": "I", "diff": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce..f627d6b2d1 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -769,6 +769,12 @@ class Card(_Verify):\n             value = m.group(\"bool\") == \"T\"\n         elif m.group(\"strg\") is not None:\n             value = re.sub(\"''\", \"'\", m.group(\"strg\"))\n+            # Handle the edge case for strings that are exactly 20 characters long\n+            if len(value) >= 18 and value.endswith(\"'\"):\n+                if value[-2] == \"'\":\n+                    value = value[:-1]  # Remove the trailing quote for double single-quote\n+                else:\n+                    value = value[:-1]  # Remove the trailing quote for single-quote\n         elif m.group(\"numr\") is not None:\n             #  Check for numbers with leading 0s.\n             numr = self._number_NFSC_RE.match(m.group(\"numr\"))\n@@ -1274,8 +1280,14 @@ def _format_value(value):\n             return \"''\"\n         else:\n             exp_val_str = value.replace(\"'\", \"''\")\n-            val_str = f\"'{exp_val_str:8}'\"\n-            return f\"{val_str:20}\"\n+            val_str = f\"'{exp_val_str}'\"\n+            if len(val_str) == 20:\n+                return val_str  # Return as-is if exactly 20 characters\n+            elif len(val_str) > 20:\n+                if val_str.endswith(\"'''\"):\n+                    return val_str[:-1]  # Remove the last quote for double single-quote\n+                return val_str\n+            return val_str.ljust(20)  # Left-justify and pad with spaces\n \n     # must be before int checking since bool is also int\n     elif isinstance(value, (bool, np.bool_)):\ndiff --git a/astropy/io/fits/tests/test_card_formatting.py b/astropy/io/fits/tests/test_card_formatting.py\nnew file mode 100644\nindex 0000000000..190522b215\n--- /dev/null\n+++ b/astropy/io/fits/tests/test_card_formatting.py\n@@ -0,0 +1,16 @@\n+import pytest\n+from astropy.io import fits\n+\n+def test_double_single_quote_consistency():\n+    for n in range(60, 70):\n+        card1 = fits.Card('CONFIG', \"x\" * n + \"''\")\n+        card2 = fits.Card.fromstring(str(card1))\n+        assert card1.value == card2.value, f\"Inconsistency at length {n}\"\n+\n+    for n in range(50, 70):\n+        card1 = fits.Card('CONFIG', \"x\" * n + \"''\" + \"x\"*10)\n+        card2 = fits.Card.fromstring(str(card1))\n+        assert card1.value == card2.value, f\"Inconsistency at length {n} with trailing characters\"\n+\n+if __name__ == '__main__':\n+    pytest.main([__file__])\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 243782fdfc..b2688da2a5 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,5 @@\n [build-system]\n-requires = [\"setuptools\",\n+requires = [\"setuptools==68.0.0\",\n             \"setuptools_scm>=6.2\",\n             \"wheel\",\n             \"cython==0.29.30\",\n", "gold_standard_diff": "diff --git a/astropy/io/fits/card.py b/astropy/io/fits/card.py\nindex 1b3285ddce92..89a5c0c0e86e 100644\n--- a/astropy/io/fits/card.py\n+++ b/astropy/io/fits/card.py\n@@ -66,7 +66,7 @@ class Card(_Verify):\n     # followed by an optional comment\n     _strg = r\"\\'(?P<strg>([ -~]+?|\\'\\'|) *?)\\'(?=$|/| )\"\n     _comm_field = r\"(?P<comm_field>(?P<sepr>/ *)(?P<comm>(.|\\n)*))\"\n-    _strg_comment_RE = re.compile(f\"({_strg})? *{_comm_field}?\")\n+    _strg_comment_RE = re.compile(f\"({_strg})? *{_comm_field}?$\")\n \n     # FSC commentary card string which must contain printable ASCII characters.\n     # Note: \\Z matches the end of the string without allowing newlines\n@@ -859,7 +859,7 @@ def _split(self):\n                     return kw, vc\n \n                 value = m.group(\"strg\") or \"\"\n-                value = value.rstrip().replace(\"''\", \"'\")\n+                value = value.rstrip()\n                 if value and value[-1] == \"&\":\n                     value = value[:-1]\n                 values.append(value)\ndiff --git a/astropy/io/fits/tests/test_header.py b/astropy/io/fits/tests/test_header.py\nindex c573100c91d2..44cfb955451b 100644\n--- a/astropy/io/fits/tests/test_header.py\n+++ b/astropy/io/fits/tests/test_header.py\n@@ -582,6 +582,22 @@ def test_long_string_value_via_fromstring(self, capsys):\n                 \"CONTINUE  '' / comments in line 1 comments with ''.                             \"\n             )\n \n+    def test_long_string_value_with_quotes(self):\n+        testval = \"x\" * 100 + \"''\"\n+        c = fits.Card(\"TEST\", testval)\n+        c = fits.Card.fromstring(c.image)\n+        assert c.value == testval\n+\n+        testval = \"x\" * 100 + \"''xxx\"\n+        c = fits.Card(\"TEST\", testval)\n+        c = fits.Card.fromstring(c.image)\n+        assert c.value == testval\n+\n+        testval = \"x\" * 100 + \"'' xxx\"\n+        c = fits.Card(\"TEST\", testval)\n+        c = fits.Card.fromstring(c.image)\n+        assert c.value == testval\n+\n     def test_continue_card_with_equals_in_value(self):\n         \"\"\"\n         Regression test for https://aeon.stsci.edu/ssb/trac/pyfits/ticket/117\ndiff --git a/docs/changes/io.fits/14598.bugfix.rst b/docs/changes/io.fits/14598.bugfix.rst\nnew file mode 100644\nindex 000000000000..853c33561960\n--- /dev/null\n+++ b/docs/changes/io.fits/14598.bugfix.rst\n@@ -0,0 +1 @@\n+Fix issues with double quotes in CONTINUE cards.\n", "gold_standard_pr_link": "https://github.com/astropy/astropy/pull/14598"}