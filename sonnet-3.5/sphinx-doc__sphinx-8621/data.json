{"instance_id": "sphinx-doc__sphinx-8621", "score": "I", "diff": "diff --git a/setup.py b/setup.py\nindex 8d40de1a8..03f325278 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -15,22 +15,22 @@ if sys.version_info < (3, 5):\n     sys.exit(1)\n \n install_requires = [\n-    'sphinxcontrib-applehelp',\n-    'sphinxcontrib-devhelp',\n+    'sphinxcontrib-applehelp<=1.0.7',\n+    'sphinxcontrib-devhelp<=1.0.5',\n     'sphinxcontrib-jsmath',\n-    'sphinxcontrib-htmlhelp',\n-    'sphinxcontrib-serializinghtml',\n-    'sphinxcontrib-qthelp',\n-    'Jinja2>=2.3',\n+    'sphinxcontrib-htmlhelp<=2.0.4',\n+    'sphinxcontrib-serializinghtml<=1.1.9',\n+    'sphinxcontrib-qthelp<=1.0.6',\n+    'Jinja2<3.0',\n     'Pygments>=2.0',\n     'docutils>=0.12',\n     'snowballstemmer>=1.1',\n     'babel>=1.3',\n-    'alabaster>=0.7,<0.8',\n+    'alabaster>=0.7,<0.7.12',\n     'imagesize',\n     'requests>=2.5.0',\n     'setuptools',\n-    'packaging',\n+    'packaging', 'markupsafe<=2.0.1',\n ]\n \n extras_require = {\ndiff --git a/sphinx/roles.py b/sphinx/roles.py\nindex 2d3042f8f..a7009a156 100644\n--- a/sphinx/roles.py\n+++ b/sphinx/roles.py\n@@ -35,7 +35,6 @@ if False:\n generic_docroles = {\n     'command': addnodes.literal_strong,\n     'dfn': nodes.emphasis,\n-    'kbd': nodes.literal,\n     'mailheader': addnodes.literal_emphasis,\n     'makevar': addnodes.literal_strong,\n     'manpage': addnodes.manpage,\n@@ -611,14 +610,45 @@ specific_docroles = {\n     'abbr': Abbreviation(),\n }  # type: Dict[str, RoleFunction]\n \n+def kbd(name, rawtext, text, lineno, inliner, options={}, content=[]):\n+    env = inliner.document.settings.env\n+    text = utils.unescape(text)\n+    \n+    # Split the text into individual keystrokes\n+    keystrokes = re.split(r'(?<![-+^])[-+^](?![-+^])', text)\n+    \n+    # Create a list to store the kbd nodes\n+    kbd_nodes = []\n+    \n+    for keystroke in keystrokes:\n+        # Remove leading/trailing whitespace\n+        keystroke = keystroke.strip()\n+        \n+        # Create a new literal node for each keystroke\n+        node = nodes.literal(rawtext, keystroke, classes=['kbd'])\n+        kbd_nodes.append(node)\n+        \n+        # Add separator if not the last keystroke\n+        if keystroke != keystrokes[-1]:\n+            separator = text[text.index(keystroke) + len(keystroke)]\n+            kbd_nodes.append(nodes.Text(separator))\n+    \n+    return kbd_nodes, []\n+\n+# Update the generic_docroles dictionary\n+generic_docroles['kbd'] = kbd\n+\n \n def setup(app: \"Sphinx\") -> Dict[str, Any]:\n     from docutils.parsers.rst import roles\n \n     for rolename, nodeclass in generic_docroles.items():\n-        generic = roles.GenericRole(rolename, nodeclass)\n-        role = roles.CustomRole(rolename, generic, {'classes': [rolename]})\n-        roles.register_local_role(rolename, role)\n+        if rolename == 'kbd':\n+            roles.register_local_role(rolename, kbd)\n+        else:\n+            generic = roles.GenericRole(rolename, nodeclass)\n+            role = roles.CustomRole(rolename, generic, {'classes': [rolename]})\n+            roles.register_local_role(rolename, role)\n \n     for rolename, func in specific_docroles.items():\n         roles.register_local_role(rolename, func)\ndiff --git a/tox.ini b/tox.ini\nindex 21a0faec3..be1a9127e 100644\n--- a/tox.ini\n+++ b/tox.ini\n@@ -28,7 +28,7 @@ setenv =\n     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version\n     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes\n commands=\n-    python -X dev -m pytest --durations 25 {posargs}\n+    python -X dev -m pytest -rA --durations 25 {posargs}\n \n [testenv:flake8]\n basepython = python3\n", "gold_standard_diff": "diff --git a/CHANGES b/CHANGES\nindex 3a9f527ad3d..c44051f3f89 100644\n--- a/CHANGES\n+++ b/CHANGES\n@@ -30,6 +30,8 @@ Bugs fixed\n * #8594: autodoc: empty __all__ attribute is ignored\n * #8306: autosummary: mocked modules are documented as empty page when using\n   :recursive: option\n+* #8618: html: kbd role produces incorrect HTML when compound-key separators (-,\n+  + or ^) are used as keystrokes\n * #8094: texinfo: image files on the different directory with document are not\n   copied\n \ndiff --git a/sphinx/builders/html/transforms.py b/sphinx/builders/html/transforms.py\nindex c91da57e993..311b1b7a032 100644\n--- a/sphinx/builders/html/transforms.py\n+++ b/sphinx/builders/html/transforms.py\n@@ -37,7 +37,7 @@ class KeyboardTransform(SphinxPostTransform):\n     \"\"\"\n     default_priority = 400\n     builders = ('html',)\n-    pattern = re.compile(r'(-|\\+|\\^|\\s+)')\n+    pattern = re.compile(r'(?<=.)(-|\\+|\\^|\\s+)(?=.)')\n \n     def run(self, **kwargs: Any) -> None:\n         matcher = NodeMatcher(nodes.literal, classes=[\"kbd\"])\ndiff --git a/tests/test_markup.py b/tests/test_markup.py\nindex a2bcb2dc1fe..53298aeda91 100644\n--- a/tests/test_markup.py\n+++ b/tests/test_markup.py\n@@ -251,6 +251,17 @@ def get(name):\n          '</kbd></p>'),\n         '\\\\sphinxkeyboard{\\\\sphinxupquote{Control+X}}',\n     ),\n+    (\n+        # kbd role\n+        'verify',\n+        ':kbd:`Alt+^`',\n+        ('<p><kbd class=\"kbd docutils literal notranslate\">'\n+         '<kbd class=\"kbd docutils literal notranslate\">Alt</kbd>'\n+         '+'\n+         '<kbd class=\"kbd docutils literal notranslate\">^</kbd>'\n+         '</kbd></p>'),\n+        '\\\\sphinxkeyboard{\\\\sphinxupquote{Alt+\\\\textasciicircum{}}}',\n+    ),\n     (\n         # kbd role\n         'verify',\n@@ -266,6 +277,13 @@ def get(name):\n          '</kbd></p>'),\n         '\\\\sphinxkeyboard{\\\\sphinxupquote{M\\\\sphinxhyphen{}x  M\\\\sphinxhyphen{}s}}',\n     ),\n+    (\n+        # kbd role\n+        'verify',\n+        ':kbd:`-`',\n+        '<p><kbd class=\"kbd docutils literal notranslate\">-</kbd></p>',\n+        '\\\\sphinxkeyboard{\\\\sphinxupquote{\\\\sphinxhyphen{}}}',\n+    ),\n     (\n         # non-interpolation of dashes in option role\n         'verify_re',\n", "gold_standard_pr_link": "https://github.com/sphinx-doc/sphinx/pull/8621"}