diff --git a/setup.py b/setup.py
index 4a1d5aeed..3faa58e79 100644
--- a/setup.py
+++ b/setup.py
@@ -15,22 +15,22 @@ if sys.version_info < (3, 6):
     sys.exit(1)
 
 install_requires = [
-    'sphinxcontrib-applehelp',
-    'sphinxcontrib-devhelp',
+    'sphinxcontrib-applehelp<=1.0.7',
+    'sphinxcontrib-devhelp<=1.0.5',
     'sphinxcontrib-jsmath',
-    'sphinxcontrib-htmlhelp>=2.0.0',
-    'sphinxcontrib-serializinghtml>=1.1.5',
-    'sphinxcontrib-qthelp',
-    'Jinja2>=2.3',
+    'sphinxcontrib-htmlhelp>=2.0.0,<=2.0.4',
+    'sphinxcontrib-serializinghtml>=1.1.5,<=1.1.9',
+    'sphinxcontrib-qthelp<=1.0.6',
+    'Jinja2<3.0',
     'Pygments>=2.0',
     'docutils>=0.14,<0.18',
     'snowballstemmer>=1.1',
     'babel>=1.3',
-    'alabaster>=0.7,<0.8',
+    'alabaster>=0.7,<0.7.12',
     'imagesize',
     'requests>=2.5.0',
     'setuptools',
-    'packaging',
+    'packaging', 'markupsafe<=2.0.1',
 ]
 
 extras_require = {
diff --git a/sphinx/ext/autodoc/__init__.py b/sphinx/ext/autodoc/__init__.py
index 1cecb1f79..763fdd818 100644
--- a/sphinx/ext/autodoc/__init__.py
+++ b/sphinx/ext/autodoc/__init__.py
@@ -1454,6 +1454,22 @@ class ClassDocumenter(DocstringSignatureMixin, ModuleLevelDocumenter):  # type:
 
         merge_members_option(self.options)
 
+    def _is_classmethod_property(self, obj: Any) -> bool:
+        return isinstance(obj, classmethod) and isinstance(obj.__func__, property)
+
+    def document_members(self, all_members: bool = False) -> None:
+        original_object = self.object
+        for name, member in self.get_object_members(all_members)[1]:
+            if self._is_classmethod_property(member):
+                # Temporarily replace the object with the property function
+                self.object = member.__func__
+                self.document_member(name, member, False)
+                self.object = original_object
+            else:
+                self.document_member(name, member, False)
+
+        self.object = original_object
+
     @classmethod
     def can_document_member(cls, member: Any, membername: str, isattr: bool, parent: Any
                             ) -> bool:
@@ -2504,12 +2520,28 @@ class AttributeDocumenter(GenericAliasMixin, NewTypeMixin, SlotsMixin,  # type:
               not inspect.isroutine(member) and
               not isinstance(member, type)):
             return True
+        elif isinstance(member, classmethod) and isinstance(member.__func__, property):
+            return True
         else:
             return False
 
     def document_members(self, all_members: bool = False) -> None:
         pass
 
+    def import_object(self, raiseerror: bool = False) -> bool:
+        ret = super().import_object(raiseerror)
+        if isinstance(self.object, classmethod) and isinstance(self.object.__func__, property):
+            self.object = self.object.__func__
+        return ret
+
+    def add_directive_header(self, sig: str) -> None:
+        super().add_directive_header(sig)
+        sourcename = self.get_sourcename()
+        if isinstance(self.object, property):
+            self.add_line('   :property:', sourcename)
+        if isinstance(self.parent, type) and isinstance(self.object, (classmethod, staticmethod)):
+            self.add_line('   :classmethod:', sourcename)
+
     def isinstanceattribute(self) -> bool:
         """Check the subject is an instance attribute."""
         warnings.warn('AttributeDocumenter.isinstanceattribute() is deprecated.',
diff --git a/tox.ini b/tox.ini
index a363e187f..3b8bc12d0 100644
--- a/tox.ini
+++ b/tox.ini
@@ -27,7 +27,7 @@ setenv =
     PYTHONWARNINGS = all,ignore::ImportWarning:importlib._bootstrap_external,ignore::DeprecationWarning:site,ignore::DeprecationWarning:distutils,ignore::DeprecationWarning:pip._vendor.packaging.version
     PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:} --color yes
 commands=
-    python -X dev -m pytest --durations 25 {posargs}
+    python -X dev -m pytest -rA --durations 25 {posargs}
 
 [testenv:flake8]
 basepython = python3
