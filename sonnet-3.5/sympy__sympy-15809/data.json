{"instance_id": "sympy__sympy-15809", "score": "I", "diff": "diff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 5f9fe73c5c..9ff15cde6f 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -659,12 +659,19 @@ class Max(MinMaxBase, Application):\n     If is not possible to determine such a relation, return a partially\n     evaluated result.\n \n+    If called without arguments, it returns negative infinity (-oo).\n+\n     Assumptions are used to make the decision too.\n \n     Also, only comparable arguments are permitted.\n \n     It is named ``Max`` and not ``max`` to avoid conflicts\n     with the built-in function ``max``.\n+    @classmethod\n+    def __new__(cls, *args, **options):\n+        if not args:\n+            return S.NegativeInfinity\n+        return super(Max, cls).__new__(cls, *args, **options)\n \n \n     Examples\n@@ -768,6 +775,8 @@ class Min(MinMaxBase, Application):\n     It is named ``Min`` and not ``min`` to avoid conflicts\n     with the built-in function ``min``.\n \n+    If called without arguments, it returns positive infinity (oo).\n+\n     Examples\n     ========\n \n@@ -776,6 +785,8 @@ class Min(MinMaxBase, Application):\n     >>> p = Symbol('p', positive=True)\n     >>> n = Symbol('n', negative=True)\n \n+    >>> Min()\n+    oo\n     >>> Min(x, -2)                  #doctest: +SKIP\n     Min(x, -2)\n     >>> Min(x, -2).subs(x, 3)\n@@ -795,6 +806,12 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n+    @classmethod\n+    def __new__(cls, *args, **options):\n+        if not args:\n+            return S.Infinity\n+        return super(Min, cls).__new__(cls, *args, **options)\n+\n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n         n = len(self.args)\n", "gold_standard_diff": "From 4dd3cbb9c55226392fe2664111d156f3a244526a Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Sun, 20 Jan 2019 11:31:34 +0530\nSubject: [PATCH 1/8] Fixed Min/Max when no args are given\n\n---\n sympy/functions/elementary/miscellaneous.py | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 5f9fe73c5c42..cb58929de5f8 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,10 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            raise ValueError(\"The Max/Min functions must have arguments.\")\n+            if cls == Min:\n+                return S.Infinity\n+            if cls == Max:\n+                return S.NegativeInfinity\n \n         args = (sympify(arg) for arg in args)\n \n\nFrom 33b6bcd406b919dd2c31b9702a4fcab0c09d882f Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Sun, 20 Jan 2019 15:23:38 +0530\nSubject: [PATCH 2/8] Added test\n\n---\n sympy/functions/elementary/miscellaneous.py       | 15 ++++++++++-----\n .../elementary/tests/test_miscellaneous.py        |  4 ++--\n 2 files changed, 12 insertions(+), 7 deletions(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex cb58929de5f8..3d595ed35ec1 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,11 +339,6 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n-        if not args:\n-            if cls == Min:\n-                return S.Infinity\n-            if cls == Max:\n-                return S.NegativeInfinity\n \n         args = (sympify(arg) for arg in args)\n \n@@ -733,6 +728,11 @@ class Max(MinMaxBase, Application):\n     zero = S.Infinity\n     identity = S.NegativeInfinity\n \n+    def __new__(cls, *args, **assumptions):\n+        if not args:\n+            return S.NegativeInfinity\n+        return super(Max, cls).__new__(cls, *args, **assumptions)\n+\n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n         n = len(self.args)\n@@ -798,6 +798,11 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n+    def __new__(cls, *args, **assumptions):\n+        if not args:\n+            return S.Infinity\n+        return super(Min, cls).__new__(cls, *args, **assumptions)\n+\n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n         n = len(self.args)\ndiff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py\nindex f78dc7669865..3eaec6c23986 100644\n--- a/sympy/functions/elementary/tests/test_miscellaneous.py\n+++ b/sympy/functions/elementary/tests/test_miscellaneous.py\n@@ -86,7 +86,7 @@ def test_Min():\n     assert Min(p, p_).func is Min\n \n     # lists\n-    raises(ValueError, lambda: Min())\n+    assert Min() == S.Infinity\n     assert Min(x, y) == Min(y, x)\n     assert Min(x, y, z) == Min(z, y, x)\n     assert Min(x, Min(y, z)) == Min(z, y, x)\n@@ -157,7 +157,7 @@ def test_Max():\n \n     # lists\n \n-    raises(ValueError, lambda: Max())\n+    assert Max() == S.NegativeInfinity\n     assert Max(x, y) == Max(y, x)\n     assert Max(x, y, z) == Max(z, y, x)\n     assert Max(x, Max(y, z)) == Max(z, y, x)\n\nFrom 63d0f9a10e96f377a50e3add636871bae9476660 Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Mon, 21 Jan 2019 17:56:01 +0530\nSubject: [PATCH 3/8] Added test\n\n---\n sympy/functions/elementary/tests/test_miscellaneous.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a/sympy/functions/elementary/tests/test_miscellaneous.py b/sympy/functions/elementary/tests/test_miscellaneous.py\nindex 3eaec6c23986..0383c178f666 100644\n--- a/sympy/functions/elementary/tests/test_miscellaneous.py\n+++ b/sympy/functions/elementary/tests/test_miscellaneous.py\n@@ -87,6 +87,7 @@ def test_Min():\n \n     # lists\n     assert Min() == S.Infinity\n+    assert Min(x) == x\n     assert Min(x, y) == Min(y, x)\n     assert Min(x, y, z) == Min(z, y, x)\n     assert Min(x, Min(y, z)) == Min(z, y, x)\n@@ -158,6 +159,7 @@ def test_Max():\n     # lists\n \n     assert Max() == S.NegativeInfinity\n+    assert Max(x) == x\n     assert Max(x, y) == Max(y, x)\n     assert Max(x, y, z) == Max(z, y, x)\n     assert Max(x, Max(y, z)) == Max(z, y, x)\n\nFrom e566a22043bd6598f0b7b7b3d4bc5b012d4cdb7b Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Tue, 22 Jan 2019 01:10:40 +0530\nSubject: [PATCH 4/8] Update\n\n---\n sympy/functions/elementary/miscellaneous.py | 14 ++++++--------\n 1 file changed, 6 insertions(+), 8 deletions(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 3d595ed35ec1..dfcb69615b39 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,6 +339,8 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n+        if not args:\n+            cls._eval_no_args()\n \n         args = (sympify(arg) for arg in args)\n \n@@ -728,10 +730,8 @@ class Max(MinMaxBase, Application):\n     zero = S.Infinity\n     identity = S.NegativeInfinity\n \n-    def __new__(cls, *args, **assumptions):\n-        if not args:\n-            return S.NegativeInfinity\n-        return super(Max, cls).__new__(cls, *args, **assumptions)\n+    def _eval_no_args():\n+        return S.NegativeInfinity\n \n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n@@ -798,10 +798,8 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n-    def __new__(cls, *args, **assumptions):\n-        if not args:\n-            return S.Infinity\n-        return super(Min, cls).__new__(cls, *args, **assumptions)\n+    def _eval_no_args():\n+        return S.Infinity\n \n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n\nFrom e5bbc4bf7501e8bfaac0dc480d8ea1ecf56e649a Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Tue, 22 Jan 2019 01:58:54 +0530\nSubject: [PATCH 5/8] Update\n\n---\n sympy/functions/elementary/miscellaneous.py | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex dfcb69615b39..4c1379fe50ca 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,7 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            cls._eval_no_args()\n+            cls._eval_no_args(cls)\n \n         args = (sympify(arg) for arg in args)\n \n@@ -730,7 +730,7 @@ class Max(MinMaxBase, Application):\n     zero = S.Infinity\n     identity = S.NegativeInfinity\n \n-    def _eval_no_args():\n+    def _eval_no_args(self):\n         return S.NegativeInfinity\n \n     def fdiff( self, argindex ):\n@@ -798,7 +798,7 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n-    def _eval_no_args():\n+    def _eval_no_args(self):\n         return S.Infinity\n \n     def fdiff( self, argindex ):\n\nFrom 29d3e6b5f3588d566525a14d8de53bb7934a38ce Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Tue, 22 Jan 2019 16:03:56 +0530\nSubject: [PATCH 6/8] Update\n\n---\n sympy/functions/elementary/miscellaneous.py | 8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 4c1379fe50ca..60f1e3a6630a 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,7 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            cls._eval_no_args(cls)\n+            cls._eval_no_args()\n \n         args = (sympify(arg) for arg in args)\n \n@@ -730,7 +730,8 @@ class Max(MinMaxBase, Application):\n     zero = S.Infinity\n     identity = S.NegativeInfinity\n \n-    def _eval_no_args(self):\n+    @classmethod\n+    def _eval_no_args(cls):\n         return S.NegativeInfinity\n \n     def fdiff( self, argindex ):\n@@ -798,7 +799,8 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n-    def _eval_no_args(self):\n+    @classmethod\n+    def _eval_no_args(cls):\n         return S.Infinity\n \n     def fdiff( self, argindex ):\n\nFrom 001e9ceae300917ceab05411a32adfb92f104668 Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Fri, 25 Jan 2019 13:50:01 +0530\nSubject: [PATCH 7/8] Added return\n\n---\n sympy/functions/elementary/miscellaneous.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 60f1e3a6630a..3ee681637f91 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -340,7 +340,7 @@ def real_root(arg, n=None, evaluate=None):\n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n         if not args:\n-            cls._eval_no_args()\n+            return cls._eval_no_args()\n \n         args = (sympify(arg) for arg in args)\n \n\nFrom b7ad445a5e7d70d3fb18e0fe32caceb60fd54239 Mon Sep 17 00:00:00 2001\nFrom: jmig5776 <jmig5776@gmail.com>\nDate: Fri, 25 Jan 2019 20:48:50 +0530\nSubject: [PATCH 8/8] Update\n\n---\n sympy/functions/elementary/miscellaneous.py | 10 ----------\n 1 file changed, 10 deletions(-)\n\ndiff --git a/sympy/functions/elementary/miscellaneous.py b/sympy/functions/elementary/miscellaneous.py\nindex 3ee681637f91..5e4e89bdf481 100644\n--- a/sympy/functions/elementary/miscellaneous.py\n+++ b/sympy/functions/elementary/miscellaneous.py\n@@ -339,8 +339,6 @@ def real_root(arg, n=None, evaluate=None):\n \n class MinMaxBase(Expr, LatticeOp):\n     def __new__(cls, *args, **assumptions):\n-        if not args:\n-            return cls._eval_no_args()\n \n         args = (sympify(arg) for arg in args)\n \n@@ -730,10 +728,6 @@ class Max(MinMaxBase, Application):\n     zero = S.Infinity\n     identity = S.NegativeInfinity\n \n-    @classmethod\n-    def _eval_no_args(cls):\n-        return S.NegativeInfinity\n-\n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n         n = len(self.args)\n@@ -799,10 +793,6 @@ class Min(MinMaxBase, Application):\n     zero = S.NegativeInfinity\n     identity = S.Infinity\n \n-    @classmethod\n-    def _eval_no_args(cls):\n-        return S.Infinity\n-\n     def fdiff( self, argindex ):\n         from sympy import Heaviside\n         n = len(self.args)\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/15809"}