{"instance_id": "pydata__xarray-3993", "score": "I", "diff": "diff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex 2fef3edb..7ea351e0 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -3481,17 +3481,17 @@ class DataArray(AbstractArray, DataWithCoords):\n         return self._from_temp_dataset(ds)\n \n     def integrate(\n-        self, dim: Union[Hashable, Sequence[Hashable]], datetime_unit: str = None\n+        self, coord: Union[Hashable, Sequence[Hashable]], datetime_unit: str = None\n     ) -> \"DataArray\":\n         \"\"\" integrate the array with the trapezoidal rule.\n \n         .. note::\n-            This feature is limited to simple cartesian geometry, i.e. dim\n+            This feature is limited to simple cartesian geometry, i.e. coord\n             must be one dimensional.\n \n         Parameters\n         ----------\n-        dim : hashable, or sequence of hashable\n+        coord : hashable, or sequence of hashable\n             Coordinate(s) used for the integration.\n         datetime_unit : {\"Y\", \"M\", \"W\", \"D\", \"h\", \"m\", \"s\", \"ms\", \"us\", \"ns\", \\\n                          \"ps\", \"fs\", \"as\"}, optional\n@@ -3523,12 +3523,12 @@ class DataArray(AbstractArray, DataWithCoords):\n           * x        (x) float64 0.0 0.1 1.1 1.2\n         Dimensions without coordinates: y\n         >>>\n-        >>> da.integrate(\"x\")\n+        >>> da.integrate(coord=\"x\")\n         <xarray.DataArray (y: 3)>\n         array([5.4, 6.6, 7.8])\n         Dimensions without coordinates: y\n         \"\"\"\n-        ds = self._to_temp_dataset().integrate(dim, datetime_unit)\n+        ds = self._to_temp_dataset().integrate(coord, datetime_unit)\n         return self._from_temp_dataset(ds)\n \n     def unify_chunks(self) -> \"DataArray\":\n", "gold_standard_diff": "From 504ef80ad6a0669062c298c0cad64063df5125f0 Mon Sep 17 00:00:00 2001\nFrom: Thomas Nicholas <tegn500@york.ac.uk>\nDate: Tue, 21 Apr 2020 21:27:04 +0100\nSubject: [PATCH 1/8] changed arg and docstrings\n\n---\n xarray/core/dataarray.py | 24 +++++++++++++++++++-----\n xarray/core/dataset.py   |  8 +++++---\n 2 files changed, 24 insertions(+), 8 deletions(-)\n\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex ffa05ca64f0..c9e93dec26e 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -3188,17 +3188,20 @@ def differentiate(\n         return self._from_temp_dataset(ds)\n \n     def integrate(\n-        self, dim: Union[Hashable, Sequence[Hashable]], datetime_unit: str = None\n+        self,\n+        coord: Union[Hashable, Sequence[Hashable]],\n+        dim: Union[Hashable, Sequence[Hashable]] = None,\n+        datetime_unit: str = None,\n     ) -> \"DataArray\":\n-        \"\"\" integrate the array with the trapezoidal rule.\n+        \"\"\" Integrate along the given coordinate using the trapezoidal rule.\n \n         .. note::\n-            This feature is limited to simple cartesian geometry, i.e. dim\n+            This feature is limited to simple cartesian geometry, i.e. coord\n             must be one dimensional.\n \n         Parameters\n         ----------\n-        dim: hashable, or a sequence of hashable\n+        coord: hashable, or a sequence of hashable\n             Coordinate(s) used for the integration.\n         datetime_unit: str, optional\n             Can be used to specify the unit if datetime coordinate is used.\n@@ -3211,6 +3214,7 @@ def integrate(\n \n         See also\n         --------\n+        Dataset.integrate\n         numpy.trapz: corresponding numpy function\n \n         Examples\n@@ -3236,7 +3240,17 @@ def integrate(\n         array([5.4, 6.6, 7.8])\n         Dimensions without coordinates: y\n         \"\"\"\n-        ds = self._to_temp_dataset().integrate(dim, datetime_unit)\n+\n+        if dim is not None:\n+            coord = dim\n+            msg = (\n+                \"The `dim` keyword argument to `DataArray.integrate` is \"\n+                \"being replaced with `coord`, for consistency with \"\n+                \"`Dataset.integrate`.\"\n+            )\n+            warnings.warn(msg, FutureWarning, stacklevel=2)\n+\n+        ds = self._to_temp_dataset().integrate(coord, datetime_unit)\n         return self._from_temp_dataset(ds)\n \n     def unify_chunks(self) -> \"DataArray\":\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex d811d54847f..c30cbaa6d63 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -5436,8 +5436,10 @@ def differentiate(self, coord, edge_order=1, datetime_unit=None):\n                 variables[k] = v\n         return self._replace(variables)\n \n-    def integrate(self, coord, datetime_unit=None):\n-        \"\"\" integrate the array with the trapezoidal rule.\n+    def integrate(\n+        self, coord: Union[Hashable, Sequence[Hashable]], datetime_unit: str = None\n+    ) -> \"Dataset\":\n+        \"\"\" Integrate along the given coordinate using the trapezoidal rule.\n \n         .. note::\n             This feature is limited to simple cartesian geometry, i.e. coord\n@@ -5445,7 +5447,7 @@ def integrate(self, coord, datetime_unit=None):\n \n         Parameters\n         ----------\n-        coord: str, or a sequence of str\n+        coord: hashable, or a sequence of hashable\n             Coordinate(s) used for the integration.\n         datetime_unit\n             Can be specify the unit if datetime coordinate is used. One of\n\nFrom 0fcdfe6733800e60d48c40e4c6a5a8d5b6fe8409 Mon Sep 17 00:00:00 2001\nFrom: Thomas Nicholas <tegn500@york.ac.uk>\nDate: Tue, 21 Apr 2020 21:27:26 +0100\nSubject: [PATCH 2/8] test warning is raised\n\n---\n xarray/tests/test_dataset.py | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a/xarray/tests/test_dataset.py b/xarray/tests/test_dataset.py\nindex a1cb7361e77..cc78feb40db 100644\n--- a/xarray/tests/test_dataset.py\n+++ b/xarray/tests/test_dataset.py\n@@ -6135,6 +6135,9 @@ def test_integrate(dask):\n     with pytest.raises(ValueError):\n         da.integrate(\"x2d\")\n \n+    with pytest.warns(FutureWarning):\n+        da.integrate(dim=\"x\")\n+\n \n @pytest.mark.parametrize(\"dask\", [True, False])\n @pytest.mark.parametrize(\"which_datetime\", [\"np\", \"cftime\"])\n\nFrom f0074bfb6b9903eee8484cade834d7379cebad5d Mon Sep 17 00:00:00 2001\nFrom: Thomas Nicholas <tegn500@york.ac.uk>\nDate: Tue, 21 Apr 2020 21:28:34 +0100\nSubject: [PATCH 3/8] updated kwarg in test\n\n---\n xarray/tests/test_units.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/xarray/tests/test_units.py b/xarray/tests/test_units.py\nindex 2826dc2479c..b2aa65c9a04 100644\n--- a/xarray/tests/test_units.py\n+++ b/xarray/tests/test_units.py\n@@ -3473,7 +3473,7 @@ def test_stacking_reordering(self, func, dtype):\n         (\n             method(\"diff\", dim=\"x\"),\n             method(\"differentiate\", coord=\"x\"),\n-            method(\"integrate\", dim=\"x\"),\n+            method(\"integrate\", coord=\"x\"),\n             pytest.param(\n                 method(\"quantile\", q=[0.25, 0.75]),\n                 marks=pytest.mark.xfail(reason=\"nanquantile not implemented\"),\n\nFrom ecb7cb1de73b43190fc844c7a31d780eedbe7f05 Mon Sep 17 00:00:00 2001\nFrom: Thomas Nicholas <tegn500@york.ac.uk>\nDate: Tue, 21 Apr 2020 21:28:46 +0100\nSubject: [PATCH 4/8] updated what's new\n\n---\n doc/whats-new.rst | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 46319730d21..c9a2ca2e41c 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -27,6 +27,12 @@ Breaking changes\n   (:pull:`3274`)\n   By `Elliott Sales de Andrade <https://github.com/QuLogic>`_\n \n+- New deprecations (behavior will be changed in xarray 0.17):\n+  - ``dim`` argument to :py:meth:`DataArray.integrate` is being deprecated in\n+    favour of a ``coord`` arg, for consistency with :py:meth:`Dataset.integrate`.\n+    For now using ``dim`` issues a ``FutureWarning``.\n+    By `Tom Nicholas <https://github.com/TomNicholas>`_.\n+\n New Features\n ~~~~~~~~~~~~\n - Added :py:meth:`DataArray.polyfit` and :py:func:`xarray.polyval` for fitting polynomials. (:issue:`3349`)\n\nFrom 75be02458c0a7af8338458f470e0070574c948bf Mon Sep 17 00:00:00 2001\nFrom: dcherian <deepak@cherian.net>\nDate: Mon, 18 Jan 2021 07:02:14 -0700\nSubject: [PATCH 5/8] Fix error checking\n\n---\n xarray/core/dataarray.py | 14 ++++++++++----\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex db01121b9da..1517e007a31 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -3452,9 +3452,10 @@ def differentiate(\n \n     def integrate(\n         self,\n-        coord: Union[Hashable, Sequence[Hashable]],\n-        dim: Union[Hashable, Sequence[Hashable]] = None,\n+        coord: Union[Hashable, Sequence[Hashable]] = None,\n         datetime_unit: str = None,\n+        *,\n+        dim: Union[Hashable, Sequence[Hashable]] = None,\n     ) -> \"DataArray\":\n         \"\"\"Integrate along the given coordinate using the trapezoidal rule.\n \n@@ -3505,13 +3506,18 @@ def integrate(\n         array([5.4, 6.6, 7.8])\n         Dimensions without coordinates: y\n         \"\"\"\n+        if dim is not None and coord is not None:\n+            raise ValueError(\n+                \"Cannot pass both 'dim' and 'coord'. Please pass only 'coord' instead.\"\n+            )\n \n-        if dim is not None:\n+        if dim is not None and coord is None:\n             coord = dim\n             msg = (\n                 \"The `dim` keyword argument to `DataArray.integrate` is \"\n                 \"being replaced with `coord`, for consistency with \"\n-                \"`Dataset.integrate`.\"\n+                \"`Dataset.integrate`. Please pass `coord` instead.\"\n+                \" `dim` will be removed in version 0.19.0.\"\n             )\n             warnings.warn(msg, FutureWarning, stacklevel=2)\n \n\nFrom 4614d76b4f64685433409ef3b8f81ef879315486 Mon Sep 17 00:00:00 2001\nFrom: dcherian <deepak@cherian.net>\nDate: Mon, 18 Jan 2021 07:04:23 -0700\nSubject: [PATCH 6/8] Fix whats-new\n\n---\n doc/whats-new.rst | 13 +++++++------\n 1 file changed, 7 insertions(+), 6 deletions(-)\n\ndiff --git a/doc/whats-new.rst b/doc/whats-new.rst\nindex 063e7cd9b64..6f47446a2eb 100644\n--- a/doc/whats-new.rst\n+++ b/doc/whats-new.rst\n@@ -42,6 +42,13 @@ Breaking changes\n - remove deprecated ``autoclose`` kwargs from :py:func:`open_dataset` (:pull: `4725`).\n   By `Aureliana Barghini <https://github.com/aurghs>`_\n \n+Deprecations\n+~~~~~~~~~~~~\n+\n+- ``dim`` argument to :py:meth:`DataArray.integrate` is being deprecated in\n+  favour of a ``coord`` argument, for consistency with :py:meth:`Dataset.integrate`.\n+  For now using ``dim`` issues a ``FutureWarning``. By `Tom Nicholas <https://github.com/TomNicholas>`_.\n+\n \n New Features\n ~~~~~~~~~~~~\n@@ -435,12 +442,6 @@ Breaking changes\n   default (:issue:`4176`)\n   By `Stephan Hoyer <https://github.com/shoyer>`_.\n \n-- New deprecations (behavior will be changed in xarray 0.17):\n-  - ``dim`` argument to :py:meth:`DataArray.integrate` is being deprecated in\n-    favour of a ``coord`` arg, for consistency with :py:meth:`Dataset.integrate`.\n-    For now using ``dim`` issues a ``FutureWarning``.\n-    By `Tom Nicholas <https://github.com/TomNicholas>`_.\n-\n New Features\n ~~~~~~~~~~~~\n - :py:meth:`DataArray.argmin` and :py:meth:`DataArray.argmax` now support\n\nFrom 5bbee25414283ec332388a5f1698950196cca51c Mon Sep 17 00:00:00 2001\nFrom: dcherian <deepak@cherian.net>\nDate: Fri, 29 Jan 2021 09:44:00 -0700\nSubject: [PATCH 7/8] fix docstring\n\n---\n xarray/core/dataarray.py | 6 ++----\n xarray/core/dataset.py   | 7 +++----\n 2 files changed, 5 insertions(+), 8 deletions(-)\n\ndiff --git a/xarray/core/dataarray.py b/xarray/core/dataarray.py\nindex a1eda81cf54..0dada4386b0 100644\n--- a/xarray/core/dataarray.py\n+++ b/xarray/core/dataarray.py\n@@ -3492,10 +3492,8 @@ def integrate(\n             Coordinate(s) used for the integration.\n         dim : hashable, or sequence of hashable\n             Coordinate(s) used for the integration.\n-        datetime_unit: str, optional\n-            Can be specify the unit if datetime coordinate is used. One of\n-            {'Y', 'M', 'W', 'D', 'h', 'm', 's', 'ms', 'us', 'ns', 'ps', 'fs',\n-            'as'}\n+        datetime_unit: {'Y', 'M', 'W', 'D', 'h', 'm', 's', 'ms', 'us', 'ns', \\\n+                        'ps', 'fs', 'as'}, optional\n \n         Returns\n         -------\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 1f12b355357..821d5dc89f2 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -5891,10 +5891,9 @@ def integrate(\n         ----------\n         coord: hashable, or a sequence of hashable\n             Coordinate(s) used for the integration.\n-        datetime_unit: str, optional\n-            Can be specify the unit if datetime coordinate is used. One of\n-            {'Y', 'M', 'W', 'D', 'h', 'm', 's', 'ms', 'us', 'ns', 'ps', 'fs',\n-            'as'}\n+        datetime_unit: {'Y', 'M', 'W', 'D', 'h', 'm', 's', 'ms', 'us', 'ns', \\\n+                        'ps', 'fs', 'as'}\n+            Specify the unit if datetime coordinate is used.\n \n         Returns\n         -------\n\nFrom 92ac2dcefd647e2c5d1338495df287b11bd4f0ad Mon Sep 17 00:00:00 2001\nFrom: dcherian <deepak@cherian.net>\nDate: Fri, 29 Jan 2021 09:50:51 -0700\nSubject: [PATCH 8/8] small fix\n\n---\n xarray/core/dataset.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/xarray/core/dataset.py b/xarray/core/dataset.py\nindex 706c9caec1d..8376b4875f9 100644\n--- a/xarray/core/dataset.py\n+++ b/xarray/core/dataset.py\n@@ -5977,7 +5977,7 @@ def integrate(\n         coord: hashable, or a sequence of hashable\n             Coordinate(s) used for the integration.\n         datetime_unit: {'Y', 'M', 'W', 'D', 'h', 'm', 's', 'ms', 'us', 'ns', \\\n-                        'ps', 'fs', 'as'}\n+                        'ps', 'fs', 'as'}, optional\n             Specify the unit if datetime coordinate is used.\n \n         Returns\n", "gold_standard_pr_link": "https://github.com/pydata/xarray/pull/3993"}