{"instance_id": "sympy__sympy-18763", "score": "I", "diff": "diff --git a/sympy/core/function.py b/sympy/core/function.py\nindex 47e3a56ae8..9ce1dbbcbd 100644\n--- a/sympy/core/function.py\n+++ b/sympy/core/function.py\n@@ -2141,6 +2141,13 @@ class Subs(Expr):\n     >>> s, ss\n     (Subs(x, x, 0), Subs(y, y, 0))\n     \"\"\"\n+\n+    def _latex(self, printer):\n+        expr, variables, point = self.args\n+        latex_expr = printer._print(expr)\n+        latex_vars = ', '.join(map(printer._print, variables))\n+        latex_point = ', '.join(map(printer._print, point))\n+        return r'\\left. \\left(%s\\right) \\right|_{\\substack{ %s=%s }}' % (latex_expr, latex_vars, latex_point)\n     def __new__(cls, expr, variables, point, **assumptions):\n         from sympy import Symbol\n \ndiff --git a/sympy/printing/tests/test_subs_latex.py b/sympy/printing/tests/test_subs_latex.py\nnew file mode 100644\nindex 0000000000..e90c005a77\n--- /dev/null\n+++ b/sympy/printing/tests/test_subs_latex.py\n@@ -0,0 +1,14 @@\n+import unittest\n+from sympy import symbols, Function, Subs, latex\n+\n+class TestSubsLatex(unittest.TestCase):\n+    def test_subs_latex(self):\n+        x, y = symbols('x y')\n+        f = Function('f')\n+        expr = Subs(3*f(-x+y), (x, y), (1, 2))\n+        latex_output = latex(expr)\n+        expected_output = r'\\left. \\left(3 f{\\left(- x + y \\right)}\\right) \\right|_{\\substack{ x, y=1, 2 }}'\n+        self.assertEqual(latex_output, expected_output, f\"Expected {expected_output}, but got {latex_output}\")\n+\n+if __name__ == '__main__':\n+    unittest.main()\n", "gold_standard_diff": "diff --git a/sympy/printing/latex.py b/sympy/printing/latex.py\nindex 8743723ea041..f6ed0d350ec5 100644\n--- a/sympy/printing/latex.py\n+++ b/sympy/printing/latex.py\n@@ -703,7 +703,7 @@ def _print_Subs(self, subs):\n         latex_new = (self._print(e) for e in new)\n         latex_subs = r'\\\\ '.join(\n             e[0] + '=' + e[1] for e in zip(latex_old, latex_new))\n-        return r'\\left. %s \\right|_{\\substack{ %s }}' % (latex_expr,\n+        return r'\\left. \\left(%s\\right) \\right|_{\\substack{ %s }}' % (latex_expr,\n                                                          latex_subs)\n \n     def _print_Integral(self, expr):\ndiff --git a/sympy/printing/tests/test_latex.py b/sympy/printing/tests/test_latex.py\nindex 3d387cf05250..59ddf0ac0e8f 100644\n--- a/sympy/printing/tests/test_latex.py\n+++ b/sympy/printing/tests/test_latex.py\n@@ -674,7 +674,8 @@ def test_latex_derivatives():\n \n def test_latex_subs():\n     assert latex(Subs(x*y, (\n-        x, y), (1, 2))) == r'\\left. x y \\right|_{\\substack{ x=1\\\\ y=2 }}'\n+        x, y), (1, 2))) == r'\\left. \\left(x y\\right) \\right|_{\\substack{ x=1\\\\ y=2 }}'\n+    assert latex(3*Subs(-x+y, (x,),(1,))) == r'3 \\left. \\left(- x + y\\right) \\right|_{\\substack{ x=1 }}'\n \n \n def test_latex_integrals():\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/18763"}