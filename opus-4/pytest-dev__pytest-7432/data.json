{"instance_id": "pytest-dev__pytest-7432", "score": "C", "diff": "diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 7bd975e5a..9b48bb445 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -270,8 +270,8 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n         else:\n             rep.longrepr = \"Unexpected success\"\n         rep.outcome = \"failed\"\n-    elif item.config.option.runxfail:\n-        pass  # don't interfere\n+    elif item.config.option.runxfail and not item._store.get(skipped_by_mark_key, False):\n+        pass  # don't interfere with xfail, but still process skip marks\n     elif call.excinfo and isinstance(call.excinfo.value, xfail.Exception):\n         assert call.excinfo.value.msg is not None\n         rep.wasxfail = \"reason: \" + call.excinfo.value.msg\ndiff --git a/test_comprehensive_fix.py b/test_comprehensive_fix.py\nnew file mode 100644\nindex 000000000..e8faca3dd\n--- /dev/null\n+++ b/test_comprehensive_fix.py\n@@ -0,0 +1,26 @@\n+import pytest\n+\n+# Test skip with runxfail\n+@pytest.mark.skip\n+def test_skip_with_runxfail():\n+    assert 0\n+\n+# Test skipif with runxfail\n+@pytest.mark.skipif(True, reason=\"always skip\")\n+def test_skipif_with_runxfail():\n+    assert 0\n+\n+# Test xfail with runxfail (should run normally)\n+@pytest.mark.xfail\n+def test_xfail_with_runxfail():\n+    assert 0  # This should fail when run with --runxfail\n+\n+# Test xfail with run=False\n+@pytest.mark.xfail(run=False, reason=\"don't run\")\n+def test_xfail_no_run():\n+    assert 0  # This should not run even with --runxfail\n+\n+# Test passing xfail with runxfail (should pass)\n+@pytest.mark.xfail\n+def test_xfail_passing_with_runxfail():\n+    assert 1  # This should pass when run with --runxfail\ndiff --git a/test_skip_location.py b/test_skip_location.py\nnew file mode 100644\nindex 000000000..0e5ca0671\n--- /dev/null\n+++ b/test_skip_location.py\n@@ -0,0 +1,5 @@\n+import pytest\n+\n+@pytest.mark.skip\n+def test_skip_location() -> None:\n+    assert 0\ndiff --git a/test_skipif_location.py b/test_skipif_location.py\nnew file mode 100644\nindex 000000000..dde0a548e\n--- /dev/null\n+++ b/test_skipif_location.py\n@@ -0,0 +1,5 @@\n+import pytest\n+\n+@pytest.mark.skipif(True, reason=\"always skip\")\n+def test_skipif_location() -> None:\n+    assert 0\ndiff --git a/test_xfail_with_runxfail.py b/test_xfail_with_runxfail.py\nnew file mode 100644\nindex 000000000..052ff581a\n--- /dev/null\n+++ b/test_xfail_with_runxfail.py\n@@ -0,0 +1,9 @@\n+import pytest\n+\n+@pytest.mark.xfail\n+def test_xfail_should_pass_with_runxfail() -> None:\n+    assert 0  # This will fail without --runxfail\n+\n+@pytest.mark.xfail\n+def test_xfail_should_fail_with_runxfail() -> None:\n+    assert 1  # This will pass without --runxfail\n", "gold_standard_diff": "diff --git a/changelog/7392.bugfix.rst b/changelog/7392.bugfix.rst\nnew file mode 100644\nindex 00000000000..48cd949faef\n--- /dev/null\n+++ b/changelog/7392.bugfix.rst\n@@ -0,0 +1 @@\n+Fix the reported location of tests skipped with ``@pytest.mark.skip`` when ``--runxfail`` is used.\ndiff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py\nindex 7bd975e5a09..591a65df922 100644\n--- a/src/_pytest/skipping.py\n+++ b/src/_pytest/skipping.py\n@@ -291,7 +291,8 @@ def pytest_runtest_makereport(item: Item, call: CallInfo[None]):\n             else:\n                 rep.outcome = \"passed\"\n                 rep.wasxfail = xfailed.reason\n-    elif (\n+\n+    if (\n         item._store.get(skipped_by_mark_key, True)\n         and rep.skipped\n         and type(rep.longrepr) is tuple\ndiff --git a/testing/test_skipping.py b/testing/test_skipping.py\nindex 0b1c0b49b03..8fceb37aa71 100644\n--- a/testing/test_skipping.py\n+++ b/testing/test_skipping.py\n@@ -235,6 +235,31 @@ def test_func2():\n             [\"*def test_func():*\", \"*assert 0*\", \"*1 failed*1 pass*\"]\n         )\n \n+    @pytest.mark.parametrize(\n+        \"test_input,expected\",\n+        [\n+            (\n+                [\"-rs\"],\n+                [\"SKIPPED [1] test_sample.py:2: unconditional skip\", \"*1 skipped*\"],\n+            ),\n+            (\n+                [\"-rs\", \"--runxfail\"],\n+                [\"SKIPPED [1] test_sample.py:2: unconditional skip\", \"*1 skipped*\"],\n+            ),\n+        ],\n+    )\n+    def test_xfail_run_with_skip_mark(self, testdir, test_input, expected):\n+        testdir.makepyfile(\n+            test_sample=\"\"\"\n+            import pytest\n+            @pytest.mark.skip\n+            def test_skip_location() -> None:\n+                assert 0\n+        \"\"\"\n+        )\n+        result = testdir.runpytest(*test_input)\n+        result.stdout.fnmatch_lines(expected)\n+\n     def test_xfail_evalfalse_but_fails(self, testdir):\n         item = testdir.getitem(\n             \"\"\"\n", "gold_standard_pr_link": "https://github.com/pytest-dev/pytest/pull/7432"}