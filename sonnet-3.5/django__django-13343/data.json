{"instance_id": "django__django-13343", "score": "I", "diff": "diff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex e10a5bb6d9..e4960cb4fd 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -279,7 +279,10 @@ class FileField(Field):\n             del kwargs[\"max_length\"]\n         kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n-            kwargs['storage'] = self.storage\n+            if callable(self.storage):\n+                kwargs['storage'] = self.storage.__class__\n+            else:\n+                kwargs['storage'] = self.storage\n         return name, path, args, kwargs\n \n     def get_internal_type(self):\n", "gold_standard_diff": "From 8711fec8a8c2ee83da9fc1d5b6efc8869ddd3323 Mon Sep 17 00:00:00 2001\nFrom: Brian Helba <brian.helba@kitware.com>\nDate: Mon, 24 Aug 2020 15:27:22 -0400\nSubject: [PATCH] Fixed #31941 -- Corrected FileField.deconstruct() with a\n callable storage.\n\n---\n AUTHORS                          |  1 +\n django/db/models/fields/files.py |  4 +++-\n docs/releases/3.1.2.txt          |  3 ++-\n tests/file_storage/tests.py      | 13 ++++++++++++-\n 4 files changed, 18 insertions(+), 3 deletions(-)\n\ndiff --git a/AUTHORS b/AUTHORS\nindex 5c50598ddc95..386837aee66a 100644\n--- a/AUTHORS\n+++ b/AUTHORS\n@@ -146,6 +146,7 @@ answer newbie questions, and generally made Django that much better:\n     Brian Beck <http://blog.brianbeck.com/>\n     Brian Fabian Crain <http://www.bfc.do/>\n     Brian Harring <ferringb@gmail.com>\n+    Brian Helba <brian.helba@kitware.com>\n     Brian Ray <http://brianray.chipy.org/>\n     Brian Rosner <brosner@gmail.com>\n     Bruce Kroeze <https://coderseye.com/>\ndiff --git a/django/db/models/fields/files.py b/django/db/models/fields/files.py\nindex e10a5bb6d96a..db2450a738bb 100644\n--- a/django/db/models/fields/files.py\n+++ b/django/db/models/fields/files.py\n@@ -229,6 +229,8 @@ def __init__(self, verbose_name=None, name=None, upload_to='', storage=None, **k\n \n         self.storage = storage or default_storage\n         if callable(self.storage):\n+            # Hold a reference to the callable for deconstruct().\n+            self._storage_callable = self.storage\n             self.storage = self.storage()\n             if not isinstance(self.storage, Storage):\n                 raise TypeError(\n@@ -279,7 +281,7 @@ def deconstruct(self):\n             del kwargs[\"max_length\"]\n         kwargs['upload_to'] = self.upload_to\n         if self.storage is not default_storage:\n-            kwargs['storage'] = self.storage\n+            kwargs['storage'] = getattr(self, '_storage_callable', self.storage)\n         return name, path, args, kwargs\n \n     def get_internal_type(self):\ndiff --git a/docs/releases/3.1.2.txt b/docs/releases/3.1.2.txt\nindex 64c64f7e7841..1243654bfb64 100644\n--- a/docs/releases/3.1.2.txt\n+++ b/docs/releases/3.1.2.txt\n@@ -9,4 +9,5 @@ Django 3.1.2 fixes several bugs in 3.1.1.\n Bugfixes\n ========\n \n-* ...\n+* Fixed a bug in Django 3.1 where ``FileField`` instances with a callable\n+  storage were not correctly deconstructed (:ticket:`31941`).\ndiff --git a/tests/file_storage/tests.py b/tests/file_storage/tests.py\nindex 4bac3ca11da8..6d17a7118b4e 100644\n--- a/tests/file_storage/tests.py\n+++ b/tests/file_storage/tests.py\n@@ -29,7 +29,9 @@\n from django.urls import NoReverseMatch, reverse_lazy\n from django.utils import timezone\n \n-from .models import Storage, temp_storage, temp_storage_location\n+from .models import (\n+    Storage, callable_storage, temp_storage, temp_storage_location,\n+)\n \n FILE_SUFFIX_REGEX = '[A-Za-z0-9]{7}'\n \n@@ -912,6 +914,15 @@ def test_callable_storage_file_field_in_model(self):\n         self.assertEqual(obj.storage_callable.storage.location, temp_storage_location)\n         self.assertIsInstance(obj.storage_callable_class.storage, BaseStorage)\n \n+    def test_deconstruction(self):\n+        \"\"\"\n+        Deconstructing gives the original callable, not the evaluated value.\n+        \"\"\"\n+        obj = Storage()\n+        *_, kwargs = obj._meta.get_field('storage_callable').deconstruct()\n+        storage = kwargs['storage']\n+        self.assertIs(storage, callable_storage)\n+\n \n # Tests for a race condition on file saving (#4948).\n # This is written in such a way that it'll always pass on platforms\n", "gold_standard_pr_link": "https://github.com/django/django/pull/13343"}