{"instance_id": "sympy__sympy-15345", "score": "C", "diff": "diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex ea7e3a2d94..806ac3e994 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -116,6 +116,12 @@ def _print_Derivative(self, expr):\n         dvars = [i[0] if i[1] == 1 else i for i in expr.variable_count]\n         return \"Hold[D[\" + ', '.join(self.doprint(a) for a in [dexpr] + dvars) + \"]]\"\n \n+    def _print_Max(self, expr):\n+        return \"Max[%s]\" % self.stringify(expr.args, \", \")\n+\n+    def _print_Min(self, expr):\n+        return \"Min[%s]\" % self.stringify(expr.args, \", \")\n+\n \n def mathematica_code(expr, **settings):\n     r\"\"\"Converts an expr to a string of the Wolfram Mathematica code\ndiff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py\nindex dd636d0623..97ea56e601 100644\n--- a/sympy/printing/tests/test_mathematica.py\n+++ b/sympy/printing/tests/test_mathematica.py\n@@ -90,3 +90,15 @@ def test_Sum():\n                      (y, -oo, oo))) == \\\n         \"Hold[Sum[Exp[-x^2 - y^2], {x, -Infinity, Infinity}, \" \\\n         \"{y, -Infinity, Infinity}]]\"\n+\n+\n+def test_Max_Min():\n+    from sympy import Max, Min\n+    assert mcode(Max(x, 2)) == \"Max[2, x]\"\n+    assert mcode(Max(x, y)) == \"Max[x, y]\"\n+    assert mcode(Max(x, y, z)) == \"Max[x, y, z]\"\n+    assert mcode(Min(x, 2)) == \"Min[2, x]\"\n+    assert mcode(Min(x, y)) == \"Min[x, y]\"\n+    assert mcode(Min(x, y, z)) == \"Min[x, y, z]\"\n+    # Test nested\n+    assert mcode(Max(x, Min(y, z))) == \"Max[x, Min[y, z]]\"\ndiff --git a/test_max_min_fix.py b/test_max_min_fix.py\nnew file mode 100644\nindex 0000000000..0b7dc74fec\n--- /dev/null\n+++ b/test_max_min_fix.py\n@@ -0,0 +1,23 @@\n+from sympy import symbols, Max, Min, mathematica_code, oo\n+\n+x, y, z = symbols('x y z')\n+\n+# Test cases for Max\n+print(\"Testing Max:\")\n+print(\"Max(x, 2):\", mathematica_code(Max(x, 2)))\n+print(\"Max(x, y):\", mathematica_code(Max(x, y)))\n+print(\"Max(x, y, z):\", mathematica_code(Max(x, y, z)))\n+print(\"Max(1, 2, 3):\", mathematica_code(Max(1, 2, 3)))\n+print(\"Max(x, oo):\", mathematica_code(Max(x, oo)))\n+\n+print(\"\\nTesting Min:\")\n+print(\"Min(x, 2):\", mathematica_code(Min(x, 2)))\n+print(\"Min(x, y):\", mathematica_code(Min(x, y)))\n+print(\"Min(x, y, z):\", mathematica_code(Min(x, y, z)))\n+print(\"Min(1, 2, 3):\", mathematica_code(Min(1, 2, 3)))\n+print(\"Min(x, -oo):\", mathematica_code(Min(x, -oo)))\n+\n+# Test nested Max/Min\n+print(\"\\nTesting nested Max/Min:\")\n+print(\"Max(x, Min(y, z)):\", mathematica_code(Max(x, Min(y, z))))\n+print(\"Min(Max(x, 2), y):\", mathematica_code(Min(Max(x, 2), y)))\n", "gold_standard_diff": "From 8779f99166eae65e124330b66fc4086700fd5334 Mon Sep 17 00:00:00 2001\nFrom: Alexander Dunlap <alexander.dunlap@gmail.com>\nDate: Thu, 4 Oct 2018 22:56:36 -0700\nSubject: [PATCH 1/2] Mathematica code printing of Max and Min\n\n---\n sympy/printing/mathematica.py            | 5 ++++-\n sympy/printing/tests/test_mathematica.py | 3 ++-\n 2 files changed, 6 insertions(+), 2 deletions(-)\n\ndiff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex ea7e3a2d9478..eaf90d7512f8 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -31,7 +31,8 @@\n     \"asech\": [(lambda x: True, \"ArcSech\")],\n     \"acsch\": [(lambda x: True, \"ArcCsch\")],\n     \"conjugate\": [(lambda x: True, \"Conjugate\")],\n-\n+    \"Max\": [(lambda *x: True, \"Max\")],\n+    \"Min\": [(lambda *x: True, \"Min\")],\n }\n \n \n@@ -101,6 +102,8 @@ def _print_Function(self, expr):\n                     return \"%s[%s]\" % (mfunc, self.stringify(expr.args, \", \"))\n         return expr.func.__name__ + \"[%s]\" % self.stringify(expr.args, \", \")\n \n+    _print_Expr = _print_Function\n+\n     def _print_Integral(self, expr):\n         if len(expr.variables) == 1 and not expr.limits[0][1:]:\n             args = [expr.args[0], expr.variables[0]]\ndiff --git a/sympy/printing/tests/test_mathematica.py b/sympy/printing/tests/test_mathematica.py\nindex dd636d0623aa..1a49cb1fccde 100644\n--- a/sympy/printing/tests/test_mathematica.py\n+++ b/sympy/printing/tests/test_mathematica.py\n@@ -2,7 +2,7 @@\n                         Rational, Integer, Tuple, Derivative)\n from sympy.integrals import Integral\n from sympy.concrete import Sum\n-from sympy.functions import exp, sin, cos, conjugate\n+from sympy.functions import exp, sin, cos, conjugate, Max, Min\n \n from sympy import mathematica_code as mcode\n \n@@ -28,6 +28,7 @@ def test_Function():\n     assert mcode(f(x, y, z)) == \"f[x, y, z]\"\n     assert mcode(sin(x) ** cos(x)) == \"Sin[x]^Cos[x]\"\n     assert mcode(conjugate(x)) == \"Conjugate[x]\"\n+    assert mcode(Max(x,y,z)*Min(y,z)) == \"Max[x, y, z]*Min[y, z]\"\n \n \n def test_Pow():\n\nFrom 311b75f48fcea27bb4f97f64523fd595dcd4706b Mon Sep 17 00:00:00 2001\nFrom: Alexander Dunlap <alexander.dunlap@gmail.com>\nDate: Fri, 5 Oct 2018 08:58:09 -0700\nSubject: [PATCH 2/2] just changing _print_MinMaxBase instead of _print_Expr\n\n---\n sympy/printing/mathematica.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py\nindex eaf90d7512f8..9505e008dc31 100644\n--- a/sympy/printing/mathematica.py\n+++ b/sympy/printing/mathematica.py\n@@ -102,7 +102,7 @@ def _print_Function(self, expr):\n                     return \"%s[%s]\" % (mfunc, self.stringify(expr.args, \", \"))\n         return expr.func.__name__ + \"[%s]\" % self.stringify(expr.args, \", \")\n \n-    _print_Expr = _print_Function\n+    _print_MinMaxBase = _print_Function\n \n     def _print_Integral(self, expr):\n         if len(expr.variables) == 1 and not expr.limits[0][1:]:\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/15345"}