{"instance_id": "astropy__astropy-14365", "score": "I", "diff": "diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py\nindex 83a4f004aa..b9251236ac 100644\n--- a/astropy/io/ascii/qdp.py\n+++ b/astropy/io/ascii/qdp.py\n@@ -34,6 +34,8 @@ def _line_type(line, delimiter=None):\n     --------\n     >>> _line_type(\"READ SERR 3\")\n     'command'\n+    >>> _line_type(\"read serr 3\")\n+    'command'\n     >>> _line_type(\" \\\\n    !some gibberish\")\n     'comment'\n     >>> _line_type(\"   \")\n@@ -60,7 +62,7 @@ def _line_type(line, delimiter=None):\n     ValueError: Unrecognized QDP line...\n     \"\"\"\n     _decimal_re = r\"[+-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][+-]?\\d+)?\"\n-    _command_re = r\"READ [TS]ERR(\\s+[0-9]+)+\"\n+    _command_re = r\"[Rr][Ee][Aa][Dd] [TtSs][Ee][Rr][Rr](\\s+[0-9]+)+\"\n \n     sep = delimiter\n     if delimiter is None:\ndiff --git a/astropy/io/ascii/tests/test_qdp.py b/astropy/io/ascii/tests/test_qdp.py\nindex ef24e6f6a3..c011577213 100644\n--- a/astropy/io/ascii/tests/test_qdp.py\n+++ b/astropy/io/ascii/tests/test_qdp.py\n@@ -245,3 +245,52 @@ def test_get_lines_from_qdp(tmp_path):\n         assert file_output[i] == line\n         assert list_output[i] == line\n         assert text_output[i] == line\n+\n+\n+def test_case_insensitive_commands():\n+    \"\"\"Test that QDP commands are case-insensitive.\"\"\"\n+    # Test with lowercase commands\n+    lines_lower = [\n+        'read serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    with pytest.warns(AstropyUserWarning):\n+        table = ascii.read(lines_lower, format='qdp')\n+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    assert np.allclose(table['col1'][0], 1.0)\n+    assert np.allclose(table['col1_err'][0], 0.5)\n+    \n+    # Test with mixed case\n+    lines_mixed = [\n+        'Read Serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    with pytest.warns(AstropyUserWarning):\n+        table2 = ascii.read(lines_mixed, format='qdp')\n+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # Test with uppercase (existing behavior)\n+    lines_upper = [\n+        'READ SERR 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    with pytest.warns(AstropyUserWarning):\n+        table3 = ascii.read(lines_upper, format='qdp')\n+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # All tables should have the same data\n+    for t in [table2, table3]:\n+        assert np.array_equal(table['col1'], t['col1'])\n+        assert np.array_equal(table['col1_err'], t['col1_err'])\n+        assert np.array_equal(table['col2'], t['col2'])\n+        assert np.array_equal(table['col2_err'], t['col2_err'])\n+    \n+    # Test mixed case TERR command\n+    lines_terr = [\n+        'read terr 1',\n+        '1 0.5 -0.5 2'\n+    ]\n+    with pytest.warns(AstropyUserWarning):\n+        table4 = ascii.read(lines_terr, format='qdp')\n+    assert 'col1_perr' in table4.colnames\n+    assert 'col1_nerr' in table4.colnames\ndiff --git a/pyproject.toml b/pyproject.toml\nindex 287a356a08..f2ee6c47cc 100644\n--- a/pyproject.toml\n+++ b/pyproject.toml\n@@ -1,5 +1,5 @@\n [build-system]\n-requires = [\"setuptools\",\n+requires = [\"setuptools==68.0.0\",\n             \"setuptools_scm>=6.2\",\n             \"wheel\",\n             \"cython==0.29.30\",\ndiff --git a/temp_test.txt b/temp_test.txt\nnew file mode 100644\nindex 0000000000..1520ed6251\n--- /dev/null\n+++ b/temp_test.txt\n@@ -0,0 +1,43 @@\n+def test_case_insensitive_commands():\n+    \"\"\"Test that QDP commands are case-insensitive.\"\"\"\n+    # Test with lowercase commands\n+    lines_lower = [\n+        'read serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table = ascii.read(lines_lower, format='qdp')\n+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    assert np.allclose(table['col1'][0], 1.0)\n+    assert np.allclose(table['col1_err'][0], 0.5)\n+    \n+    # Test with mixed case\n+    lines_mixed = [\n+        'Read Serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table2 = ascii.read(lines_mixed, format='qdp')\n+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # Test with uppercase (existing behavior)\n+    lines_upper = [\n+        'READ SERR 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table3 = ascii.read(lines_upper, format='qdp')\n+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # All tables should have the same data\n+    for t in [table2, table3]:\n+        assert np.array_equal(table['col1'], t['col1'])\n+        assert np.array_equal(table['col1_err'], t['col1_err'])\n+        assert np.array_equal(table['col2'], t['col2'])\n+        assert np.array_equal(table['col2_err'], t['col2_err'])\n+    \n+    # Test mixed case TERR command\n+    lines_terr = [\n+        'read terr 1',\n+        '1 0.5 -0.5 2'\n+    ]\n+    table4 = ascii.read(lines_terr, format='qdp')\n+    assert 'col1_perr' in table4.colnames\n+    assert 'col1_nerr' in table4.colnames\ndiff --git a/test_all_cases.py b/test_all_cases.py\nnew file mode 100644\nindex 0000000000..6677ed201d\n--- /dev/null\n+++ b/test_all_cases.py\n@@ -0,0 +1,65 @@\n+#!/usr/bin/env python\n+\"\"\"Test all case variations for QDP commands.\"\"\"\n+\n+import tempfile\n+import os\n+from astropy.table import Table\n+\n+# Test different case variations\n+test_cases = [\n+    (\"lowercase\", \"read serr 1 2\"),\n+    (\"uppercase\", \"READ SERR 1 2\"),\n+    (\"mixed case 1\", \"Read Serr 1 2\"),\n+    (\"mixed case 2\", \"ReAd SeRr 1 2\"),\n+    (\"terr lowercase\", \"read terr 1 2\"),\n+    (\"terr uppercase\", \"READ TERR 1 2\"),\n+    (\"terr mixed\", \"Read Terr 1 2\"),\n+    (\"both\", \"read serr 1\\nread terr 2\"),\n+    (\"both mixed\", \"READ SERR 1\\nread terr 2\"),\n+]\n+\n+data = \"1 0.5 1 0.5\"\n+\n+for name, command in test_cases:\n+    print(f\"\\nTesting {name}: '{command}'\")\n+    \n+    test_content = f\"{command}\\n{data}\\n\"\n+    \n+    with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:\n+        f.write(test_content)\n+        temp_file = f.name\n+    \n+    try:\n+        table = Table.read(temp_file, format='ascii.qdp')\n+        print(f\"  \u2713 Success! Columns: {table.colnames}\")\n+    except Exception as e:\n+        print(f\"  \u2717 Error: {type(e).__name__}: {e}\")\n+    \n+    os.unlink(temp_file)\n+\n+# Also test that invalid commands still fail\n+print(\"\\n\\nTesting invalid commands (should fail):\")\n+invalid_cases = [\n+    (\"invalid command\", \"read something 1 2\"),\n+    (\"no numbers\", \"read serr\"),\n+    (\"typo\", \"raed serr 1 2\"),\n+]\n+\n+for name, command in invalid_cases:\n+    print(f\"\\nTesting {name}: '{command}'\")\n+    \n+    test_content = f\"{command}\\n{data}\\n\"\n+    \n+    with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:\n+        f.write(test_content)\n+        temp_file = f.name\n+    \n+    try:\n+        table = Table.read(temp_file, format='ascii.qdp')\n+        print(f\"  \u2717 Unexpected success! This should have failed.\")\n+    except ValueError as e:\n+        print(f\"  \u2713 Expected error: {e}\")\n+    except Exception as e:\n+        print(f\"  ? Unexpected error type: {type(e).__name__}: {e}\")\n+    \n+    os.unlink(temp_file)\ndiff --git a/test_case_insensitive.py b/test_case_insensitive.py\nnew file mode 100644\nindex 0000000000..60537ce671\n--- /dev/null\n+++ b/test_case_insensitive.py\n@@ -0,0 +1,46 @@\n+#!/usr/bin/env python\n+\"\"\"Test case to add to the existing test suite.\"\"\"\n+\n+def test_case_insensitive_commands():\n+    \"\"\"Test that QDP commands are case-insensitive.\"\"\"\n+    from io import StringIO\n+    from astropy.io import ascii\n+    from astropy.table import Table\n+    import numpy as np\n+    \n+    # Test with lowercase commands\n+    lines_lower = [\n+        'read serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table = ascii.read(lines_lower, format='qdp')\n+    assert table.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    assert np.allclose(table['col1'][0], 1.0)\n+    assert np.allclose(table['col1_err'][0], 0.5)\n+    \n+    # Test with mixed case\n+    lines_mixed = [\n+        'Read Serr 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table2 = ascii.read(lines_mixed, format='qdp')\n+    assert table2.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # Test with uppercase (existing behavior)\n+    lines_upper = [\n+        'READ SERR 1 2',\n+        '1 0.5 1 0.5'\n+    ]\n+    table3 = ascii.read(lines_upper, format='qdp')\n+    assert table3.colnames == ['col1', 'col1_err', 'col2', 'col2_err']\n+    \n+    # All tables should have the same data\n+    for t in [table2, table3]:\n+        assert np.array_equal(table['col1'], t['col1'])\n+        assert np.array_equal(table['col1_err'], t['col1_err'])\n+        assert np.array_equal(table['col2'], t['col2'])\n+        assert np.array_equal(table['col2_err'], t['col2_err'])\n+\n+if __name__ == \"__main__\":\n+    test_case_insensitive_commands()\n+    print(\"All tests passed!\")\ndiff --git a/test_qdp_case.py b/test_qdp_case.py\nnew file mode 100644\nindex 0000000000..481251548c\n--- /dev/null\n+++ b/test_qdp_case.py\n@@ -0,0 +1,48 @@\n+#!/usr/bin/env python\n+\"\"\"Test case for QDP case sensitivity issue.\"\"\"\n+\n+import tempfile\n+from astropy.table import Table\n+\n+# Create a test QDP file with lowercase commands\n+test_content = \"\"\"read serr 1 2 \n+1 0.5 1 0.5\n+\"\"\"\n+\n+# Create temporary file\n+with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:\n+    f.write(test_content)\n+    temp_file = f.name\n+\n+print(f\"Created test file: {temp_file}\")\n+\n+# Try to read the file\n+try:\n+    table = Table.read(temp_file, format='ascii.qdp')\n+    print(\"Success! Table read successfully:\")\n+    print(table)\n+except Exception as e:\n+    print(f\"Error: {type(e).__name__}: {e}\")\n+\n+# Test with uppercase commands  \n+test_content_upper = \"\"\"READ SERR 1 2 \n+1 0.5 1 0.5\n+\"\"\"\n+\n+with tempfile.NamedTemporaryFile(mode='w', suffix='.qdp', delete=False) as f:\n+    f.write(test_content_upper)\n+    temp_file_upper = f.name\n+\n+print(f\"\\nCreated test file with uppercase: {temp_file_upper}\")\n+\n+try:\n+    table = Table.read(temp_file_upper, format='ascii.qdp')\n+    print(\"Success! Table with uppercase commands read successfully:\")\n+    print(table)\n+except Exception as e:\n+    print(f\"Error: {type(e).__name__}: {e}\")\n+\n+# Cleanup\n+import os\n+os.unlink(temp_file)\n+os.unlink(temp_file_upper)\n", "gold_standard_diff": "diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py\nindex 83a4f004aa37..5324dc81ccae 100644\n--- a/astropy/io/ascii/qdp.py\n+++ b/astropy/io/ascii/qdp.py\n@@ -68,7 +68,7 @@ def _line_type(line, delimiter=None):\n     _new_re = rf\"NO({sep}NO)+\"\n     _data_re = rf\"({_decimal_re}|NO|[-+]?nan)({sep}({_decimal_re}|NO|[-+]?nan))*)\"\n     _type_re = rf\"^\\s*((?P<command>{_command_re})|(?P<new>{_new_re})|(?P<data>{_data_re})?\\s*(\\!(?P<comment>.*))?\\s*$\"\n-    _line_type_re = re.compile(_type_re)\n+    _line_type_re = re.compile(_type_re, re.IGNORECASE)\n     line = line.strip()\n     if not line:\n         return \"comment\"\n@@ -306,7 +306,7 @@ def _get_tables_from_qdp_file(qdp_file, input_colnames=None, delimiter=None):\n \n             values = []\n             for v in line.split(delimiter):\n-                if v == \"NO\":\n+                if v.upper() == \"NO\":\n                     values.append(np.ma.masked)\n                 else:\n                     # Understand if number is int or float\ndiff --git a/astropy/io/ascii/tests/test_qdp.py b/astropy/io/ascii/tests/test_qdp.py\nindex ef24e6f6a375..487eda854f2c 100644\n--- a/astropy/io/ascii/tests/test_qdp.py\n+++ b/astropy/io/ascii/tests/test_qdp.py\n@@ -43,7 +43,18 @@ def test_get_tables_from_qdp_file(tmp_path):\n     assert np.isclose(table2[\"MJD_nerr\"][0], -2.37847222222222e-05)\n \n \n-def test_roundtrip(tmp_path):\n+def lowercase_header(value):\n+    \"\"\"Make every non-comment line lower case.\"\"\"\n+    lines = []\n+    for line in value.splitlines():\n+        if not line.startswith(\"!\"):\n+            line = line.lower()\n+        lines.append(line)\n+    return \"\\n\".join(lines)\n+\n+\n+@pytest.mark.parametrize(\"lowercase\", [False, True])\n+def test_roundtrip(tmp_path, lowercase):\n     example_qdp = \"\"\"\n     ! Swift/XRT hardness ratio of trigger: XXXX, name: BUBU X-2\n     ! Columns are as labelled\n@@ -70,6 +81,8 @@ def test_roundtrip(tmp_path):\n     53000.123456 2.37847222222222e-05    -2.37847222222222e-05   -0.292553       -0.374935\n     NO 1.14467592592593e-05    -1.14467592592593e-05   0.000000        NO\n     \"\"\"\n+    if lowercase:\n+        example_qdp = lowercase_header(example_qdp)\n \n     path = str(tmp_path / \"test.qdp\")\n     path2 = str(tmp_path / \"test2.qdp\")\ndiff --git a/docs/changes/io.ascii/14365.bugfix.rst b/docs/changes/io.ascii/14365.bugfix.rst\nnew file mode 100644\nindex 000000000000..dd0ac5a3666a\n--- /dev/null\n+++ b/docs/changes/io.ascii/14365.bugfix.rst\n@@ -0,0 +1,2 @@\n+Fix an issue in the ``io.ascii`` QDP format reader to allow lower-case commands in the\n+table data file. Previously it required all upper case in order to parse QDP files.\n", "gold_standard_pr_link": "https://github.com/astropy/astropy/pull/14365"}