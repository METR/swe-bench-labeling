{"instance_id": "django__django-11880", "score": "C", "diff": "diff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 03cd8af8d7..4cc3133ca0 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -200,6 +200,7 @@ class Field:\n         memo[id(self)] = result\n         result.widget = copy.deepcopy(self.widget, memo)\n         result.validators = self.validators[:]\n+        result.error_messages = copy.deepcopy(self.error_messages, memo)\n         return result\n \n \n", "gold_standard_diff": "From a28d1b38e55cf588cfaae97de6a575d5c9f90a96 Mon Sep 17 00:00:00 2001\nFrom: Hasan Ramezani <hasan.r67@gmail.com>\nDate: Tue, 8 Oct 2019 09:38:28 +0200\nSubject: [PATCH] Fixed #30839 -- Fixed Field.__deepcopy__() so forms don't\n share error messages.\n\n---\n django/forms/fields.py                |  1 +\n tests/forms_tests/tests/test_forms.py | 11 +++++++++++\n 2 files changed, 12 insertions(+)\n\ndiff --git a/django/forms/fields.py b/django/forms/fields.py\nindex 03cd8af8d7b2..36ec63492904 100644\n--- a/django/forms/fields.py\n+++ b/django/forms/fields.py\n@@ -199,6 +199,7 @@ def __deepcopy__(self, memo):\n         result = copy.copy(self)\n         memo[id(self)] = result\n         result.widget = copy.deepcopy(self.widget, memo)\n+        result.error_messages = self.error_messages.copy()\n         result.validators = self.validators[:]\n         return result\n \ndiff --git a/tests/forms_tests/tests/test_forms.py b/tests/forms_tests/tests/test_forms.py\nindex 45f5405fee87..269567dac88b 100644\n--- a/tests/forms_tests/tests/test_forms.py\n+++ b/tests/forms_tests/tests/test_forms.py\n@@ -3685,6 +3685,17 @@ def test_empty_data_files_multi_value_dict(self):\n         self.assertIsInstance(p.data, MultiValueDict)\n         self.assertIsInstance(p.files, MultiValueDict)\n \n+    def test_field_deep_copy_error_messages(self):\n+        class CustomCharField(CharField):\n+            def __init__(self, **kwargs):\n+                kwargs['error_messages'] = {'invalid': 'Form custom error message.'}\n+                super().__init__(**kwargs)\n+\n+        field = CustomCharField()\n+        field_copy = copy.deepcopy(field)\n+        self.assertIsInstance(field_copy, CustomCharField)\n+        self.assertIsNot(field_copy.error_messages, field.error_messages)\n+\n \n class CustomRenderer(DjangoTemplates):\n     pass\n", "gold_standard_pr_link": "https://github.com/django/django/pull/11880"}