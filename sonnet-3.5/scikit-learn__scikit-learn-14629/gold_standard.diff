From 93655c07d9fa832f493d87e0d0bac6633b7b538c Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Mon, 12 Aug 2019 10:06:14 +0100
Subject: [PATCH 1/9] fix classes_ in MultiOutpucClassifier

---
 sklearn/multioutput.py | 25 ++++++++++++++++++++++++-
 1 file changed, 24 insertions(+), 1 deletion(-)

diff --git a/sklearn/multioutput.py b/sklearn/multioutput.py
index 4411919c1821f..e6ba353c1464c 100644
--- a/sklearn/multioutput.py
+++ b/sklearn/multioutput.py
@@ -325,6 +325,28 @@ class MultiOutputClassifier(MultiOutputEstimator, ClassifierMixin):
     def __init__(self, estimator, n_jobs=None):
         super().__init__(estimator, n_jobs)
 
+    def fit(self, X, Y, sample_weight=None):
+        """Fit the model to data matrix X and targets Y.
+
+        Parameters
+        ----------
+        X : {array-like, sparse matrix}, shape (n_samples, n_features)
+            The input data.
+        Y : array-like, shape (n_samples, n_classes)
+            The target values.
+        sample_weight : array-like, shape = (n_samples) or None
+            Sample weights. If None, then samples are equally weighted.
+            Only supported if the underlying classifier supports sample
+            weights.
+
+        Returns
+        -------
+        self : object
+        """
+        super().fit(X, Y, sample_weight)
+        self.classes_ = [estimator.classes_ for estimator in self.estimators_]
+        return self
+
     def predict_proba(self, X):
         """Probability estimates.
         Returns prediction probabilities for each class of each output.
@@ -420,7 +442,7 @@ def fit(self, X, Y):
             if self.order_ == 'random':
                 self.order_ = random_state.permutation(Y.shape[1])
         elif sorted(self.order_) != list(range(Y.shape[1])):
-                raise ValueError("invalid order")
+            raise ValueError("invalid order")
 
         self.estimators_ = [clone(self.base_estimator)
                             for _ in range(Y.shape[1])]
@@ -718,6 +740,7 @@ class RegressorChain(_BaseChain, RegressorMixin, MetaEstimatorMixin):
         chaining.
 
     """
+
     def fit(self, X, Y):
         """Fit the model to data matrix X and targets Y.
 

From e915de225d2e4e2079c74ba4d6f8380439bb44b1 Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Mon, 12 Aug 2019 10:30:08 +0100
Subject: [PATCH 2/9] update whats_new

---
 doc/whats_new/v0.22.rst | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/doc/whats_new/v0.22.rst b/doc/whats_new/v0.22.rst
index 188e52a27d925..eb08576af3c47 100644
--- a/doc/whats_new/v0.22.rst
+++ b/doc/whats_new/v0.22.rst
@@ -235,6 +235,12 @@ Changelog
 - |Enhancement| :class:`model_selection.RandomizedSearchCV` now accepts lists
   of parameter distributions. :pr:`14549` by `Andreas MÃ¼ller`_.
 
+:mod:`sklearn.multioutput`
+..........................
+
+- |Fix| :class:`MultiOutputClassifier` now has attribute `classes_`.
+  :issue:`14615` by :user:`Agamemnon Krasoulis <agamemnonc>`.
+
 :mod:`sklearn.pipeline`
 .......................
 

From 63572cff4c0b8bf8117084d7a870523ead079cd8 Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Mon, 12 Aug 2019 14:45:15 +0100
Subject: [PATCH 3/9] extend tests to check classes_ attribute

---
 sklearn/tests/test_multioutput.py | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/sklearn/tests/test_multioutput.py b/sklearn/tests/test_multioutput.py
index e70048a7fa257..910773e7e0ac4 100644
--- a/sklearn/tests/test_multioutput.py
+++ b/sklearn/tests/test_multioutput.py
@@ -275,6 +275,10 @@ def test_multi_output_classification():
         assert_array_equal(list(forest_.predict_proba(X)),
                            list(predict_proba[i]))
 
+    # test classes_ attribute
+    [assert_array_equal(classes_true, classes_estim) for (classes_true,
+        classes_estim) in zip(classes, multi_target_forest.classes_)]
+
 
 def test_multiclass_multioutput_estimator():
     # test to check meta of meta estimators
@@ -294,6 +298,10 @@ def test_multiclass_multioutput_estimator():
         assert (list(multi_class_svc_.predict(X)) ==
                      list(predictions[:, i]))
 
+    # test classes_ attribute
+    [assert_array_equal(classes_true, classes_estim) for (classes_true,
+        classes_estim) in zip(classes, multi_target_svc.classes_)]
+
 
 def test_multiclass_multioutput_estimator_predict_proba():
     seed = 542

From 373d22e1dc3b95a63ff8420c6a74db6070b77f08 Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Mon, 12 Aug 2019 14:49:34 +0100
Subject: [PATCH 4/9] update whatsnew entry with PR number

---
 doc/whats_new/v0.22.rst | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/doc/whats_new/v0.22.rst b/doc/whats_new/v0.22.rst
index eb08576af3c47..c8f13bc942fb2 100644
--- a/doc/whats_new/v0.22.rst
+++ b/doc/whats_new/v0.22.rst
@@ -239,7 +239,7 @@ Changelog
 ..........................
 
 - |Fix| :class:`MultiOutputClassifier` now has attribute `classes_`.
-  :issue:`14615` by :user:`Agamemnon Krasoulis <agamemnonc>`.
+  :pr:`14629` by :user:`Agamemnon Krasoulis <agamemnonc>`.
 
 :mod:`sklearn.pipeline`
 .......................

From 55a11897c4e5548b4d42bac5e91874d13af1990b Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Mon, 12 Aug 2019 15:46:46 +0100
Subject: [PATCH 5/9] pep8 fix

---
 sklearn/tests/test_multioutput.py | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/sklearn/tests/test_multioutput.py b/sklearn/tests/test_multioutput.py
index 910773e7e0ac4..32e0f8800e9c5 100644
--- a/sklearn/tests/test_multioutput.py
+++ b/sklearn/tests/test_multioutput.py
@@ -276,8 +276,8 @@ def test_multi_output_classification():
                            list(predict_proba[i]))
 
     # test classes_ attribute
-    [assert_array_equal(classes_true, classes_estim) for (classes_true,
-        classes_estim) in zip(classes, multi_target_forest.classes_)]
+    [assert_array_equal(classes_true, classes_est) for
+     (classes_true, classes_est) in zip(classes, multi_target_forest.classes_)]
 
 
 def test_multiclass_multioutput_estimator():
@@ -299,8 +299,8 @@ def test_multiclass_multioutput_estimator():
                      list(predictions[:, i]))
 
     # test classes_ attribute
-    [assert_array_equal(classes_true, classes_estim) for (classes_true,
-        classes_estim) in zip(classes, multi_target_svc.classes_)]
+    [assert_array_equal(classes_true, classes_est) for
+     (classes_true, classes_est) in zip(classes, multi_target_svc.classes_)]
 
 
 def test_multiclass_multioutput_estimator_predict_proba():

From c6d23498bc943253a7cebc9f01ba964b6f8e6f74 Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Tue, 13 Aug 2019 10:15:23 +0100
Subject: [PATCH 6/9] update test to include other multioutput estimators

---
 sklearn/tests/test_multioutput.py | 26 ++++++++++++++++++--------
 1 file changed, 18 insertions(+), 8 deletions(-)

diff --git a/sklearn/tests/test_multioutput.py b/sklearn/tests/test_multioutput.py
index 32e0f8800e9c5..ed4d9b4682585 100644
--- a/sklearn/tests/test_multioutput.py
+++ b/sklearn/tests/test_multioutput.py
@@ -275,10 +275,6 @@ def test_multi_output_classification():
         assert_array_equal(list(forest_.predict_proba(X)),
                            list(predict_proba[i]))
 
-    # test classes_ attribute
-    [assert_array_equal(classes_true, classes_est) for
-     (classes_true, classes_est) in zip(classes, multi_target_forest.classes_)]
-
 
 def test_multiclass_multioutput_estimator():
     # test to check meta of meta estimators
@@ -298,10 +294,6 @@ def test_multiclass_multioutput_estimator():
         assert (list(multi_class_svc_.predict(X)) ==
                      list(predictions[:, i]))
 
-    # test classes_ attribute
-    [assert_array_equal(classes_true, classes_est) for
-     (classes_true, classes_est) in zip(classes, multi_target_svc.classes_)]
-
 
 def test_multiclass_multioutput_estimator_predict_proba():
     seed = 542
@@ -535,3 +527,21 @@ def test_base_chain_crossval_fit_and_predict():
             assert jaccard_score(Y, Y_pred_cv, average='samples') > .4
         else:
             assert mean_squared_error(Y, Y_pred_cv) < .25
+
+
+def test_multi_output_classes_():
+    # Tests classes_ attribute of multioutput classifiers
+    # RandomForestClassifier supports multioutput out-of-the-box
+    forest = RandomForestClassifier(n_estimators=10, random_state=1)
+    multi_output_forest = MultiOutputClassifier(forest)
+    cc_forest = ClassifierChain(forest)
+
+    forest.fit(X, y)
+    multi_output_forest.fit(X, y)
+    cc_forest.fit(X, y)
+
+    for estimator in [forest, multi_output_forest, cc_forest]:
+        assert isinstance(estimator.classes_, list)
+        assert len(estimator.classes_) == n_outputs
+        [assert_array_equal(classes_true, classes_est) for
+         (classes_true, classes_est) in zip(classes, estimator.classes_)]

From ec7845f7f703a1e595d05349560a89dc5f7b650f Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Tue, 13 Aug 2019 17:56:53 +0100
Subject: [PATCH 7/9] nitpicks

---
 sklearn/multioutput.py            |  7 +++----
 sklearn/tests/test_multioutput.py | 31 +++++++++++++++----------------
 2 files changed, 18 insertions(+), 20 deletions(-)

diff --git a/sklearn/multioutput.py b/sklearn/multioutput.py
index e6ba353c1464c..4504b8d6b754d 100644
--- a/sklearn/multioutput.py
+++ b/sklearn/multioutput.py
@@ -330,11 +330,11 @@ def fit(self, X, Y, sample_weight=None):
 
         Parameters
         ----------
-        X : {array-like, sparse matrix}, shape (n_samples, n_features)
+        X : {array-like, sparse matrix} of shape (n_samples, n_features)
             The input data.
-        Y : array-like, shape (n_samples, n_classes)
+        Y : array-like of shape (n_samples, n_classes)
             The target values.
-        sample_weight : array-like, shape = (n_samples) or None
+        sample_weight : array-like of shape (n_samples,) or None
             Sample weights. If None, then samples are equally weighted.
             Only supported if the underlying classifier supports sample
             weights.
@@ -740,7 +740,6 @@ class RegressorChain(_BaseChain, RegressorMixin, MetaEstimatorMixin):
         chaining.
 
     """
-
     def fit(self, X, Y):
         """Fit the model to data matrix X and targets Y.
 
diff --git a/sklearn/tests/test_multioutput.py b/sklearn/tests/test_multioutput.py
index ed4d9b4682585..8275161434592 100644
--- a/sklearn/tests/test_multioutput.py
+++ b/sklearn/tests/test_multioutput.py
@@ -529,19 +529,18 @@ def test_base_chain_crossval_fit_and_predict():
             assert mean_squared_error(Y, Y_pred_cv) < .25
 
 
-def test_multi_output_classes_():
-    # Tests classes_ attribute of multioutput classifiers
-    # RandomForestClassifier supports multioutput out-of-the-box
-    forest = RandomForestClassifier(n_estimators=10, random_state=1)
-    multi_output_forest = MultiOutputClassifier(forest)
-    cc_forest = ClassifierChain(forest)
-
-    forest.fit(X, y)
-    multi_output_forest.fit(X, y)
-    cc_forest.fit(X, y)
-
-    for estimator in [forest, multi_output_forest, cc_forest]:
-        assert isinstance(estimator.classes_, list)
-        assert len(estimator.classes_) == n_outputs
-        [assert_array_equal(classes_true, classes_est) for
-         (classes_true, classes_est) in zip(classes, estimator.classes_)]
+# Tests classes_ attribute of multioutput classifiers
+# RandomForestClassifier supports multioutput out-of-the-box
+@pytest.mark.parametrize(
+    'estimator',
+    [RandomForestClassifier(n_estimators=2),
+     MultiOutputClassifier(RandomForestClassifier(n_estimators=2)),
+     ClassifierChain(RandomForestClassifier(n_estimators=2))]
+)
+def test_multi_output_classes_(estimator):
+    estimator.fit(X, y)
+    assert isinstance(estimator.classes_, list)
+    assert len(estimator.classes_) == n_outputs
+    for estimator_classes, expected_classes in zip(classes,
+                                                   estimator.classes_):
+        assert_array_equal(estimator_classes, expected_classes)

From b30cb38b413d11e52f2fb35b4aa9a80cd60af5ec Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Wed, 14 Aug 2019 07:25:50 +0100
Subject: [PATCH 8/9] whats_new nitpick

---
 doc/whats_new/v0.22.rst | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/doc/whats_new/v0.22.rst b/doc/whats_new/v0.22.rst
index 5a91ff0d567c6..8476b6bd51228 100644
--- a/doc/whats_new/v0.22.rst
+++ b/doc/whats_new/v0.22.rst
@@ -254,8 +254,8 @@ Changelog
 :mod:`sklearn.multioutput`
 ..........................
 
-- |Fix| :class:`MultiOutputClassifier` now has attribute `classes_`.
-  :pr:`14629` by :user:`Agamemnon Krasoulis <agamemnonc>`.
+- |Fix| :class:`multioutput.MultiOutputClassifier` now has attribute
+  ``classes_``. :pr:`14629` by :user:`Agamemnon Krasoulis <agamemnonc>`.
 
 :mod:`sklearn.pipeline`
 .......................

From 3167ba180a400a147745eb7673f30d67271d7a23 Mon Sep 17 00:00:00 2001
From: agamemnonc <agamemnon.krasoulis@gmail.com>
Date: Wed, 14 Aug 2019 07:26:15 +0100
Subject: [PATCH 9/9] test nitpick

---
 sklearn/tests/test_multioutput.py | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/sklearn/tests/test_multioutput.py b/sklearn/tests/test_multioutput.py
index 8275161434592..e1d2433197b1c 100644
--- a/sklearn/tests/test_multioutput.py
+++ b/sklearn/tests/test_multioutput.py
@@ -529,8 +529,6 @@ def test_base_chain_crossval_fit_and_predict():
             assert mean_squared_error(Y, Y_pred_cv) < .25
 
 
-# Tests classes_ attribute of multioutput classifiers
-# RandomForestClassifier supports multioutput out-of-the-box
 @pytest.mark.parametrize(
     'estimator',
     [RandomForestClassifier(n_estimators=2),
@@ -538,6 +536,8 @@ def test_base_chain_crossval_fit_and_predict():
      ClassifierChain(RandomForestClassifier(n_estimators=2))]
 )
 def test_multi_output_classes_(estimator):
+    # Tests classes_ attribute of multioutput classifiers
+    # RandomForestClassifier supports multioutput out-of-the-box
     estimator.fit(X, y)
     assert isinstance(estimator.classes_, list)
     assert len(estimator.classes_) == n_outputs
