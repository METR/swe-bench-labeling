diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py
index fdca700c9d..8a290dd348 100644
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -237,6 +237,28 @@ class HasKey(HasKeyLookup):
     postgres_operator = "?"
     prepare_rhs = False
 
+    def get_prep_lookup(self):
+        # Convert the key to a string representation
+        return str(self.rhs)
+
+    def as_sqlite(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_key = self.get_prep_lookup()
+        return f"JSON_TYPE({lhs}, '$.' || {rhs}) IS NOT NULL", lhs_params + rhs_params
+
+    def as_mysql(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_key = self.get_prep_lookup()
+        return f"JSON_CONTAINS_PATH({lhs}, 'one', CONCAT('$.', {rhs}))", lhs_params + rhs_params
+
+    def as_oracle(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_key = self.get_prep_lookup()
+        return f"JSON_EXISTS({lhs}, '$.\"' || {rhs} || '\"')", lhs_params + rhs_params
+
 
 class HasKeys(HasKeyLookup):
     lookup_name = "has_keys"
@@ -246,6 +268,27 @@ class HasKeys(HasKeyLookup):
     def get_prep_lookup(self):
         return [str(item) for item in self.rhs]
 
+    def as_sqlite(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_keys = self.get_prep_lookup()
+        conditions = [f"JSON_TYPE({lhs}, '$.' || {key}) IS NOT NULL" for key in rhs_keys]
+        return f"({self.logical_operator.join(conditions)})", lhs_params * len(rhs_keys) + rhs_params
+
+    def as_mysql(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_keys = self.get_prep_lookup()
+        conditions = [f"JSON_CONTAINS_PATH({lhs}, 'one', CONCAT('$.', {key}))" for key in rhs_keys]
+        return f"({self.logical_operator.join(conditions)})", lhs_params * len(rhs_keys) + rhs_params
+
+    def as_oracle(self, compiler, connection):
+        lhs, lhs_params = self.process_lhs(compiler, connection)
+        rhs, rhs_params = self.process_rhs(compiler, connection)
+        rhs_keys = self.get_prep_lookup()
+        conditions = [f"JSON_EXISTS({lhs}, '$.\"' || {key} || '\"')" for key in rhs_keys]
+        return f"({self.logical_operator.join(conditions)})", lhs_params * len(rhs_keys) + rhs_params
+
 
 class HasAnyKeys(HasKeys):
     lookup_name = "has_any_keys"
