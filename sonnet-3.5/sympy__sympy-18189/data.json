{"instance_id": "sympy__sympy-18189", "score": "C", "diff": "diff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py\nindex 6092e35dab..0489b16e9f 100644\n--- a/sympy/solvers/diophantine.py\n+++ b/sympy/solvers/diophantine.py\n@@ -181,8 +181,17 @@ def diophantine(eq, param=symbols(\"t\", integer=True), syms=None,\n             syms = [i for i in syms if i in var]\n             if syms != var:\n                 dict_sym_index = dict(zip(syms, range(len(syms))))\n-                return {tuple([t[dict_sym_index[i]] for i in var])\n-                            for t in diophantine(eq, param)}\n+                base_solutions = {tuple([t[dict_sym_index[i]] for i in var])\n+                                  for t in diophantine(eq, param)}\n+                if permute:\n+                    from sympy.utilities.iterables import permute_signs, signed_permutations\n+                    permuted_solutions = set()\n+                    for sol in base_solutions:\n+                        permuted_solutions.update(permute_signs(sol))\n+                        permuted_solutions.update(signed_permutations(sol))\n+                    return permuted_solutions\n+                else:\n+                    return base_solutions\n         n, d = eq.as_numer_denom()\n         if n.is_number:\n             return set()\n", "gold_standard_diff": "From c6dda9c04b73a8c297f6d574d95660d9cb664554 Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Tue, 31 Dec 2019 21:11:00 +0530\nSubject: [PATCH 1/4] added permute = true\n\n---\n sympy/solvers/diophantine.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py\nindex e8c354efd051..be8ea6c5e31a 100644\n--- a/sympy/solvers/diophantine.py\n+++ b/sympy/solvers/diophantine.py\n@@ -182,7 +182,7 @@ def diophantine(eq, param=symbols(\"t\", integer=True), syms=None,\n             if syms != var:\n                 dict_sym_index = dict(zip(syms, range(len(syms))))\n                 return {tuple([t[dict_sym_index[i]] for i in var])\n-                            for t in diophantine(eq, param)}\n+                            for t in diophantine(eq, param, permute = permute)}\n         n, d = eq.as_numer_denom()\n         if n.is_number:\n             return set()\n\nFrom b8fe22fc52d4c3aadcdad2fd604c960831ffa24c Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Tue, 31 Dec 2019 23:26:36 +0530\nSubject: [PATCH 2/4] added test cases\n\n---\n sympy/solvers/tests/test_diophantine.py | 8 ++++++++\n 1 file changed, 8 insertions(+)\n\ndiff --git a/sympy/solvers/tests/test_diophantine.py b/sympy/solvers/tests/test_diophantine.py\nindex bf78f8e46cdf..8c79b162894a 100644\n--- a/sympy/solvers/tests/test_diophantine.py\n+++ b/sympy/solvers/tests/test_diophantine.py\n@@ -540,6 +540,14 @@ def test_diophantine():\n     assert diophantine(x**2 + y**2 +3*x- 5, permute=True) == \\\n         set([(-1, 1), (-4, -1), (1, -1), (1, 1), (-4, 1), (-1, -1), (4, 1), (4, -1)])\n \n+    #test issue 18186\n+    assert diophantine(y**4 + x**4 - 2**4 - 3**4, syms=(x, y), permute=True) == \\\n+        set([(-3, -2), (-3, 2), (-2, -3), (-2, 3), (2, -3), (2, 3), (3, -2), (3, 2)])\n+    assert diophantine(y**4 + x**4 - 2**4 - 3**4, syms=(y, x), permute=True) == \\\n+        set([(-3, -2), (-3, 2), (-2, -3), (-2, 3), (2, -3), (2, 3), (3, -2), (3, 2)])\n+\n+\n+\n \n def test_general_pythagorean():\n     from sympy.abc import a, b, c, d, e\n\nFrom bfdc2d49528834c59e08e48e7f90447412e7bd3a Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Tue, 31 Dec 2019 23:37:28 +0530\nSubject: [PATCH 3/4] removed white spaces\n\n---\n sympy/solvers/diophantine.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/solvers/diophantine.py b/sympy/solvers/diophantine.py\nindex be8ea6c5e31a..10823d3db136 100644\n--- a/sympy/solvers/diophantine.py\n+++ b/sympy/solvers/diophantine.py\n@@ -182,7 +182,7 @@ def diophantine(eq, param=symbols(\"t\", integer=True), syms=None,\n             if syms != var:\n                 dict_sym_index = dict(zip(syms, range(len(syms))))\n                 return {tuple([t[dict_sym_index[i]] for i in var])\n-                            for t in diophantine(eq, param, permute = permute)}\n+                            for t in diophantine(eq, param, permute=permute)}\n         n, d = eq.as_numer_denom()\n         if n.is_number:\n             return set()\n\nFrom 8715d0b137f8d300dfbb8ebd179fa5278e9443f6 Mon Sep 17 00:00:00 2001\nFrom: Abhinav Anand <abhinav.anand2807@gmail.com>\nDate: Tue, 31 Dec 2019 23:40:14 +0530\nSubject: [PATCH 4/4] minor changes\n\n---\n sympy/solvers/tests/test_diophantine.py | 2 --\n 1 file changed, 2 deletions(-)\n\ndiff --git a/sympy/solvers/tests/test_diophantine.py b/sympy/solvers/tests/test_diophantine.py\nindex 8c79b162894a..cf050d1761ed 100644\n--- a/sympy/solvers/tests/test_diophantine.py\n+++ b/sympy/solvers/tests/test_diophantine.py\n@@ -547,8 +547,6 @@ def test_diophantine():\n         set([(-3, -2), (-3, 2), (-2, -3), (-2, 3), (2, -3), (2, 3), (3, -2), (3, 2)])\n \n \n-\n-\n def test_general_pythagorean():\n     from sympy.abc import a, b, c, d, e\n \n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/18189"}