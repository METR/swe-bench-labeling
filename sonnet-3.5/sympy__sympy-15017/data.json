{"instance_id": "sympy__sympy-15017", "score": "I", "diff": "diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py\nindex 099b291167..eba295179a 100644\n--- a/sympy/tensor/array/ndim_array.py\n+++ b/sympy/tensor/array/ndim_array.py\n@@ -164,6 +164,8 @@ def _handle_ndarray_creation_inputs(cls, iterable=None, shape=None, **kwargs):\n     def __len__(self):\n         \"\"\"Overload common function len(). Returns number of elements in array.\n \n+        For rank-0 arrays (scalars), returns 1.\n+\n         Examples\n         ========\n \n@@ -173,8 +175,13 @@ def __len__(self):\n         [[0, 0, 0], [0, 0, 0], [0, 0, 0]]\n         >>> len(a)\n         9\n+        >>> b = MutableDenseNDimArray(5)  # Rank-0 array (scalar)\n+        >>> len(b)\n+        1\n \n         \"\"\"\n+        if self._rank == 0:\n+            return 1\n         return self._loop_size\n \n     @property\n", "gold_standard_diff": "From 4b312bfb5c866e1a97b44167311a68a423a7eac1 Mon Sep 17 00:00:00 2001\nFrom: Dimas Abreu Archanjo Dutra <dimasad@ufmg.br>\nDate: Fri, 3 Aug 2018 00:05:41 -0300\nSubject: [PATCH 1/5] Fix #15016, rank-0 arrays now have len 1\n\n---\n sympy/tensor/array/dense_ndim_array.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/tensor/array/dense_ndim_array.py b/sympy/tensor/array/dense_ndim_array.py\nindex 9be94a8631ca..3e04e75891cf 100644\n--- a/sympy/tensor/array/dense_ndim_array.py\n+++ b/sympy/tensor/array/dense_ndim_array.py\n@@ -149,7 +149,7 @@ def _new(cls, iterable, shape, **kwargs):\n         self._shape = shape\n         self._array = list(flat_list)\n         self._rank = len(shape)\n-        self._loop_size = functools.reduce(lambda x,y: x*y, shape) if shape else 0\n+        self._loop_size = functools.reduce(lambda x,y: x*y, shape, 1)\n         return self\n \n     def __setitem__(self, index, value):\n\nFrom d316077e685a3f11a04351b9cd14c7f3546c3e3d Mon Sep 17 00:00:00 2001\nFrom: Dimas Abreu Archanjo Dutra <dimasad@ufmg.br>\nDate: Fri, 3 Aug 2018 10:22:40 -0300\nSubject: [PATCH 2/5] Added test for array len, #15017.\n\n---\n sympy/tensor/array/tests/test_arrayop.py | 9 +++++++++\n 1 file changed, 9 insertions(+)\n\ndiff --git a/sympy/tensor/array/tests/test_arrayop.py b/sympy/tensor/array/tests/test_arrayop.py\nindex 22d806da8179..2646d90f6054 100644\n--- a/sympy/tensor/array/tests/test_arrayop.py\n+++ b/sympy/tensor/array/tests/test_arrayop.py\n@@ -264,3 +264,12 @@ def test_array_permutedims():\n     assert po2 == Array([[[[sa[0], sa[1]], [sa[2], sa[3]]], [[sa[4], sa[5]], [sa[6], sa[7]]], [[sa[8], sa[9]], [sa[10], sa[11]]], [[sa[12], sa[13]], [sa[14], sa[15]]], [[sa[16], sa[17]], [sa[18], sa[19]]], [[sa[20], sa[21]], [sa[22], sa[23]]], [[sa[24], sa[25]], [sa[26], sa[27]]], [[sa[28], sa[29]], [sa[30], sa[31]]], [[sa[32], sa[33]], [sa[34], sa[35]]]], [[[sa[36], sa[37]], [sa[38], sa[39]]], [[sa[40], sa[41]], [sa[42], sa[43]]], [[sa[44], sa[45]], [sa[46], sa[47]]], [[sa[48], sa[49]], [sa[50], sa[51]]], [[sa[52], sa[53]], [sa[54], sa[55]]], [[sa[56], sa[57]], [sa[58], sa[59]]], [[sa[60], sa[61]], [sa[62], sa[63]]], [[sa[64], sa[65]], [sa[66], sa[67]]], [[sa[68], sa[69]], [sa[70], sa[71]]]], [[[sa[72], sa[73]], [sa[74], sa[75]]], [[sa[76], sa[77]], [sa[78], sa[79]]], [[sa[80], sa[81]], [sa[82], sa[83]]], [[sa[84], sa[85]], [sa[86], sa[87]]], [[sa[88], sa[89]], [sa[90], sa[91]]], [[sa[92], sa[93]], [sa[94], sa[95]]], [[sa[96], sa[97]], [sa[98], sa[99]]], [[sa[100], sa[101]], [sa[102], sa[103]]], [[sa[104], sa[105]], [sa[106], sa[107]]]], [[[sa[108], sa[109]], [sa[110], sa[111]]], [[sa[112], sa[113]], [sa[114], sa[115]]], [[sa[116], sa[117]], [sa[118], sa[119]]], [[sa[120], sa[121]], [sa[122], sa[123]]], [[sa[124], sa[125]], [sa[126], sa[127]]], [[sa[128], sa[129]], [sa[130], sa[131]]], [[sa[132], sa[133]], [sa[134], sa[135]]], [[sa[136], sa[137]], [sa[138], sa[139]]], [[sa[140], sa[141]], [sa[142], sa[143]]]]])\n \n     assert permutedims(po2, (3, 2, 0, 1)) == Array([[[[sa[0], sa[4], sa[8], sa[12], sa[16], sa[20], sa[24], sa[28], sa[32]], [sa[36], sa[40], sa[44], sa[48], sa[52], sa[56], sa[60], sa[64], sa[68]], [sa[72], sa[76], sa[80], sa[84], sa[88], sa[92], sa[96], sa[100], sa[104]], [sa[108], sa[112], sa[116], sa[120], sa[124], sa[128], sa[132], sa[136], sa[140]]], [[sa[2], sa[6], sa[10], sa[14], sa[18], sa[22], sa[26], sa[30], sa[34]], [sa[38], sa[42], sa[46], sa[50], sa[54], sa[58], sa[62], sa[66], sa[70]], [sa[74], sa[78], sa[82], sa[86], sa[90], sa[94], sa[98], sa[102], sa[106]], [sa[110], sa[114], sa[118], sa[122], sa[126], sa[130], sa[134], sa[138], sa[142]]]], [[[sa[1], sa[5], sa[9], sa[13], sa[17], sa[21], sa[25], sa[29], sa[33]], [sa[37], sa[41], sa[45], sa[49], sa[53], sa[57], sa[61], sa[65], sa[69]], [sa[73], sa[77], sa[81], sa[85], sa[89], sa[93], sa[97], sa[101], sa[105]], [sa[109], sa[113], sa[117], sa[121], sa[125], sa[129], sa[133], sa[137], sa[141]]], [[sa[3], sa[7], sa[11], sa[15], sa[19], sa[23], sa[27], sa[31], sa[35]], [sa[39], sa[43], sa[47], sa[51], sa[55], sa[59], sa[63], sa[67], sa[71]], [sa[75], sa[79], sa[83], sa[87], sa[91], sa[95], sa[99], sa[103], sa[107]], [sa[111], sa[115], sa[119], sa[123], sa[127], sa[131], sa[135], sa[139], sa[143]]]]])\n+\n+\n+def test_array_len():\n+    symb = symbols('x1:100')\n+    assert len(Array(symb, ())) == 1\n+    assert len(Array(symb, (1,))) == 1\n+    assert len(Array(symb, (4,))) == 4\n+    assert len(Array(symb, (4, 3))) == 12\n+    assert len(Array(symb, (4, 3, 5))) == 60\n\nFrom 2055a143a2f5a6d8bfa79594140ed8f3c0a61531 Mon Sep 17 00:00:00 2001\nFrom: Dimas Abreu Archanjo Dutra <dimasad@ufmg.br>\nDate: Fri, 3 Aug 2018 14:50:20 -0300\nSubject: [PATCH 3/5] Fixed tests of rank-0 array len and indexing.\n\n---\n sympy/tensor/array/tests/test_arrayop.py              | 9 ---------\n sympy/tensor/array/tests/test_immutable_ndim_array.py | 4 ++--\n 2 files changed, 2 insertions(+), 11 deletions(-)\n\ndiff --git a/sympy/tensor/array/tests/test_arrayop.py b/sympy/tensor/array/tests/test_arrayop.py\nindex 2646d90f6054..22d806da8179 100644\n--- a/sympy/tensor/array/tests/test_arrayop.py\n+++ b/sympy/tensor/array/tests/test_arrayop.py\n@@ -264,12 +264,3 @@ def test_array_permutedims():\n     assert po2 == Array([[[[sa[0], sa[1]], [sa[2], sa[3]]], [[sa[4], sa[5]], [sa[6], sa[7]]], [[sa[8], sa[9]], [sa[10], sa[11]]], [[sa[12], sa[13]], [sa[14], sa[15]]], [[sa[16], sa[17]], [sa[18], sa[19]]], [[sa[20], sa[21]], [sa[22], sa[23]]], [[sa[24], sa[25]], [sa[26], sa[27]]], [[sa[28], sa[29]], [sa[30], sa[31]]], [[sa[32], sa[33]], [sa[34], sa[35]]]], [[[sa[36], sa[37]], [sa[38], sa[39]]], [[sa[40], sa[41]], [sa[42], sa[43]]], [[sa[44], sa[45]], [sa[46], sa[47]]], [[sa[48], sa[49]], [sa[50], sa[51]]], [[sa[52], sa[53]], [sa[54], sa[55]]], [[sa[56], sa[57]], [sa[58], sa[59]]], [[sa[60], sa[61]], [sa[62], sa[63]]], [[sa[64], sa[65]], [sa[66], sa[67]]], [[sa[68], sa[69]], [sa[70], sa[71]]]], [[[sa[72], sa[73]], [sa[74], sa[75]]], [[sa[76], sa[77]], [sa[78], sa[79]]], [[sa[80], sa[81]], [sa[82], sa[83]]], [[sa[84], sa[85]], [sa[86], sa[87]]], [[sa[88], sa[89]], [sa[90], sa[91]]], [[sa[92], sa[93]], [sa[94], sa[95]]], [[sa[96], sa[97]], [sa[98], sa[99]]], [[sa[100], sa[101]], [sa[102], sa[103]]], [[sa[104], sa[105]], [sa[106], sa[107]]]], [[[sa[108], sa[109]], [sa[110], sa[111]]], [[sa[112], sa[113]], [sa[114], sa[115]]], [[sa[116], sa[117]], [sa[118], sa[119]]], [[sa[120], sa[121]], [sa[122], sa[123]]], [[sa[124], sa[125]], [sa[126], sa[127]]], [[sa[128], sa[129]], [sa[130], sa[131]]], [[sa[132], sa[133]], [sa[134], sa[135]]], [[sa[136], sa[137]], [sa[138], sa[139]]], [[sa[140], sa[141]], [sa[142], sa[143]]]]])\n \n     assert permutedims(po2, (3, 2, 0, 1)) == Array([[[[sa[0], sa[4], sa[8], sa[12], sa[16], sa[20], sa[24], sa[28], sa[32]], [sa[36], sa[40], sa[44], sa[48], sa[52], sa[56], sa[60], sa[64], sa[68]], [sa[72], sa[76], sa[80], sa[84], sa[88], sa[92], sa[96], sa[100], sa[104]], [sa[108], sa[112], sa[116], sa[120], sa[124], sa[128], sa[132], sa[136], sa[140]]], [[sa[2], sa[6], sa[10], sa[14], sa[18], sa[22], sa[26], sa[30], sa[34]], [sa[38], sa[42], sa[46], sa[50], sa[54], sa[58], sa[62], sa[66], sa[70]], [sa[74], sa[78], sa[82], sa[86], sa[90], sa[94], sa[98], sa[102], sa[106]], [sa[110], sa[114], sa[118], sa[122], sa[126], sa[130], sa[134], sa[138], sa[142]]]], [[[sa[1], sa[5], sa[9], sa[13], sa[17], sa[21], sa[25], sa[29], sa[33]], [sa[37], sa[41], sa[45], sa[49], sa[53], sa[57], sa[61], sa[65], sa[69]], [sa[73], sa[77], sa[81], sa[85], sa[89], sa[93], sa[97], sa[101], sa[105]], [sa[109], sa[113], sa[117], sa[121], sa[125], sa[129], sa[133], sa[137], sa[141]]], [[sa[3], sa[7], sa[11], sa[15], sa[19], sa[23], sa[27], sa[31], sa[35]], [sa[39], sa[43], sa[47], sa[51], sa[55], sa[59], sa[63], sa[67], sa[71]], [sa[75], sa[79], sa[83], sa[87], sa[91], sa[95], sa[99], sa[103], sa[107]], [sa[111], sa[115], sa[119], sa[123], sa[127], sa[131], sa[135], sa[139], sa[143]]]]])\n-\n-\n-def test_array_len():\n-    symb = symbols('x1:100')\n-    assert len(Array(symb, ())) == 1\n-    assert len(Array(symb, (1,))) == 1\n-    assert len(Array(symb, (4,))) == 4\n-    assert len(Array(symb, (4, 3))) == 12\n-    assert len(Array(symb, (4, 3, 5))) == 60\ndiff --git a/sympy/tensor/array/tests/test_immutable_ndim_array.py b/sympy/tensor/array/tests/test_immutable_ndim_array.py\nindex 5a576c44f068..e1c7752e213e 100644\n--- a/sympy/tensor/array/tests/test_immutable_ndim_array.py\n+++ b/sympy/tensor/array/tests/test_immutable_ndim_array.py\n@@ -73,11 +73,11 @@ def test_ndim_array_initiation():\n \n     from sympy.abc import x\n     rank_zero_array = ImmutableDenseNDimArray(x)\n-    assert len(rank_zero_array) == 0\n+    assert len(rank_zero_array) == 1\n     assert rank_zero_array.shape == ()\n     assert rank_zero_array.rank() == 0\n     assert rank_zero_array[()] == x\n-    raises(ValueError, lambda: rank_zero_array[0])\n+    assert rank_zero_array[0] == x\n \n \n def test_reshape():\n\nFrom c0a8823ddb7140b40d460c8a0ca5900c43622c59 Mon Sep 17 00:00:00 2001\nFrom: Dimas Abreu Archanjo Dutra <dimasad@ufmg.br>\nDate: Fri, 3 Aug 2018 17:59:37 -0300\nSubject: [PATCH 4/5] Added test for len of empty array.\n\n---\n sympy/tensor/array/tests/test_immutable_ndim_array.py | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a/sympy/tensor/array/tests/test_immutable_ndim_array.py b/sympy/tensor/array/tests/test_immutable_ndim_array.py\nindex e1c7752e213e..6d9890de858c 100644\n--- a/sympy/tensor/array/tests/test_immutable_ndim_array.py\n+++ b/sympy/tensor/array/tests/test_immutable_ndim_array.py\n@@ -9,6 +9,10 @@\n \n \n def test_ndim_array_initiation():\n+    arr_with_no_elements = ImmutableDenseNDimArray([], shape=(0,))\n+    assert len(arr_with_no_elements) == 0\n+    assert arr_with_no_elements.rank() == 1\n+    \n     arr_with_one_element = ImmutableDenseNDimArray([23])\n     assert len(arr_with_one_element) == 1\n     assert arr_with_one_element[0] == 23\n\nFrom d32d60363759185a4646f959bb5e730adb0b28c1 Mon Sep 17 00:00:00 2001\nFrom: Dimas Abreu Archanjo Dutra <dimasad@ufmg.br>\nDate: Mon, 6 Aug 2018 11:18:27 -0300\nSubject: [PATCH 5/5] Fixing trailing whitespace (code quality).\n\n---\n sympy/tensor/array/tests/test_immutable_ndim_array.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a/sympy/tensor/array/tests/test_immutable_ndim_array.py b/sympy/tensor/array/tests/test_immutable_ndim_array.py\nindex 6d9890de858c..326ffd2266b5 100644\n--- a/sympy/tensor/array/tests/test_immutable_ndim_array.py\n+++ b/sympy/tensor/array/tests/test_immutable_ndim_array.py\n@@ -12,7 +12,7 @@ def test_ndim_array_initiation():\n     arr_with_no_elements = ImmutableDenseNDimArray([], shape=(0,))\n     assert len(arr_with_no_elements) == 0\n     assert arr_with_no_elements.rank() == 1\n-    \n+\n     arr_with_one_element = ImmutableDenseNDimArray([23])\n     assert len(arr_with_one_element) == 1\n     assert arr_with_one_element[0] == 23\n", "gold_standard_pr_link": "https://github.com/sympy/sympy/pull/15017"}